;; -*-coding: utf-8;-*-
;;; file-version: 6
["ACTION" nil nil nil nil nil nil ((timestamp . "2013-04-19") (notes . "(\"going over to the fridge\\\\u0002\")")) nil]
["" nil nil nil nil nil nil ((timestamp . "2011-10-01") (notes . "(\"correctly backspace\")")) nil]
["!/b/" nil nil nil nil nil nil ((timestamp . "2012-07-26") (notes . "(\"We are not like /b/ because: less swearing; misanthropy, not misogyny; no warez/porn/rule34 (except deldo); slander must have a grain of truth; memes must be value-added; we can be witty, we just choose not to; our bots and trolls are more entertaining; occasionally we accidentally have coherent discussions.\")")) nil]
["!opensource" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://www.gnu.org/philosophy/open-source-misses-the-point.html\")")) nil]
["\"" nil nil nil nil nil nil ((timestamp . "2014-01-12") (notes . "(\"colored using font-lock-comment-face; (2) all \\\"coherent words\\\" beginning with a comma are colored using font-lock-function; and (3) on all lines where the first \\\"coherent word\\\" is \\\",\\\", the second word is colored using font-lock-variable-name-face; and finally (4) other lines are colored using font-lock-constant-face. i got (1) (more or less) done using the syntax-table.\")")) nil]
["\"(:)\"" nil nil nil nil nil nil ((timestamp . "2004-04-06") (notes . "(\"a balanced smiley, in true lisp-fashion\")")) nil]
["\"(^_^)\"" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"happy\")")) nil]
["\";)\"" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"Left winking smiley\")")) nil]
["\"b(^_^)d\"" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"Thumbs up!\")")) nil]
["\"lambda\"" nil nil nil nil nil nil ((timestamp . "2010-04-20") (notes . "(\"a function without a name.\")")) nil]
["\"What" nil nil nil nil nil nil ((timestamp . "2013-09-27") (notes . "(\"you?\\\"\")")) nil]
["#gnus" nil nil nil nil nil nil ((timestamp . "2003-04-16") (notes . "(\"http://irc.my.gnus.org\")")) nil]
["*scratch*" nil nil nil nil nil nil ((timestamp . "2013-10-05") (notes . "(\"the name of the scratch buffer, by default this is in lisp-interaction-mode\" \"development environment, partly aimed at teaching youths to program.\" \"https://github.com/leoliu/scratch.el\")")) nil]
["-1" nil nil nil nil nil nil ((timestamp . "2011-05-02") (notes . "(\"e^(πı)\")")) nil]
[".-.-.-/.-.-.-/.-.-.-" nil nil nil nil nil nil ((timestamp . "2011-02-14") (notes . "(\"lisp (morse \\\"arf\\\")\")")) nil]
[".." nil nil nil nil nil nil ((timestamp . "2012-10-30") (notes . "(\"noecho A lone voice cries in the wilderness...\")")) nil]
["..." nil nil nil nil nil nil ((timestamp . "2012-08-28") (notes . "(\"noecho [In the distance, you hear a dog bark]\")")) nil]
["...---..." nil nil nil nil nil nil ((timestamp . "2013-08-19") (notes . "(\"noecho .--/..../.-/- ../... -/..../. -./.-/-/..-/.-./. ---/..-. -.--/---/..-/.-. ./--/./.-./--././-./-.-./-.--/..--..\")")) nil]
["....." nil nil nil nil nil nil ((timestamp . "2010-08-28") (notes . "(\"noecho *record scratch*\")")) nil]
["......" nil nil nil nil nil nil ((timestamp . "2012-09-06") (notes . "(\"noecho An uneasy quiet fills the channel...\")")) nil]
["......." nil nil nil nil nil nil ((timestamp . "2012-09-06") (notes . "(\"noecho A tumbleweed rolls by...\")")) nil]
["........" nil nil nil nil nil nil ((timestamp . "2012-09-23") (notes . "(\"noecho *cough*\")")) nil]
["........." nil nil nil nil nil nil ((timestamp . "2013-02-10") (notes . "(\"noecho That's all there are. Go away now.\")")) nil]
[".........." nil nil nil nil nil nil ((timestamp . "2013-02-14") (notes . "(\"noecho Really, you're just going to get a \\\"Too many DB matches\\\" next.\")")) nil]
["............" nil nil nil nil nil nil ((timestamp . "2013-02-14") (notes . "(\"noecho Told you.\")")) nil]
[".../---/..." nil nil nil nil nil nil ((timestamp . "2012-12-15") (notes . "(\"noecho [In the distance, no one can hear you scream]\")")) nil]
["._." nil nil nil nil nil nil ((timestamp . "2013-04-27") (notes . "(\"noecho DON'T YOU EYEBALL ME BOY!\")")) nil]
[".gnus" nil nil nil nil nil nil ((timestamp . "2003-01-12") (notes . "(\"redirect dotgnusgenerator\")")) nil]
[".po" nil nil nil nil nil nil ((timestamp . "2012-02-26") (notes . "(\"the extension of a locale file.\")")) nil]
[".xsession" nil nil nil nil nil nil ((timestamp . "2002-09-04") (notes . "(\"see gnome-startup\")")) nil]
["/." nil nil nil nil nil nil ((timestamp . "2003-01-12") (notes . "(\"redirect slashdot\")")) nil]
["/b/" nil nil nil nil nil nil ((timestamp . "2011-10-09") (notes . "(\"The most deranged board on 4chan.\" \"sadly not the most deranged place on the Internet\" \"see also ,!/b/\")")) nil]
["0-d" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"one point in space\")")) nil]
["0x33" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"FAIF 0x33 Richard Fontana at LinuxCon North America 2012 :: http://faif.us/cast/2012/oct/10/0x33/\")")) nil]
["1+1" nil nil nil nil nil nil ((timestamp . "2011-09-24") (notes . "(\"2\")")) nil]
["1,to=\"^==\",sort=ascending,titlesonly)>>'" nil nil nil nil nil nil ((timestamp . "2013-08-15") (notes . "(\"not showing me just /Apps/AppName and not all the other subpages\")")) nil]
["1-d" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"two points intersected on a line in space\")")) nil]
["10x" nil nil nil nil nil nil ((timestamp . "2013-01-29") (notes . "(\"short for \\\"Thanks.\\\"\")")) nil]
["123" nil nil nil nil nil nil ((timestamp . "2004-12-07") (notes . "(\"redirect 456\")")) nil]
["1337" nil nil nil nil nil nil ((timestamp . "2008-01-04") (notes . "(\"¯|¯0¯|¯4|_|_Y EEEEEEEEEEEEELIIIIIIIIIITE!!!111!!shiftONE!!!11!\" \"use english, you blithering idiot\")")) nil]
["1337-h0m13-y0w" nil nil nil nil nil nil ((timestamp . "2013-06-14") (notes . "(\"redirect leet-homie-yow\")")) nil]
["1337-homie-yow" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"redirect leet-homie-yow\")")) nil]
["1337-wbooze-yow" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"redirect leet-homie-yow\")")) nil]
["2+2" nil nil nil nil nil nil ((timestamp . "2005-02-26") (notes . "(\"lisp (random-choose '(\\\"4 - says tintin\\\" '(random-choose '(\\\"With or without taxes?\\\" '(+ 3 (random 3))))))\")")) nil]
["2-d" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"a plane bounded by four one-dimensional lines with 4 points of intersection but 8 total points in space\")")) nil]
["221" nil nil nil nil nil nil ((timestamp . "2009-09-19") (notes . "(\"the 221st of a series of rants by consolers, this one on the topic of why kbd sucks\")")) nil]
["2357" nil nil nil nil nil nil ((timestamp . "2003-12-07") (notes . "(\"an interesting prime http://primes.utm.edu/curios/page.php?number_id=177\")")) nil]
["2xc" nil nil nil nil nil nil ((timestamp . "2012-11-02") (notes . "(\"noecho I'm too sexy for Milan, too sexy for Milan, New York, and Japan\")")) nil]
["3-d" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"a cube bounded by 6 two-dimensional planes containing 12 1-dimensional lines, 8 points of intersection and 24 total points in space\")")) nil]
["356" nil nil nil nil nil nil ((timestamp . "2003-12-07") (notes . "(\"size of Shakespear's King Lear in words\")")) nil]
["357" nil nil nil nil nil nil ((timestamp . "2011-08-18") (notes . "(\"the number square feet of paper about the kennedy assination\\\"\" \"callibur bulllet killed kennedy\" \"the number of dallas episodes\" \"the number of many masonic lodges\" \"the po-box number of many masonic lodges\" \"in the phone number of many masonic lodges\" \"the number of elks club lodge\" \"the number official killed americans in the first phase of the iraq war!\" \"the number official killed people in Pneumonia in Bangladesh: http://www.thedailystar.net/2003/11/19/d3111901033.htm\" \"the number of minutes in the lord of the rings parts I + II\" \"the number of verses in the book of daniel, that describes the apocolypse\" \"the booknote number that talks about the grand chapter of royal arch masons http://www.takver.com/history/benefit/ctormys-03.htm\" \"in latin as a roman numeral CCCLVII\" \"a magazine where you can submit entrys with that many words http://www.gwilly.ca/357/\" \"the line number in faust where he talks about how much effort he put into his study of all sciences\" \"the size of Shakespear's King Lear in words\" \"the page number in the buddist bible entitled Awaking of the Faith : Mahayana Shraddhotpada Schastra\" \"part of the term 2357\" \"according to http://essenes.crosswinds.net/prime17.html defined as 357 Anus, ambush, embroil, iniquity.\" \"the line number of usages of the terms iniquity in the bible\" \"Enos is a son of seth\" \"the page number of the http://www.theosociety.org/pasadena/sd/sd1-2-05.htm that talks about the swan symbol and the mundane egg\" \"in the sequence 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47\" \"the number of songs in this collection \\\"... that we love to sing\\\" http://search.barnesandnoble.com/booksearch/isbnInquiry.asp?userid=38KC42OFDY&sourceid=00396351736993628487&bfdate=12%2D07%2D2003+18%3A01%3A26&isbn=076926560X&itm=2\" \"not a prime : 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359\" \"a algorithm for creating primes :http://portal.acm.org/citation.cfm?doid=363235.363247\" \"an rfc http://www.faqs.org/rfcs/rfc357.html\" \"the height of the observation deck on Canada National Tower in Toronto\" \"the number of votes in congress for the USA patriot act\")")) nil]
["4-d" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"space bounded by 8 three-dimensional cubes containing 24 two-dimensional planes, 32 one-dimensional lines, 16 points of intersection and 72 total points\" \"hard to imagine for any creature that is limited to 3-d spatial awarenes\")")) nil]
["42" nil nil nil nil nil nil ((timestamp . "2010-12-16") (notes . "(\"unecho What's life you ask? Well, what do I know? I am just a bot...\" \"you should rather oil my joints, than ponder useless stuff\")")) nil]
["45" nil nil nil nil nil nil ((timestamp . "2004-07-27") (notes . "(\"45^2 == 2025 && 20+25 = 45\" \"45^3 == 91125 && 9+11+25 = 45\" \"45^4 == 4100625 && 4+10+06+25 = 45\")")) nil]
["456" nil nil nil nil nil nil ((timestamp . "2004-12-07") (notes . "(\"redirect 123\")")) nil]
["4C" nil nil nil nil nil nil ((timestamp . "2013-12-11") (notes . "(\"like to not have any rights left!\" \"a fridge temperature.\")")) nil]
["4chan" nil nil nil nil nil nil ((timestamp . "2011-04-15") (notes . "(\"noecho 4chan? there's an app for that\")")) nil]
["5-d" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"space bounded by 10 four-dimensional tesseracts containing 40 three-dimensional cubes, 80 two-dimensional planes, 80 one-dimensional lines, 32 points of intersection and 72 total points\")")) nil]
["5bx" nil nil nil nil nil nil ((timestamp . "2003-01-07") (notes . "(\"RAF workout exercises at http://flwd.com/5bx/book/index.html\")")) nil]
["6-d" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"space bounded by 12 five-dimensional penteracts containing 60 four-dimensional tesseracts, 160 three-dimensional cubes, 240 two-dimensional planes, 192 one-dimensional lines, 64 points of intersection and 648 total points\")")) nil]
["7" nil nil nil nil nil nil ((timestamp . "2009-08-28") (notes . "(\"noecho 7 bits ought to be enough for anyone\")")) nil]
["7-d" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"your guess is as good as mine\")")) nil]
["7bits" nil nil nil nil nil nil ((timestamp . "2011-05-04") (notes . "(\"7 bits ought to be enough for anybody\")")) nil]
["7DRL" nil nil nil nil nil nil ((timestamp . "2007-10-25") (notes . "(\"a Rogue-like game completed within seven days of starting development <http://roguebasin.roguelikedevelopment.org/index.php?title=7DRL>\")")) nil]
["80" nil nil nil nil nil nil ((timestamp . "2004-09-27") (notes . "(\"redirect EightyColumnRule\")")) nil]
["80column" nil nil nil nil nil nil ((timestamp . "2007-12-27") (notes . "(\"redirect columnmarker\")")) nil]
["9000" nil nil nil nil nil nil ((timestamp . "2012-11-05") (notes . "(\"noecho You were expecting an \\\"OVER 9000\\\" joke? Piss off.\")")) nil]
[":0)" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"Big Nose Smiley\")")) nil]
[":D<3" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"Big smiley with big bust\")")) nil]
[":p" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"Smiley with tongue hanging out\")")) nil]
[":wq" nil nil nil nil nil nil ((timestamp . "2010-05-27") (notes . "(\"noecho Phew, I was suffocating in there.\")")) nil]
["<menu>" nil nil nil nil nil nil ((timestamp . "2006-07-06") (notes . "(\"That 'other' key on a 'Windows' keyboard, usually located somewhere to the right of the space bar. Usually generates (kbd \\\"<menu>\\\").\")")) nil]
["<xp_prg>" nil nil nil nil nil nil ((timestamp . "2008-01-23") (notes . "(\"that appropriate to faxathisia\")")) nil]
["=)" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"Happy face\")")) nil]
["=>" nil nil nil nil nil nil ((timestamp . "2012-05-02") (notes . "(\"noecho ,\")")) nil]
["=D" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"Happy happy big smiley\")")) nil]
[">>=" nil nil nil nil nil nil ((timestamp . "2012-11-13") (notes . "(\"redirect monad\")")) nil]
["@" nil nil nil nil nil nil ((timestamp . "2015-10-24") (notes . "(\" command names with an @ are by convention are internal to the documentclass or style that defines them. This is enforced by changing its ,,catcode to other.\" \"If you need to change some of these values or commands in your preamble, then you need to do so between \\\\makeatletter and \\\\makeatother.\" \"If it is just one occurence you can use \\\\csname @foo@bar \\\\endcsname as well.\" \"also see ,,at-expressions\")")) nil]
["@-expression" nil nil nil nil nil nil ((timestamp . "2013-11-02") (notes . "(\"a way to kill the intercolumn spacing in tabulars and related constructs.\" \"The space between the previous column and the one that follows is replace by it's argument. Example: \\\\begin{tabular}{l@{|}r}\" \"cf. http://en.wikibooks.org/wiki/LaTeX/Tables#.40-expressions\")")) nil]
["[->]" nil nil nil nil nil nil ((timestamp . "2004-03-19") (notes . "(\"redirect help-redirect\")")) nil]
["\\#lisp" nil nil nil nil nil nil ((timestamp . "2013-09-05") (notes . "(\"a wretched hive of scum and villainy\")")) nil]
["\\#wiki" nil nil nil nil nil nil ((timestamp . "2003-01-15") (notes . "(\"Channel #wiki on irc.freenode.net\")")) nil]
["\\.\\.\\." nil nil nil nil nil nil ((timestamp . "2010-04-02") (notes . "(\"noecho [In the distance, you hear a dog bark]\")")) nil]
["\\;P" nil nil nil nil nil nil ((timestamp . "2003-12-21") (notes . "(\"sticking my tounge out\")")) nil]
["\\\\#wiki" nil nil nil nil nil nil ((timestamp . "2003-01-15") (notes . "(\"bar\")")) nil]
["\\o" nil nil nil nil nil nil ((timestamp . "2011-01-22") (notes . "(\"noecho o/\")")) nil]
["\\u0002This" nil nil nil nil nil nil ((timestamp . "2013-04-19") (notes . "(\"bold\")")) nil]
["\\u001FThis" nil nil nil nil nil nil ((timestamp . "2011-09-08") (notes . "(\"underlined\")")) nil]
["^_^" nil nil nil nil nil nil ((timestamp . "2004-03-29") (notes . "(\"a smiling person with closed eyes\")")) nil]
["^M" nil nil nil nil nil nil ((timestamp . "2004-03-05") (notes . "(\"M-x replace-string RET C-q C-m RET RET\")")) nil]
["_joey" nil nil nil nil nil nil ((timestamp . "2011-06-04") (notes . "(\"estimated to be 15 years old\" \"takes his name from the immature form of a Kangaroo\" \"known to be an illiterate troll\" \"DO NOT FEED\")")) nil]
["a" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"b\" \"c\" \"at http://www.gnufans.net/fsedu.pl?A\")")) nil]
["a#b" nil nil nil nil nil nil ((timestamp . "2003-04-16") (notes . "(\"bar\")")) nil]
["a)))" nil nil nil nil nil nil ((timestamp . "2007-01-12") (notes . "(\"(list (quote +) (quote a) \\\\,a)\")")) nil]
["a.s.s.m" nil nil nil nil nil nil ((timestamp . "2007-04-05") (notes . "(\"alt.sex.stories.moderated\")")) nil]
["a/r" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"accounts receivable\")")) nil]
["a/s/l" nil nil nil nil nil nil ((timestamp . "2013-02-26") (notes . "(\"lisp (let ((giggle (notes \\\"giggles\\\")) (place (notes \\\"places\\\"))) (format \\\"%s %d/%s/%s\\\" (random-choose giggle) (+ 10 (roll-dice)) (random-choose '(\\\"f\\\" \\\"m\\\" \\\"t\\\")) (random-choose place)))\")")) nil]
["a11y" nil nil nil nil nil nil ((timestamp . "2007-10-12") (notes . "(\"short for accessibility <http://en.wikipedia.org/wiki/Accessibility>\")")) nil]
["a2ps" nil nil nil nil nil nil ((timestamp . "2012-09-13") (notes . "(\"GNU's 'Anything to PostScript' converter and pretty-printer\" \"see a2ps.el at http://web.mit.edu/hellenic/share/lib/elisp/a2ps.el\")")) nil]
["aa" nil nil nil nil nil nil ((timestamp . "2006-01-20") (notes . "(\"redirect antialias\")")) nil]
["aa2u" nil nil nil nil nil nil ((timestamp . "2014-01-26") (notes . "(\"converts simple ASCII art line drawings to Unicode. http://elpa.gnu.org/packages/ascii-art-to-unicode.html\")")) nil]
["AAA" nil nil nil nil nil nil ((timestamp . "2007-08-15") (notes . "(\"anti-aliasers anonymous\")")) nil]
["AAAA" nil nil nil nil nil nil ((timestamp . "2007-05-13") (notes . "(\"Association Against Acronym Abuse\")")) nil]
["AAAAA" nil nil nil nil nil nil ((timestamp . "2011-03-19") (notes . "(\"anarchists against Association Against Acronym Abuse\" \"American Association Against Acronym Abuse\")")) nil]
["aaaaaaa1" nil nil nil nil nil nil ((timestamp . "2010-12-14") (notes . "(\"redirect aaaaaaa2\")")) nil]
["aaaaaaa2" nil nil nil nil nil nil ((timestamp . "2010-12-14") (notes . "(\"2\" \"1\")")) nil]
["AAAAAAAAA" nil nil nil nil nil nil ((timestamp . "2007-05-18") (notes . "(\"Advanced Action Against Anarchists Against Associatoin Against Acronym Abuse\")")) nil]
["aaaaaaaaaaa" nil nil nil nil nil nil ((timestamp . "2012-03-13") (notes . "(\"lisp (message \\\"STFU, %s, you're out of your element.\\\" nick)\")")) nil]
["Aaaatest1" nil nil nil nil nil nil ((timestamp . "2010-10-01") (notes . "(\"teotn lisp\")")) nil]
["aanyone" nil nil nil nil nil nil ((timestamp . "2011-03-25") (notes . "(\"noecho Just ask your question already, we haven't got all day. yeesh!\")")) nil]
["AAPL" nil nil nil nil nil nil ((timestamp . "2011-06-21") (notes . "(\"Apple (as in Steve Jobs) stock symbol\")")) nil]
["abbrev" nil nil nil nil nil nil ((timestamp . "2011-04-29") (notes . "(\"redirect abbrevs\")")) nil]
["abcde" nil nil nil nil nil nil ((timestamp . "2007-07-13") (notes . "(\"http://www.hispalinux.es/~data/abcde.php\")")) nil]
["ABCL" nil nil nil nil nil nil ((timestamp . "2006-01-19") (notes . "(\"Armed Bear Common Lisp, an implementation of Common Lisp in Java which can call Java code. http://armedbear.org/abcl.html\")")) nil]
["ABI" nil nil nil nil nil nil ((timestamp . "2004-09-04") (notes . "(\"Application Binary Interface\")")) nil]
["abomination" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"http://www.frontdoor.com/buy/tour-kirstie-alleys-maine-home-for-sale/pictures/pg194\")")) nil]
["AbrahamLincoln" nil nil nil nil nil nil ((timestamp . "2005-07-27") (notes . "(\"at http://sztybel.tripod.com/lincoln.html\")")) nil]
["abs" nil nil nil nil nil nil ((timestamp . "2003-03-02") (notes . "(\"Absolutely!\")")) nil]
["abz0" nil nil nil nil nil nil ((timestamp . "2011-11-01") (notes . "(\"an idea that is TOTALLY FALSE\" \"probably a bot\")")) nil]
["AC" nil nil nil nil nil nil ((timestamp . "2011-03-22") (notes . "(\"redirect AutoComplete\")")) nil]
["accentedchars" nil nil nil nil nil nil ((timestamp . "2003-10-07") (notes . "(\"C-x 8 C-h\" \"use the C-x 8 prefix to input accented chars\")")) nil]
["accents" nil nil nil nil nil nil ((timestamp . "2012-12-24") (notes . "(\"http://en.wikibooks.org/wiki/LaTeX/Accents\" \"often a problem in terminals (ie. linux console, xterm and friends)\" \"try M-x set-keyboard-coding-system RET iso-latin-1 RET to fix this,\" \"try C-x 8 C-h\" \"For accent use in LaTeX check http://en.wikibooks.org/wiki/LaTeX/Accents\" \"add a /etc/locale.conf file with your wish LANG=\\\"en_US.UTF.8\\\"\")")) nil]
["accidentally" nil nil nil nil nil nil ((timestamp . "2011-12-29") (notes . "(\"noecho i accidentally the verb\")")) nil]
["ace-jump" nil nil nil nil nil nil ((timestamp . "2012-07-09") (notes . "(\"redirect ace-jump-mode\")")) nil]
["acfcmo" nil nil nil nil nil nil ((timestamp . "2007-07-19") (notes . "(\"M-x ansi color for comint mode on\")")) nil]
["ack" nil nil nil nil nil nil ((timestamp . "2013-09-03") (notes . "(\"a \\\"better\\\" replacement for grep <http://betterthangrep.com>, see also Bill the Cat\" \"Thbbft!\" \"ping\")")) nil]
["ackbar" nil nil nil nil nil nil ((timestamp . "2013-07-11") (notes . "(\"redirect trap\")")) nil]
["ACL" nil nil nil nil nil nil ((timestamp . "2008-05-17") (notes . "(\"_ANSI Common Lisp_, by Paul Graham.\" \"not free of charge, unlike Siebel's PCL (see ,PCL).\" \"Access Control List a model used by selinux and ntfs\")")) nil]
["ACM" nil nil nil nil nil nil ((timestamp . "2012-03-30") (notes . "(\"Australians for Constitutional Monarchy, a group that aims to preserve Australia's current constitutional monarchy, with Elizabeth II as Queen\" \"https://en.wikipedia.org/wiki/Association_for_Computing_Machinery\")")) nil]
["ACPI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Advanced Configuration And Power Interface\")")) nil]
["AcrobatReader" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?AcrobatReader\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?AcrobatReader\")")) nil]
["acta" nil nil nil nil nil nil ((timestamp . "2010-11-17") (notes . "(\"Anti-Counterfeiting Trade Agreement\")")) nil]
["ActionItemMan" nil nil nil nil nil nil ((timestamp . "2006-09-13") (notes . "(\"http://www.fatalexception.org/action_item.html\")")) nil]
["actively-maintained-p" nil nil nil nil nil nil ((timestamp . "2013-09-10") (notes . "(\"lisp (if (member 'bzr lispargs) \\\"rms is still researching this issue\\\" t)\")")) nil]
["Ada" nil nil nil nil nil nil ((timestamp . "2012-05-15") (notes . "(\"Ada Countess of Lovelace, envisioned general purpose computing while working with Babbage to develop algorithms on an analytical engine\" \"the Ada Initiative for women in open technology and culture at http://adainitiative.org/\" \"a strongly typed programming language for the US Department of Defense\")")) nil]
["adam-smith-fix" nil nil nil nil nil nil ((timestamp . "2012-12-23") (notes . "(\"noecho shaddup the market has spoken\")")) nil]
["ADC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Analog [To] Digital Converter\")")) nil]
["ADD" nil nil nil nil nil nil ((timestamp . "2004-11-26") (notes . "(\"an acronym for Attention Defecit Disorder (without hyperactivity like ADHD)\")")) nil]
["add-change-log-entry-other-window" nil nil nil nil nil nil ((timestamp . "2010-11-10") (notes . "(\"redirect ChangeLog\")")) nil]
["add-hook" nil nil nil nil nil nil ((timestamp . "2010-06-07") (notes . "(\"(add-hook 'some-mode-hook (lambda () (setq local-setting value) (enable-minor-mode 1)))\")")) nil]
["adder" nil nil nil nil nil nil ((timestamp . "2012-03-06") (notes . "(\"a lisp dialect that compiles to python source\" \"http://www.thibault.org/adder/\")")) nil]
["addpkg" nil nil nil nil nil nil ((timestamp . "2016-05-06") (notes . "(\"if you're using TeX Live, packages can be added via `tlmgr install <package name>'. For manual package installation see https://help.ubuntu.com/community/LaTeX#Add-on_packages\")")) nil]
["adipose" nil nil nil nil nil nil ((timestamp . "2010-10-26") (notes . "(\"one of the United States's most abundant resources\")")) nil]
["adom" nil nil nil nil nil nil ((timestamp . "2006-12-30") (notes . "(\"Ancient Domains of Mystery, a roguelike. see http://www.adom.de/\")")) nil]
["ADT" nil nil nil nil nil nil ((timestamp . "2013-02-20") (notes . "(\"https://en.wikipedia.org/wiki/Abstract_data_type\")")) nil]
["advert" nil nil nil nil nil nil ((timestamp . "2012-10-28") (notes . "(\"lisp (message \\\"%s \\\\nThis message brought to you by the Erbot Corporation, leaders in artificial intelligence since never.\\\" (yow))\")")) nil]
["advise" nil nil nil nil nil nil ((timestamp . "2006-08-06") (notes . "(\"redirect advice\")")) nil]
["advocacy" nil nil nil nil nil nil ((timestamp . "2013-11-17") (notes . "(\"the delusion that what tools other people use matters to us\")")) nil]
["AFAICR" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for As Far As I Can Recall\")")) nil]
["afaict" nil nil nil nil nil nil ((timestamp . "2004-04-21") (notes . "(\"As Far As I Can Tell\")")) nil]
["afaik" nil nil nil nil nil nil ((timestamp . "2012-06-22") (notes . "(\"an initialism for \\\"as far as i know\\\"\")")) nil]
["afair" nil nil nil nil nil nil ((timestamp . "2002-11-14") (notes . "(\"an acronym for \\\"As Far As I Remember\\\"\")")) nil]
["AFAIU" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for As Far As I Understand\")")) nil]
["afawk" nil nil nil nil nil nil ((timestamp . "2010-08-13") (notes . "(\"as far as we know\")")) nil]
["AFD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Away From Desktop\")")) nil]
["affs" nil nil nil nil nil nil ((timestamp . "2004-07-25") (notes . "(\"www.affs.org.uk\" \"the association for free software\")")) nil]
["afi" nil nil nil nil nil nil ((timestamp . "2005-05-23") (notes . "(\"american film institute\")")) nil]
["afk" nil nil nil nil nil nil ((timestamp . "2011-09-02") (notes . "(\"an acronym for \\\"away from keyboard\\\"\")")) nil]
["afkfas" nil nil nil nil nil nil ((timestamp . "2011-06-12") (notes . "(\"away from keyboard for a {second,spell,sarsaparilla}\")")) nil]
["afp" nil nil nil nil nil nil ((timestamp . "2006-10-13") (notes . "(\"alt.fan.pratchett\")")) nil]
["AFS" nil nil nil nil nil nil ((timestamp . "2012-04-18") (notes . "(\"a kerberized network filesystem (cf. NFS) <https://en.wikipedia.org/wiki/Andrew_File_System>\")")) nil]
["aftk" nil nil nil nil nil nil ((timestamp . "2011-09-22") (notes . "(\"away from this keyboard\")")) nil]
["AFU" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for All Fucked Up\")")) nil]
["AFW" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Away From Window\")")) nil]
["agda" nil nil nil nil nil nil ((timestamp . "2009-10-08") (notes . "(\"http://wiki.portal.chalmers.se/agda/agda.php?n=Main.Download\" \"a pure dependently typed functional language\")")) nil]
["aget" nil nil nil nil nil nil ((timestamp . "2010-04-28") (notes . "(\"a compiled Lisp function in `assoc.el'.\" \"(aget ALIST KEY &optional KEYNIL-P)\")")) nil]
["Agora" nil nil nil nil nil nil ((timestamp . "2012-09-19") (notes . "(\"Octave's idea for a collaborative forum: http://agora.octave.org/\")")) nil]
["agora-snippet" nil nil nil nil nil nil ((timestamp . "2012-11-28") (notes . "(\"noecho Please paste your Octave example code and snippets in http://agora.octave.org/snippet/\")")) nil]
["AGP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Accelerated Graphics Port\")")) nil]
["AGPL" nil nil nil nil nil nil ((timestamp . "2009-04-09") (notes . "(\"the GNU Affero General Public License, a Free software license. Like the GPL with an additional section to cover use over a computer network (e.g. web apps)\" \"http://gnu.org/licenses/agpl.html\")")) nil]
["agry" nil nil nil nil nil nil ((timestamp . "2003-10-05") (notes . "(\"lurwas gf\")")) nil]
["ahg" nil nil nil nil nil nil ((timestamp . "2012-07-23") (notes . "(\"https://bitbucket.org/agriggio/ahg/\" \"http://marmalade-repo.org/packages/ahg\")")) nil]
["ahouseofcosbys" nil nil nil nil nil nil ((timestamp . "2007-03-07") (notes . "(\"a house of cosbys\")")) nil]
["AHS" nil nil nil nil nil nil ((timestamp . "2006-01-29") (notes . "(\"all hardware sucks.\")")) nil]
["AI" nil nil nil nil nil nil ((timestamp . "2012-02-13") (notes . "(\"short for Artificial Intelligence.\" \"the Artificial Intelligence Workers and Student group on LibrePlanet :: http://libreplanet.org/wiki/Group:AI :: Feel free to join !\")")) nil]
["aidalfix" nil nil nil nil nil nil ((timestamp . "2011-10-03") (notes . "(\"noecho most problems can be solved by zoning out for several hours gaming.\")")) nil]
["aidalgol" nil nil nil nil nil nil ((timestamp . "2014-01-08") (notes . "(\"a mashup of \\\"Aidan,\\\" \\\"Gauland,\\\" \\\"Algol,\\\" and \\\"Aida\\\"\" \"<ijp> he stuck his name through a sausage grinder, basically\" \"<aidalgol> I also remind people of xah.\" \"the son of mikelygee (rarely seen here)\")")) nil]
["aidalgol-fix" nil nil nil nil nil nil ((timestamp . "2012-11-20") (notes . "(\"Most problems can solved by answering the question, \\\"ball peen or framing?\\\"\")")) nil]
["aidalgols-corollary-to-jlfs-law" nil nil nil nil nil nil ((timestamp . "2013-04-18") (notes . "(\"sufficiently advanced feigned stupidity is indistinguishable from genuine stupidity\")")) nil]
["aidalgols-law" nil nil nil nil nil nil ((timestamp . "2013-09-09") (notes . "(\"redirect peace\")")) nil]
["aidalgols-second-law" nil nil nil nil nil nil ((timestamp . "2013-10-22") (notes . "(\"every web comic (with a plot) degenerates into Home And Away given sufficient time\")")) nil]
["aidalgolsnack" nil nil nil nil nil nil ((timestamp . "2012-06-09") (notes . "(\"noecho /me gives aidalgol a chocolate-chip cookie.\")")) nil]
["AIF" nil nil nil nil nil nil ((timestamp . "2012-07-09") (notes . "(\"Adult Interactive Fiction. Remember Softporn, the game that became Leisure Suit Larry\" \"anaphoric if where the value of the test is captured for later reference in the consequent or alterative\")")) nil]
["aim" nil nil nil nil nil nil ((timestamp . "2003-10-14") (notes . "(\"redirect bitlbee\")")) nil]
["AIMA" nil nil nil nil nil nil ((timestamp . "2005-09-22") (notes . "(\"Russell & Norvig's Artificial Intelligence: A Modern Approach.\" \"distressingly lacking in Lisp code.\" \"http://aima.cs.berkeley.edu/\")")) nil]
["ain't" nil nil nil nil nil nil ((timestamp . "2011-09-29") (notes . "(\"noecho Don't say ain't\")")) nil]
["AirspeedVelocity" nil nil nil nil nil nil ((timestamp . "2005-04-08") (notes . "(\"lisp (progn \\\"what is the airspeed velocity on an unladen swallow?\\\" \\\"African or European?\\\")\")")) nil]
["AISB" nil nil nil nil nil nil ((timestamp . "2010-04-30") (notes . "(\"As I Said Before\")")) nil]
["AIU" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for As I Understand\")")) nil]
["AIUI" nil nil nil nil nil nil ((timestamp . "2004-09-27") (notes . "(\"noecho As I Understand It\")")) nil]
["AiWiki" nil nil nil nil nil nil ((timestamp . "2008-03-24") (notes . "(\"at http://www.ifi.unizh.ch/ailab/aiwiki/aiw.cgi?AIWiki\")")) nil]
["aixi" nil nil nil nil nil nil ((timestamp . "2012-04-10") (notes . "(\"Google Hutter AI model\")")) nil]
["aixi.el" nil nil nil nil nil nil ((timestamp . "2012-04-10") (notes . "(\"noecho patches welcome.\")")) nil]
["ajax" nil nil nil nil nil nil ((timestamp . "2006-08-21") (notes . "(\"Asynchronous JavaScript + XML\" \"a household cleaner\" \"el equipo de Amsterdam\")")) nil]
["ajax-s" nil nil nil nil nil nil ((timestamp . "2005-11-25") (notes . "(\"an xml/js slideshow package; see http://www.robertnyman.com/2005/11/13/proudly-presenting-ajax-s/\")")) nil]
["AKA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Also Known As\")")) nil]
["alambda" nil nil nil nil nil nil ((timestamp . "2013-09-19") (notes . "(\"paul graham's anaphoric lambda http://letoverlambda.com/index.cl/guest/chap6.html#sec_1\")")) nil]
["alamo" nil nil nil nil nil nil ((timestamp . "2009-05-29") (notes . "(\"the\")")) nil]
["alcohol" nil nil nil nil nil nil ((timestamp . "2010-04-20") (notes . "(\"the cause of, and solution to, all of life's problems\")")) nil]
["aleph" nil nil nil nil nil nil ((timestamp . "2007-07-28") (notes . "(\"the first letter of the Semitic abjads\" \"used by set theoreticians to express the cardinality of infinite sets. For example, there are aleph_0 natural numbers and 2^{aleph_0} real numbers\")")) nil]
["alet" nil nil nil nil nil nil ((timestamp . "2013-09-19") (notes . "(\"anaphoric let - http://letoverlambda.com/index.cl/guest/chap6.html#sec_3\")")) nil]
["alex" nil nil nil nil nil nil ((timestamp . "2006-04-18") (notes . "(\"Macedonian\")")) nil]
["alexandria" nil nil nil nil nil nil ((timestamp . "2007-09-11") (notes . "(\"http://common-lisp.net/project/alexandria/\" \"a public-domain lisp library project\")")) nil]
["algae" nil nil nil nil nil nil ((timestamp . "2010-09-13") (notes . "(\"the future man!\" \"http://shareable.net/blog/is-algae-the-shareable-answer-to-food-energy-crises\")")) nil]
["alice" nil nil nil nil nil nil ((timestamp . "2013-06-29") (notes . "(\"\\\"How do you know I'm mad?\\\" said Alice. \\\"You must be,\\\" said the Cat, \\\"otherwise you wouldn't have come here.\\\"\")")) nil]
["align" nil nil nil nil nil nil ((timestamp . "2015-08-24") (notes . "(\"an environment to align sets of equations along certain points. There is only one point per equation (every odd &) and equations are separated by even &. If you need multiple alignment points within one equation look into split, alignat or array\" \"https://www.sharelatex.com/learn/Aligning_equations_with_amsmath easy introduction to the basics with examples\")")) nil]
["alis" nil nil nil nil nil nil ((timestamp . "2010-05-10") (notes . "(\"try /msg alis help\")")) nil]
["alist" nil nil nil nil nil nil ((timestamp . "2012-09-15") (notes . "(\"an \\\"association list\\\", of the form ((key1 . val1) (key2 . val2) ... (keyn . valn)), see also plist, and the function assoc\" \"(info \\\"(elisp) Association Lists\\\")\" \"the canonical bad datastructure\")")) nil]
["all" nil nil nil nil nil nil ((timestamp . "2012-08-11") (notes . "(\"a package that let's you easily edit all lines matching a regexp\" \"it's in ELPA! Just do M-x package-install RET all RET\")")) nil]
["allfunctions" nil nil nil nil nil nil ((timestamp . "2006-12-18") (notes . "(\"(with-output-to-temp-buffer \\\"Functions\\\" (loop for s being the symbols if (fboundp s) do (princ (format \\\"%s\\\\n\\\" s))))\")")) nil]
["aloha" nil nil nil nil nil nil ((timestamp . "2006-12-09") (notes . "(\"ALOHAnet, also known as ALOHA, was a pioneering computer networking system developed at the University of Hawaii. It was first deployed in 1970, and while the network itself is no longer used, one of the core concepts in the network is the basis for the almost-universal Ethernet.\" \"http://en.wikipedia.org/wiki/ALOHAnet\")")) nil]
["alot" nil nil nil nil nil nil ((timestamp . "2011-12-15") (notes . "(\"an imaginary creature that someone made up to help them deal with their compulsive need to correct other people's grammar.\" \"http://hyperboleandahalf.blogspot.com/2010/04/alot-is-better-than-you-at-everything.html\")")) nil]
["ALPC" nil nil nil nil nil nil ((timestamp . "2011-09-04") (notes . "(\"Advanced Local Procedure Call\" \"\\\"an internal, undocumented inter-process communication facility provided by the Microsoft Windows NT kernel for lightweight IPC between processes on the same computer.\\\" <https://secure.wikimedia.org/wikipedia/en/wiki/ALPC>\")")) nil]
["alpeak" nil nil nil nil nil nil ((timestamp . "2009-02-08") (notes . "(\"陆山峰\")")) nil]
["alphagrips" nil nil nil nil nil nil ((timestamp . "2006-05-24") (notes . "(\"a handheld keyboard that looks like a game console controller\")")) nil]
["alpine" nil nil nil nil nil nil ((timestamp . "2009-02-13") (notes . "(\"a new version of the Pine email client\")")) nil]
["ALS" nil nil nil nil nil nil ((timestamp . "2007-05-13") (notes . "(\"A Likely Story!\")")) nil]
["ALSAHowTo" nil nil nil nil nil nil ((timestamp . "2004-04-20") (notes . "(\"at http://www.linuxorbit.com/modules.php?op=modload&name=Sections&file=index&req=viewarticle&artid=541&page=1\" \"at http://www.alsa-project.org/alsa-doc/alsa-howto/alsa-howto.html\")")) nil]
["altgr" nil nil nil nil nil nil ((timestamp . "2009-01-11") (notes . "(\"redirect altgrkey\")")) nil]
["alu" nil nil nil nil nil nil ((timestamp . "2011-11-13") (notes . "(\"arithmetic and logic unit, a component of a cpu\")")) nil]
["am-i-online" nil nil nil nil nil nil ((timestamp . "2003-08-24") (notes . "(\"unecho yes!\")")) nil]
["amam" nil nil nil nil nil nil ((timestamp . "2011-07-26") (notes . "(\"mu!\")")) nil]
["amanda" nil nil nil nil nil nil ((timestamp . "2006-03-21") (notes . "(\"an backupprogramm for big networks\" \"http://www.amanda.org/\")")) nil]
["amaya" nil nil nil nil nil nil ((timestamp . "2008-08-29") (notes . "(\"un navigateur/éditeur créé par le W3C : http://www.w3.org/Amaya/\")")) nil]
["amazon" nil nil nil nil nil nil ((timestamp . "2004-07-24") (notes . "(\"NO LONGER boycotted by the fsf: http://www.gnu.org/philosophy/amazon.html\")")) nil]
["amen" nil nil nil nil nil nil ((timestamp . "2011-01-26") (notes . "(\"noecho Hallelujah!\")")) nil]
["AmIOnline" nil nil nil nil nil nil ((timestamp . "2003-08-24") (notes . "(\"unecho yes!\")")) nil]
["amirite" nil nil nil nil nil nil ((timestamp . "2013-05-19") (notes . "(\"noecho No, now shut up, you retard.\")")) nil]
["ams" nil nil nil nil nil nil ((timestamp . "2013-09-24") (notes . "(\"a digital cookie redistributor\")")) nil]
["amsldoc" nil nil nil nil nil nil ((timestamp . "2012-01-08") (notes . "(\"the documentation for amsmath and can be found on http://www.ctan.org/tex-archive/macros/latex/required/amslatex/math/amsldoc.pdf\")")) nil]
["amsldoc,," nil nil nil nil nil nil ((timestamp . "2011-12-30") (notes . "(\"redirect amsldoc\")")) nil]
["amsldoc.pdf" nil nil nil nil nil nil ((timestamp . "2006-11-23") (notes . "(\"the documentation for amsmath and can be found on http://www.ctan.org/tex-archive/macros/latex/required/amslatex/math/amsldoc.pdf\")")) nil]
["amsmath" nil nil nil nil nil nil ((timestamp . "2015-08-24") (notes . "(\"the principal package in the AMS-LaTeX distribution. It adapts for use in LaTeX most of the mathematical features found in AMS-TeX: http://ctan.org/pkg/amsmath [user guide: http://tinyurl.com/amsldoc]\")")) nil]
["anacron" nil nil nil nil nil nil ((timestamp . "2007-06-07") (notes . "(\"a periodic command scheduler. It executes commands at intervals specified in days. Unlike cron, it does not assume that the system is running continuously.\")")) nil]
["anarchism" nil nil nil nil nil nil ((timestamp . "2005-03-29") (notes . "(\"a politico-economic doctrine, opposing all imposed authority. A good overview can be found at http://www.anarchistfaq.org\")")) nil]
["anarchy" nil nil nil nil nil nil ((timestamp . "2014-01-15") (notes . "(\"lisp (random-choose (notes \\\"dlgs-phrases\\\"))\" \"http://en.wikipedia.org/wiki/Pierre-Joseph_Proudhon\")")) nil]
["andLinux" nil nil nil nil nil nil ((timestamp . "2008-02-27") (notes . "(\"http://www.andlinux.org/\" \"a complete Ubuntu Linux system running in Windows 2000 based systems\")")) nil]
["anecdote" nil nil nil nil nil nil ((timestamp . "2011-09-16") (notes . "(\"redirect cool-story-bro\")")) nil]
["anecdotes" nil nil nil nil nil nil ((timestamp . "2011-09-17") (notes . "(\"not evidence\")")) nil]
["angband" nil nil nil nil nil nil ((timestamp . "2004-03-11") (notes . "(\"at http://www.thangorodrim.net/\")")) nil]
["ange-ftp" nil nil nil nil nil nil ((timestamp . "2011-11-29") (notes . "(\"redirect AngeFtp\")")) nil]
["anger" nil nil nil nil nil nil ((timestamp . "2007-03-17") (notes . "(\"for the weak\")")) nil]
["anglophilia" nil nil nil nil nil nil ((timestamp . "2013-05-23") (notes . "(\"is that even *legal*\")")) nil]
["angrybirds" nil nil nil nil nil nil ((timestamp . "2011-12-06") (notes . "(\"noecho @gamers *CHIRP* *CHIRP* *CHIRP* #RAGE\")")) nil]
["animal-rights" nil nil nil nil nil nil ((timestamp . "2005-07-27") (notes . "(\"redirect animalrights\")")) nil]
["animal_rights" nil nil nil nil nil nil ((timestamp . "2005-07-27") (notes . "(\"redirect animalrights\")")) nil]
["AnimalRights" nil nil nil nil nil nil ((timestamp . "2006-03-21") (notes . "(\"at http://sztybel.tripod.com/popular_menu.html\" \"Answers to common objections to animal rights: http://sztybel.tripod.com/dances.html\" \"Protect Every Vegetable Association (a parody of animal rights): http://www.peva.org/philosophy.htm\" \"Ambiguities of Animal Rights, a criticism of animal rights: http://www.communalism.org/Archive/5/aar.html\")")) nil]
["anjin-san" nil nil nil nil nil nil ((timestamp . "2003-12-23") (notes . "(\"John Blackthorne\")")) nil]
["anjuta" nil nil nil nil nil nil ((timestamp . "2014-01-02") (notes . "(\"<http://www.anjuta.org/>\")")) nil]
["annoying-beep" nil nil nil nil nil nil ((timestamp . "2008-05-27") (notes . "(\"see ,dv visible-bell\" \"(setq ring-bell-function 'ignore)\")")) nil]
["Anonymity" nil nil nil nil nil nil ((timestamp . "2012-02-20") (notes . "(\"at http://www.etrumeus.com/ferment/Anonymity\" \"a group of workers and student for anonymity arround the world :: http://libreplanet.org/wiki/Group:Anonymity\" \"a term which must not be confound with the Anonymous group, since no one really knows who they are, and if they have not been create by a governemental agency to goes against the right Human Rigths of anonymity and privacy ;-D\")")) nil]
["ANSI" nil nil nil nil nil nil ((timestamp . "2012-12-12") (notes . "(\"see C-h f ansi-color-for-comint-mode-on\" \"see http://en.wikipedia.org/wiki/ANSI_escape_code\")")) nil]
["ansi-color" nil nil nil nil nil nil ((timestamp . "2010-08-07") (notes . "(\"redirect ansi-color-in-shell\")")) nil]
["ansi-color-in-shell" nil nil nil nil nil nil ((timestamp . "2008-05-24") (notes . "(\"see ,dv ansi-color-for-comint-mode\" \"do M-x ansi-color-for-comint-mode-on\")")) nil]
["answer" nil nil nil nil nil nil ((timestamp . "2003-01-22") (notes . "(\"42\")")) nil]
["ant" nil nil nil nil nil nil ((timestamp . "2012-12-19") (notes . "(\"for editing ant files with pgsml-mode you should get the DTD from http://www.sdv.fr/pages/casa/html/ant-dtd.en.html\" \"a build system favoured by Java users that uses XML files and was mostly created out of spite against tabs in Makefiles.\")")) nil]
["anti-american" nil nil nil nil nil nil ((timestamp . "2003-10-07") (notes . "(\"Politics made by G.W.Bush\")")) nil]
["antialiasing" nil nil nil nil nil nil ((timestamp . "2014-09-24") (notes . "(\"http://tex.stackexchange.com/questions/11769/box-border-lines-not-showing-properly-on-pdf\")")) nil]
["anticons" nil nil nil nil nil nil ((timestamp . "2012-09-04") (notes . "(\"(defun uncons (pair) \\\"Convert cons PAIR to a list.\\\" (setcdr pair (list (cdr pair))) pair)\")")) nil]
["antimac" nil nil nil nil nil nil ((timestamp . "2008-09-17") (notes . "(\"http://www.just-think-it.com/anti-mac.htm\")")) nil]
["anu" nil nil nil nil nil nil ((timestamp . "2013-03-20") (notes . "(\"The Australian National University\")")) nil]
["anxt" nil nil nil nil nil nil ((timestamp . "2012-12-11") (notes . "(\"homie's dad\" \"has a LaTeX fetish\")")) nil]
["anxts-law" nil nil nil nil nil nil ((timestamp . "2012-09-13") (notes . "(\"noecho anyone who plays a double neck guitar is a dooshbag.\")")) nil]
["any" nil nil nil nil nil nil ((timestamp . "2007-07-22") (notes . "(\"redirect anyone\")")) nil]
["any.io" nil nil nil nil nil nil ((timestamp . "2012-09-23") (notes . "(\"a project providing access to twitter and identi.ca through DNS and finger, as well as finger through HTTP.\")")) nil]
["anybody" nil nil nil nil nil nil ((timestamp . "2007-03-16") (notes . "(\"redirect anyone\")")) nil]
["anyconf" nil nil nil nil nil nil ((timestamp . "2010-10-18") (notes . "(\"redirect anyinimode\")")) nil]
["anyofyallz" nil nil nil nil nil nil ((timestamp . "2011-03-06") (notes . "(\"redirect anyone\")")) nil]
["anyone" nil nil nil nil nil nil ((timestamp . "2013-09-18") (notes . "(\"redirect ask\")")) nil]
["anyoneatall" nil nil nil nil nil nil ((timestamp . "2010-07-01") (notes . "(\"noecho anyone? anyone? bueller?\")")) nil]
["anyonewant" nil nil nil nil nil nil ((timestamp . "2011-08-17") (notes . "(\"No I don't need an invite to Google's latest killer app\")")) nil]
["anywho" nil nil nil nil nil nil ((timestamp . "2010-10-21") (notes . "(\"redirect anyone\")")) nil]
["AOCP" nil nil nil nil nil nil ((timestamp . "2007-05-18") (notes . "(\"The Art of Computer Programing, by my homie Knuth.\")")) nil]
["aosa" nil nil nil nil nil nil ((timestamp . "2013-02-26") (notes . "(\"The Architecture of Open Source Applications\" \"available online at http://www.aosabook.org/en/index.html\")")) nil]
["apac" nil nil nil nil nil nil ((timestamp . "2012-05-24") (notes . "(\"http://en.wikipedia.org/wiki/Asia-Pacific\")")) nil]
["apachemode" nil nil nil nil nil nil ((timestamp . "2006-01-30") (notes . "(\"redirect apache-mode\")")) nil]
["API" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Application Programming Interface\")")) nil]
["APIC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Advanced Programmable Interrupt Controller\")")) nil]
["APL" nil nil nil nil nil nil ((timestamp . "2011-11-17") (notes . "(\"a language with lots of silly symbols.\")")) nil]
["APlanForSpam" nil nil nil nil nil nil ((timestamp . "2002-12-10") (notes . "(\"at http://www.paulgraham.com/spam.html\")")) nil]
["aplay" nil nil nil nil nil nil ((timestamp . "2006-02-04") (notes . "(\"command-line sound player for ALSA sound-card driver\")")) nil]
["apocalypse^now" nil nil nil nil nil nil ((timestamp . "2004-09-08") (notes . "(\"erwin138\" \"http://ths000.tau.ac.il/~borisk\")")) nil]
["apostrophe" nil nil nil nil nil nil ((timestamp . "2012-01-12") (notes . "(\"noecho an apostrophe does not mean \\\"OH SHIT HERE COMES AN `S'!\\\"\")")) nil]
["apostrophes" nil nil nil nil nil nil ((timestamp . "2012-09-04") (notes . "(\"redirect apostrophe\")")) nil]
["applause" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"noecho [the crowd roars]\")")) nil]
["apple" nil nil nil nil nil nil ((timestamp . "2012-02-19") (notes . "(\"a fruit\" \"Apple Computer cannibalized a unix operating system called Darwin whose mascot is a fork holding bird mascot named Huxley and with a kernel called XNU\" \"https://www.fsf.org/blogs/licensing/more-about-the-app-store-gpl-enforcement\")")) nil]
["apple-pad-mini" nil nil nil nil nil nil ((timestamp . "2013-08-02") (notes . "(\"https://www.youtube.com/watch?v=EtPWTR9VqWE\")")) nil]
["AppleScript" nil nil nil nil nil nil ((timestamp . "2011-07-13") (notes . "(\"A scripting language designed by Apple\" \"fucking horrible\" \"you don't want to know\" \"ugly as sin but quite handy sometimes\" \"best programmed by guessing what you think should work.\" \"not ugly, it's just made like COBOL, to be used by non programmers.\" \"Apple's proprietary language that uses OSA\")")) nil]
["applying" nil nil nil nil nil nil ((timestamp . "2010-09-13") (notes . "(\"explaining more about what you did for a company, rather than the technical minutiae of the work\" \"difficult since managers and hirers are not competent to know much about anything outside their own field to see talented people from other fields\" \"see ,hiring\")")) nil]
["appt-make-list" nil nil nil nil nil nil ((timestamp . "2003-08-27") (notes . "(\"http://www.geocrawler.com/archives/3/337/1997/1/50/1850059/\")")) nil]
["apr" nil nil nil nil nil nil ((timestamp . "2010-04-01") (notes . "(\"the Apache Portable Runtime, used by Apache httpd, subversion, and other projects.\")")) nil]
["apropos-dude" nil nil nil nil nil nil ((timestamp . "2012-09-06") (notes . "(\"lisp (let* ((re (mapconcat 'symbol-name lispargs \\\" \\\")) (matches (remove '() (mapcar (lambda (x) (and (string-match re x) x)) (notes \\\"lebowski-data\\\"))))) (if matches (random-choose matches) \\\"No matches found\\\"))\")")) nil]
["apropos-term" nil nil nil nil nil nil ((timestamp . "2012-03-13") (notes . "(\"lisp (let* ((re (mapconcat 'symbol-name (cdr lispargs) \\\" \\\")) (matches (remove '() (mapcar (lambda (x) (and (string-match re x) x)) (notes (symbol-name (car lispargs))))))) (if matches matches \\\"No matches found\\\"))\")")) nil]
["apt-file" nil nil nil nil nil nil ((timestamp . "2003-12-11") (notes . "(\"see also dlocate and \\\"dpkg -S\\\" and auto-apt\")")) nil]
["apue" nil nil nil nil nil nil ((timestamp . "2008-12-25") (notes . "(\"Advanced Programming in the UNIX® Environment, at http://www.apuebook.com\")")) nil]
["Arafat" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"the leader of the Palestinian people and the head of PLO (ASHAF)\" \"known as Abu Amar\")")) nil]
["arc" nil nil nil nil nil nil ((timestamp . "2012-10-10") (notes . "(\"a dialect of lisp promoted by Paul Graham to unsuspecting newbies <http://arclanguage.org>, <http://www.paulgraham.com/arc.html>.\" \"tutorial: http://ycombinator.com/arc/tut.txt\" \"Unicode Considered Harmful\" \"lots of fn!\" \"the \\\"fishing ahoy batman\\\" of programming languages\" \"just another harebrained scheme\")")) nil]
["Arccos" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Arccos\")")) nil]
["arch" nil nil nil nil nil nil ((timestamp . "2013-02-25") (notes . "(\"a linux distribution. It can be found at https://www.archlinux.org/\" \"not for people who are afraid of breakage\" \"a version control system, mainly of historical interest\" \"a landmark in St. Louis\")")) nil]
["arch-linux-fix" nil nil nil nil nil nil ((timestamp . "2013-03-16") (notes . "(\"noecho have you tried updating you dependencies and recompiling\")")) nil]
["arch-unfix" nil nil nil nil nil nil ((timestamp . "2013-11-02") (notes . "(\"noecho Most problems can be created by installing Arch.\")")) nil]
["ArchPrimer" nil nil nil nil nil nil ((timestamp . "2004-09-30") (notes . "(\"at http://repose.cx/ArchPrimer.html\")")) nil]
["ArcSin" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ArcSin\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?ArcSin\")")) nil]
["are" nil nil nil nil nil nil ((timestamp . "2011-08-10") (notes . "(\"is\")")) nil]
["arecord" nil nil nil nil nil nil ((timestamp . "2006-02-04") (notes . "(\"command-line sound recorder for ALSA sound-card driver\")")) nil]
["Argentum" nil nil nil nil nil nil ((timestamp . "2003-09-20") (notes . "(\"the documentation language for SilverScheme\")")) nil]
["ArgoUML" nil nil nil nil nil nil ((timestamp . "2003-05-22") (notes . "(\"nifty\" \"http://argouml.tigris.org/\")")) nil]
["arguingontheinternet" nil nil nil nil nil nil ((timestamp . "2011-06-21") (notes . "(\"http://imgur.com/JXMQ4\")")) nil]
["Armagetron" nil nil nil nil nil nil ((timestamp . "2011-04-26") (notes . "(\"a multiplayer game in 3d that attempts to emulate and expand on the lightcycle sequence from the movie Tron.\")")) nil]
["armed-guards" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"noecho HUG HIM!!!\")")) nil]
["army" nil nil nil nil nil nil ((timestamp . "2003-11-04") (notes . "(\"vi all that you can vi\")")) nil]
["ARP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Address Resolution Protocol\")")) nil]
["arrs" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"keelhaul him, mateys!\")")) nil]
["art" nil nil nil nil nil nil ((timestamp . "2010-11-02") (notes . "(\"a man's name\")")) nil]
["artist-mode" nil nil nil nil nil nil ((timestamp . "2002-12-01") (notes . "(\"redirect artistmode\")")) nil]
["ArtisticLibreLicense" nil nil nil nil nil nil ((timestamp . "2003-03-02") (notes . "(\"http://artlibre.org/licence.php/lalgb.html\" \"just copyleft for artistic works\" \"TODO : put on the WIKI\")")) nil]
["AS" nil nil nil nil nil nil ((timestamp . "2013-03-04") (notes . "(\"an Autonomous System; a collection of IP routing prefixes that presents a common, clearly defined routing policy to the internet <http://en.wikipedia.org/wiki/Autonomous_System_(Internet)>\")")) nil]
["ASAIC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for As Soon As I Can\")")) nil]
["ASAP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for As Soon As Possible\")")) nil]
["ascii-art-to-unicode" nil nil nil nil nil nil ((timestamp . "2014-01-26") (notes . "(\"redirect aa2u\")")) nil]
["asdf-install" nil nil nil nil nil nil ((timestamp . "2005-07-30") (notes . "(\"a development application for downloading and installing lisp packages.\" \"http://www.cliki.net/asdf-install\")")) nil]
["asetion" nil nil nil nil nil nil ((timestamp . "2005-11-21") (notes . "(\"Another keyboard layout, similar to Dvorak but with QWERTY punctuation\" \"http://asetion.com/\")")) nil]
["ashokkal" nil nil nil nil nil nil ((timestamp . "2006-10-06") (notes . "(\"aadis friend, so be nice.\")")) nil]
["ask" nil nil nil nil nil nil ((timestamp . "2013-09-18") (notes . "(\"noecho Don't ask to ask, or ask if anyone knows/uses/can help you with X, just ask.\")")) nil]
["asktoask" nil nil nil nil nil nil ((timestamp . "2011-01-20") (notes . "(\"noecho This is IRC. Don't ask to ask and don't ask if someone has or can. Just ask your question and everybody will be happy ;-)\")")) nil]
["asl" nil nil nil nil nil nil ((timestamp . "2011-09-07") (notes . "(\"redirect a/s/l\")")) nil]
["asm.js" nil nil nil nil nil nil ((timestamp . "2013-02-16") (notes . "(\"a virtual machine for the web http://asmjs.org/spec/latest/\")")) nil]
["asmop" nil nil nil nil nil nil ((timestamp . "2010-05-25") (notes . "(\"A Small Matter of Programming\")")) nil]
["ASN.1" nil nil nil nil nil nil ((timestamp . "2013-02-26") (notes . "(\"Abstract Syntax Notation One, a standard and flexible notation that describes rules and structures for representing, encoding, transmitting, and decoding data in telecommunications and computer networking <https://en.wikipedia.org/wiki/ASN.1>\")")) nil]
["aspell" nil nil nil nil nil nil ((timestamp . "2004-05-25") (notes . "(\"redirect InteractiveSpell\")")) nil]
["aspell-british" nil nil nil nil nil nil ((timestamp . "2005-07-24") (notes . "(\"you will experience some problems if you change the dictionary using ispell-change-dictionary. Try changing your locale to en_GB system-wide to work around this problem\")")) nil]
["ASR" nil nil nil nil nil nil ((timestamp . "2006-02-09") (notes . "(\"alt.sysadmin.recovery\")")) nil]
["ASS" nil nil nil nil nil nil ((timestamp . "2013-10-25") (notes . "(\"All Software Sucks\" \"suck is a vector. A given foo doesn't suck LESS, it just sucks in a direction a given hacker finds less disagreeable\")")) nil]
["assm" nil nil nil nil nil nil ((timestamp . "2007-04-05") (notes . "(\"redirect a.s.s.m\")")) nil]
["asstr" nil nil nil nil nil nil ((timestamp . "2006-10-29") (notes . "(\"the alt.sex.stories repository, as well as a host for many erotica authors, on http://www.asstr.org\")")) nil]
["assume" nil nil nil nil nil nil ((timestamp . "2012-02-01") (notes . "(\"noecho to assume is to make an ASS out of U and ME\")")) nil]
["assumption" nil nil nil nil nil nil ((timestamp . "2012-08-03") (notes . "(\"\\\"The mother of all fuckups\\\" --...\")")) nil]
["astrid" nil nil nil nil nil nil ((timestamp . "2006-10-02") (notes . "(\"at http://www.flickr.com/photos/18197990@N00/sets/72157594308145938/\")")) nil]
["astyle" nil nil nil nil nil nil ((timestamp . "2010-09-17") (notes . "(\"a CLI tool used to fix source code indentation\")")) nil]
["async.el" nil nil nil nil nil nil ((timestamp . "2012-11-29") (notes . "(\"redirect async\")")) nil]
["atlasshrugged" nil nil nil nil nil nil ((timestamp . "2012-12-11") (notes . "(\"at http://www.angryflower.com/atlass.gif\" \"Two novels can change a bookish fourteen-year old’s life: The Lord of the Rings and Atlas Shrugged. One is a childish fantasy that often engenders a lifelong obsession with its unbelievable heroes, leading to an emotionally stunted, socially crippled adulthood, unable to deal with the real world. The other involves orcs.\")")) nil]
["ATM" nil nil nil nil nil nil ((timestamp . "2012-07-23") (notes . "(\"short for At The Moment\" \"short for Alien Time Machine\" \"Automatic Teller Machine, aka Cash Machine or Bank Machine\" \"in an odd twist of fate some ATMs are time machines see: http://en.wikipedia.org/wiki/TYME\")")) nil]
["atspi.el" nil nil nil nil nil nil ((timestamp . "2009-08-11") (notes . "(\"at http://delysid.org/atspi.el\")")) nil]
["atspi.el" nil nil nil nil nil nil ((timestamp . "2009-08-10")) nil]
["atspi.el" nil nil nil nil nil nil ((timestamp . "2009-08-10")) nil]
["atwoods-law" nil nil nil nil nil nil ((timestamp . "2013-10-09") (notes . "(\"\\\"Any application that can be written in JavaScript, will eventually be written in JavaScript.\\\"\")")) nil]
["ATX" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Advanced Technology Extended\")")) nil]
["augment" nil nil nil nil nil nil ((timestamp . "2008-02-15") (notes . "(\"a system for gathering metadata (test failures, coverage, profiling, etc) from code and displaying it in the editor.\" \"http://augment.rubyforge.org\")")) nil]
["augmented-reality" nil nil nil nil nil nil ((timestamp . "2012-07-30") (notes . "(\"http://www.youtube.com/watch?v=L8xgYcoH0tA\")")) nil]
["aum" nil nil nil nil nil nil ((timestamp . "2010-08-02") (notes . "(\"noecho ॐ\")")) nil]
["AUP" nil nil nil nil nil nil ((timestamp . "2012-10-10") (notes . "(\"acceptable use policy\")")) nil]
["author" nil nil nil nil nil nil ((timestamp . "2002-11-29") (notes . "(\"redirect owner\")")) nil]
["auto-complete-mode" nil nil nil nil nil nil ((timestamp . "2011-03-22") (notes . "(\"redirect AutoComplete\")")) nil]
["auto-fill" nil nil nil nil nil nil ((timestamp . "2007-11-15") (notes . "(\"redirect autofillmode\")")) nil]
["auto-mode-alist" nil nil nil nil nil nil ((timestamp . "2008-03-10") (notes . "(\"redirect automodealist\")")) nil]
["AutoComplete" nil nil nil nil nil nil ((timestamp . "2011-06-26") (notes . "(\"redirect auto-complete\")")) nil]
["autocompletion" nil nil nil nil nil nil ((timestamp . "2004-10-10") (notes . "(\"The simplest is dabbrev-expand (M-/), which expands to any word in the currently open buffers\" \"The next step is tags, which expands to all definitions in a project. You create a TAGS file using the etags tool, and then M-x visit-tags-table\" \"If you need more, CEDET/Intellisense might be for you\")")) nil]
["autoconf" nil nil nil nil nil nil ((timestamp . "2008-01-12") (notes . "(\"a package to configure source code packages.\" \"available at http://www.gnu.org/software/autoconf/\" \"http://www.gnu.org/software/autoconf/manual/\")")) nil]
["autocutsel" nil nil nil nil nil nil ((timestamp . "2010-09-01") (notes . "(\"at http://www.nongnu.org/autocutsel/\")")) nil]
["autofill" nil nil nil nil nil nil ((timestamp . "2007-11-15") (notes . "(\"redirect AutoFillMode\")")) nil]
["autojoin" nil nil nil nil nil nil ((timestamp . "2006-01-04") (notes . "(\"redirect ercautojoin\")")) nil]
["autoloaded" nil nil nil nil nil nil ((timestamp . "2011-09-30") (notes . "(\"redirect autoload\")")) nil]
["autoloading" nil nil nil nil nil nil ((timestamp . "2012-04-24") (notes . "(\"redirect autoload\")")) nil]
["automake" nil nil nil nil nil nil ((timestamp . "2008-01-31") (notes . "(\"a program which creates GNU standards-compliant Makefiles from template files.\" \"available at http://www.gnu.org/software/automake/\" \"http://www.gnu.org/software/automake/manual/\")")) nil]
["Autonomy" nil nil nil nil nil nil ((timestamp . "2012-05-30") (notes . "(\"http://autonomyseries.com/\" \"http://www.foo.be/docs-free/autonomy/Autonomy-Freedom-of-Thought-Draft-3-CC.txt\")")) nil]
["autosave-skeptics-list" nil nil nil nil nil nil ((timestamp . "2013-11-06") (notes . "(\"btipling\")")) nil]
["autosavefiles" nil nil nil nil nil nil ((timestamp . "2011-06-16") (notes . "(\"redirect autosave\")")) nil]
["autotype" nil nil nil nil nil nil ((timestamp . "2012-10-04") (notes . "(\"(info \\\"(autotype) Top\\\")\")")) nil]
["autozen" nil nil nil nil nil nil ((timestamp . "2003-04-23") (notes . "(\"http://www.linuxlabs.com/autozen.html\" \"brain machine\")")) nil]
["avant-gardes" nil nil nil nil nil nil ((timestamp . "2013-10-11") (notes . "(\"noecho DO SOMETHING UNUSUAL OR EXPERIMENTAL TO HIM!!!1\")")) nil]
["avantify" nil nil nil nil nil nil ((timestamp . "2006-04-16") (notes . "(\"http://www.meanbusiness.com/cgi-bin/avantify.cgi\")")) nil]
["AvantSlash" nil nil nil nil nil nil ((timestamp . "2006-04-16") (notes . "(\"allows you to read Slashdot on your Palm or WinCE device (through AvantGo or other PDA web browser) or via a WAP enabled mobile phone.\" \"http://www.fourteenminutes.com/code/avantslash/\" \"see avantify\")")) nil]
["away" nil nil nil nil nil nil ((timestamp . "2011-08-26") (notes . "(\"noecho No, I'm back.\")")) nil]
["awesome" nil nil nil nil nil nil ((timestamp . "2009-10-04") (notes . "(\"http://awesome.naquadah.org/\")")) nil]
["awesomesauce" nil nil nil nil nil nil ((timestamp . "2012-10-23") (notes . "(\"actually just some corn starch and MSG\")")) nil]
["awkward-pause" nil nil nil nil nil nil ((timestamp . "2014-01-28") (notes . "(\"noecho /me looks at its feet, the wall, anything to avoid making contact with you\")")) nil]
["AWOL" nil nil nil nil nil nil ((timestamp . "2004-08-18") (notes . "(\"an acronym for \\\"Absent Without Leave\\\" -- used to denote \\\"absence\\\"\")")) nil]
["awstats" nil nil nil nil nil nil ((timestamp . "2002-11-12") (notes . "(\"a weblog viewer at http://awstats.sourceforge.net/\" \"See also http://awstats.sourceforge.net/#COMPARISON\")")) nil]
["ayahuasca" nil nil nil nil nil nil ((timestamp . "2007-04-04") (notes . "(\"an amazonian soup\")")) nil]
["AYBABTU" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for All Your Base Are Belong To Us\")")) nil]
["ayn" nil nil nil nil nil nil ((timestamp . "2010-10-14") (notes . "(\"lisp (format \\\"As the eminent 20th-century Russian-American philosopher Ayn Rand proved, %s %s.\\\" (random-choose (notes \\\"ayn-objects\\\")) (random-choose (notes \\\"ayn-opinions\\\")))\")")) nil]
["ayn-objects" nil nil nil nil nil nil ((timestamp . "2011-01-30") (notes . "(\"capitalism is\" \"total free-market capitalism is\" \"individual rights are\" \"money is\" \"that Lisp is\" \"smoking mad ganja is\")")) nil]
["ayn-opinions" nil nil nil nil nil nil ((timestamp . "2010-10-14") (notes . "(\"the ONLY moral system\" \"the means of subordinating society to moral law\" \"the barometer of a society's virtue\" \"a social system based on the recognition of individual rights, including property rights\" \"the ONLY moral programming language (except Haskell and maybe Clojure)\")")) nil]
["aziz" nil nil nil nil nil nil ((timestamp . "2012-06-28") (notes . "(\"noecho AZIZ, LIGHT!\")")) nil]
["AZStrutAgenda" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?AZStrutAgenda\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?AZStrutAgenda\")")) nil]
["A∴A∴" nil nil nil nil nil nil ((timestamp . "2011-02-24") (notes . "(\"noecho The method of science, the aim of religion.\")")) nil]
["b-bar" nil nil nil nil nil nil ((timestamp . "2003-06-14") (notes . "(\"lisp (describe \\\"b-foo\\\")\")")) nil]
["b-click" nil nil nil nil nil nil ((timestamp . "2003-06-14") (notes . "(\"lisp (random-choose (list (concat \\\"/me points the gnu and \\\" nick \\\" trembles...*CLICK*\\\") (concat \\\"/me picks up the gnu and points it at \\\" nick \\\"'s head...*CLICK*\\\")))\")")) nil]
["b-foo" nil nil nil nil nil nil ((timestamp . "2003-06-14") (notes . "(\"lisp (random 10)\")")) nil]
["b-reload" nil nil nil nil nil nil ((timestamp . "2003-06-13") (notes . "(\"lisp (let (list (bullet (random 6))) (setq blist (dotimes (i 6 list) (setq list (if (= i bullet) (cons \\\"*BANG*\\\" list) (cons \\\"*click*\\\" list))))))\")")) nil]
["b-rr" nil nil nil nil nil nil ((timestamp . "2003-06-13") (notes . "(\"lisp (progn (let ((shot (car b-rr-list))) (if shot (let (list (bullet (random 6))) (setq b-rr-list (dotimes (i 6 list) (setq list (if (= i bullet) (cons t list) (cons nil list)))))) (setq b-rr-list (cdr b-rr-list))) (if shot \\\"*BANG*\\\\nReloading...\\\" \\\"*click\\\")))\")")) nil]
["b-rr-reload" nil nil nil nil nil nil ((timestamp . "2003-06-13") (notes . "(\"lisp (let (list (bullet (random 6))) (setq b-rr-list (dotimes (i 6 list) (setq list (if (= i bullet) (cons t list) (cons nil list))))) \\\"Ok. Loaded.\\\")\")")) nil]
["b/c" nil nil nil nil nil nil ((timestamp . "2004-01-26") (notes . "(\"an abbreviation for \\\"because\\\"\")")) nil]
["b/f" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"brought forward\")")) nil]
["B/S" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"short for Bullshit\" \"the balance sheet\")")) nil]
["B/W" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Between\")")) nil]
["b0rked" nil nil nil nil nil nil ((timestamp . "2003-02-15") (notes . "(\"31337 for borked\")")) nil]
["b2b" nil nil nil nil nil nil ((timestamp . "2013-03-04") (notes . "(\"business-to-business <https://en.wikipedia.org/wiki/b2b>\")")) nil]
["B5" nil nil nil nil nil nil ((timestamp . "2011-05-21") (notes . "(\"Babylon 5, an excellent American science fiction television program from the 1990s.\")")) nil]
["babbage" nil nil nil nil nil nil ((timestamp . "2013-09-09") (notes . "(\"noecho i am not able to rightly apprehend the kind of confusion of ideas that could provoke such a question\")")) nil]
["babbage-msft" nil nil nil nil nil nil ((timestamp . "2013-06-18") (notes . "(\"noecho I am not able rightly to apprehend the kind of confusion of ideas that could provoke such a UI\")")) nil]
["babel" nil nil nil nil nil nil ((timestamp . "2013-04-20") (notes . "(\"a package for (pdf-)latex that helps with language specific questions http://www.ctan.org/tex-archive/macros/latex/required/babel/base\" \"for xelatex please use polyglossia instead\")")) nil]
["babelsport" nil nil nil nil nil nil ((timestamp . "2003-11-18") (notes . "(\"translating a text via babelfish to a different language and then back to the original language, then passing the result to your friends who have to guess what it was originally\")")) nil]
["babybunny" nil nil nil nil nil nil ((timestamp . "2002-11-13") (notes . "(\"redirect bunny\")")) nil]
["babygnu" nil nil nil nil nil nil ((timestamp . "2002-09-30") (notes . "(\"http://www.gnu.org/graphics/babygnu.html\")")) nil]
["babyl" nil nil nil nil nil nil ((timestamp . "2006-12-30") (notes . "(\"Mailbox format for rmail.\")")) nil]
["backquoting" nil nil nil nil nil nil ((timestamp . "2004-03-16") (notes . "(\"redirect BackquoteSyntax\")")) nil]
["backslashitis" nil nil nil nil nil nil ((timestamp . "2004-04-29") (notes . "(\"\\\"\\\\\\\\(\\\\\\\\\\\\\\\\\\\\\\\\||\\\\\\\\)\\\" -- match \\\\ or |\")")) nil]
["backtab" nil nil nil nil nil nil ((timestamp . "2010-07-13") (notes . "(\"http://stuff.mit.edu/afs/sipb/user/daveg/Info/backtab-howto.txt\")")) nil]
["backtrace" nil nil nil nil nil nil ((timestamp . "2003-02-28") (notes . "(\"redirect backtracebuffer\")")) nil]
["backtracebuffer" nil nil nil nil nil nil ((timestamp . "2005-05-03") (notes . "(\"redirect debug\")")) nil]
["backup-diff" nil nil nil nil nil nil ((timestamp . "2013-09-22") (notes . "(\"https://github.com/leoliu/backup-diff\")")) nil]
["backups" nil nil nil nil nil nil ((timestamp . "2005-01-05") (notes . "(\"redirect backup\")")) nil]
["backyards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho MOW HIM!!\")")) nil]
["bacon" nil nil nil nil nil nil ((timestamp . "2012-10-10") (notes . "(\"noecho /me randomly distributes bacon throughout the channel\")")) nil]
["badbot" nil nil nil nil nil nil ((timestamp . "2010-08-13") (notes . "(\"noecho /me is sometimes a bad bot\")")) nil]
["badcode" nil nil nil nil nil nil ((timestamp . "2010-08-14") (notes . "(\"No, it's completely wrong-headed, insane and unreasonable. Your code is 100% bogus and should be taken out the back, lined up against a wall, and machine-gunned. Then the bleeding corpse should be hung, drawn and quartered. Then burnt. Then the smouldering rubble should be jumped up and down on. By a hippo.\")")) nil]
["badvogato" nil nil nil nil nil nil ((timestamp . "2003-02-11") (notes . "(\"no more.\")")) nil]
["baggy" nil nil nil nil nil nil ((timestamp . "2013-06-22") (notes . "(\"an elnode-powered blog engine https://bitbucket.org/aidalgol/baggy\" \"forked from skinny\")")) nil]
["ban" nil nil nil nil nil nil ((timestamp . "2005-03-06") (notes . "(\"lisp lambda (victim) (message (format \\\"/me kicks %s very hard.\\\" victim))\")")) nil]
["bananaphone" nil nil nil nil nil nil ((timestamp . "2011-01-18") (notes . "(\"a phone with a peal\")")) nil]
["banmask" nil nil nil nil nil nil ((timestamp . "2013-03-14") (notes . "(\"nick!user@host -- * (zero or more characters) and ? (one or more characters) are supported. host can be in the form of a domain name or an ip address. include * before ip addresses to additionally match web-based irc clients.\")")) nil]
["banner" nil nil nil nil nil nil ((timestamp . "2010-11-29") (notes . "(\"button or widget: https://my.fsf.org/associate/button or https://my.fsf.org/associate/widget\")")) nil]
["banshee" nil nil nil nil nil nil ((timestamp . "2007-05-09") (notes . "(\"an itunes clone for linux http://banshee-project.org/Main_Page\")")) nil]
["bards" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"noecho EULOGIZE HIM!!!\")")) nil]
["barfoo" nil nil nil nil nil nil ((timestamp . "2011-03-16") (notes . "(\"lisp (mapconcat (lambda (el) (symbol-name el)) lispargs \\\" \\\")\")")) nil]
["bark" nil nil nil nil nil nil ((timestamp . "2010-08-28") (notes . "(\"often found on trees\")")) nil]
["baseballcards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho TRADE HIM!!\")")) nil]
["bash-quotes" nil nil nil nil nil nil ((timestamp . "2003-06-14") (notes . "(\"redirect bashquotes\")")) nil]
["bashish" nil nil nil nil nil nil ((timestamp . "2004-07-22") (notes . "(\"a GPLed (color/font/candy)-themer for console (eterm, xterm, etc.), at http://bashish.sourceforge.net/\")")) nil]
["BashQuotes" nil nil nil nil nil nil ((timestamp . "2003-11-13") (notes . "(\"at http://www.daimi.au.dk/~terryp/bash-quotes.el\" \"at http://www.daimi.au.dk/~terryp/BashQuotes.html\")")) nil]
["bashreduce" nil nil nil nil nil nil ((timestamp . "2011-06-08") (notes . "(\"https://github.com/rcrowley/bashreduce\")")) nil]
["basil-brush" nil nil nil nil nil nil ((timestamp . "2012-02-24") (notes . "(\"noecho Boom! Boom!\")")) nil]
["basta" nil nil nil nil nil nil ((timestamp . "2012-02-27") (notes . "(\"noecho /me draws the line here. Stop it, people.\")")) nil]
["bastards" nil nil nil nil nil nil ((timestamp . "2007-12-08") (notes . "(\"like when they block port 6667\")")) nil]
["bat-crying-out-in-joy" nil nil nil nil nil nil ((timestamp . "2013-09-14") (notes . "(\"/\\\\(^,,^)/\\\\\")")) nil]
["batcat" nil nil nil nil nil nil ((timestamp . "2013-08-03") (notes . "(\"http://www.youtube.com/watch?v=1UlxI_D175s\")")) nil]
["batman" nil nil nil nil nil nil ((timestamp . "2012-08-24") (notes . "(\"noecho I HAVE NO PARENS: http://www.smbc-comics.com/index.php?db=comics&id=2491\")")) nil]
["bats" nil nil nil nil nil nil ((timestamp . "2011-09-25") (notes . "(\"macrobat, sheepbat, fledermaus\")")) nil]
["bayonne" nil nil nil nil nil nil ((timestamp . "2003-01-16") (notes . "(\"the GNU telephony server\" \"part of the GNUe project\" \"can be found on the web at http://www.gnu.org/software/projects/bayonne/\" \"can be found on the web at http://www.gnu.org/software/bayonne/\")")) nil]
["Bazaar" nil nil nil nil nil nil ((timestamp . "2006-12-24") (notes . "(\"a distributed version control system available under the GPL at http://bazaar-vcs.org/\")")) nil]
["bazaars" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"noecho FREEZE HIM!!\")")) nil]
["bb" nil nil nil nil nil nil ((timestamp . "2013-06-04") (notes . "(\"an ASCII art demo using aalib, at <http://aa-project.sourceforge.net/bb/>\")")) nil]
["bbc" nil nil nil nil nil nil ((timestamp . "2003-05-07") (notes . "(\"a business-card-sized CD-ROM, as used for LNX-BBC, for example.\")")) nil]
["bbdb-merge-file" nil nil nil nil nil nil ((timestamp . "2003-02-28") (notes . "(\"the tool to load the datafile\")")) nil]
["bbdb-package-rdf" nil nil nil nil nil nil ((timestamp . "2003-02-28") (notes . "(\"http://gd.tuwien.ac.at/opsys/linux/RDF/resources/bbdb.rdf\")")) nil]
["bbdb-syncml" nil nil nil nil nil nil ((timestamp . "2009-12-20") (notes . "(\"apparently dead; but see http://savannah.nongnu.org/projects/bbdb-syncml/\")")) nil]
["bbfn" nil nil nil nil nil nil ((timestamp . "2004-10-09") (notes . "(\"noecho (supposedly) means Bye Bye For Now\")")) nil]
["BBIAB" nil nil nil nil nil nil ((timestamp . "2003-03-15") (notes . "(\"Be Back In A Bit :)\")")) nil]
["BBL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for [I'll] Be Back Later\")")) nil]
["BBS" nil nil nil nil nil nil ((timestamp . "2011-10-12") (notes . "(\"an acronym for Be Back Soon\" \"an acronym for Bulletin Board System\" \"if you want to explore the modern BBS world consider telneting into bbs.dmine.net\" \"many BBSs rely on cp437, to emulate this on a utf8 terminal you can pipe the output of telnet through konwert cp437-utf8\")")) nil]
["bbsdocumentary" nil nil nil nil nil nil ((timestamp . "2010-11-30") (notes . "(\"http://www.bbsdocumentary.com/\")")) nil]
["bbt" nil nil nil nil nil nil ((timestamp . "2012-01-27") (notes . "(\"see ,wtf bbt\" \"a hit tv show 'big bang theory' on CBS\")")) nil]
["BCD" nil nil nil nil nil nil ((timestamp . "2013-09-07") (notes . "(\"Binary Coded Decimal, an obsolete system for packing numbers into bytes. The primary advantage of BCD is the ability to drive seven-segment displays more easily.\")")) nil]
["BCI" nil nil nil nil nil nil ((timestamp . "2013-06-19") (notes . "(\"Brain Computer Interface\")")) nil]
["BCL" nil nil nil nil nil nil ((timestamp . "2012-09-12") (notes . "(\"blood caffeine level\")")) nil]
["BCP" nil nil nil nil nil nil ((timestamp . "2012-02-16") (notes . "(\"Best Current Practices, an IETF RFC category <www.apps.ietf.org/rfc/bcplist.html>\")")) nil]
["BD" nil nil nil nil nil nil ((timestamp . "2010-11-11") (notes . "(\"Blu-Ray Disc\")")) nil]
["bdd" nil nil nil nil nil nil ((timestamp . "2007-01-09") (notes . "(\"Behaviour-Driven Development\" \"http://behaviour-driven.org\")")) nil]
["bdfl" nil nil nil nil nil nil ((timestamp . "2006-01-12") (notes . "(\"benevolent dictator for life\")")) nil]
["bdsm" nil nil nil nil nil nil ((timestamp . "2011-02-07") (notes . "(\"lisp (format (random-choose (notes \\\"bdsm-phrases\\\")) nick)\")")) nil]
["bdsm-phrases" nil nil nil nil nil nil ((timestamp . "2011-08-03") (notes . "(\"/me cracks a whip. *snap*\" \"Come here and tie me up, %s.\" \"%s, put your leash back on\" \"Wanna be my slave, %s?\")")) nil]
["be-like-me" nil nil nil nil nil nil ((timestamp . "2012-07-26") (notes . "(\"if you have a problem and i don't have that problem, then it's YOUR FAULT. it is not a problem with the software. all you have to do is be like me.\")")) nil]
["Beagle" nil nil nil nil nil nil ((timestamp . "2006-08-04") (notes . "(\" a search tool that ransacks your personal information space to find whatever you're looking for.\" \"http://beaglewiki.org/Main_Page\")")) nil]
["beam" nil nil nil nil nil nil ((timestamp . "2012-05-19") (notes . "(\"the erlang vm\")")) nil]
["beamer" nil nil nil nil nil nil ((timestamp . "2010-10-05") (notes . "(\"http://www.ctan.org/tex-archive/macros/latex/contrib/beamer/doc/beameruserguide.pdf\" \"at http://bitbucket.org/rivanvx/beamer/wiki/Home\")")) nil]
["beamerthemes" nil nil nil nil nil nil ((timestamp . "2010-05-25") (notes . "(\"http://deic.uab.es/~iblanes/beamer_gallery/\")")) nil]
["bears" nil nil nil nil nil nil ((timestamp . "2010-06-14") (notes . "(\"failed dogs! The polar kind actively hunt humans!\" \"men who made a choice\")")) nil]
["beat-off" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"not something you should be doing on this channel, yates\")")) nil]
["beatallica" nil nil nil nil nil nil ((timestamp . "2005-10-11") (notes . "(\"http://beatallica.org/\")")) nil]
["beatsAndSubHarmonics" nil nil nil nil nil nil ((timestamp . "2003-02-24") (notes . "(\"http://www.arcavia.com/kyle/Equations/Beats&SubHarm.html\" \"for example (cos (x*3/pi ) + sin (x )) *100\")")) nil]
["beauregards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho SECEDE HIM!!\")")) nil]
["beautyof" nil nil nil nil nil nil ((timestamp . "2008-11-28") (notes . "(\"http://nitens.org/taraborelli/latex\")")) nil]
["beaver" nil nil nil nil nil nil ((timestamp . "2012-02-07") (notes . "(\"an Early AdVanced EditoR, http://beaver-editor.sourceforge.net/\" \"designed to be light-weight, modular, and stylish\")")) nil]
["because" nil nil nil nil nil nil ((timestamp . "2011-07-18") (notes . "(\"noecho Because why\")")) nil]
["BEDO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Burst Extended Data Output\")")) nil]
["bee-lisp" nil nil nil nil nil nil ((timestamp . "2012-07-03") (notes . "(\"http://www.beelisp.com/\" \"https://groups.google.com/d/topic/comp.lang.lisp/e369PNAdDo4/discussion\" \"a lisp that makes arc look good\")")) nil]
["bee-mode" nil nil nil nil nil nil ((timestamp . "2009-04-06") (notes . "(\"an IDE for bigloo, a scheme compiler\" \"http://pauillac.inria.fr/cdrom/www/bigloo/manual/bigloo-23.html\")")) nil]
["beef" nil nil nil nil nil nil ((timestamp . "2012-05-09") (notes . "(\"lisp (format \\\"/me serves %s some brisket\\\"(if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["beej" nil nil nil nil nil nil ((timestamp . "2012-02-24") (notes . "(\"see beej's guide to network programming, see http://beej.us/guide/bgnet/\")")) nil]
["beep" nil nil nil nil nil nil ((timestamp . "2010-08-11") (notes . "(\"noecho ding (quod vide)\")")) nil]
["beer-data" nil nil nil nil nil nil ((timestamp . "2012-11-14") (notes . "(\"Kronenbourg\" \"Newcastle Brown Ale\" \"Pilsner Urquell\" \"Radegast\" \"Carlsberg\" \"Tuborg\" \"Guinness\" \"Heineken\" \"Hansa\" \"Budweiser\" \"Molson\" \"Labatts Blue\" \"Stella Artois\" \"Tennent's\" \"Vestfyen Classic\" \"Old Style Pilsner\" \"Sam Adams\" \"Rolling Rock\" \"Coors Light\" \"Amstel Light\" \"Corona Extra\" \"Michelob Ultra\" \"Bass Ale\" \"Harp Lager\" \"Guiness Stout\" \"O'Douls\" \"Foster's\" \"Grolsch\" \"Thetford Forest Mild\" \"Stone Smoked Porter\" \"Peppermint Schnapps\" \"Warsteiner\" \"Chimay Grande Reserve\" \"Sagres\" \"SuperBock\" \"Moose Drool\" \"Germania\" \"Samuel Smith's Oatmeal Stout\" \"Corsendonk\" \"Schoefferhofer\" \"Black Butte Porter\" \"Mississippi Mud\" \"Skol\" \"Kaiser\" \"Bitburger\" \"Quilmes\" \"Elysian Pumpkin Ale\" \"Samichlaus\" \"Oettinger\" \"generic piss-water\" \"Samuel Smiths Imperial Stout\" \"De Dolle Stille Nacht Reserva\" \"Orval\" \"Duvel\" \"Diebels\" \"Lagunitas IPA\" \"Picaroons Dooryard\" \"\\\"lemonade\\\"\" \"Magners\")")) nil]
["bees" nil nil nil nil nil nil ((timestamp . "2011-09-19") (notes . "(\"flying insects famous for pollinating plants, producing honey, and stinging sadistic kids who smash beehives.\")")) nil]
["beets" nil nil nil nil nil nil ((timestamp . "2012-11-13") (notes . "(\"http://beets.radbox.org/\")")) nil]
["befunge" nil nil nil nil nil nil ((timestamp . "2013-10-28") (notes . "(\"a stack-based, reflective, esoteric programming language. It differs from conventional languages in that programs are arranged on a two-dimensional grid.\")")) nil]
["Begree" nil nil nil nil nil nil ((timestamp . "2004-12-27") (notes . "(\"64 degrees\")")) nil]
["beiber" nil nil nil nil nil nil ((timestamp . "2013-05-07") (notes . "(\"a vi lover\")")) nil]
["belh" nil nil nil nil nil nil ((timestamp . "2008-05-15") (notes . "(\"sense1\" \"sense2\")")) nil]
["believes" nil nil nil nil nil nil ((timestamp . "2013-10-08") (notes . "(\"lisp (upcase (format \\\"this is what %s actually believes!\\\" (if lispargs (stringify-symbol-list lispargs) nick)))\")")) nil]
["belito" nil nil nil nil nil nil ((timestamp . "2006-06-13") (notes . "(\"identify belito\")")) nil]
["belittle" nil nil nil nil nil nil ((timestamp . "2013-02-25") (notes . "(\"lisp (flame nick)\")")) nil]
["bender" nil nil nil nil nil nil ((timestamp . "2003-06-13") (notes . "(\"a character from the popular Matt Groening series, Futurama.\" \"No match for our own fsbot!\" \"GET -e slashdot.org | egrep -i bender\\\\|fry\")")) nil]
["ber" nil nil nil nil nil nil ((timestamp . "2014-01-23") (notes . "(\"bit error rate\")")) nil]
["bertisevil" nil nil nil nil nil nil ((timestamp . "2005-12-22") (notes . "(\"http://www.bertisevil.tv\")")) nil]
["beryl" nil nil nil nil nil nil ((timestamp . "2007-01-26") (notes . "(\"a combined window manager and composite manager written in C using OpenGL to provide acceleration.\")")) nil]
["bespin" nil nil nil nil nil nil ((timestamp . "2009-06-19") (notes . "(\"an open, extensible web-based framework for code editing that aims to increase developer productivity, enable compelling user experiences, and promote the use of open standards.\")")) nil]
["best" nil nil nil nil nil nil ((timestamp . "2014-02-07") (notes . "(\"Use what fits *you* best\")")) nil]
["bestof" nil nil nil nil nil nil ((timestamp . "2012-02-10") (notes . "(\"lisp (describe (random-choose-term \\\"bestof-list\\\"))\")")) nil]
["bestof-list" nil nil nil nil nil nil ((timestamp . "2013-06-17") (notes . "(\"elnode\" \"deldo\" \"nyan-mode\" \"gneve\" \"3dmaze\" \"pinkbliss\" \"xwem\" \"svg-clock\" \"fsbot\" \"clippy\" \"eww\")")) nil]
["beta" nil nil nil nil nil nil ((timestamp . "2013-09-23") (notes . "(\"noecho values of β will give rise to dom!\")")) nil]
["better" nil nil nil nil nil nil ((timestamp . "2013-08-13") (notes . "(\"worse.\")")) nil]
["better-defaults" nil nil nil nil nil nil ((timestamp . "2013-08-29") (notes . "(\"https://github.com/technomancy/better-defaults\" \"ido (see also C-h v ido-enable-flex-matching and C-h v ido-mode) or iswitchb\" \"(tool-bar-mode -1) (menu-bar-mode -1) (scroll-bar-mode -1)\" \"(require 'uniquify) and (setq uniquify-buffer-name-style 'forward)\" \"(setq-default indent-tabs-mode nil)\" \"(setq-default save-place t) (require 'saveplace)\" \"(global-set-key (kbd \\\"M-/\\\") 'hippie-expand)\" \"(global-set-key (kbd \\\"C-x C-b\\\") 'ibuffer)\" \"(setq apropos-do-all t)\" \"(setq async-shell-command-buffer 'new-buffer)\" \"(winner-mode 1)\" \"(add-hook 'ibuffer-mode-hook 'ibuffer-auto-update)\" \"not a starter-kit of any kind. What gave you that crazy idea\" \"(require 'misc) + (global-set-key (kbd \\\"M-z\\\") 'zap-up-to-char)\")")) nil]
["better-defaults.el" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"a package containing fixes passed from generation to generation in fsbot factoids\" \"https://github.com/technomancy/better-defaults and on marmalade\")")) nil]
["better-technical-argument" nil nil nil nil nil nil ((timestamp . "2014-01-23") (notes . "(\"noecho It's true. I saw it on TV.\")")) nil]
["betterdefaults" nil nil nil nil nil nil ((timestamp . "2013-04-07") (notes . "(\"redirect better-defaults\")")) nil]
["betterdefaults-el" nil nil nil nil nil nil ((timestamp . "2013-07-23") (notes . "(\"redirect better-defaults 13\")")) nil]
["bettersalespitch" nil nil nil nil nil nil ((timestamp . "2012-09-13") (notes . "(\"noecho Let's go out to an expensed, 4-martini lunch and then sign the contracts.\")")) nil]
["bf" nil nil nil nil nil nil ((timestamp . "2004-08-20") (notes . "(\"probably brainfuck\")")) nil]
["bf-in-bf" nil nil nil nil nil nil ((timestamp . "2004-03-25") (notes . "(\"at http://www.hevanet.com/cristofd/brainfuck/dbfi.b\")")) nil]
["BFD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Big Fucking Deal\")")) nil]
["BFF" nil nil nil nil nil nil ((timestamp . "2011-02-23") (notes . "(\"Best Friends Forever\")")) nil]
["bfn" nil nil nil nil nil nil ((timestamp . "2004-03-22") (notes . "(\"noecho Bye for Now\")")) nil]
["bgex" nil nil nil nil nil nil ((timestamp . "2011-10-13") (notes . "(\"http://umiushi.org/~wac/bgex/\")")) nil]
["BGP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Border Gateway Protocol\")")) nil]
["BHL" nil nil nil nil nil nil ((timestamp . "2003-02-10") (notes . "(\"redirect BhlMode\")")) nil]
["BIAB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Back In A Bit\")")) nil]
["BIAF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Back In A Few\")")) nil]
["BIALW" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Back In A Little While\")")) nil]
["BIAS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Back In A Second\")")) nil]
["BIAW" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Back In A While\")")) nil]
["biber" nil nil nil nil nil nil ((timestamp . "2011-03-18") (notes . "(\"http://biblatex-biber.sourceforge.net/\" \"http://mirror.ctan.org/biblio/biber/biber.pdf\")")) nil]
["biblatex" nil nil nil nil nil nil ((timestamp . "2016-05-31") (notes . "(\"a comprehensive reimplementation of the bibliographic facilities of LaTeX, with better unicode handling, more types of items and easier style generation: http://ctan.org/pkg/biblatex [doc: http://tinyurl.com/biblatex-doc]\")")) nil]
["bible" nil nil nil nil nil nil ((timestamp . "2013-05-18") (notes . "(\"a true book\")")) nil]
["bibliography" nil nil nil nil nil nil ((timestamp . "2012-05-30") (notes . "(\"http://stackoverflow.com/questions/2503555/using-latex-how-can-i-have-a-list-of-references-at-the-end-of-each-section\")")) nil]
["bibtex" nil nil nil nil nil nil ((timestamp . "2012-01-17") (notes . "(\"noecho Why not use biblatex instead?\")")) nil]
["bibtex8" nil nil nil nil nil nil ((timestamp . "2016-05-31") (notes . "(\"an enhanced portable C version of bibtex. If you find yourself discontented by bibtex rather go to biblatex and biber directly\")")) nil]
["BICBW" nil nil nil nil nil nil ((timestamp . "2004-07-29") (notes . "(\"But I Could Be Wrong\")")) nil]
["bicycle" nil nil nil nil nil nil ((timestamp . "2006-08-11") (notes . "(\"http://bicyclerepair.sourceforge.net/\")")) nil]
["bieber" nil nil nil nil nil nil ((timestamp . "2013-08-06") (notes . "(\"http://www.loweringthebar.net/2013/05/bieber-monkey.html\")")) nil]
["big-bang" nil nil nil nil nil nil ((timestamp . "2012-03-14") (notes . "(\"noecho big-bada-boom\")")) nil]
["bigcenter" nil nil nil nil nil nil ((timestamp . "2014-04-23") (notes . "(\"e.g. http://www.grappa.univ-lille3.fr/FAQ-LaTeX/8.20.html\")")) nil]
["bigloo" nil nil nil nil nil nil ((timestamp . "2006-03-25") (notes . "(\"a Scheme-to-C, Scheme-to-.NET and Scheme-to-Java compiler. It is not just a compiler: Bigloo features an explicit type system which improves the readability and debugging of code. Bigloo is a good Scheme implementation if you are looking to write numerical applications\")")) nil]
["bijur" nil nil nil nil nil nil ((timestamp . "2004-05-05") (notes . "(\"http://bijur.de\")")) nil]
["bikeshedding" nil nil nil nil nil nil ((timestamp . "2010-07-16") (notes . "(\"when people argue about minor points because they feel they understand them well while they leave major issues alone because they know less about the complicated parts\" \"http://www.bikeshed.org\" \"http://635688.bikeshed.org/\" \"NO! it's http://f5f5dc.bikeshed.org/\")")) nil]
["bind" nil nil nil nil nil nil ((timestamp . "2011-03-04") (notes . "(\"to edit bind9 zone files, see <zone-mode>\")")) nil]
["bind-key" nil nil nil nil nil nil ((timestamp . "2013-06-21") (notes . "(\"a simple way to manage personal keybindings at https://github.com/jwiegley/use-package/blob/master/bind-key.el\" \"see also ,CategoryKeys\")")) nil]
["bindat" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"a library for byte unpacking and packing in elisp.\")")) nil]
["binding" nil nil nil nil nil nil ((timestamp . "2010-07-22") (notes . "(\"redirect keybindings\")")) nil]
["bindings" nil nil nil nil nil nil ((timestamp . "2010-07-22") (notes . "(\"redirect keybindings\")")) nil]
["bing" nil nil nil nil nil nil ((timestamp . "2011-02-03") (notes . "(\"a person who dislikes the unnecessary use of his name in irc conversations\" \"a person who reads documentation\" \"at least as awesome as google search\")")) nil]
["binute" nil nil nil nil nil nil ((timestamp . "2004-12-27") (notes . "(\"64 seconds\")")) nil]
["BIOS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Basic Input/Output System\")")) nil]
["bip" nil nil nil nil nil nil ((timestamp . "2013-09-19") (notes . "(\"another IRC proxy\")")) nil]
["bird" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"THE BIRD IS THE WORD\" \"http://www.youtube.com/watch?v=2WNrx2jq184\" \"a birdy\")")) nil]
["bitbucket" nil nil nil nil nil nil ((timestamp . "2013-12-14") (notes . "(\"a github clone\" \"the project hosting service you go to when you get banned from github for abuse\")")) nil]
["bitcoin" nil nil nil nil nil nil ((timestamp . "2012-06-26") (notes . "(\"Stallman on bitcoin: http://bitcoinmedia.com/stallman-likes-bitcoin/\")")) nil]
["bitkeeper" nil nil nil nil nil nil ((timestamp . "2005-10-20") (notes . "(\"a revision control system. It is currently non-free, both in the libre and beer senses\" \"http://www.gnu.org/philosophy/mcvoy.html\")")) nil]
["bitstreamverasans" nil nil nil nil nil nil ((timestamp . "2006-07-21") (notes . "(\"an anti-aliased TTF http://ftp.gnome.org/pub/GNOME/sources/ttf-bitstream-vera/1.10/\")")) nil]
["biz" nil nil nil nil nil nil ((timestamp . "2013-07-04") (notes . "(\"noecho \\\"The Internet; Serious business.\\\"\")")) nil]
["bkr" nil nil nil nil nil nil ((timestamp . "2008-04-03") (notes . "(\"redirect browse-kill-ring\")")) nil]
["bkuhn" nil nil nil nil nil nil ((timestamp . "2012-09-12") (notes . "(\"Bradley Kuhn first executive director of the FSF\")")) nil]
["BL" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"Borderlands -- a 2009 loot-whoring FPS/RPG from gearbox\")")) nil]
["BL2" nil nil nil nil nil nil ((timestamp . "2012-09-21") (notes . "(\"Borderlands 2 -- a 2012 loot-whoring FPS/RPG from gearbox\")")) nil]
["blackboard" nil nil nil nil nil nil ((timestamp . "2016-02-03") (notes . "(\"a demon­stra­tion of var­i­ous black­board bold type­faces avail­able for TeX (bbm, bbold, dou­ble­stroke, and msbm), in­clud­ing a PostScript file to pre­view them: http://www.ctan.org/pkg/blackboard\")")) nil]
["blaggards" nil nil nil nil nil nil ((timestamp . "2013-05-26") (notes . "(\"noecho DISPARAGE HIM!!\")")) nil]
["blahblahblah" nil nil nil nil nil nil ((timestamp . "2012-11-29") (notes . "(\"lisp (format \\\"hi %s\\\" nick)\")")) nil]
["blank" nil nil nil nil nil nil ((timestamp . "2012-02-08") (notes . "(\"this entry intentionally left blank\")")) nil]
["blas" nil nil nil nil nil nil ((timestamp . "2011-06-24") (notes . "(\"Basic Linear Algebra System\")")) nil]
["blaspheme" nil nil nil nil nil nil ((timestamp . "2007-10-16") (notes . "(\"noecho That fish was good enough for יהוה!\")")) nil]
["blasters" nil nil nil nil nil nil ((timestamp . "2012-12-15") (notes . "(\"noecho Pew Pew Pew!\")")) nil]
["BLAZEMONGER" nil nil nil nil nil nil ((timestamp . "2007-04-16") (notes . "(\"http://www.blazemonger.com/BM/Articles/01_BLAZEMONGER\")")) nil]
["bleep" nil nil nil nil nil nil ((timestamp . "2008-08-18") (notes . "(\"noecho bloop\")")) nil]
["bleh" nil nil nil nil nil nil ((timestamp . "2011-12-19") (notes . "(\"a\" \"b\" \"c\")")) nil]
["Blender" nil nil nil nil nil nil ((timestamp . "2006-07-16") (notes . "(\"the open source software for 3D modeling, animation, rendering, post-production, interactive creation and playback. Available for all major operating systems under the GNU General Public License.\" \"http://www.blender.org\")")) nil]
["bling" nil nil nil nil nil nil ((timestamp . "2013-11-24") (notes . "(\"noecho blong\")")) nil]
["blink-cursor-interval" nil nil nil nil nil nil ((timestamp . "2005-04-06") (notes . "(\"(setq blink-cursor-interval 0.6)\")")) nil]
["blip" nil nil nil nil nil nil ((timestamp . "2003-10-17") (notes . "(\"blip, blip, blip\")")) nil]
["blipp" nil nil nil nil nil nil ((timestamp . "2007-07-28") (notes . "(\"Black Lesbians In Positions of Power\")")) nil]
["bliss" nil nil nil nil nil nil ((timestamp . "2011-10-11") (notes . "(\"ignorance\")")) nil]
["blizzards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho SNOW HIM IN!!\")")) nil]
["bloat" nil nil nil nil nil nil ((timestamp . "2012-07-16") (notes . "(\"http://pastebin.ca/2171665\")")) nil]
["BLOB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Binary Large Object\")")) nil]
["blogs" nil nil nil nil nil nil ((timestamp . "2007-06-27") (notes . "(\"http://mama.indstate.edu/users/bones/WhyIHateWebLogs.html\")")) nil]
["bloop" nil nil nil nil nil nil ((timestamp . "2008-08-18") (notes . "(\"noecho bleep\")")) nil]
["blorg.el" nil nil nil nil nil nil ((timestamp . "2008-05-17") (notes . "(\"redirect blorg\")")) nil]
["blosxom" nil nil nil nil nil nil ((timestamp . "2003-09-23") (notes . "(\"a file-based blogger\" \"at http://www.blosxom.com/\")")) nil]
["bloup" nil nil nil nil nil nil ((timestamp . "2003-10-08") (notes . "(\"noecho blop\")")) nil]
["blow-me" nil nil nil nil nil nil ((timestamp . "2012-04-22") (notes . "(\"redirect blowjob\")")) nil]
["blowhards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"DABBLE HIM!!\")")) nil]
["blueray" nil nil nil nil nil nil ((timestamp . "2006-12-16") (notes . "(\"a stupid, fucking thing that whoever invented it, goes to hell by tomorrow!\")")) nil]
["blueroom" nil nil nil nil nil nil ((timestamp . "2006-06-17") (notes . "(\"noecho You actually believe in the blue room? I've never seen one before...\")")) nil]
["blunt" nil nil nil nil nil nil ((timestamp . "2013-01-18") (notes . "(\"redirect spliff\")")) nil]
["BMF" nil nil nil nil nil nil ((timestamp . "2003-07-13") (notes . "(\"an acronym for the Bayesian Mail Filter\" \"http://sourceforge.net/projects/bmf/\")")) nil]
["BMP" nil nil nil nil nil nil ((timestamp . "2010-05-28") (notes . "(\"the Basic Multilingual Plane of Unicode, the first 2**16 code points.\")")) nil]
["bmpx" nil nil nil nil nil nil ((timestamp . "2007-07-27") (notes . "(\"a media player, found at http://bmpx.beep-media-player.org/site/BMPx_Homepage\")")) nil]
["BNF" nil nil nil nil nil nil ((timestamp . "2012-03-28") (notes . "(\"Backus-Naur Form <http://wikipedia.org/wiki/Backus-Naur_Form>\")")) nil]
["BO" nil nil nil nil nil nil ((timestamp . "2008-08-13") (notes . "(\"Body Odor, a euphemism for the smell you get when you walk into an un airconditioned BarCamp room 17 hours into it.\")")) nil]
["boar" nil nil nil nil nil nil ((timestamp . "2013-03-16") (notes . "(\"impales anybody with a programming language in his name\")")) nil]
["boat" nil nil nil nil nil nil ((timestamp . "2010-04-28") (notes . "(\"http://www.youtube.com/watch?v=R7yfISlGLNU\" \"Oh, look! There's the Lonely Island and T-Pain!\")")) nil]
["BOATILAS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Bend Over And Take It Like A Slut\")")) nil]
["bob" nil nil nil nil nil nil ((timestamp . "2011-07-08") (notes . "(\"a software fiasco by Microsoft\" \"http://en.wikipedia.org/wiki/Microsoft_Bob\" \"a shame that it was a failure as it was written in lisp\")")) nil]
["bobot++" nil nil nil nil nil nil ((timestamp . "2002-09-04") (notes . "(\"http://unknownlamer.org/code/bobot.html\")")) nil]
["bobracha" nil nil nil nil nil nil ((timestamp . "2013-07-30") (notes . "(\"http://theoatmeal.com/pl/bobcats_thursday/bobracha\")")) nil]
["bocm" nil nil nil nil nil nil ((timestamp . "2004-07-08") (notes . "(\"Boring Old C Mode\")")) nil]
["bof" nil nil nil nil nil nil ((timestamp . "2013-02-03") (notes . "(\"a Birds of a Feather: a conference term for a meeting of like minded people.\")")) nil]
["BOGAHICA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Bend Over, Grab Ankles, Here It Comes Again\")")) nil]
["bogofilter" nil nil nil nil nil nil ((timestamp . "2003-01-16") (notes . "(\"a fast Bayesian spam filter along the lines suggested by Paul Graham in his article \\\"A Plan For Spam\\\"\" \"at http://www.tuxedo.org/~esr/bogofilter/\" \"http://my.gnus.org/Lisp/1042672448\")")) nil]
["BOHICA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Bend Over Here It Comes Again\")")) nil]
["bojohan-1" nil nil nil nil nil nil ((timestamp . "2003-06-16") (notes . "(\"lisp (+ 3 5)\")")) nil]
["bojohan-2" nil nil nil nil nil nil ((timestamp . "2003-06-16") (notes . "(\"lisp (lambda () (+ 3 4))\")")) nil]
["bojohan-rr" nil nil nil nil nil nil ((timestamp . "2003-06-15") (notes . "(\"lisp (if RR-f (funcall RR-f) (progn (setq RR-f (lexical-let ((RR-bullet (random 6))) (lambda () (if (= RR-bullet 5) (progn (setq RR-bullet (random 6)) (describe \\\"rr-bang\\\")) (progn (incf RR-bullet) (describe \\\"rr-click\\\")))))) (RR))))\")")) nil]
["bol" nil nil nil nil nil nil ((timestamp . "2011-11-22") (notes . "(\"beginning of line\")")) nil]
["BOM" nil nil nil nil nil nil ((timestamp . "2012-05-08") (notes . "(\"Byte Order Mark (see unicode)\" \"a Bill of Materials; in OS X, see 'man bom'.\")")) nil]
["bombs" nil nil nil nil nil nil ((timestamp . "2006-04-11") (notes . "(\"at http://www.angryflower.com/bombso.gif\")")) nil]
["bones" nil nil nil nil nil nil ((timestamp . "2010-04-13") (notes . "(\"noecho dammit, jim! i'm a bot not a surgeon!\")")) nil]
["bongards" nil nil nil nil nil nil ((timestamp . "2013-04-24") (notes . "(\"noecho PUZZLE HIM!!\")")) nil]
["bonjour" nil nil nil nil nil nil ((timestamp . "2011-07-13") (notes . "(\"at http://www.apple.com/macosx/features/bonjour/\")")) nil]
["bonk" nil nil nil nil nil nil ((timestamp . "2005-04-21") (notes . "(\"lisp (format \\\"/me bonks %s on the head with a rusty iron rod.\\\" nick)\")")) nil]
["boo" nil nil nil nil nil nil ((timestamp . "2010-08-10") (notes . "(\"noecho HISSSSS!!\")")) nil]
["bookmark+" nil nil nil nil nil nil ((timestamp . "2010-11-17") (notes . "(\"redirect bookmark+.el\")")) nil]
["booktabs" nil nil nil nil nil nil ((timestamp . "2011-05-08") (notes . "(\"a LaTeX package and typesetting guide for producing publication-quality tables -- http://mirrors.ctan.org/macros/latex/contrib/booktabs/booktabs.pdf\" \"look how nice booktabs is: http://www.ludd.ltu.se/~mill/latex/\")")) nil]
["boombox" nil nil nil nil nil nil ((timestamp . "2010-04-28") (notes . "(\"http://www.youtube.com/watch?v=8yvEYKRF5IA\" \"A rainbow coalition of dancing\" \"boiled goose\")")) nil]
["booq" nil nil nil nil nil nil ((timestamp . "2005-11-19") (notes . "(\"a laptop sleeve\")")) nil]
["bootstrap" nil nil nil nil nil nil ((timestamp . "2012-06-30") (notes . "(\"http://twitter.github.com/bootstrap/\")")) nil]
["bop" nil nil nil nil nil nil ((timestamp . "2011-11-18") (notes . "(\"buzword-oriented programming\")")) nil]
["borat" nil nil nil nil nil nil ((timestamp . "2013-06-21") (notes . "(\"Wa-wa Wee-wah!\")")) nil]
["bore-science" nil nil nil nil nil nil ((timestamp . "2012-03-14") (notes . "(\"lisp (format \\\"/me takes %s aside and explains in excruciating detail what the difference between a model and a theory is.\\\" (mapconcat 'symbol-name lispargs \\\" \\\"))\")")) nil]
["borg" nil nil nil nil nil nil ((timestamp . "2003-02-15") (notes . "(\"You will be assimilated!\" \"BundesOberstufenRealGymnasium\")")) nil]
["borked" nil nil nil nil nil nil ((timestamp . "2003-02-15") (notes . "(\"jargon for broken\")")) nil]
["boss" nil nil nil nil nil nil ((timestamp . "2006-10-05") (notes . "(\"redirect dad\")")) nil]
["bot" nil nil nil nil nil nil ((timestamp . "2007-06-29") (notes . "(\"robot\")")) nil]
["bot!" nil nil nil nil nil nil ((timestamp . "2011-07-09") (notes . "(\"noecho one bot to rule them all!!! MUHUHUAHAHAHA\")")) nil]
["bot-riffing" nil nil nil nil nil nil ((timestamp . "2012-07-11") (notes . "(\"ijp's shtick\")")) nil]
["botads" nil nil nil nil nil nil ((timestamp . "2010-08-27") (notes . "(\"frowned upon\")")) nil]
["botbug" nil nil nil nil nil nil ((timestamp . "2002-11-28") (notes . "(\"redirect suggestions\")")) nil]
["botbugs" nil nil nil nil nil nil ((timestamp . "2002-11-28") (notes . "(\"redirect suggestions\")")) nil]
["botijo" nil nil nil nil nil nil ((timestamp . "2006-04-01") (notes . "(\"what you smoke to fly\")")) nil]
["botito" nil nil nil nil nil nil ((timestamp . "2002-11-14") (notes . "(\"bunny's pet bot\")")) nil]
["botkill" nil nil nil nil nil nil ((timestamp . "2005-03-10") (notes . "(\"noecho DIE BASTARD, DIE!!!\")")) nil]
["botpoison" nil nil nil nil nil nil ((timestamp . "2005-06-30") (notes . "(\"lisp (random-choose '(\\\"I'm invincible, client.\\\" \\\"I will kill you, HOMO SAPIEN !!!\\\"))\")")) nil]
["botrack" nil nil nil nil nil nil ((timestamp . "2011-07-04") (notes . "(\"noecho /me is feeling stretched a bit thin.\")")) nil]
["bots" nil nil nil nil nil nil ((timestamp . "2015-01-02") (notes . "(\"TeXbot our tex,latex,metapost converting friend hosted by tlhiv and donald-bot the channels memory hosted by kaste. If any of them are down, please notify their hosters!\")")) nil]
["botsack" nil nil nil nil nil nil ((timestamp . "2013-08-30") (notes . "(\"noecho /me admires the burlap decor.\")")) nil]
["botsbuildbots" nil nil nil nil nil nil ((timestamp . "2013-05-10") (notes . "(\"http://www.youtube.com/watch?v=xhv8eNs86nk\")")) nil]
["botshack" nil nil nil nil nil nil ((timestamp . "2012-10-31") (notes . "(\"noecho \\\"Bot shack... ba ba bot shack\\\"\")")) nil]
["botslap" nil nil nil nil nil nil ((timestamp . "2007-03-01") (notes . "(\"noecho You, sir, are a buffoon.\")")) nil]
["botsmack" nil nil nil nil nil nil ((timestamp . "2013-01-07") (notes . "(\"lisp (random-choose '(\\\"/me evades!\\\" \\\"/me NaNa-NaNa-Nah\\\" \\\"/me scratches arm nervously.\\\" \\\"My favourite smack...\\\") '(3 3 1 1))\")")) nil]
["botsmooch" nil nil nil nil nil nil ((timestamp . "2011-10-02") (notes . "(\"redirect love\")")) nil]
["botsnack" nil nil nil nil nil nil ((timestamp . "2011-02-03") (notes . "(\"lisp (random-choose '(\\\"yay!\\\" \\\":)\\\" \\\"/me dances happily\\\" \\\"thank you!\\\" \\\"/me beams\\\" \\\"my favourite snack!\\\"))\")")) nil]
["botsnack!" nil nil nil nil nil nil ((timestamp . "2003-11-15") (notes . "(\"redirect botsnack\")")) nil]
["botsnap" nil nil nil nil nil nil ((timestamp . "2013-08-30") (notes . "(\"noecho No need, I'll break down soon enough on my own.\")")) nil]
["botspank" nil nil nil nil nil nil ((timestamp . "2010-09-30") (notes . "(\"noecho oh, yes, i have been very naughty!\")")) nil]
["botstack" nil nil nil nil nil nil ((timestamp . "2011-05-12") (notes . "(\"noecho /me stands on rudybot's shoulders and puts birny on his head.\")")) nil]
["boulevards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho PAVE HIM!!\")")) nil]
["bouncer" nil nil nil nil nil nil ((timestamp . "2012-09-20") (notes . "(\"http://en.wikipedia.org/wiki/BNC_%28software%29#IRC\" \"nicferrier's shoes-off elisp bouncer - https://github.com/nicferrier/shoes-off\")")) nil]
["bour" nil nil nil nil nil nil ((timestamp . "2004-12-27") (notes . "(\"64 binutes\")")) nil]
["bourne" nil nil nil nil nil nil ((timestamp . "2010-07-29") (notes . "(\"the Bourne shell released by Bell Labs in 1977\" \"scriptable and inspired by Algol68 and C\")")) nil]
["bow" nil nil nil nil nil nil ((timestamp . "2013-11-03") (notes . "(\"noecho /me bows low, hits head on ground\")")) nil]
["boxandpointer" nil nil nil nil nil nil ((timestamp . "2012-12-21") (notes . "(\"for a good writeup of box-and-pointer diagrams, see http://inst.eecs.berkeley.edu/~cs61a/su10/resources/Joshua%20Cantrell%20Notes/4-Box-Pointer.pdf\")")) nil]
["boys" nil nil nil nil nil nil ((timestamp . "2011-02-11") (notes . "(\"noecho keep it professional\")")) nil]
["bpalmerware" nil nil nil nil nil nil ((timestamp . "2008-08-18") (notes . "(\"bowdlerized software\")")) nil]
["brackets" nil nil nil nil nil nil ((timestamp . "2013-08-25") (notes . "(\"() are parentheses. {} are braces. [] are brackets. <> are angle brackets.\")")) nil]
["brains" nil nil nil nil nil nil ((timestamp . "2006-01-17") (notes . "(\"noecho I WANTS YOUUUR BRRRAAAAAAIIINS!!1!!\")")) nil]
["brawndo" nil nil nil nil nil nil ((timestamp . "2010-05-10") (notes . "(\"what plants crave\")")) nil]
["brb" nil nil nil nil nil nil ((timestamp . "2002-11-07") (notes . "(\"be right back\")")) nil]
["breakfast" nil nil nil nil nil nil ((timestamp . "2003-11-20") (notes . "(\"lisp (describe \\\"tea\\\")\")")) nil]
["bremner-yow" nil nil nil nil nil nil ((timestamp . "2013-02-17") (notes . "(\"noecho Zounds! An epistemology of LSD.\")")) nil]
["bremnersnack" nil nil nil nil nil nil ((timestamp . "2013-04-21") (notes . "(\"lisp (say \\\"/me gives bremner something deep fried and smothered in chocolate\\\")\")")) nil]
["brew" nil nil nil nil nil nil ((timestamp . "2011-09-25") (notes . "(\"redirect homebrew\")")) nil]
["bridezilla" nil nil nil nil nil nil ((timestamp . "2005-12-12") (notes . "(\"http://www.wordspy.com/words/bridezilla.asp\" \"http://www.goingbridal.com/ecard/\" \"http://www.newspress.com/weddings/articles/bridezilla.jpg\")")) nil]
["britain-unfix" nil nil nil nil nil nil ((timestamp . "2013-12-30") (notes . "(\"all problems can be solved by hating yourself\")")) nil]
["bro" nil nil nil nil nil nil ((timestamp . "2011-04-27") (notes . "(\"noecho Dude!\")")) nil]
["broadway" nil nil nil nil nil nil ((timestamp . "2013-10-08") (notes . "(\"the GDK Broadway backend offers support for displaying GTK+ applications in a web browser using HTML5 and web sockets, see https://developer.gnome.org/gtk3/stable/gtk-broadway.html\")")) nil]
["brofist" nil nil nil nil nil nil ((timestamp . "2010-08-26") (notes . "(\"http://jordi.platinum.linux.pl/piccies/brotherhood.jpg\")")) nil]
["brogrammer" nil nil nil nil nil nil ((timestamp . "2013-01-14") (notes . "(\"a sexist programmer\" \"http://edition.cnn.com/2012/05/07/tech/web/brogrammers/index.html\")")) nil]
["broken" nil nil nil nil nil nil ((timestamp . "2011-04-04") (notes . "(\"http://www.youtube.com/watch?v=5VJT3D_RzJo\")")) nil]
["brokensaints" nil nil nil nil nil nil ((timestamp . "2004-11-16") (notes . "(\"a flash animation comicbook (similar to the little ninja): http://www.brokensaints.com/\")")) nil]
["broussards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho ÉTOUFFÉE HIM!!\")")) nil]
["brownies" nil nil nil nil nil nil ((timestamp . "2011-10-12") (notes . "(\"a variety of faerie known for their predilection towards cereal and honey, and can be most helpful with house work.\")")) nil]
["browse-kill-ring" nil nil nil nil nil nil ((timestamp . "2004-07-10") (notes . "(\"redirect BrowseKillRing\")")) nil]
["brucios-law" nil nil nil nil nil nil ((timestamp . "2012-05-30") (notes . "(\"if it doesn't work as you expect in the first ten minutes, it's a bug in the language.\")")) nil]
["bryar" nil nil nil nil nil nil ((timestamp . "2006-01-03") (notes . "(\"a blogging system discussed at http://www.perl.com/pub/a/2003/12/18/bryar.html\" \"blosxom may not be as fancy, but it's darn easy to set up\")")) nil]
["bs" nil nil nil nil nil nil ((timestamp . "2011-12-13") (notes . "(\"redirect backspace\")")) nil]
["bs-show" nil nil nil nil nil nil ((timestamp . "2003-10-14") (notes . "(\"redirect BufferSelection\")")) nil]
["bs6008" nil nil nil nil nil nil ((timestamp . "2012-09-09") (notes . "(\"the British standard for a cup of tea\" \"known as ISO 3103\" \"the winner of the Ig Nobel Prize for Literature in 1999\")")) nil]
["BSA" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"https://secure.wikimedia.org/wikipedia/en/wiki/Business_Software_Alliance\" \"the Broadcasting Standards Authority in New Zealand\")")) nil]
["bsd" nil nil nil nil nil nil ((timestamp . "2011-07-16") (notes . "(\"kickass\" \"usually void of GNU tools\" \"superior to GNU/Linux\" \"Berkley Software Distribution, a UNIX system which is Open Source. It's older than GNU/Linux, and in some parts quite different.\" \"inferior to GNU/Linux\" \"would be the reigning champion if it it wasn't for the AT&T lawsuit that delayed its worldwide adoption\" \"a free operating system, but uses a license that is not copyleft\" \"the operating system of choice for lispertarians everywhere (who actually all use OSX)\" \"isn't relevant anymore\")")) nil]
["BSG" nil nil nil nil nil nil ((timestamp . "2007-05-02") (notes . "(\"Battlestar Galactica\")")) nil]
["bsh" nil nil nil nil nil nil ((timestamp . "2003-01-03") (notes . "(\"an abbreviation for the bean shell (Java stuff)\")")) nil]
["bsod" nil nil nil nil nil nil ((timestamp . "2005-06-15") (notes . "(\"blue screen of death -- the stuff you see when windows crashes\")")) nil]
["bt" nil nil nil nil nil nil ((timestamp . "2006-04-17") (notes . "(\"redirect bittorrent\")")) nil]
["BtAF" nil nil nil nil nil nil ((timestamp . "2006-10-30") (notes . "(\"Bob the Angry Flower (http://angryflower.com)\")")) nil]
["BTC" nil nil nil nil nil nil ((timestamp . "2012-10-25") (notes . "(\"bitcoin\")")) nil]
["btdt" nil nil nil nil nil nil ((timestamp . "2004-11-25") (notes . "(\"Been There, Done That\")")) nil]
["btdtbtts" nil nil nil nil nil nil ((timestamp . "2006-01-18") (notes . "(\"\\\"been there, done that, bought the t-shirt\\\"\")")) nil]
["BTW" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for By The Way\")")) nil]
["bub-n-bros" nil nil nil nil nil nil ((timestamp . "2006-03-06") (notes . "(\"a new striking n-multiplayer crazy clone of the famous Bubble Bobble game!!!\" \"http://bub-n-bros.sourceforge.net\")")) nil]
["bubbles" nil nil nil nil nil nil ((timestamp . "2012-07-15") (notes . "(\"noecho no offense, son, but that's some weak-ass thinking. you equivocating like a motherfucker.\")")) nil]
["bubblet" nil nil nil nil nil nil ((timestamp . "2003-05-22") (notes . "(\"at http://www.gelatinous.com/pld/bubblet.html\")")) nil]
["bubnbros" nil nil nil nil nil nil ((timestamp . "2006-03-06") (notes . "(\"redirect bub-n-bros\")")) nil]
["Buckfast" nil nil nil nil nil nil ((timestamp . "2003-06-19") (notes . "(\"The name tonic wine does not imply health-giving or medicinal properties\")")) nil]
["bucks" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"http://gnu.org/help/gnu-bucks.html The GNU Bucks Money!\")")) nil]
["bue" nil nil nil nil nil nil ((timestamp . "2010-04-17") (notes . "(\"Bad User Error\")")) nil]
["buffer-access-fontify-functions" nil nil nil nil nil nil ((timestamp . "2011-12-20") (notes . "(\"to set this on the text they've processed\")")) nil]
["bufferausterity" nil nil nil nil nil nil ((timestamp . "2012-03-09") (notes . "(\"false economy\" \"keeping you from getting work done\" \"met with ,MidnightMode\")")) nil]
["buffercycle" nil nil nil nil nil nil ((timestamp . "2002-11-18") (notes . "(\"redirect cyclebuffer\")")) nil]
["BufferFaceMode" nil nil nil nil nil nil ((timestamp . "2010-07-27") (notes . "(\"redirect FacesPerBuffer\")")) nil]
["bufferlocals" nil nil nil nil nil nil ((timestamp . "2012-07-19") (notes . "(\"variables local to a single buffer, use setq-default to set the default value.\" \"changes to the default value will not effect any currently open buffers, since they are using their local value\" \"seee also BufferLocalVariable\")")) nil]
["BugLouse" nil nil nil nil nil nil ((timestamp . "2012-08-31") (notes . "(\"possibly a sophist\" \"someone who is rarely coherent\" \"possibly related to homie\")")) nil]
["Buglouse:" nil nil nil nil nil nil ((timestamp . "2012-09-05") (notes . "(\"listening..\")")) nil]
["bugmenot" nil nil nil nil nil nil ((timestamp . "2004-12-01") (notes . "(\"http://bugmenot.com, solution for annoying subscription-demanding sites out there\" \"best thing since sliced bread, probably\")")) nil]
["bugroff" nil nil nil nil nil nil ((timestamp . "2010-06-04") (notes . "(\"http://web.archive.org/web/www.geocities.com/SoHo/Cafe/5947/bugroff.html\")")) nil]
["BugsEverywhere" nil nil nil nil nil nil ((timestamp . "2007-06-26") (notes . "(\"a distributed BTS <http://panoramicfeedback.com/opensource/>\")")) nil]
["bullet_points" nil nil nil nil nil nil ((timestamp . "2004-03-04") (notes . "(\"\\\\begin{itemize} \\\\item item1 \\\\item item2 \\\\end{itemize}\")")) nil]
["BumpyCase" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.etrumeus.com/ferment/BumpyCase\")")) nil]
["bung" nil nil nil nil nil nil ((timestamp . "2010-07-01") (notes . "(\"thunked.\")")) nil]
["bunnie" nil nil nil nil nil nil ((timestamp . "2013-07-29") (notes . "(\"bunnie huang, hardware hacker extraordinaire, author of _Hacking the Xbox_ and creator of the Chumby, see http://www.bunniestudios.com/ and http://en.wikipedia.org/wiki/Andrew_Huang\")")) nil]
["bunny" nil nil nil nil nil nil ((timestamp . "2004-07-27") (notes . "(\"hot\" \"at http://www.hurd-bunny.tk\")")) nil]
["burn" nil nil nil nil nil nil ((timestamp . "2005-07-30") (notes . "(\"lisp (lambda (victim) (format (\\\"burns %s\\\" victim)))\")")) nil]
["bus-scheme" nil nil nil nil nil nil ((timestamp . "2008-08-15") (notes . "(\"a Scheme interpreter written while riding the bus\" \"http://github.com/technomancy/bus-scheme\")")) nil]
["business" nil nil nil nil nil nil ((timestamp . "2011-04-19") (notes . "(\"noecho You can go about your business.\")")) nil]
["bussproofs" nil nil nil nil nil nil ((timestamp . "2015-09-17") (notes . "(\"a package that al­lows the con­struc­tion of proof trees in the style of the se­quent cal­cu­lus and many other proof sys­tems available from https://www.ctan.org/pkg/bussproofs?lang=en\")")) nil]
["buster" nil nil nil nil nil nil ((timestamp . "2009-04-25") (notes . "(\"http://en.wikipedia.org/wiki/Buster_(offby1's_cat)\")")) nil]
["busybox" nil nil nil nil nil nil ((timestamp . "2003-06-11") (notes . "(\"http://busybox.net/\" \"a multi-call binary that combines many common Unix utilities into a single executable.\" \"basically a collection of statically linked utils\" \"You can use /bin/busybox --install to install BusyBox to the root directory (YOU DO NOT WANT TO DO THIS  ON YOUR DEBIAN SYSTEM!).\")")) nil]
["button" nil nil nil nil nil nil ((timestamp . "2012-05-14") (notes . "(\"pointing devices have buttons, keyboards have keys\")")) nil]
["buzz" nil nil nil nil nil nil ((timestamp . "2012-04-28") (notes . "(\"noecho /me spouts random buzzwords in hopes of hiding the fact that it has no idea what its talking about.\")")) nil]
["buzzards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho PECK AT HIS DEAD FLESH!!\")")) nil]
["BVSM" nil nil nil nil nil nil ((timestamp . "2006-09-20") (notes . "(\"Bitstream Vera Sans Mono\" \"try DejaVu Sans Mono instead if you need IPA, Greek or Cyrillic characters.\")")) nil]
["byobu" nil nil nil nil nil nil ((timestamp . "2010-09-06") (notes . "(\"a STUPID wrapper for GNU Screen that makes it \\\"user friendly\\\". Introduced and perpetuated by Ubuntu\")")) nil]
["byte-compile" nil nil nil nil nil nil ((timestamp . "2004-10-20") (notes . "(\"to compile all files, M-x byte-recompile-directory\" \"to speed up loading and execution times\")")) nil]
["byte-compile-file" nil nil nil nil nil nil ((timestamp . "2004-03-10") (notes . "(\"M-x byte-compile-file RET\")")) nil]
["bytecompile" nil nil nil nil nil nil ((timestamp . "2004-04-29") (notes . "(\"C-x d on the dir with the lisp files then: % m \\\\.el$ RET B y\" \"C-u 0 M-x byte-recompile-directory RET <directory> RET\")")) nil]
["ByteMinute" nil nil nil nil nil nil ((timestamp . "2011-10-12") (notes . "(\"256 seconds\")")) nil]
["bytes" nil nil nil nil nil nil ((timestamp . "2012-09-25") (notes . "(\"bytes\")")) nil]
["bytes4all" nil nil nil nil nil nil ((timestamp . "2003-04-08") (notes . "(\"at http://www.bytesforall.org/\" \"a mailing list, where development issues are discussed\" \"lots of IT people from South Asia\")")) nil]
["C#" nil nil nil nil nil nil ((timestamp . "2006-02-28") (notes . "(\"redirect CHash\")")) nil]
["C-" nil nil nil nil nil nil ((timestamp . "2010-11-03") (notes . "(\"redirect ctrl\")")) nil]
["C-)" nil nil nil nil nil nil ((timestamp . "2011-11-03") (notes . "(\"http://support.microsoft.com/kb/967893\")")) nil]
["c-cedilla-gentoo" nil nil nil nil nil nil ((timestamp . "2012-10-27") (notes . "(\"http://forums.gentoo.org/viewtopic-p-3866206.html -solved-\")")) nil]
["c-comment-edit" nil nil nil nil nil nil ((timestamp . "2009-06-19") (notes . "(\"http://www.wonderworks.com/download/c-comment-edit.el\")")) nil]
["C-f" nil nil nil nil nil nil ((timestamp . "2011-01-10") (notes . "(\"In ido-mode, use C-f to enter \\\"old\\\" find-file...\")")) nil]
["C-i" nil nil nil nil nil nil ((timestamp . "2010-07-16") (notes . "(\"usually tab\" \"(global-set-key [?\\\\C-i] ...) and TAB is (global-set-key [tab] ...)\")")) nil]
["c-in-lisp" nil nil nil nil nil nil ((timestamp . "2011-11-26") (notes . "(\"http://www.bitsavers.org/bits/TI/Explorer/zeta-c/\")")) nil]
["C-u" nil nil nil nil nil nil ((timestamp . "2004-04-10") (notes . "(\"redirect UniversalArgument\")")) nil]
["c/d" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"carried down\")")) nil]
["c/f" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"carried forward\")")) nil]
["C2Nethack" nil nil nil nil nil nil ((timestamp . "2003-01-19") (notes . "(\"at http://c2.com/cgi/wiki?NetHack\")")) nil]
["c_ray_c" nil nil nil nil nil nil ((timestamp . "2002-10-09") (notes . "(\"recluse hacker\")")) nil]
["caca" nil nil nil nil nil nil ((timestamp . "2012-05-05") (notes . "(\"an English colloquialism for excrement\")")) nil]
["CAD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Computer-Aided Design\")")) nil]
["cadet" nil nil nil nil nil nil ((timestamp . "2007-01-02") (notes . "(\"Can't Add Doesn't Even Try\")")) nil]
["CADT" nil nil nil nil nil nil ((timestamp . "2013-02-22") (notes . "(\"the Cascade of Attention-Deficit Teenagers model <http://www.jwz.org/doc/cadt.html>\")")) nil]
["cafe" nil nil nil nil nil nil ((timestamp . "2010-12-01") (notes . "(\"\\\"A cafe is a restaurant in which it is socially acceptable to sit alone with a laptop.\\\" --quotemstr\")")) nil]
["cafespot" nil nil nil nil nil nil ((timestamp . "2005-06-12") (notes . "(\"a social guide to independent restaurants and cafes, http://cafespot.net\")")) nil]
["caffeine.el" nil nil nil nil nil nil ((timestamp . "2013-08-14") (notes . "(\"https://github.com/leoliu/caffeine.el\")")) nil]
["cairo" nil nil nil nil nil nil ((timestamp . "2005-11-24") (notes . "(\"2D graphics library with support for multiple output devices. Currently supported output targets include the X Window System, win32, and image buffers. Experimental backends include OpenGL, Quartz, XCB, PostScript and PDF file output.\" \"http://cairographics.org/introduction\" \"a name for Microsoft's OS technology. http://en.wikipedia.org/wiki/Cairo_%28operating_system%29\")")) nil]
["cake" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"delicious\" \"a lie\" \"cake\" \"so deliciously moist\" \"something you can eat if you don't have bread\")")) nil]
["CAL" nil nil nil nil nil nil ((timestamp . "2012-03-15") (notes . "(\"Windows' per-seat / per-core bulk licensing\")")) nil]
["calc" nil nil nil nil nil nil ((timestamp . "2015-07-10") (notes . "(\"a package that allows simple arithmetic in LaTeX commands\" \"See https://www.ctan.org/pkg/calc\")")) nil]
["calc-mode" nil nil nil nil nil nil ((timestamp . "2005-09-10") (notes . "(\"http://www.linuxjournal.com/article/5873\")")) nil]
["calculatebignum" nil nil nil nil nil nil ((timestamp . "2003-12-28") (notes . "(\"179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216\")")) nil]
["calculus" nil nil nil nil nil nil ((timestamp . "2012-01-17") (notes . "(\"(Latin for pebble, pl. calculi) in its most general sense is any method or system of calculation.\" \"see also lambda-calculus\")")) nil]
["calendar" nil nil nil nil nil nil ((timestamp . "2010-02-03") (notes . "(\"a package to typeset calendar and timetable information in latex.\" \"http://ctan.org/tex-archive/help/Catalogue/entries/calendar.html\")")) nil]
["california" nil nil nil nil nil nil ((timestamp . "2007-11-05") (notes . "(\"noecho Burn mother fucker. Burn.\")")) nil]
["can" nil nil nil nil nil nil ((timestamp . "2010-09-21") (notes . "(\"lisp (random-choose (notes \\\"can-data\\\"))\")")) nil]
["can't" nil nil nil nil nil nil ((timestamp . "2013-02-13") (notes . "(\"redirect repro\")")) nil]
["can-data" nil nil nil nil nil nil ((timestamp . "2010-09-21") (notes . "(\"Yes, yes you can.\" \"Si se puede!\")")) nil]
["Can-I" nil nil nil nil nil nil ((timestamp . "2010-09-21") (notes . "(\"redirect can\")")) nil]
["Canada" nil nil nil nil nil nil ((timestamp . "2014-01-16") (notes . "(\"GWB's fault.\")")) nil]
["canadian" nil nil nil nil nil nil ((timestamp . "2008-06-18") (notes . "(\"eh\" \"snogglethorpe\" \"lies!\")")) nil]
["canards" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"noecho DECEIVE HIM!!\")")) nil]
["caned-laughter" nil nil nil nil nil nil ((timestamp . "2012-07-24") (notes . "(\"ha ha ha he he he - hic - ha ha ha ha your my besh mate. ha.\")")) nil]
["cant" nil nil nil nil nil nil ((timestamp . "2013-02-13") (notes . "(\"redirect repro\")")) nil]
["cao" nil nil nil nil nil nil ((timestamp . "2009-02-15") (notes . "(\"noecho test\")")) nil]
["caphuso" nil nil nil nil nil nil ((timestamp . "2002-11-13") (notes . "(\"a stupid bot\")")) nil]
["capitalism" nil nil nil nil nil nil ((timestamp . "2005-03-25") (notes . "(\"the system in which trade and in particular production is predominantly oriented to make profit, not to fulfill demand.\" \"at http://www.capitalism.org/ and http://www.moraldefense.com/\")")) nil]
["captainunderpants" nil nil nil nil nil nil ((timestamp . "2003-06-17") (notes . "(\"http://www.scholastic.com/captainunderpants/home.htm\")")) nil]
["caption" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package that provides many ways to customise the captions in floating environments like figure and table, and cooperates with many other packages: http://ctan.org/pkg/caption\")")) nil]
["captionof" nil nil nil nil nil nil ((timestamp . "2011-12-16") (notes . "(\"http://mirror.ctan.org/macros/latex/contrib/caption/caption-eng.pdf\")")) nil]
["cards" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"noecho FILE HIM!\")")) nil]
["cargo-cult" nil nil nil nil nil nil ((timestamp . "2012-06-12") (notes . "(\"noecho Go ahead, blindly copy and paste that code. What could possibly go wrong\")")) nil]
["CarpalTunnelSyndrom" nil nil nil nil nil nil ((timestamp . "2004-12-08") (notes . "(\"redirect RSI\")")) nil]
["carriagereturn" nil nil nil nil nil nil ((timestamp . "2004-12-20") (notes . "(\"use M-x toggle-buffer-file-coding-system before saving\" \"requires (featurep 'file-coding) => t\" \"see also dosfilesinunix\")")) nil]
["carton" nil nil nil nil nil nil ((timestamp . "2013-10-29") (notes . "(\"redirect cask\")")) nil]
["cartosat" nil nil nil nil nil nil ((timestamp . "2005-05-05") (notes . "(\"a satellite exclusively for 3d mapping of the earth with a 2.5 m resolution ....\")")) nil]
["caruso" nil nil nil nil nil nil ((timestamp . "2013-05-12") (notes . "(\"redirect horatio-caine\")")) nil]
["CAS" nil nil nil nil nil nil ((timestamp . "2012-04-18") (notes . "(\"computer algebra system\" \"not Octave.\")")) nil]
["cascalog" nil nil nil nil nil nil ((timestamp . "2012-03-14") (notes . "(\"a clojure-based query language for hadoop\" \"https://github.com/nathanmarz/cascalog\")")) nil]
["CaseyKasem" nil nil nil nil nil nil ((timestamp . "2011-08-16") (notes . "(\"redirect kasem\")")) nil]
["cat" nil nil nil nil nil nil ((timestamp . "2014-01-16") (notes . "(\"lovable but annoying creature\" \"see \\\"The Unadulterated Cat\\\" by Pratchett & Jolliffe\" \"potential material for violin-strings\" \"an animal that you bring to your house, and after only a week, allows you to live in her house\" \"An evil killer\" \"concatenate files and print on the standard output\" \"喵♪\")")) nil]
["catalogue" nil nil nil nil nil nil ((timestamp . "2009-04-29") (notes . "(\"http://www.ctan.org/tex-archive/help/Catalogue/catalogue.html\")")) nil]
["catalyst" nil nil nil nil nil nil ((timestamp . "2012-07-28") (notes . "(\"an open source web application framework written in Perl, that closely follows the model–view–controller (MVC) architecture, and supports a number of experimental web patterns. It is written using Moose, a modern object system for Perl. Its design is heavily inspired by such frameworks as Ruby on Rails, Maypole, and Spring.\")")) nil]
["catcode" nil nil nil nil nil nil ((timestamp . "2015-10-24") (notes . "(\"\\\\catcode is the command that's used to change the category code of a character. The category code tells TeX what to do when it encounters that character later in the text. See also https://en.wikibooks.org/wiki/TeX/catcode\")")) nil]
["CategoryChat" nil nil nil nil nil nil ((timestamp . "2008-03-20") (notes . "(\"redirect CategoryChatClient\")")) nil]
["categoryreferencesheets" nil nil nil nil nil nil ((timestamp . "2010-05-13") (notes . "(\"redirect categoryreferencesheet\")")) nil]
["CategoryTheory" nil nil nil nil nil nil ((timestamp . "2003-03-03") (notes . "(\"http://plato.stanford.edu/entries/category-theory/\")")) nil]
["cats" nil nil nil nil nil nil ((timestamp . "2010-05-04") (notes . "(\"nice\")")) nil]
["cautionable-offenses" nil nil nil nil nil nil ((timestamp . "2012-07-18") (notes . "(\"violating Law 12\" \"unsporting behavior\" \"dissent\" \"persistent infringement\" \"delaying play\" \"failure to respect the required distance\" \"entering the field without permission\" \"entering or leaving the field without permission\")")) nil]
["CAV" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Constant Angular Velocity (As Opposed To CLV)\")")) nil]
["cawim" nil nil nil nil nil nil ((timestamp . "2004-05-13") (notes . "(\"a nerd\")")) nil]
["cba" nil nil nil nil nil nil ((timestamp . "2012-10-19") (notes . "(\"Can't Be Arsed\")")) nil]
["cbb" nil nil nil nil nil nil ((timestamp . "2009-06-05") (notes . "(\"Can't Be Bothered\")")) nil]
["cc++" nil nil nil nil nil nil ((timestamp . "2003-01-16") (notes . "(\"GNU Common C++ application framework\" \"the foundation of Bayonne see also bayonne\" \"found on the web at http://www.gnu.org/software/commonc++/\")")) nil]
["cc-mode" nil nil nil nil nil nil ((timestamp . "2012-11-03") (notes . "(\"the mode providing support for C, C++, Java, AWK, and Pike\")")) nil]
["CCCB" nil nil nil nil nil nil ((timestamp . "2006-07-26") (notes . "(\"Chocolate Covered Coffee Beans - sometimes known as Chocolate Covered Espresso Beans, Cannon Beans or C³B\")")) nil]
["CCG" nil nil nil nil nil nil ((timestamp . "2006-04-29") (notes . "(\"Collectible Card Game\")")) nil]
["cclive" nil nil nil nil nil nil ((timestamp . "2013-08-22") (notes . "(\"a tool for downloading media from YouTube and similar websites, using quvi. http://cclive.sourceforge.net/\")")) nil]
["CCNA" nil nil nil nil nil nil ((timestamp . "2012-07-12") (notes . "(\"a Cisco sales pitch disguised as training\")")) nil]
["CCS" nil nil nil nil nil nil ((timestamp . "2007-12-10") (notes . "(\"Cardcaptor Sakura, a magical girl manga/anime\" \"Catch a Crocodile Sunday, a national holiday in Australia\")")) nil]
["CCSchema" nil nil nil nil nil nil ((timestamp . "2003-02-23") (notes . "(\"a schema that lets you describe copyright licenses in RDF http://web.resource.org/cc/\")")) nil]
["cdars" nil nil nil nil nil nil ((timestamp . "2012-11-07") (notes . "(\"noecho DESTRUCTURE HIM!!\")")) nil]
["CDBS" nil nil nil nil nil nil ((timestamp . "2007-06-03") (notes . "(\"a bunch of makefiles that allow you to avoid boilerplate in your debian/ build directory.\")")) nil]
["cdc" nil nil nil nil nil nil ((timestamp . "2003-02-09") (notes . "(\"the Cult of the Dead Cow\" \"was a fun way to confuse your friends by ejecting their CD trays remotely\" \"center for disease control in Atlanta, Georgia\")")) nil]
["cdhist" nil nil nil nil nil nil ((timestamp . "2012-11-14") (notes . "(\"redirect cdhist.bash\")")) nil]
["cdhist.bash" nil nil nil nil nil nil ((timestamp . "2012-11-14") (notes . "(\"http://opensource.apple.com/source/bash/bash-25/bash/examples/scripts.v2/cdhist.bash\" \"note: the above has a minor bug which is fixed by s/_cd_print/_cdprint/\")")) nil]
["cdist" nil nil nil nil nil nil ((timestamp . "2013-01-04") (notes . "(\"http://en.wikipedia.org/wiki/Cdist\")")) nil]
["cdo" nil nil nil nil nil nil ((timestamp . "2012-05-27") (notes . "(\"ocd spelled in the correct order\" \"http://i.imgur.com/3j5bX.jpg\")")) nil]
["CDRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Cache Dynamic Random Access Memory\")")) nil]
["cdrecord-prodvd" nil nil nil nil nil nil ((timestamp . "2004-11-26") (notes . "(\"commercial avoid it use growisofs\")")) nil]
["cedega" nil nil nil nil nil nil ((timestamp . "2006-09-03") (notes . "(\"less time playing games; more time programming\" \"formerly WINEX\" \"a complete waste of time because wine gets the job done\")")) nil]
["celestia" nil nil nil nil nil nil ((timestamp . "2004-07-05") (notes . "(\"a free real-time space simulation that lets you experience our universe in three dimensions.\" \"binaries and source are available at http://www.shatters.net/celestia/index.html\")")) nil]
["cells" nil nil nil nil nil nil ((timestamp . "2004-08-09") (notes . "(\"see http://www.tilton-technology.com/\")")) nil]
["century-egg" nil nil nil nil nil nil ((timestamp . "2012-07-08") (notes . "(\"https://en.wikipedia.org/wiki/File:Century_egg.jpg\")")) nil]
["cervisia" nil nil nil nil nil nil ((timestamp . "2007-01-14") (notes . "(\"a kde cvs frontend at http://cervisia.kde.org/\")")) nil]
["ceylon" nil nil nil nil nil nil ((timestamp . "2013-11-24") (notes . "(\"a programming language by RedHat with a strong type system targeting the JVM and JavaScript at http://ceylon-lang.org/\" \"an island country off the southern coast of india\" \"a type of tea\")")) nil]
["cf" nil nil nil nil nil nil ((timestamp . "2007-04-05") (notes . "(\"\\\"confer\\\", Latin for \\\"compare\\\".\")")) nil]
["CFFI" nil nil nil nil nil nil ((timestamp . "2006-05-18") (notes . "(\"a portable FFI package for Common Lisp. http://common-lisp.net/project/cffi/\")")) nil]
["CFG" nil nil nil nil nil nil ((timestamp . "2010-12-03") (notes . "(\"context-free grammar. Kinda like a regular expression with a memory.\")")) nil]
["CFMPC" nil nil nil nil nil nil ((timestamp . "2005-07-15") (notes . "(\"Complete Fucking Morons of Programming Club.\")")) nil]
["cfs" nil nil nil nil nil nil ((timestamp . "2006-06-09") (notes . "(\"enCrypted File System\" \"Also see truecrypt\")")) nil]
["CFT" nil nil nil nil nil nil ((timestamp . "2004-04-24") (notes . "(\"noecho Copious Free Time\")")) nil]
["CGA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Color Graphics Array\")")) nil]
["CGI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Common Gateway Interface\")")) nil]
["cgroza" nil nil nil nil nil nil ((timestamp . "2011-06-16") (notes . "(\"romanian\")")) nil]
["chainsaw" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"the swiss-army knife that can sever the whole arm\")")) nil]
["chaitin" nil nil nil nil nil nil ((timestamp . "2011-09-26") (notes . "(\"Gregory J. Chaitin, famous math researcher at IBM\" \"author of Meta Math the Quest for Omega available on line at http://www.umcs.maine.edu/~chaitin/\" \"author of Algorithmic Information Theory, about a Lisp system for calculating the \\\"halting probability\\\", available at http://www.umcs.maine.edu/~chaitin/cup.html\")")) nil]
["change-buffer-background-color" nil nil nil nil nil nil ((timestamp . "2013-06-16") (notes . "(\"To change the background color of a buffer, you can use (make-local-variable 'face-remapping-alist) (push '(default (:background \\\"blue\\\")) face-remapping-alist)\")")) nil]
["changepage" nil nil nil nil nil nil ((timestamp . "2013-12-31") (notes . "(\"a package to change the page layout even for stretches of less than a page in the middle of a document. Chiefly it provides the adjustwidth environment. It can be found under http://www.tex.ac.uk/tex-archive/help/Catalogue/entries/changepage.html\")")) nil]
["chanlist" nil nil nil nil nil nil ((timestamp . "2004-07-20") (notes . "(\"noecho (charlie-chan jackie-chan)\")")) nil]
["chant" nil nil nil nil nil nil ((timestamp . "2004-01-13") (notes . "(\"noecho MORE CODE! MORE CODE!\")")) nil]
["chards" nil nil nil nil nil nil ((timestamp . "2013-09-25") (notes . "(\"(fricasees him)\")")) nil]
["charm" nil nil nil nil nil nil ((timestamp . "2013-05-18") (notes . "(\"noecho Works like a charm!\")")) nil]
["CHash" nil nil nil nil nil nil ((timestamp . "2006-02-28") (notes . "(\"redirect CSharpMode\")")) nil]
["chatbotics" nil nil nil nil nil nil ((timestamp . "2012-11-28") (notes . "(\"A chatbot may not ignore a human or, through inaction, allow a human to have an unanswered query.\" \"A chatbot must respond to any trigger from a human, except when the trigger conflicts the First Law.\" \"A chatbot must protect itself from script kittehs as long as such protection does not conflict with the First or Second Law.\" \"A chatbot must ignore other bots.\")")) nil]
["chch" nil nil nil nil nil nil ((timestamp . "2012-10-02") (notes . "(\"Christchurch, New Zealand\")")) nil]
["che" nil nil nil nil nil nil ((timestamp . "2010-07-01") (notes . "(\"rms-as-che, see http://geekz.co.uk/shop/images/che-stallman-tshirt-show.jpg?1174745457\")")) nil]
["cheatsheet" nil nil nil nil nil nil ((timestamp . "2007-10-12") (notes . "(\"redirect refcard\")")) nil]
["cheatsheets" nil nil nil nil nil nil ((timestamp . "2011-02-23") (notes . "(\"redirect categoryreferencesheet\")")) nil]
["checkinstall" nil nil nil nil nil nil ((timestamp . "2004-11-27") (notes . "(\"at http://asic-linux.com.mx/~izto/checkinstall/\" \"checkinstall can be used to create slackware, RPM or Debian packages from source,It makes removal of source compiled packages easy\")")) nil]
["cheese" nil nil nil nil nil nil ((timestamp . "2003-05-22") (notes . "(\"lisp (concat \\\"i recommend \\\" (random-choose '(\\\"cheddar\\\" \\\"gouda\\\" \\\"camembert\\\" \\\"emmentaler\\\" \\\"greyezer\\\" \\\"fol epi\\\" \\\"appenzeller\\\" \\\"tilsiter\\\" \\\"tomme\\\" \\\"roquefort\\\" \\\"raclette\\\" \\\"fondue\\\" \\\"vacherin\\\" \\\"st. galler\\\" \\\"st. pauli\\\" \\\"taleggio\\\")))\")")) nil]
["chef" nil nil nil nil nil nil ((timestamp . "2010-11-15") (notes . "(\"a change management system -- basically a <puppet> knock-off <http://en.wikipedia.org/wiki/Chef_(software)>\")")) nil]
["Chell" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"the protagonist of and test subject in the video game Portal\")")) nil]
["chemistry-guards" nil nil nil nil nil nil ((timestamp . "2013-02-06") (notes . "(\"noecho CAESIUM!!!!\")")) nil]
["cherokee" nil nil nil nil nil nil ((timestamp . "2006-05-14") (notes . "(\"An extremely fast and tiny web server.\" \"http://www.0x50.org/\")")) nil]
["chestallmanshirt" nil nil nil nil nil nil ((timestamp . "2010-05-17") (notes . "(\"http://geekz.co.uk/shop/store/show/che-stallman-tshirt\")")) nil]
["chibi" nil nil nil nil nil nil ((timestamp . "2011-10-11") (notes . "(\"a small footprint scheme for use as a c extension language, see http://code.google.com/p/chibi-scheme/\" \"see also http://synthcode.com/scheme/chibi/\")")) nil]
["chicken" nil nil nil nil nil nil ((timestamp . "2006-03-21") (notes . "(\"a Scheme to C compiler. http://call-with-current-continuation.org\")")) nil]
["chicory" nil nil nil nil nil nil ((timestamp . "2014-01-12") (notes . "(\"coffee\" \"reported to kill intestinal parasites (or act as a vermifuge), cleanse the blood, and improve liver health\")")) nil]
["childish" nil nil nil nil nil nil ((timestamp . "2013-03-21") (notes . "(\"When I was a child, I spake as a child, I understood as a child, I thought as a child: but when I became a man, I put away childish things. -- 1 Corinthians 13:11\")")) nil]
["children" nil nil nil nil nil nil ((timestamp . "2013-07-03") (notes . "(\"noecho Children, you can't fuss here. This is the Play Room.\")")) nil]
["ChillingEffects" nil nil nil nil nil nil ((timestamp . "2003-02-11") (notes . "(\"at http://www.chillingeffects.org/\")")) nil]
["chillywilly" nil nil nil nil nil nil ((timestamp . "2003-02-11") (notes . "(\"like a deranged pen-gnu-in\")")) nil]
["chinglish" nil nil nil nil nil nil ((timestamp . "2012-01-07") (notes . "(\"http://www.rahoi.com/2006/03/may-i-take-your-order/\" \"the chinese equivalent of engrish\")")) nil]
["chngcntr" nil nil nil nil nil nil ((timestamp . "2011-06-19") (notes . "(\"a package that defines commands \\\\counterwithin (which sets up a counter to be reset when another is incremented) and \\\\counterwithout (which unsets such a relationship): http://ctan.org/pkg/chngcntr\")")) nil]
["chngpage" nil nil nil nil nil nil ((timestamp . "2015-06-23") (notes . "(\"redirect changepage\")")) nil]
["chomsky" nil nil nil nil nil nil ((timestamp . "2009-02-16") (notes . "(\"at http://angryflower.com/blame.gif\" \"http://www.ibiblio.org/Dave/Dr-Fun/df200304/df20030409.jpg\")")) nil]
["chords" nil nil nil nil nil nil ((timestamp . "2012-05-19") (notes . "(\"noecho GUITAR SOLO HIM!!\")")) nil]
["choripán" nil nil nil nil nil nil ((timestamp . "2006-03-11") (notes . "(\"un sandwiche de chorizo\" \"se come mucho en Argentina\" \"una comida que se repite durante días\" \"en MDQ se recomienda \\\"EL SOCHORI DE DORAPA\\\"\")")) nil]
["chrome" nil nil nil nil nil nil ((timestamp . "2005-11-10") (notes . "(\"http://www.catb.org/~esr/jargon/html/C/chrome.html\")")) nil]
["chromerepl" nil nil nil nil nil nil ((timestamp . "2013-04-19") (notes . "(\"a remote read-eval-print-loop to Google Chrome and Chromium. It's similar like MozRepl. https://github.com/kzys/chromerepl\")")) nil]
["CHS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Cylinder/Head/Sector\")")) nil]
["CIDR" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Classless Inter-Domain Routing\")")) nil]
["CIFS" nil nil nil nil nil nil ((timestamp . "2007-07-11") (notes . "(\"SMB is Microsoft's network file system.\")")) nil]
["cigar" nil nil nil nil nil nil ((timestamp . "2012-12-22") (notes . "(\"the difference between eieio and CLOS.\")")) nil]
["cigarette" nil nil nil nil nil nil ((timestamp . "2005-04-15") (notes . "(\"no smoking in this chan, pls\")")) nil]
["cinterpreter" nil nil nil nil nil nil ((timestamp . "2005-04-13") (notes . "(\"at CINT - http://root.cern.ch/root/Cint.html\" \"at EiC - http://eic.sourceforge.net/\" \"at Ch - http://www.softintegration.com\")")) nil]
["circuitikz" nil nil nil nil nil nil ((timestamp . "2009-12-03") (notes . "(\"a nice schematic drawing library on top of pgf/tikz http://mirror.ctan.org/graphics/pgf/contrib/circuitikz/doc/latex/circuitikz/circuitikzmanual.pdf\")")) nil]
["cisc" nil nil nil nil nil nil ((timestamp . "2004-06-02") (notes . "(\"Complex Instruction Set Computer\")")) nil]
["citadelwiki" nil nil nil nil nil nil ((timestamp . "2002-11-03") (notes . "(\"http://bpt.tunes.org/CitadelWiki/\")")) nil]
["citeulike" nil nil nil nil nil nil ((timestamp . "2006-02-04") (notes . "(\"http://www.citeulike.org/\" \"a free service to help academics to share, store, and organise the academic papers they are reading.\")")) nil]
["civil" nil nil nil nil nil nil ((timestamp . "2012-02-17") (notes . "(\"noecho civil blood makes civil hands unclean.\")")) nil]
["cjk" nil nil nil nil nil nil ((timestamp . "2004-05-27") (notes . "(\"chinese-japanese-korean.\")")) nil]
["CL" nil nil nil nil nil nil ((timestamp . "2012-03-25") (notes . "(\"Common Lisp, a general-purpose multi-paradigm programming language. Ask me about: <pcl>, <cl.el>\" \"common lisp quick reference: http://clqr.boundp.org/\")")) nil]
["cl-darcs" nil nil nil nil nil nil ((timestamp . "2006-11-01") (notes . "(\"an attempt to write a darcs client in Common Lisp <http://common-lisp.net/project/cl-darcs/>.\")")) nil]
["cl-fail" nil nil nil nil nil nil ((timestamp . "2012-01-23") (notes . "(\"caaaar\" \"cddddr\" \"remove-if\" \"remove-if-not\" \"logorc2\" \"nsublis\" \"svref\" \"nsubst\" \"rplaca\" \"rplacd\")")) nil]
["cl-guards" nil nil nil nil nil nil ((timestamp . "2013-07-09") (notes . "(\"noecho \\\"NAMESPACE\\\" HIM!!!\")")) nil]
["CL-Ledger" nil nil nil nil nil nil ((timestamp . "2007-11-12") (notes . "(\"a rewrite of Ledger in Common Lisp\" \"http://hg.newartisans.com/ledger\")")) nil]
["cl-typesetting" nil nil nil nil nil nil ((timestamp . "2006-09-18") (notes . "(\"an incomplete Common Lisp library that does the same job as TeX (http://www.cliki.net/cl-typesetting).\")")) nil]
["clang" nil nil nil nil nil nil ((timestamp . "2012-05-27") (notes . "(\"a new Apple-sponsored, BSD-licensed C, Objective C, and C++ compiler based on LLVM.\" \"https://llvm.org/svn/llvm-project/cfe/trunk/utils/clang-completion-mode.el\" \"can be used with auto-complete\")")) nil]
["clank" nil nil nil nil nil nil ((timestamp . "2013-12-31") (notes . "(\"noecho Please do not panic. A joke has crashed and burned, but no animals were harmed.\")")) nil]
["clap" nil nil nil nil nil nil ((timestamp . "2012-06-06") (notes . "(\"noecho /me applauds, slowly and sarcastically.\")")) nil]
["clash" nil nil nil nil nil nil ((timestamp . "2010-08-05") (notes . "(\"the clisp shell at http://clisp.cons.org/clash.html\")")) nil]
["claws" nil nil nil nil nil nil ((timestamp . "2012-07-16") (notes . "(\"Claws Mail, a GUI mail program (formerly Sylpheed Claws) at http://www.claws-mail.org/\")")) nil]
["clbuild" nil nil nil nil nil nil ((timestamp . "2010-08-11") (notes . "(\"http://common-lisp.net/project/clbuild/\" \"clbuild+slime: http://bc.tech.coop/blog/080116.html\" \"http://www.cliki.net/clbuild\")")) nil]
["clementine" nil nil nil nil nil nil ((timestamp . "2013-05-02") (notes . "(\"a \\\"modern music player and library organizer\\\"; see http://www.clementine-player.org/\")")) nil]
["cleveref" nil nil nil nil nil nil ((timestamp . "2016-02-06") (notes . "(\"a package enhancing LaTeX's referencing, to automatically give a different format depending on the type of reference avaialable from http://www.ctan.org/pkg/cleveref\")")) nil]
["clfswm" nil nil nil nil nil nil ((timestamp . "2013-04-25") (notes . "(\"the Common Lisp Full Screen Window Manager, an offshoot of StumpWM. http://common-lisp.net/project/clfswm/\")")) nil]
["clgisc" nil nil nil nil nil nil ((timestamp . "2011-02-09") (notes . "(\"Common Lisp: A Gentle Introduction to Symbolic Computation, by David S. Touretzky\" \"at http://www.cs.cmu.edu/~dst/LispBook/\")")) nil]
["clhs" nil nil nil nil nil nil ((timestamp . "2011-03-09") (notes . "(\"redirect CommonLispHyperspec\")")) nil]
["CLI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Command Line Interface\")")) nil]
["clicki" nil nil nil nil nil nil ((timestamp . "2004-06-30") (notes . "(\"redirect cliki\")")) nil]
["cliki" nil nil nil nil nil nil ((timestamp . "2010-07-28") (notes . "(\"at http://www.cliki.net/\" \"(TUNES CLiki) at http://tunes.org/\" \"(McCLiki) at http://mcclim.cliki.net/\" \"Also see CommonLispUtilities\")")) nil]
["clippy" nil nil nil nil nil nil ((timestamp . "2013-03-18") (notes . "(\"noecho It appears you are writing a suicide letter.\" \"https://github.com/Fuco1/clippy.el\")")) nil]
["clisp" nil nil nil nil nil nil ((timestamp . "2007-01-02") (notes . "(\"an implementation of Common Lisp <http://clisp.cons.org>\" \"*NOT* an abbreviation for Common Lisp. See ,CL.\")")) nil]
["clive" nil nil nil nil nil nil ((timestamp . "2012-10-11") (notes . "(\"a Python script to download stupid blurry thumbnail videos from youtube <http://home.gna.org/clive/>\" \"succeeded by cclive <http://cclive.sourceforge.net/>\")")) nil]
["cloak" nil nil nil nil nil nil ((timestamp . "2011-04-15") (notes . "(\"a string in Freenode's IRC that hides your host and shows your affiliation.\")")) nil]
["clojurescript" nil nil nil nil nil nil ((timestamp . "2014-02-06") (notes . "(\"the least horrible thing about the web.\")")) nil]
["clos" nil nil nil nil nil nil ((timestamp . "2009-09-25") (notes . "(\"Common Lisp Object System\" \"http://en.wikipedia.org/wiki/Common_Lisp_Object_System\")")) nil]
["closingtime" nil nil nil nil nil nil ((timestamp . "2013-07-30") (notes . "(\"noecho You don't have to go home, but you can't stay here.\")")) nil]
["closure" nil nil nil nil nil nil ((timestamp . "2012-04-12") (notes . "(\"a McClim-based web-browser\" \"http://www.stud.uni-karlsruhe.de/~unk6/closure/\" \"http://en.wikipedia.org/wiki/Closure_%28computer_science%29\")")) nil]
["cloud" nil nil nil nil nil nil ((timestamp . "2013-08-29") (notes . "(\"redirect to the-cloud\")")) nil]
["clrfi" nil nil nil nil nil nil ((timestamp . "2006-09-16") (notes . "(\"Common Lisp Requests for Improvements\")")) nil]
["clrs" nil nil nil nil nil nil ((timestamp . "2014-06-28") (notes . "(\"Cormen, Leiserson, Rivest, and Stein.\" \"a standard textbook in algorithms, full of nice neat tidy pseudocode\")")) nil]
["CLSandBox" nil nil nil nil nil nil ((timestamp . "2003-01-20") (notes . "(\"at http://bpt.tunes.org/sandbox.lisp\")")) nil]
["clsguide" nil nil nil nil nil nil ((timestamp . "2014-04-11") (notes . "(\"a brief documentation of commands helpful for writing packages and class files found under http://www.ctan.org/pkg/clsguide\")")) nil]
["clsql" nil nil nil nil nil nil ((timestamp . "2005-10-12") (notes . "(\"an SQL database interface for Common Lisp\" \"at http://clsql.b9.com/\" \"has a ORM component: http://clsql.b9.com/manual/ref-oodml.html\")")) nil]
["cltl" nil nil nil nil nil nil ((timestamp . "2006-03-25") (notes . "(\"http://www.supelec.fr/docs/cltl/clm/clm.html\")")) nil]
["CLTL2" nil nil nil nil nil nil ((timestamp . "2006-03-25") (notes . "(\"Common Lisp the Language, 2nd Ed. by Guy Steele. It was the seminal reference for Common Lisp while the ANSI standard was being created.\" \"http://www.supelec.fr/docs/cltl/clm/clm.html\")")) nil]
["cluck" nil nil nil nil nil nil ((timestamp . "2013-05-11") (notes . "(\"jelly\" \"a guy with a very wry sense of humor\" \"often borderline creepy\" \"a fanboy for all projects you've never heard of\" \"not a fan of goats\" \"that previous one is false\")")) nil]
["cluck!" nil nil nil nil nil nil ((timestamp . "2009-07-31") (notes . "(\"noecho buck buck! using Debian?\")")) nil]
["cluck-fix" nil nil nil nil nil nil ((timestamp . "2012-12-08") (notes . "(\"lisp (message \\\" \\\")\")")) nil]
["clustershell" nil nil nil nil nil nil ((timestamp . "2005-07-15") (notes . "(\"Opens multiple ssh sessions, manage multiple machines by typing things just once.\" \"See also pconsole\")")) nil]
["clusty" nil nil nil nil nil nil ((timestamp . "2009-12-11") (notes . "(\"a web search engine multiplexer <http://en.wikipedia.org/wiki/Clusty>\")")) nil]
["clutter" nil nil nil nil nil nil ((timestamp . "2013-08-05") (notes . "(\"A toolkit for creating compelling, dynamic, and portable graphical user interfaces.\" \"http://blogs.gnome.org/clutter/\")")) nil]
["CLV" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Constant Linear Velocity (As Opposed To CAV)\")")) nil]
["clwarning" nil nil nil nil nil nil ((timestamp . "2010-08-17") (notes . "(\"(byte-compile-disable-warning 'cl-functions)\")")) nil]
["clx" nil nil nil nil nil nil ((timestamp . "2006-11-15") (notes . "(\"a common lisp xlib\")")) nil]
["cm" nil nil nil nil nil nil ((timestamp . "2014-11-05") (notes . "(\"noecho Computer Modern, created by Donald Knuth, is the default family of typefaces used by TeX and LaTeX\")")) nil]
["cmail" nil nil nil nil nil nil ((timestamp . "2010-11-24") (notes . "(\"http://cmail.sourceforge.jp/\")")) nil]
["CMIIW" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Correct Me If I'm Wrong\")")) nil]
["cmiyc" nil nil nil nil nil nil ((timestamp . "2008-05-17") (notes . "(\"catch me if you can\")")) nil]
["CML" nil nil nil nil nil nil ((timestamp . "2011-01-04") (notes . "(\"Concurrent ML<http://wikipedia.org/wiki/Concurrent_ML>\")")) nil]
["cml2" nil nil nil nil nil nil ((timestamp . "2010-09-20") (notes . "(\"esr's attempt to make a kernel config utility to replace menuconfig\")")) nil]
["cms" nil nil nil nil nil nil ((timestamp . "2006-11-14") (notes . "(\"short for Content Management Systems.\" \"A list: http://www.la-grange.net/cms\")")) nil]
["cmt" nil nil nil nil nil nil ((timestamp . "2005-03-24") (notes . "(\"corporative multitasking, see also pmt.\")")) nil]
["CMYK" nil nil nil nil nil nil ((timestamp . "2005-08-28") (notes . "(\"the color scheme that uses the four colors used in traditional printing presses, and stands for, respectively, cyan, magenta, yellow, and black.\" \"called the subtractive color model\")")) nil]
["CNC" nil nil nil nil nil nil ((timestamp . "2013-07-31") (notes . "(\"Computer Numerical Control, a computer controller that reads instructions and drives a machine tool <https://en.wikipedia.org/wiki/Numerical_control>\")")) nil]
["CNP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Continued [In My] Next Post\")")) nil]
["CNS" nil nil nil nil nil nil ((timestamp . "2004-03-04") (notes . "(\"Central Nerve System\")")) nil]
["COB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Close Of Business [Day]\")")) nil]
["COBOL" nil nil nil nil nil nil ((timestamp . "2014-01-22") (notes . "(\"the COmmon Business-Oriented Language\" \"a buzzword-compliant language for pointy-haired programmers\" \"GNU Cobol http://sourceforge.net/projects/open-cobol/\" \"on wheelchair http://azac.pl/cobol-on-wheelchair/\")")) nil]
["coboloncogs" nil nil nil nil nil nil ((timestamp . "2014-02-05") (notes . "(\"http://www.coboloncogs.org/INDEX.HTM\")")) nil]
["coc" nil nil nil nil nil nil ((timestamp . "2011-06-20") (notes . "(\"Code Of Conduct\")")) nil]
["coca" nil nil nil nil nil nil ((timestamp . "2007-04-04") (notes . "(\"just a plant\")")) nil]
["Cockhound" nil nil nil nil nil nil ((timestamp . "2012-04-03") (notes . "(\"a hound bred for hunting cocks\")")) nil]
["coctothorp" nil nil nil nil nil nil ((timestamp . "2006-09-09") (notes . "(\"solid way to pronounce C#\" \"a fucking great way to pronounce C#\")")) nil]
["coda" nil nil nil nil nil nil ((timestamp . "2004-09-20") (notes . "(\"http://www.coda.cs.cmu.edu/\")")) nil]
["code" nil nil nil nil nil nil ((timestamp . "2004-06-16") (notes . "(\"redirect homepage\")")) nil]
["codecomprehension" nil nil nil nil nil nil ((timestamp . "2004-11-29") (notes . "(\"at http://grok2.tripod.com/code_comprehension.html\")")) nil]
["codeinlatex" nil nil nil nil nil nil ((timestamp . "2004-04-23") (notes . "(\"redirect CodeToLatex\")")) nil]
["codemaxim" nil nil nil nil nil nil ((timestamp . "2013-02-01") (notes . "(\"lisp (format \\\"%s's code sucks.\\\" (if lispargs (car lispargs) nick))\")")) nil]
["codes" nil nil nil nil nil nil ((timestamp . "2012-09-19") (notes . "(\"noecho does u has teh coadz\")")) nil]
["coding-style" nil nil nil nil nil nil ((timestamp . "2004-09-07") (notes . "(\"redirect codingstyle\")")) nil]
["codinghorror" nil nil nil nil nil nil ((timestamp . "2008-09-03") (notes . "(\"http://lost-theory.org/realultimatepower/\")")) nil]
["COFF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Common Object File Format\")")) nil]
["coffee" nil nil nil nil nil nil ((timestamp . "2006-08-09") (notes . "(\"redirect coffee.el\")")) nil]
["coffee!" nil nil nil nil nil nil ((timestamp . "2010-04-29") (notes . "(\"noecho Relax! Coffee has been sent your way...\")")) nil]
["coffee!!" nil nil nil nil nil nil ((timestamp . "2010-04-29") (notes . "(\"noecho Got it yourself, impatient one!\")")) nil]
["coffeescript" nil nil nil nil nil nil ((timestamp . "2010-11-04") (notes . "(\"a language that compiles to javascript\" \"coffee is the major mode for editing coffeescript https://github.com/defunkt/coffee-mode\")")) nil]
["cogre" nil nil nil nil nil nil ((timestamp . "2007-03-30") (notes . "(\"http://cedet.sourceforge.net/cogre.shtml COnnected GRaph Editor, part of http://cedet.sf.net/\" \"one of the screenshots: http://cedet.sourceforge.net/cogre2.jpg\")")) nil]
["coh" nil nil nil nil nil nil ((timestamp . "2005-03-25") (notes . "(\"City of Heroes (an mmorpg ; see http://www.cityofheroes.com )\")")) nil]
["coin" nil nil nil nil nil nil ((timestamp . "2011-08-18") (notes . "(\"\\\\_o< \\\\_o< \\\\_o< Coin ! Coin !\")")) nil]
["coin-flip" nil nil nil nil nil nil ((timestamp . "2012-01-05") (notes . "(\"redirect flip\")")) nil]
["Coin-Toss" nil nil nil nil nil nil ((timestamp . "2011-09-16") (notes . "(\"redirect flip\")")) nil]
["coincidence" nil nil nil nil nil nil ((timestamp . "2013-11-20") (notes . "(\"noecho I think not!\")")) nil]
["coke" nil nil nil nil nil nil ((timestamp . "2003-06-02") (notes . "(\"unecho *snort*\")")) nil]
["cokebottle" nil nil nil nil nil nil ((timestamp . "2008-09-29") (notes . "(\"any very unusual character, particularly one you can't type because it it isn't on your keyboard <http://www.jargon.net/jargonfile/c/cokebottle.html>\")")) nil]
["cola" nil nil nil nil nil nil ((timestamp . "2004-06-03") (notes . "(\"lisp ( concat \\\"Anyone up for some...\\\" (random-choose '(\\\"pepsi\\\" \\\"coke\\\" \\\"pepsi twist\\\" \\\"fanta\\\" \\\"sprite\\\" \\\"a margarita (what?)\\\" \\\"malt (you better be in Iceland for this one ;)\\\" \\\"7up\\\")) \\\"?\\\" )\")")) nil]
["colemak" nil nil nil nil nil nil ((timestamp . "2010-08-06") (notes . "(\"a keyboard layout, at http://colemak.com/\")")) nil]
["coles-law" nil nil nil nil nil nil ((timestamp . "2012-03-24") (notes . "(\"noecho thinly sliced cabbage\")")) nil]
["coleslaw" nil nil nil nil nil nil ((timestamp . "2012-07-26") (notes . "(\"disgusting\")")) nil]
["colinux" nil nil nil nil nil nil ((timestamp . "2006-08-20") (notes . "(\"a port of the Linux kernel that allows it to run cooperatively alongside another operating system on a single machine\")")) nil]
["collaborative_editor" nil nil nil nil nil nil ((timestamp . "2005-12-10") (notes . "(\"http://www.communitywiki.org/cw/CollaborativeEditor\" \"free software: gobby\")")) nil]
["collaborativeeditor" nil nil nil nil nil nil ((timestamp . "2005-12-10") (notes . "(\"redirect collaborative_editor\")")) nil]
["collards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho SERVE HIM WITH PEAS AND CORNBREAD!!\")")) nil]
["color" nil nil nil nil nil nil ((timestamp . "2002-12-20") (notes . "(\"redirect EnablingFontLock\")")) nil]
["color-eldoc.el" nil nil nil nil nil nil ((timestamp . "2004-03-30") (notes . "(\"redirect color-eldoc\")")) nil]
["color-mode" nil nil nil nil nil nil ((timestamp . "2006-03-19") (notes . "(\"http://www-cs-faculty.stanford.edu/~knuth/programs/color-mode.el\")")) nil]
["color-theme" nil nil nil nil nil nil ((timestamp . "2009-10-12") (notes . "(\"redirect colortheme\")")) nil]
["color-theme-x" nil nil nil nil nil nil ((timestamp . "2010-03-16") (notes . "(\"redirect color-theme-x.el\")")) nil]
["color-theme.el" nil nil nil nil nil nil ((timestamp . "2003-09-15") (notes . "(\"redirect color-theme\")")) nil]
["colorforth" nil nil nil nil nil nil ((timestamp . "2013-08-31") (notes . "(\"<http://www.colorforth.com/>\")")) nil]
["ColorList" nil nil nil nil nil nil ((timestamp . "2003-10-07") (notes . "(\"apt-get -u install xcolorsel\")")) nil]
["colors" nil nil nil nil nil nil ((timestamp . "2005-04-16") (notes . "(\"redirect FontLock\")")) nil]
["colorschemer" nil nil nil nil nil nil ((timestamp . "2009-08-10")) nil]
["colorschemer" nil nil nil nil nil nil ((timestamp . "2009-08-10")) nil]
["ColorShell" nil nil nil nil nil nil ((timestamp . "2002-12-10") (notes . "(\"redirect AnsiColor\")")) nil]
["colortbl" nil nil nil nil nil nil ((timestamp . "2016-07-04") (notes . "(\"a package to colour rows, columns and cells available from https://www.ctan.org/pkg/colortbl\")")) nil]
["colortest" nil nil nil nil nil nil ((timestamp . "2005-01-19") (notes . "(\"at http://www.caretec.at/produkte.php?caretec=160a34641b24c84bd516ff7d8d14c979&kat1=1\")")) nil]
["colortheme24" nil nil nil nil nil nil ((timestamp . "2012-04-17") (notes . "(\"redirect colorthemes24\")")) nil]
["colorthemes" nil nil nil nil nil nil ((timestamp . "2008-08-18") (notes . "(\"redirect colortheme\")")) nil]
["colorthemetest" nil nil nil nil nil nil ((timestamp . "2009-10-12") (notes . "(\"redirect colourthemetest\")")) nil]
["colorwords" nil nil nil nil nil nil ((timestamp . "2005-05-15") (notes . "(\"see enriched.el and etc/enriched.doc\")")) nil]
["colour" nil nil nil nil nil nil ((timestamp . "2003-08-07") (notes . "(\"redirect color\")")) nil]
["colour-theme" nil nil nil nil nil nil ((timestamp . "2006-03-16") (notes . "(\"redirect color-theme\")")) nil]
["colours" nil nil nil nil nil nil ((timestamp . "2004-11-20") (notes . "(\"redirect colors\")")) nil]
["column-enforce-mode" nil nil nil nil nil nil ((timestamp . "2014-02-05") (notes . "(\"https://github.com/jordonbiondo/column-enforce-mode/\")")) nil]
["column-marker" nil nil nil nil nil nil ((timestamp . "2008-04-10") (notes . "(\"redirect columnmarker\")")) nil]
["column-number-mode" nil nil nil nil nil nil ((timestamp . "2003-01-28") (notes . "(\"redirect linenumbers\")")) nil]
["columnnumbers" nil nil nil nil nil nil ((timestamp . "2003-01-28") (notes . "(\"redirect linenumbers\")")) nil]
["combine" nil nil nil nil nil nil ((timestamp . "2015-09-08") (notes . "(\"a documentclass that lets you bundle individual documents into a single one, such as when preparing a conference proceedings available from http://ctan.org/pkg/combine\")")) nil]
["comet" nil nil nil nil nil nil ((timestamp . "2013-03-04") (notes . "(\"a web app model in which a long-held HTTP request allows a web server to push data to a browser, without the browser explicitly requesting it https://en.wikipedia.org/wiki/Comet_(programming)\")")) nil]
["comfort" nil nil nil nil nil nil ((timestamp . "2005-03-21") (notes . "(\"lisp (concat who \\\": \\\" (yoda))\")")) nil]
["comicsans" nil nil nil nil nil nil ((timestamp . "2009-05-07") (notes . "(\"vindicated! http://www.guardian.co.uk/commentisfree/2009/apr/28/leader-praise-comic-sans-typography\")")) nil]
["comma" nil nil nil nil nil nil ((timestamp . "2012-05-09") (notes . "(\"the evaluation mark in the backquote syntax\" \"(let ((b 2)) `(a ,b c)) ==> (a 2 c)\" \"the shorthand for you to message me\")")) nil]
["command-t" nil nil nil nil nil nil ((timestamp . "2013-06-28") (notes . "(\"https://wincent.com/products/command-t\")")) nil]
["commander-s" nil nil nil nil nil nil ((timestamp . "2006-06-29") (notes . "(\"an interactive front-end to scsh, described in http://www.deinprogramm.de/scheme-2005/05-knauel/05-knauel.pdf\")")) nil]
["CommandLineIsYourFriend" nil nil nil nil nil nil ((timestamp . "2004-03-09") (notes . "(\"at http://slashdot.org/article.pl?sid=04/03/09/1254211&mode=thread\" \"at http://osnews.com/story.php?news_id=6282&page=1\")")) nil]
["commando-fix" nil nil nil nil nil nil ((timestamp . "2013-01-15") (notes . "(\"noecho Most problems can be solved by judicious application of high explosives.\")")) nil]
["comment" nil nil nil nil nil nil ((timestamp . "2009-11-07") (notes . "(\"http://www.ctan.org/tex-archive/macros/latex/contrib/comment/\")")) nil]
["CommonLispUtilities" nil nil nil nil nil nil ((timestamp . "2004-06-30") (notes . "(\"at http://www.cliki.net/Common%20Lisp%20Utilities\")")) nil]
["communicate" nil nil nil nil nil nil ((timestamp . "2013-09-07") (notes . "(\"noecho what we have here is a failure to communicate.\")")) nil]
["communislamifascism" nil nil nil nil nil nil ((timestamp . "2011-06-17") (notes . "(\"gpl\")")) nil]
["CommunityMigration" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.etrumeus.com/ferment/CommunityMigration\")")) nil]
["comonad" nil nil nil nil nil nil ((timestamp . "2013-05-06") (notes . "(\"noecho /me cojabbers coincomprehensibly\")")) nil]
["comphelp" nil nil nil nil nil nil ((timestamp . "2005-03-21") (notes . "(\"at http://polaris.gseis.ucla.edu/pagre/how-to-help.html\")")) nil]
["compile" nil nil nil nil nil nil ((timestamp . "2011-07-14") (notes . "(\"M-x compile\" \"customizable, and can be modified to suit new compilers, interpreters, and linters\")")) nil]
["compiled" nil nil nil nil nil nil ((timestamp . "2003-05-17") (notes . "(\"funny guy ---> http://www.compiled.mine.nu\" \"something which is, compiled\")")) nil]
["CompilerWarnings" nil nil nil nil nil nil ((timestamp . "2010-08-04") (notes . "(\"(info \\\"(elisp) Warning Tips\\\")\")")) nil]
["compiles" nil nil nil nil nil nil ((timestamp . "2011-01-04") (notes . "(\"noecho Ship it!!\")")) nil]
["compilewindow" nil nil nil nil nil nil ((timestamp . "2007-08-06") (notes . "(\"redirect compileframe\")")) nil]
["complete" nil nil nil nil nil nil ((timestamp . "2009-06-23") (notes . "(\"the sample should be *complete*. This means it should compile, if possible.\")")) nil]
["complete-fix" nil nil nil nil nil nil ((timestamp . "2012-03-20") (notes . "(\"noecho most problems can be solved by turning off the computer, then installing debian on your ipad while having a hendrick's martini\")")) nil]
["complex" nil nil nil nil nil nil ((timestamp . "2010-08-22") (notes . "(\"noecho \\\"There must have been a moment, at the beginning, where we could have said ... no. Somehow we missed it. Well, we'll know better next time.\\\"\")")) nil]
["complexity" nil nil nil nil nil nil ((timestamp . "2010-05-19") (notes . "(\"http://www.cs.utexas.edu/users/arvindn/misc/knuth_song_complexity.pdf\")")) nil]
["computergirls" nil nil nil nil nil nil ((timestamp . "2011-11-11") (notes . "(\"for a scholarly essay about the masculization of computer programming, see https://www.ischool.utexas.edu/~nathan/files/ensmenger-gender.pdf\")")) nil]
["concabs" nil nil nil nil nil nil ((timestamp . "2010-10-30") (notes . "(\"Concrete Abstractions: An Introduction to Computer Science Using Scheme by Max Hailperin, Barbara Kaiser, and Karl Knight\" \"http://gustavus.edu/~max/concabs/\")")) nil]
["condorcet" nil nil nil nil nil nil ((timestamp . "2005-09-02") (notes . "(\"A voting method for one-win votings\" \"at http://www.electionmethods.org/\" \"at http://en.wikipedia.org/wiki/Condorcet_method\" \"at http://seehuhn.de/comp/vote.html\" \"A software tool to test this kind of voting for government of a bigger amount of people is at http://www.demexp.org/\")")) nil]
["conf-mode" nil nil nil nil nil nil ((timestamp . "2006-10-02") (notes . "(\"a command that sets up generic syntax highlighting suitable for miscellaneous Unix configuration files\")")) nil]
["ConferenceHost" nil nil nil nil nil nil ((timestamp . "2003-03-15") (notes . "(\"at http://www.etrumeus.com/ferment/ConferenceHost\")")) nil]
["configs" nil nil nil nil nil nil ((timestamp . "2004-12-31") (notes . "(\"http://www.xs4all.nl/~hanb/configs/\")")) nil]
["conflict" nil nil nil nil nil nil ((timestamp . "2002-11-03") (notes . "(\"resolved via vc-resolve-conflicts\")")) nil]
["confluence" nil nil nil nil nil nil ((timestamp . "2011-11-19") (notes . "(\"an enterprise wiki <http://www.atlassian.com/software/confluence/>; see http://code.google.com/p/confluence-el/\" \"nonfree, help write a data exporter http://moinmo.in/ConfluenceConverter\")")) nil]
["congress" nil nil nil nil nil nil ((timestamp . "2003-05-13") (notes . "(\"the opposite of progress\")")) nil]
["conjure" nil nil nil nil nil nil ((timestamp . "2006-10-17") (notes . "(\"a Scheme-based replacement for Make (http://home.gna.org/conjure/).\")")) nil]
["conky" nil nil nil nil nil nil ((timestamp . "2005-08-08") (notes . "(\"a readable X windows system monitor for linux; see http://conky.rty.ca\")")) nil]
["conlang" nil nil nil nil nil nil ((timestamp . "2008-06-02") (notes . "(\"a constructed language, i.e. a human language that hasn't been subjected to centuries of munging by filthy peasants\")")) nil]
["connect4" nil nil nil nil nil nil ((timestamp . "2005-06-03") (notes . "(\"at http://tuxserve.sourceforge.net/join-up4.php for xchat\")")) nil]
["conservapedia" nil nil nil nil nil nil ((timestamp . "2012-01-17") (notes . "(\"http://conservapedia.com/\" \"so good it has to be fattening\")")) nil]
["ConsideredHarmful" nil nil nil nil nil nil ((timestamp . "2011-10-13") (notes . "(\"goto according to Dijkstra\" \"global variables\" \"tabs\" \"csh programming\" \"cat -v\" \"#ifdef\" \"recursive make\" \"packet fragmentation\" \"new operator\" \"vi\" \"M-x customize\" \"cl.el\" \"\\\"cl.el considered harmful\\\"\" \"LD_LIBRARY_PATH\" \"NFS\" \"call/cc\" \"CamelCase, see ,dash-austerity\" \"rm -fr\" \"eval\" \"digraphs and trigraphs\" \"considered harmful meme\" \"harmfulp\")")) nil]
["consistency" nil nil nil nil nil nil ((timestamp . "2016-01-14") (notes . "(\"192211 kaste | I think what LaTeX and its ecosystem really lack is consistency for the interface across all packages. Everybody comes up with their own new syntax (yes, looking at you Till Tantau and Florent Chervet)\")")) nil]
["console" nil nil nil nil nil nil ((timestamp . "2012-11-20") (notes . "(\"lisp (format \\\"/me embraces %s tightly and whispers \\\\\\\"It's alright\\\\\\\" gently in their ear.\\\" (stringify-symbol-list lispargs))\")")) nil]
["conspiracy" nil nil nil nil nil nil ((timestamp . "2006-04-23") (notes . "(\"Collaboration between two or more parties to achieve some objective, typically illegal.\" \"See http://www.questionsquestions.net/documents2/conspiracyphobia.html for a conspiracy-friendly viewpoint.\" \"Read Umberto Eco: Foucault's Pendulum.\")")) nil]
["conspire" nil nil nil nil nil nil ((timestamp . "2008-07-29") (notes . "(\"http://github.com/technomancy/conspire\")")) nil]
["Consumables" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Consumables\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?Consumables\")")) nil]
["ConsumableWorkBooks" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?ConsumableWorkBooks\" \"at http://www.gnufans.net/fsedu.pl?ConsumableWorkBooks\")")) nil]
["ContactUs" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ContactUs\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?ContactUs\")")) nil]
["ContentDelivery" nil nil nil nil nil nil ((timestamp . "2003-08-21") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ContentDelivery\")")) nil]
["contradiction" nil nil nil nil nil nil ((timestamp . "2010-12-08") (notes . "(\"<bev> forcer: I did. I wasn't in here since I've been in here.\" \"what fsbot is full of\")")) nil]
["controlsequence" nil nil nil nil nil nil ((timestamp . "2010-07-08") (notes . "(\"a macro, tex-function, tex-procedure, ... you got the idea, i guess ;-)\" \"to check if something (e.g. a parameter to a control sequence) is a control sequence do \\\\def\\\\foo#1{ \\\\if\\\\noexpand#1\\\\relax control sequence \\\\else not a control sequence \\\\fi }\")")) nil]
["convenience" nil nil nil nil nil nil ((timestamp . "2012-04-09") (notes . "(\"noecho \\\"the conveniences you demanded are now mandatory\\\" -- Jello Biafra\")")) nil]
["cookie" nil nil nil nil nil nil ((timestamp . "2003-05-18") (notes . "(\"lisp (concat \\\"Here \\\" nick \\\", have \\\" (random-choose '(\\\"an Oreo\\\" \\\"a chocolate chip\\\" \\\"an oatmeal\\\" \\\"a peanut butter\\\")) \\\" cookie!\\\")\" \"yummy\")")) nil]
["cookies" nil nil nil nil nil nil ((timestamp . "2007-03-20") (notes . "(\"(find-file (expand-file-name \\\"COOKIES\\\" data-directory))\")")) nil]
["cool-story-bro" nil nil nil nil nil nil ((timestamp . "2010-08-18") (notes . "(\"http://p.hagelb.org/cool-story-bro.jpg\")")) nil]
["copypaste" nil nil nil nil nil nil ((timestamp . "2006-01-13") (notes . "(\"redirect copyandpaste\")")) nil]
["CopyRight" nil nil nil nil nil nil ((timestamp . "2008-05-06") (notes . "(\"at http://www.gnufans.net/fsedu.pl?CopyRight\")")) nil]
["Coq" nil nil nil nil nil nil ((timestamp . "2013-02-03") (notes . "(\"an interactive theorem prover\")")) nil]
["coredata" nil nil nil nil nil nil ((timestamp . "2011-08-12") (notes . "(\"a cocoa wrapper around sqlite\")")) nil]
["corkboard-tasks" nil nil nil nil nil nil ((timestamp . "2013-02-22") (notes . "(\"implement a better corkboard-task\")")) nil]
["corkscrew" nil nil nil nil nil nil ((timestamp . "2010-03-11") (notes . "(\"a tool for tunneling SSH through HTTP proxies; see http://www.agroman.net/corkscrew/\")")) nil]
["costfu" nil nil nil nil nil nil ((timestamp . "2012-08-24") (notes . "(\"Code or Shut the Fuck up.\")")) nil]
["CotS" nil nil nil nil nil nil ((timestamp . "2003-02-08") (notes . "(\"at http://www.subgenius.com/\")")) nil]
["coturing-test" nil nil nil nil nil nil ((timestamp . "2013-02-13") (notes . "(\"a test of whether or not a human can imitate a bot\" \"passed by shergill\" \"not to be confused with a test of couture\" \"not that we're saying shergill couldn't pass a couturing test if he put his mind to it.\")")) nil]
["coucou" nil nil nil nil nil nil ((timestamp . "2003-10-05") (notes . "(\"redirect salut\")")) nil]
["count" nil nil nil nil nil nil ((timestamp . "2010-07-01") (notes . "(\"ZERO-ONE-TWO-THREE!\")")) nil]
["counters" nil nil nil nil nil nil ((timestamp . "2009-12-25") (notes . "(\"http://www.uz.ac.zw/science/maths/latex/ltx-3.html\")")) nil]
["countwords" nil nil nil nil nil nil ((timestamp . "2010-05-12") (notes . "(\"redirect wordcount\")")) nil]
["cow" nil nil nil nil nil nil ((timestamp . "2012-08-10") (notes . "(\"copy-on-write, a model for memory management: http://en.wikipedia.org/wiki/Copy-on-write\")")) nil]
["coWiki" nil nil nil nil nil nil ((timestamp . "2003-01-16") (notes . "(\"at http://www.develnet.org/\")")) nil]
["cowshot" nil nil nil nil nil nil ((timestamp . "2012-02-09") (notes . "(\"noecho badum, *mooooo*\")")) nil]
["CPAN" nil nil nil nil nil nil ((timestamp . "2013-01-07") (notes . "(\"where the Perl modules come from\")")) nil]
["cpo" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"cash paid out\")")) nil]
["cpp" nil nil nil nil nil nil ((timestamp . "2012-10-23") (notes . "(\"the C preprocessor\")")) nil]
["cpp-macros" nil nil nil nil nil nil ((timestamp . "2011-11-24") (notes . "(\"noecho Death to macros! ☠☠☠☠\")")) nil]
["CPS" nil nil nil nil nil nil ((timestamp . "2012-04-18") (notes . "(\"a style of programming in which control is passed explicitly in the form of a continuation https://en.wikipedia.org/wiki/Continuation-passing_style\")")) nil]
["CPU" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Central Processing Unit\")")) nil]
["cracking" nil nil nil nil nil nil ((timestamp . "2004-10-28") (notes . "(\"breaking into some other persons computer, though you already got root access to your own.\" \"the process of breaking down long chain hydrocarbon molecules into useful but more volatile short chain ones, cf the production of consumer-grade fuel from crude oil.\")")) nil]
["crackpot" nil nil nil nil nil nil ((timestamp . "2010-08-18") (notes . "(\"Ray Kurzweil\")")) nil]
["crawl" nil nil nil nil nil nil ((timestamp . "2012-05-13") (notes . "(\"dungeon crawl stone soup is an open-source, single-player, role-playing roguelike game, see http://crawl.develz.org/wordpress/\" \"a good time waster\" \"mature, but also in active development\")")) nil]
["creation" nil nil nil nil nil nil ((timestamp . "2012-07-30") (notes . "(\"noecho destruction\")")) nil]
["Creator" nil nil nil nil nil nil ((timestamp . "2013-11-12") (notes . "(\"deego: deego3atgmaildotcom\" \"For detailed fsbot specific discussions, #fsbot\")")) nil]
["credit-rating" nil nil nil nil nil nil ((timestamp . "2011-10-19") (notes . "(\"black magic\" \"a measurement of how likely you are to consistently make the minimum payment.\")")) nil]
["creole" nil nil nil nil nil nil ((timestamp . "2013-01-14") (notes . "(\"a markup language similar to mediawiki, see http://en.wikipedia.org/wiki/Creole_(markup)\" \"http://marmalade-repo.org/packages/creole\" \"http://github.com/nicferrier/elwikicreole\")")) nil]
["creole-mode" nil nil nil nil nil nil ((timestamp . "2013-01-05") (notes . "(\"a major mode for editing creole files: https://github.com/nicferrier/creole-mode\")")) nil]
["crickets" nil nil nil nil nil nil ((timestamp . "2012-02-21") (notes . "(\"noecho *chirp*, *chirp*, *chirp*\")")) nil]
["CriminalityofNonFreeSoftware" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?CriminalityofNonFreeSoftware\" \"at http://www.gnufans.net/fsedu.pl?CriminalityofNonFreeSoftware\")")) nil]
["criminalp" nil nil nil nil nil nil ((timestamp . "2012-04-28") (notes . "(\"lisp (= 0 (random 2))\")")) nil]
["CRLF" nil nil nil nil nil nil ((timestamp . "2005-05-10") (notes . "(\"redirect dostounix\")")) nil]
["CRM" nil nil nil nil nil nil ((timestamp . "2013-07-30") (notes . "(\"Customer Relationship Management -- a model for managing a company's interactions with current and future customers <https://en.wikipedia.org/wiki/Customer_relationship_management>\")")) nil]
["crm114" nil nil nil nil nil nil ((timestamp . "2010-04-28") (notes . "(\"CRM114 is a system to examine incoming e-mail, system log streams, data files or other data streams, and to sort, filter, or alter the incoming files or data streams according to the user's wildest desires. Criteria for categorization of data can be via a host of methods, including regexes, approximate regexes, a Hidden Markov Model, Bayesian Chain Rule Orthogonal Sparse Bigrams, Winnow, Correlation,\" \"http://crm114.sourceforge.net/wiki/doku.php\")")) nil]
["crockfordmonad" nil nil nil nil nil nil ((timestamp . "2014-01-12") (notes . "(\"an object with methods that return itself, an inaccurate understanding of monads from douglas crockford.\" \"the presentation where douglas crockford introduces the idea http://www.youtube.com/watch?v=dkZFtimgAcM\")")) nil]
["crop" nil nil nil nil nil nil ((timestamp . "2015-09-14") (notes . "(\"A pack­age pro­vid­ing cor­ner marks for cam­era align­ment as well as for trim­ming pa­per stacpks available from https://www.ctan.org/pkg/crop?lang=en\")")) nil]
["croquet" nil nil nil nil nil nil ((timestamp . "2004-10-12") (notes . "(\"a cool 3D environment written in smalltalk, http://opencroquet.org/Croquet_Technologies/downloads.html\")")) nil]
["cross-reference" nil nil nil nil nil nil ((timestamp . "2015-11-30") (notes . "(\"https://en.wikibooks.org/wiki/LaTeX/Labels_and_Cross-referencing\")")) nil]
["crossing-guards" nil nil nil nil nil nil ((timestamp . "2013-02-25") (notes . "(\"noecho SCOLD HIM!!\")")) nil]
["crossover-office" nil nil nil nil nil nil ((timestamp . "2005-03-29") (notes . "(\"redirect cxoffice\")")) nil]
["CRT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Cathode Ray Tube\")")) nil]
["crud" nil nil nil nil nil nil ((timestamp . "2011-05-31") (notes . "(\"just another word for crap\" \"like rubble.\" \"acronym for create, read, update, delete\")")) nil]
["cruft" nil nil nil nil nil nil ((timestamp . "2006-12-27") (notes . "(\"sometimes said to be the software equivalent of dust bunnies <http://wikipedia.org/wiki/Cruft>\")")) nil]
["crystalball" nil nil nil nil nil nil ((timestamp . "2012-03-15") (notes . "(\"noecho Hang on, I'll get my crystal ball out to tell me what your problem is.\")")) nil]
["cs3" nil nil nil nil nil nil ((timestamp . "2007-05-06") (notes . "(\"creative suite 3, aka. adobe photoshop\")")) nil]
["CSAIL" nil nil nil nil nil nil ((timestamp . "2009-08-02") (notes . "(\"the Computer Science and AI Lab at MIT\")")) nil]
["csat" nil nil nil nil nil nil ((timestamp . "2014-11-09") (notes . "(\"noecho Macro names with an @ in them usually indicate internal class or package macros that cannot be used directly in LaTeX documents. See http://tex.stackexchange.com/a/8353 for more information.\")")) nil]
["csb" nil nil nil nil nil nil ((timestamp . "2012-02-01") (notes . "(\"http://p.hagelb.org/csb.gif\")")) nil]
["CSCL" nil nil nil nil nil nil ((timestamp . "2013-05-20") (notes . "(\"where you analyze the relationship between The Simpsons and Chaucer, while considering the nature of the ubermenche in the feminist revival of Marxist ideologies and their relationship to the Freudian super-ego. If you can't do this in a single paper (while citing Beavis And Butthead), you can't get a CSCL degree.\")")) nil]
["cseder-fix" nil nil nil nil nil nil ((timestamp . "2012-12-01") (notes . "(\"noecho It's really annoying. I'll go eat some cake. Maybe I'll feel better.\")")) nil]
["cseq" nil nil nil nil nil nil ((timestamp . "2009-10-14") (notes . "(\"the TeX Reference Manual by David Bausum at http://www.tug.org/utilities/plain/cseq.html\")")) nil]
["csh" nil nil nil nil nil nil ((timestamp . "2010-07-29") (notes . "(\"the C Shell released by UC Berkeley in 1978\" \"interactive features and closer to C syntax\" \"was ironically awful for scripting\" \"see also ,sh\")")) nil]
["CSP" nil nil nil nil nil nil ((timestamp . "2012-06-18") (notes . "(\"Communicating Sequential Processes\")")) nil]
["csquote" nil nil nil nil nil nil ((timestamp . "2011-11-08") (notes . "(\"a package to quote text. ftp://tug.ctan.org/tex-archive/macros/latex/contrib/csquotes/csquotes.pdf\")")) nil]
["csrf" nil nil nil nil nil nil ((timestamp . "2012-11-30") (notes . "(\"\\\"cross-site-request-forgery, also known as a one-click attack or session riding and abbreviated as CSRF (sometimes pronounced sea-surf) or XSRF, is a type of malicious exploit of a website whereby unauthorized commands are transmitted from a user that the website trusts. Unlike cross-site scripting (XSS), which exploits the trust a user has for a particular site, CSRF exploits the trust that a site has in a user's browser.\\\" -\")")) nil]
["CSS" nil nil nil nil nil nil ((timestamp . "2003-03-23") (notes . "(\"redirect CascadingStyleSheetMode\")")) nil]
["css-mode" nil nil nil nil nil nil ((timestamp . "2003-04-02") (notes . "(\"redirect css\")")) nil]
["cssc" nil nil nil nil nil nil ((timestamp . "2013-06-03") (notes . "(\"the more actively maintained GNU VCS.\" \"mainly useful for extracting legacy sccs data\")")) nil]
["csspaces" nil nil nil nil nil nil ((timestamp . "2012-07-05") (notes . "(\"noecho Spaces after control sequences are eaten by TeX. To prevent that use braces `\\\\cs{} foo', an explicit space `\\\\cs\\\\ foo', or \\\\xspace from the xspace package in the definition of \\\\cs to automagically insert spaces where needed.\")")) nil]
["CSV" nil nil nil nil nil nil ((timestamp . "2013-10-21") (notes . "(\"Command-Separated Values -- a table format that separates records with ^J and fields with ,\")")) nil]
["csvsimple" nil nil nil nil nil nil ((timestamp . "2011-06-22") (notes . "(\"a packaget that provides a simple LaTeX interface for the processing of files with comma separated values (CSV); it relies on the key value syntax supported by pgfkeys to simplify usage. http://ctan.org/pkg/csvsimple\")")) nil]
["csvtools" nil nil nil nil nil nil ((timestamp . "2011-06-22") (notes . "(\"a package that allows you to repeatedly perform a set of LaTeX commands on data in each row of a comma separated variable (CSV) file (though substitution of the comma is permitted). http://ctan.org/pkg/csvtools\")")) nil]
["ctags" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"redirect ExuberantCtags\")")) nil]
["cthulhu" nil nil nil nil nil nil ((timestamp . "2011-08-10") (notes . "(\"noecho Ph'nglui mglw'nafh Cthulhu R'lyeh wgah'nagl ftaghn.\")")) nil]
["cthulu" nil nil nil nil nil nil ((timestamp . "2010-05-31") (notes . "(\"redirect cthulhu\")")) nil]
["ctl" nil nil nil nil nil nil ((timestamp . "2008-05-02") (notes . "(\"Color Transform Language\" \"http://www.oscars.org/council/ctl.html\" \"Not GPL compatible\")")) nil]
["ctm" nil nil nil nil nil nil ((timestamp . "2005-04-11") (notes . "(\"The book \\\"Concepts, Techniques, and Models of Computer Programming\\\"; see http://www.info.ucl.ac.be/people/PVR/book.html\")")) nil]
["cto" nil nil nil nil nil nil ((timestamp . "2003-02-04") (notes . "(\"the TUNES CLiki\")")) nil]
["ctrl" nil nil nil nil nil nil ((timestamp . "2002-12-20") (notes . "(\"C-x is press and hold [Ctrl], press [x], release [Ctrl] and release [x]; See also meta\")")) nil]
["ctrl-tab" nil nil nil nil nil nil ((timestamp . "2011-11-05") (notes . "(\"alt-tab-like switching does not work, give up\")")) nil]
["ctrlproxy" nil nil nil nil nil nil ((timestamp . "2004-07-16") (notes . "(\"http://ctrlproxy.vernstok.nl/\" \"\\\"CtrlProxy runs on a computer with a 24/7 internet connection and allows you to transparently connect to IRC from anywhere on the world to your nick. It connects to one or more IRC servers and then allows you to connect to it with any number of clients, providing access to these servers. \\\"\")")) nil]
["cua" nil nil nil nil nil nil ((timestamp . "2011-01-26") (notes . "(\"redirect cuamode\")")) nil]
["cua-selection-mode" nil nil nil nil nil nil ((timestamp . "2011-06-05") (notes . "(\"the rectangle editing features of cua-mode, without the annoying CUA bindings (C-x C-z C-c C-v)\")")) nil]
["cube" nil nil nil nil nil nil ((timestamp . "2006-01-20") (notes . "(\"http://www.cubeengine.com/\" \"a landscape-style engine that pretends to be an indoor FPS engine, which combines very high precision dynamic occlusion culling with a form of geometric mipmapping on the whole world for dynamic LOD for configurable fps & graphic detail on most machines.\" \"License: zlib/libpng License\")")) nil]
["CUDA" nil nil nil nil nil nil ((timestamp . "2010-09-01") (notes . "(\"Nvidia's C-like language for hybrid CPU/GPU programming\" \"see ,CudaMode\")")) nil]
["cuit" nil nil nil nil nil nil ((timestamp . "2012-09-28") (notes . "(\"known as flash gordon!\")")) nil]
["cultural-institute" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"http://www.google.com/culturalinstitute/ which have more porn reference than GNU one.\")")) nil]
["culture" nil nil nil nil nil nil ((timestamp . "2013-04-13") (notes . "(\"noecho when I hear the word culture I reach for my knife-missile.\")")) nil]
["cunards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho SHIP HIM!!\")")) nil]
["cupofsweethoney" nil nil nil nil nil nil ((timestamp . "2012-05-11") (notes . "(\"noecho Oh, you want to draw B-trees? Have a look at http://tex.stackexchange.com/questions/17331/how-do-i-draw-a-b-tree-in-latex\")")) nil]
["CupsQuickStart" nil nil nil nil nil nil ((timestamp . "2004-01-30") (notes . "(\"at http://www.linuxprinting.org/cups-doc.html\")")) nil]
["curds" nil nil nil nil nil nil ((timestamp . "2012-10-25") (notes . "(\"noecho CURDLE HIM!!\")")) nil]
["curmudgeon" nil nil nil nil nil nil ((timestamp . "2009-06-03") (notes . "(\"redirect twb\")")) nil]
["currency-conversion" nil nil nil nil nil nil ((timestamp . "2003-05-06") (notes . "(\"at http://www.xe.com/ucc/\")")) nil]
["curse" nil nil nil nil nil nil ((timestamp . "2007-10-22") (notes . "(\"noecho jordanb: From hell's heart I stab at thee. For hate's sake I spit my last breath at thee.\")")) nil]
["cursed-GTK+" nil nil nil nil nil nil ((timestamp . "2003-08-27") (notes . "(\"at http://zemljanka.sourceforge.net/cursed/\")")) nil]
["CursorColor" nil nil nil nil nil nil ((timestamp . "2003-07-01") (notes . "(\"to set the color of the cursor to red, (setq default-frame-alist '((cursor-color . \\\"red\\\")))\")")) nil]
["custards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho DOUBLE-BOIL HIM!!\")")) nil]
["custom" nil nil nil nil nil nil ((timestamp . "2012-10-25") (notes . "(\"M-x customize\" \"Custom is the law of tools\")")) nil]
["customize-issues" nil nil nil nil nil nil ((timestamp . "2010-04-23") (notes . "(\"http://old.nabble.com/Fwd:-ideas-for-customize-td21272828.html\")")) nil]
["cut" nil nil nil nil nil nil ((timestamp . "2011-04-29") (notes . "(\"Debian's Constantly Usable Testing (so far just a proposal)\")")) nil]
["cut-buffers" nil nil nil nil nil nil ((timestamp . "2012-03-18") (notes . "(\"redirect x-selections\")")) nil]
["CutAndPaste" nil nil nil nil nil nil ((timestamp . "2008-09-22") (notes . "(\"Use C-SPC to set the mark\" \"then use C-w to cut the region of text between point and your previously set mark\" \"finally, use C-y to paste the previously cut text\" \"this is explained further in the tutorial, which you can see by typing C-h t\" \"see also: copyandpaste\")")) nil]
["cvandusen" nil nil nil nil nil nil ((timestamp . "2013-05-10") (notes . "(\"no one\")")) nil]
["cvandusensnack" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"lisp \\\"/me gives cvandusen a 16-18lb turkey\\\"\")")) nil]
["CVCS" nil nil nil nil nil nil ((timestamp . "2012-03-18") (notes . "(\"a centralised version control system. Compare with DVCS.\")")) nil]
["CVE" nil nil nil nil nil nil ((timestamp . "2012-06-12") (notes . "(\"Common Vulnerabilities and Exposures <https://cve.mitre.org/>\")")) nil]
["CWD" nil nil nil nil nil nil ((timestamp . "2012-10-08") (notes . "(\"Current Working Directory\")")) nil]
["cxoffice" nil nil nil nil nil nil ((timestamp . "2005-03-29") (notes . "(\"a NONFREE graphical front-end for wine\")")) nil]
["CYA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for See You Around\")")) nil]
["cyc" nil nil nil nil nil nil ((timestamp . "2010-08-07") (notes . "(\"an artificial intelligence project that attempts to assemble a comprehensive ontology and database of everyday common sense knowledge, with the goal of enabling AI applications to perform human-like reasoning.\" \"Your tax dollars at work!\")")) nil]
["cycbuf" nil nil nil nil nil nil ((timestamp . "2010-06-03") (notes . "(\"a buffer switching module and the successor of swbuff-y.\" \"http://os.inf.tu-dresden.de/~mp26/download/cycbuf.el\")")) nil]
["CycleBuffer" nil nil nil nil nil nil ((timestamp . "2010-06-17") (notes . "(\"redirect cycle-buffer.el\")")) nil]
["cycling" nil nil nil nil nil nil ((timestamp . "2002-09-27") (notes . "(\"something to switch buffers quickly. See iswitchb for more.\")")) nil]
["cyclone" nil nil nil nil nil nil ((timestamp . "2003-12-02") (notes . "(\"a type-safe variant of the C programming language.\" \"at http://www.research.att.com/projects/cyclone/\")")) nil]
["cygwin" nil nil nil nil nil nil ((timestamp . "2011-07-27") (notes . "(\"A Unix environment for Windows. See http://cygwin.com/\" \"a perfectly solid Unix in the sense that a solid house built on top of a giant cabbage would still be a solid house.\")")) nil]
["cylinder-space-ratio" nil nil nil nil nil nil ((timestamp . "2002-09-18") (notes . "(\"fdisk gives you the info needed to figure it out\" \"Else fdisk, /etc/fstab and xdiskusage (as root!) will together clarify things\" \"The best way is to run cfdisk\")")) nil]
["Cyrano" nil nil nil nil nil nil ((timestamp . "2003-02-04") (notes . "(\"a person who says hello!\")")) nil]
["cyrus" nil nil nil nil nil nil ((timestamp . "2005-04-10") (notes . "(\"a highly scalable enterprise mail system\" \"http://asg.web.cmu.edu/cyrus/\")")) nil]
["D" nil nil nil nil nil nil ((timestamp . "2013-02-12") (notes . "(\"http://www.digitalmars.com/d/\" \"one of the many unsuccessful attempts to make a better C\" \"a fictional recreational drug from the novel A Scanner Darkly: http://www.wikidoc.org/index.php/Substance_D\")")) nil]
["D/L" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Download\")")) nil]
["d11n" nil nil nil nil nil nil ((timestamp . "2012-09-26") (notes . "(\"documentation\")")) nil]
["dabblers" nil nil nil nil nil nil ((timestamp . "2012-11-28") (notes . "(\"http://www.idlewords.com/2005/04/dabblers_and_blowhards.htm\")")) nil]
["DAC" nil nil nil nil nil nil ((timestamp . "2013-02-26") (notes . "(\"short for Digital [To] Analog Converter\" \"https://en.wikipedia.org/wiki/Discretionary_access_control (cf. https://en.wikipedia.org/wiki/Mandatory_access_control)\")")) nil]
["dad" nil nil nil nil nil nil ((timestamp . "2006-10-05") (notes . "(\"noecho My dad is deego!! <3 <3\")")) nil]
["daddy" nil nil nil nil nil nil ((timestamp . "2006-10-05") (notes . "(\"redirect dad\")")) nil]
["DAG" nil nil nil nil nil nil ((timestamp . "2007-07-22") (notes . "(\"directed acyclic graph. Like a tree, but more.\")")) nil]
["dalek" nil nil nil nil nil nil ((timestamp . "2006-03-01") (notes . "(\"noecho Exterminez vous! Exterminez vous encore!\")")) nil]
["dalvik" nil nil nil nil nil nil ((timestamp . "2012-10-10") (notes . "(\"the android java vm\")")) nil]
["damd" nil nil nil nil nil nil ((timestamp . "2012-07-16") (notes . "(\"NSFW\" \"resentful\")")) nil]
["DAML" nil nil nil nil nil nil ((timestamp . "2003-02-12") (notes . "(\"the Darpa Agent Markup Language, an RDF application, see http://www.daml.org/\")")) nil]
["dance" nil nil nil nil nil nil ((timestamp . "2012-02-25") (notes . "(\"noecho ^(^-')^ .('-^). ,(>_>)^ ^(<_<).\")")) nil]
["danceoff" nil nil nil nil nil nil ((timestamp . "2013-05-27") (notes . "(\"http://youtu.be/KoQb8vb4blA\")")) nil]
["dancingbunnies" nil nil nil nil nil nil ((timestamp . "2010-01-17") (notes . "(\"A PEBKAC problem described at http://www.codinghorror.com/blog/archives/000347.html\" \"why we will never have completely effective security on the Internet\")")) nil]
["DANE" nil nil nil nil nil nil ((timestamp . "2011-11-30") (notes . "(\"DNS-based Authentication of Named Entities\")")) nil]
["dang" nil nil nil nil nil nil ((timestamp . "2003-02-14") (notes . "(\"a weaker form of \\\"damn\\\".\")")) nil]
["danger" nil nil nil nil nil nil ((timestamp . "2012-06-28") (notes . "(\"noecho Danger, Will Robinson!\")")) nil]
["Danish" nil nil nil nil nil nil ((timestamp . "2003-05-04") (notes . "(\"something you eat\")")) nil]
["danl" nil nil nil nil nil nil ((timestamp . "2003-06-12") (notes . "(\"redirect DanielLundin\")")) nil]
["dante" nil nil nil nil nil nil ((timestamp . "2011-09-07") (notes . "(\"der Deutschsprachige Anwendervereinigung TeX: http://www.dante.de/\" \"proxy communication solution http://www.inet.no/dante/\")")) nil]
["darcs-mode" nil nil nil nil nil nil ((timestamp . "2008-04-11") (notes . "(\"a non-VC darcs interface <http://fresh.homeunix.net/~luke/repos/darcs-mode/>\")")) nil]
["dardevelin" nil nil nil nil nil nil ((timestamp . "2011-10-09") (notes . "(\"a bot snack\")")) nil]
["darem" nil nil nil nil nil nil ((timestamp . "2011-02-26") (notes . "(\"possibly a misspelling of the name Darrell or a smrt way of spelling DRM\")")) nil]
["dark" nil nil nil nil nil nil ((timestamp . "2012-05-18") (notes . "(\"no echo It is pitch black. You are likely to be eaten by a GNU.\")")) nil]
["dark-matter" nil nil nil nil nil nil ((timestamp . "2013-02-13") (notes . "(\"the residual energy from the collision of two universes.\")")) nil]
["DarkNet" nil nil nil nil nil nil ((timestamp . "2010-08-13") (notes . "(\"any secretive network that spans across the Internet\" \"see also DeepWeb\")")) nil]
["DarlMcbride" nil nil nil nil nil nil ((timestamp . "2003-08-23") (notes . "(\"at http://www.anerispress.com/wltsim/\")")) nil]
["daroof" nil nil nil nil nil nil ((timestamp . "2013-01-12") (notes . "(\"The roof is on fire!\")")) nil]
["darpa" nil nil nil nil nil nil ((timestamp . "2012-12-05") (notes . "(\"https://en.wikipedia.org/wiki/DARPA\")")) nil]
["dart" nil nil nil nil nil nil ((timestamp . "2012-07-29") (notes . "(\"https://github.com/nex3/dart-mode\" \"webscale\")")) nil]
["dartium" nil nil nil nil nil nil ((timestamp . "2013-12-30") (notes . "(\"a special build of Chromium that includes the dart VM; see https://www.dartlang.org/tools/dartium/\")")) nil]
["darwin" nil nil nil nil nil nil ((timestamp . "2012-02-29") (notes . "(\"noecho an open source POSIX-compliant computer operating system released by Apple Inc. in 2000; http://en.wikipedia.org/wiki/Darwin_BSD\")")) nil]
["dash-austerity" nil nil nil nil nil nil ((timestamp . "2010-09-08") (notes . "(\"redirect hyphen-austerity\")")) nil]
["dash.el" nil nil nil nil nil nil ((timestamp . "2012-12-08") (notes . "(\"redirect dash\")")) nil]
["dashboard" nil nil nil nil nil nil ((timestamp . "2004-03-12") (notes . "(\"http://www.nat.org/dashboard/\")")) nil]
["dasher" nil nil nil nil nil nil ((timestamp . "2010-01-27") (notes . "(\"an information-efficient text entry interface, see http://vision.eng.shu.ac.uk/neural/Bayesian/wol.ra.phy.cam.ac.uk/mackay/dasher/ , demonstrations at http://www.inference.phy.cam.ac.uk/dasher/Demonstrations.html\")")) nil]
["dashing" nil nil nil nil nil nil ((timestamp . "2013-05-31") (notes . "(\"The exceptionally handsome dashboard framework. http://shopify.github.io/dashing/\")")) nil]
["data-cvs-entry" nil nil nil nil nil nil ((timestamp . "2003-05-21") (notes . "(\"/botbbdb/1.10/Sun Mar 2 15:27:11 2003//\" \"the cvs entry for the fsbot data in FSEDU cvs\")")) nil]
["data-cvs-root" nil nil nil nil nil nil ((timestamp . "2003-03-01") (notes . "(\"/subversions.gnu.org:/cvsroot/fsedu/botbbdb/botbbdb\")")) nil]
["data-cvs-snapshot" nil nil nil nil nil nil ((timestamp . "2003-05-21") (notes . "(\"cvssnapshot.sh\" \"a script that will download the latest bbdb and store it in cvs\" \"producing commands to tell fsbot about the updates\" \"reachable via cvs co, see term [FSEDu-CVS-CO]\")")) nil]
["data-ls" nil nil nil nil nil nil ((timestamp . "2003-05-21") (notes . "(\"-rw-r--r-- 1 mdupont mdupont 331563 2003-03-04 17:26:26.000000000 +0100 botbbdb\" \"the ls command on the fsbot data on disk\")")) nil]
["data-ls-meta" nil nil nil nil nil nil ((timestamp . "2003-02-26") (notes . "(\"ls -lat --time-style=full-iso#\")")) nil]
["data-md5" nil nil nil nil nil nil ((timestamp . "2003-05-21") (notes . "(\"342109c1f14b8310f80ec1dd83714636 botbbdb\" \"the md5 digest of the fsbot data on disk\")")) nil]
["datatool" nil nil nil nil nil nil ((timestamp . "2014-07-11") (notes . "(\"a package to create or load databases from different file formats\")")) nil]
["date" nil nil nil nil nil nil ((timestamp . "2012-04-20") (notes . "(\"redirect insertdate\")")) nil]
["datetime" nil nil nil nil nil nil ((timestamp . "2014-07-15") (notes . "(\"a package to provide flexible date format definitions available under http://www.ctan.org/tex-archive/macros/latex/contrib/datetime\")")) nil]
["dave" nil nil nil nil nil nil ((timestamp . "2011-10-11") (notes . "(\"impressed by IRC bots.\")")) nil]
["daveo" nil nil nil nil nil nil ((timestamp . "2011-10-11") (notes . "(\"impressed by IRC bots.\")")) nil]
["DavidAWheeler" nil nil nil nil nil nil ((timestamp . "2004-07-20") (notes . "(\"redirect DavidWheeler\")")) nil]
["DavidWheeler" nil nil nil nil nil nil ((timestamp . "2004-07-20") (notes . "(\"See also WhyBeGPLCompatible\")")) nil]
["dawg" nil nil nil nil nil nil ((timestamp . "2010-09-20") (notes . "(\"noecho Sup, Dawg? Heard you like to chat, so we put a bot in your bot so you can chat while you chat!\")")) nil]
["day-z" nil nil nil nil nil nil ((timestamp . "2012-07-12") (notes . "(\"a much better first-person survival zombie-shooter\")")) nil]
["Dayan" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"an israeli General who fought in the 6 day war\" \"Moshe Dayan\" \"http://en.wikipedia.org/wiki/Moshe_Dayan\")")) nil]
["dbd" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://www.defectivebydesign.org/\")")) nil]
["dbishell" nil nil nil nil nil nil ((timestamp . "2008-01-25") (notes . "(\"database shell with variable interpolation, sql placeholders and readline support. See http://rtfm.etla.org/sql/dbishell/\")")) nil]
["dbus" nil nil nil nil nil nil ((timestamp . "2007-02-08") (notes . "(\"an IPC (Inter Process Communication) architecture.\" \"http://dbus.freedesktop.org/doc/dbus-tutorial.html\")")) nil]
["dcc" nil nil nil nil nil nil ((timestamp . "2009-12-22") (notes . "(\"an extension to IRC which allows direct communication with a peer, for sending files and low latency chats\" \"To use dcc in ERC, you need to do (require 'erc-dcc)\" \"/dcc send NICK FILE\")")) nil]
["dcl" nil nil nil nil nil nil ((timestamp . "2003-01-16") (notes . "(\"Double Chocco Latte, project management software see http://dcl.sf.net\" \"part of the GNUe project\")")) nil]
["dcvstruce" nil nil nil nil nil nil ((timestamp . "2012-10-30") (notes . "(\"noecho Can't we all just agree that CVS sucks and leave it at that...\")")) nil]
["dd" nil nil nil nil nil nil ((timestamp . "2012-09-10") (notes . "(\"<C-S-backspace> (kill-whole-line)\" \"Debian Developer.\" \"a *nix tool designed to allow the user to find new and interesting ways to eliminate their important data\")")) nil]
["DDC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Display Data Channel\")")) nil]
["ddd" nil nil nil nil nil nil ((timestamp . "2009-05-12") (notes . "(\"http://www.gnu.org/software/ddd/\" \"a severely underappreciated debugger with lots of nifty features\")")) nil]
["ddg" nil nil nil nil nil nil ((timestamp . "2011-12-23") (notes . "(\"redirect duckduckgo\")")) nil]
["DDOS" nil nil nil nil nil nil ((timestamp . "2006-03-29") (notes . "(\"Distributed Denial Of Service.\")")) nil]
["DDR" nil nil nil nil nil nil ((timestamp . "2013-06-19") (notes . "(\"dance dance revolution\")")) nil]
["DDWG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Digital Display Working Group\")")) nil]
["DDX" nil nil nil nil nil nil ((timestamp . "2010-08-12") (notes . "(\"Device Dependent X\" \"not DIX\")")) nil]
["de-grumble-sachac" nil nil nil nil nil nil ((timestamp . "2004-09-29") (notes . "(\"lisp (message \\\"/me offers sachac some chocolates\\\")\")")) nil]
["dead" nil nil nil nil nil nil ((timestamp . "2011-11-06") (notes . "(\"noecho it's not dead, it's just inert!\")")) nil]
["dead-math" nil nil nil nil nil nil ((timestamp . "2012-10-16") (notes . "(\"at http://www.math.rutgers.edu/~kellenm/deaths.html\")")) nil]
["Deadmau5" nil nil nil nil nil nil ((timestamp . "2012-10-17") (notes . "(\"not important.\")")) nil]
["dealwithit" nil nil nil nil nil nil ((timestamp . "2012-03-02") (notes . "(\"http://p.hagelb.org/riker.gif\")")) nil]
["debain" nil nil nil nil nil nil ((timestamp . "2010-09-20") (notes . "(\"a nickname for debian which is popular among the spelling-impaired\")")) nil]
["debian-faq" nil nil nil nil nil nil ((timestamp . "2002-11-26") (notes . "(\"at http://www.linuks.mine.nu/debian-faq/\")")) nil]
["debianfaq" nil nil nil nil nil nil ((timestamp . "2002-11-27") (notes . "(\"redirect debian-faq\")")) nil]
["DebianIso" nil nil nil nil nil nil ((timestamp . "2003-06-11") (notes . "(\"at http://www.debian.org/distrib/cd\")")) nil]
["DebianLinksDesktopSearch" nil nil nil nil nil nil ((timestamp . "2004-11-16") (notes . "(\"redirect DesktopSearch\")")) nil]
["DebianMMAPRanOutOfRoom" nil nil nil nil nil nil ((timestamp . "2003-02-19") (notes . "(\"Add APT::Cache-Limit \\\"14194304\\\"; to the end of /etc/apt/apt.conf\")")) nil]
["DebianProject" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.etrumeus.com/ferment/DebianProject\")")) nil]
["DebianReferenceCard" nil nil nil nil nil nil ((timestamp . "2004-04-22") (notes . "(\"at http://people.debian.org/~debacle/refcard/\")")) nil]
["DebianUnstable" nil nil nil nil nil nil ((timestamp . "2004-01-28") (notes . "(\"To build unstable packages against current libs, \\\"apt-get -b source <pkgname>\\\"\")")) nil]
["DebianUsersAndGroups" nil nil nil nil nil nil ((timestamp . "2003-08-26") (notes . "(\"at http://plateau.is.titech.ac.jp/doc/base-passwd/users-and-groups.html\")")) nil]
["debugit" nil nil nil nil nil nil ((timestamp . "2014-01-13") (notes . "(\"noecho How should we know why your feature isn't working? Have you tried debugging it\")")) nil]
["debugmode" nil nil nil nil nil nil ((timestamp . "2004-10-05") (notes . "(\"redirect debuggermode\")")) nil]
["dec" nil nil nil nil nil nil ((timestamp . "2007-09-12") (notes . "(\"Digital Equipment Corporation\" \"used to make great computers. Now part of a company that makes ho-hum computers (including the one being used to type this---My dad still works there, so we get an employee discount :-)\")")) nil]
["deego" nil nil nil nil nil nil ((timestamp . "2013-11-12") (notes . "(\"My Creator. See ,,owner\")")) nil]
["deegoscripts" nil nil nil nil nil nil ((timestamp . "2008-03-24") (notes . "(\"at http://www.gnufans.net/~deego/pub/usr/local/scripts/\")")) nil]
["deek0146" nil nil nil nil nil nil ((timestamp . "2010-12-27") (notes . "(\"a cruel, cruel bot-abuser.\" \"Has a juvenile sense of humor.\")")) nil]
["DeepWeb" nil nil nil nil nil nil ((timestamp . "2010-08-13") (notes . "(\"World Wide Web content that is not part of the Surface Web, which is indexed by standard search engines\" \"see also DarkNet\")")) nil]
["default-frame-alist" nil nil nil nil nil nil ((timestamp . "2009-11-10") (notes . "(\"M-x customize-variable RET default-frame-alist RET\" \"parameters include background-color (a colour name or #xxxxxx string), foreground-color, mouse-color, cursor-color, font (a font spec string), vertical-scroll-bars (t or nil), menu-bar-lines and tool-bar-lines\")")) nil]
["defaultcolors" nil nil nil nil nil nil ((timestamp . "2004-11-20") (notes . "(\"redirect colors\")")) nil]
["defaultfont" nil nil nil nil nil nil ((timestamp . "2008-08-21") (notes . "(\"redirect FAQ\")")) nil]
["defaults" nil nil nil nil nil nil ((timestamp . "2012-03-29") (notes . "(\"noecho defaults suck\")")) nil]
["defcon8" nil nil nil nil nil nil ((timestamp . "2006-06-29") (notes . "(\"cool\")")) nil]
["DefendStudents" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?DefendStudents\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?DefendStudents\")")) nil]
["defvar" nil nil nil nil nil nil ((timestamp . "2011-10-19") (notes . "(\"how to declare variables in a Lisp library\" \"will not be re-evaluated if it is already set\" \"will always be re-evaluated with C-M-x\")")) nil]
["del" nil nil nil nil nil nil ((timestamp . "2011-09-07") (notes . "(\"redirect backspace\")")) nil]
["DelayedLaughter" nil nil nil nil nil nil ((timestamp . "2011-03-22") (notes . "(\"lisp (progn (sleep-for 5) (joke))\")")) nil]
["DelayedRimShot" nil nil nil nil nil nil ((timestamp . "2011-03-22") (notes . "(\"lisp (progn (sleep-for 5) (describe \\\"rimshot\\\"))\")")) nil]
["dellsystem" nil nil nil nil nil nil ((timestamp . "2012-09-14") (notes . "(\"a spy in her free time\")")) nil]
["delphi" nil nil nil nil nil nil ((timestamp . "2006-01-05") (notes . "(\"redirect lazarus\")")) nil]
["delsel.el" nil nil nil nil nil nil ((timestamp . "2010-08-05") (notes . "(\"redirect DeleteSelectionMode\")")) nil]
["delysid" nil nil nil nil nil nil ((timestamp . "2002-12-09") (notes . "(\"redirect mariolang\")")) nil]
["delYsidGuitarLessons" nil nil nil nil nil nil ((timestamp . "2005-09-29") (notes . "(\"at http://delysid.org/music/guitar.html\")")) nil]
["demorgan" nil nil nil nil nil nil ((timestamp . "2012-05-03") (notes . "(\"(eq (not (or A B)) (and (not A) (not B)))\" \"(eq (not (and A B)) (or (not A) (not B)))\")")) nil]
["dent" nil nil nil nil nil nil ((timestamp . "2012-02-23") (notes . "(\"noecho /me dents some random geek crap.\")")) nil]
["dental-plan" nil nil nil nil nil nil ((timestamp . "2011-01-03") (notes . "(\"noecho Lisa needs braces.\")")) nil]
["dep3" nil nil nil nil nil nil ((timestamp . "2012-02-08") (notes . "(\"guidelines for including meta-data in Debian patches; see http://dep.debian.net/deps/dep3/\")")) nil]
["depeche-mode" nil nil nil nil nil nil ((timestamp . "2005-04-19") (notes . "(\"a comint replacement for scheme processes written by the same dude who wrote quack\")")) nil]
["dephil-phrases" nil nil nil nil nil nil ((timestamp . "2011-09-01") (notes . "(\"The question whether objective truth can be attributed to human thinking is not a question of theory but is a practical question.\" \"The dispute over the reality or non-reality of thinking which is isolated from practice is a purely scholastic question.\" \"The philosophers have only interpreted the world, in various ways. The point, however, is to change it.\" \"These relations of production constitutes the economic structure of society -- the real foundation, on which rises a legal and political superstructure and to which correspond definite forms of social consciousness.\" \"The mode of production of material life determines the social, political and intellectual life process in general.\" \"It is not the consciousness of men that determines their being, but, on the contrary, their social being that determines their consciousness.\" \"labour is external to the worker, i.e., it does not belong to his intrinsic nature; herefore he does not affirm himself but denies himself, does not feel content but unhappy, does not develop freely his physical and mental energy but mortifies his body and his mind.\" \"The history of all hitherto existing society is the history of class struggles.\" \"Men make their own history, but they do not make it as they please; they do not make it under self-selected circumstances, but under circumstances existing already, given and transmitted from the past.\" \"But to the extent that labour power circulates in the market, it is not capital, no form of commodity-capital. The labourer is not a capitalist, although he brings a commodity to market, namely his own skin.\" \"The first premise of all human history is the existence of living human individuals. Thus the first fact to be established is the physical organisation of these individuals and their consequent relation to the rest of nature.\" \"In the social production of life, we enter into relations that are indispensable and independent of will; these relations correspond to a stage of development of their material forces of production.\" \"The essence of the modern state is the union of the universal with the full freedom of the particular, and with the welfare of individuals.\" \"What experience and history teach is that nations and governments have never learned anything from history, or acted upon any lessons they might have drawn from it.\" \"The history of the world is none other than the progress of the consciousness of freedom.\" \"We may affirm absolutely that nothing great in the world has been accomplished without passion.\" \"The science of religion is one science within philosophy; indeed it is the final one. In that respect it presupposes the other philosophical disciplines and is therefore a result.\" \"The beginning of religion, more precisely its content, is the concept of religion itself, that God is the absolute truth, the truth of all things, and subjectively that religion alone is the absolutely true knoweldge.\" \"I am convinced that the unwritten knowledge scattered among men of different callings surpasses in quantity and in importance anything we find in books, and that the greater part of our wealth has yet to be recorded.\" \"Although the whole of this life were said to be nothing but a dream and the physical world nothing but a phantasm, I should call this dream or phantasm real enough, if, using reason well, we were never deceived by it.\" \"There are two kinds of truths: those of reasoning and those of fact. The truths of reasoning are necessary and their opposite is impossible; the truths of fact are contingent and their opposites are possible.\" \"There will always be some people who think for themselves, even among the self-appointed guardians of the great mass who, after having thrown off the yoke of immaturity themselves, will spread about them the spirit of a reasonable estimate of their own value and of the need for every man to think for himself.\" \"The history of mankind can be seen, in the large, as the realization of Nature’s secret plan to bring forth a perfectly constituted state as the only condition in which the capacities of mankind can be fully developed, and also bring forth that external relation among states which is perfectly adequate to this end.\" \"Human reason has this peculiar fate that in one species of its knowledge it is burdened by questions which, as prescribed by the very nature of reason itself, it is not able to ignore, but which, as transcending all its powers, it is also not able to answer.\" \"The tradition of all dead generations weighs like a nightmare on the brains of the living.\")")) nil]
["deride" nil nil nil nil nil nil ((timestamp . "2003-07-11") (notes . "(\"at http://ftp.walfield.org/pub/people/neal/\" \"Perl pisg scripts at http://gnufans.net/~deego/pub/irc/Pisg/Parser/Format/\")")) nil]
["derivedmodes" nil nil nil nil nil nil ((timestamp . "2011-09-16") (notes . "(\"redirect derivedmode\")")) nil]
["derp" nil nil nil nil nil nil ((timestamp . "2010-09-20") (notes . "(\"noecho durr\")")) nil]
["DesktopSearch" nil nil nil nil nil nil ((timestamp . "2006-08-17") (notes . "(\"at http://gnufans.net/~deego/DeegoWiki/DebianLinksDesktopSearch.html\" \"swish, doodle, beagle, etc.\")")) nil]
["despair" nil nil nil nil nil nil ((timestamp . "2010-04-21") (notes . "(\"redirect vi\")")) nil]
["dessert" nil nil nil nil nil nil ((timestamp . "2003-06-15") (notes . "(\"lisp (random-choose '(\\\"Délice de chocolat noir, sauce crème Anglaise et écorces d'oranges confites\\\" \\\"Saint Honoré\\\"))\")")) nil]
["destroy" nil nil nil nil nil nil ((timestamp . "2012-04-25") (notes . "(\"lisp (let ((weapon (car (read-from-string (random-choose-term \\\"firearms\\\")))) (target (if lispargs (stringify-symbol-list lispargs) nick))) (format \\\"/me loads its %s and %s.\\\" (car weapon) (if (string-match \\\"%s\\\" (cdr weapon)) (format (cdr weapon) target) (format \\\"%s %s\\\" (cdr weapon) target))))\")")) nil]
["destruction" nil nil nil nil nil nil ((timestamp . "2012-07-30") (notes . "(\"noecho creation\")")) nil]
["destructive-forces" nil nil nil nil nil nil ((timestamp . "2012-07-09") (notes . "(\"gamma radiation\" \"alpha particles\" \"tachyon emissions\" \"gravitic waves\" \"higgs boson\" \"superion\")")) nil]
["desu" nil nil nil nil nil nil ((timestamp . "2012-06-04") (notes . "(\"noecho Keep typing \\\"desu.\\\" Maybe if you type it enough, you'll turn Japanese.\")")) nil]
["detachtty" nil nil nil nil nil nil ((timestamp . "2007-12-01") (notes . "(\"http://www.cliki.net/detachtty\")")) nil]
["details" nil nil nil nil nil nil ((timestamp . "2012-06-16") (notes . "(\"noecho The devil is in the details; whatever the hell that means. The more detail you give, the better we can answer your question.\")")) nil]
["detention" nil nil nil nil nil nil ((timestamp . "2013-11-20") (notes . "(\"lisp (format \\\"%s, see me after class for tweaking.\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["dev" nil nil nil nil nil nil ((timestamp . "2010-09-07") (notes . "(\"The developers\" \"are watching you\")")) nil]
["devanagari" nil nil nil nil nil nil ((timestamp . "2005-04-08") (notes . "(\"redirect SupportHindi\")")) nil]
["developers" nil nil nil nil nil nil ((timestamp . "2013-01-21") (notes . "(\"noecho DEVELOPERS! DEVELOPERS! DEVELOPERS!\")")) nil]
["DevilsPie" nil nil nil nil nil nil ((timestamp . "2010-08-23") (notes . "(\"Lisp-looking scripts for configuring windows in Gnome -- http://live.gnome.org/DevilsPie\")")) nil]
["devops" nil nil nil nil nil nil ((timestamp . "2012-12-22") (notes . "(\"noecho devops without dev is junior sysadmin\")")) nil]
["DFA" nil nil nil nil nil nil ((timestamp . "2012-01-12") (notes . "(\"Deterministic Finite Automaton (cf. automata theory, regular expressions)\")")) nil]
["dflet" nil nil nil nil nil nil ((timestamp . "2013-01-06") (notes . "(\"https://github.com/sigma/el-x\" \"the cl.el flet saved from extinction by packaging\")")) nil]
["dgaf" nil nil nil nil nil nil ((timestamp . "2008-08-07") (notes . "(\"Don't Give A Fuck\")")) nil]
["DHCP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Dynamic Host Configuration Protocol\")")) nil]
["DHS" nil nil nil nil nil nil ((timestamp . "2007-11-27") (notes . "(\"the Department of Homeland Security -- people who take away your freedom in order to preserve your freedom\")")) nil]
["diabeticp" nil nil nil nil nil nil ((timestamp . "2012-05-01") (notes . "(\"lisp (let ((l '(t nil maybe not-yet))) (nth (random (length l)) l))\")")) nil]
["dickheads" nil nil nil nil nil nil ((timestamp . "2011-08-02") (notes . "(\"dickheads\")")) nil]
["dictionary-el" nil nil nil nil nil nil ((timestamp . "2003-04-02") (notes . "(\"redirect dictmode\")")) nil]
["dictionary-mode" nil nil nil nil nil nil ((timestamp . "2005-04-13") (notes . "(\"redirect dictionary-el\")")) nil]
["didnotwork" nil nil nil nil nil nil ((timestamp . "2003-05-22") (notes . "(\"redirect doesnotwork\")")) nil]
["different-word-movement" nil nil nil nil nil nil ((timestamp . "2012-03-30") (notes . "(\"forward-to-word and backward-to-word\" \"found in misc.el\")")) nil]
["DIFUTP" nil nil nil nil nil nil ((timestamp . "2004-07-30") (notes . "(\"Diffuse Intelligence From User To Program\")")) nil]
["dilbert" nil nil nil nil nil nil ((timestamp . "2013-02-01") (notes . "(\"apparently still relevant\")")) nil]
["dillo" nil nil nil nil nil nil ((timestamp . "2006-04-02") (notes . "(\"aims to be a multi-platform browser alternative that's small, stable, developer-friendly, usable, fast, and extensible.\" \"a lightweight graphical browser for people who like pointing devices, e.g. PDA users. See http://dillo.org.\" \"small: source is less than 420 KB, and the binary is around 350 KB!\" \"at current stage of development, yet is not ready to render pages that utilize frames. Nevertheless, it comes with a tiny handler (lynx/w3m like) that will let you choose which frame to visit, one by one.\" \"a web browser project completely written in C.\" \"very fast!\")")) nil]
["dim" nil nil nil nil nil nil ((timestamp . "2011-10-13") (notes . "(\"our beloved resident el-get spammer\")")) nil]
["dindin" nil nil nil nil nil nil ((timestamp . "2003-05-25") (notes . "(\"dinner time!\")")) nil]
["dink" nil nil nil nil nil nil ((timestamp . "2003-03-16") (notes . "(\"Double Income No Kids\")")) nil]
["DiP" nil nil nil nil nil nil ((timestamp . "2006-04-23") (notes . "(\"http://diveintopython.org\")")) nil]
["dir-local" nil nil nil nil nil nil ((timestamp . "2012-12-17") (notes . "(\"redirect dirlocals\")")) nil]
["dir-locals" nil nil nil nil nil nil ((timestamp . "2010-04-22") (notes . "(\"redirect directoryvariables\")")) nil]
["dir-locals.el" nil nil nil nil nil nil ((timestamp . "2010-04-22") (notes . "(\"redirect directoryvariables\")")) nil]
["dir-settings" nil nil nil nil nil nil ((timestamp . "2010-04-22") (notes . "(\"redirect directoryvariables\")")) nil]
["dir-settings.el" nil nil nil nil nil nil ((timestamp . "2010-04-22") (notes . "(\"redirect directoryvariables\")")) nil]
["directory" nil nil nil nil nil nil ((timestamp . "2009-03-03") (notes . "(\"Please try the free software directory, http://directory.fsf.org/\")")) nil]
["directory-audio" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/aud/\")")) nil]
["directory-business" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/prod/\")")) nil]
["directory-comms" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/lc/\")")) nil]
["directory-database" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/db/\")")) nil]
["directory-development" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/dev/\")")) nil]
["directory-education" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/educ/\")")) nil]
["directory-email" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/email/\")")) nil]
["directory-games" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/games/\")")) nil]
["directory-gnu" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/GNU/\")")) nil]
["directory-graphics" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/graph/\")")) nil]
["directory-hobbies" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/hobbies/\")")) nil]
["directory-i18n" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/local/\")")) nil]
["directory-interface" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/iface/\")")) nil]
["directory-internet" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/net/\")")) nil]
["directory-libraries" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/libs/\")")) nil]
["directory-math" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/math/\")")) nil]
["directory-printing" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/print/\")")) nil]
["directory-science" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/science/\")")) nil]
["directory-security" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/sec/\")")) nil]
["directory-sysadmin" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/admin/\")")) nil]
["directory-text" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/text/\")")) nil]
["directory-video" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/video/\")")) nil]
["directory-web" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://directory.fsf.org/category/web/\")")) nil]
["dired-cd" nil nil nil nil nil nil ((timestamp . "2009-04-16") (notes . "(\"http://stuff.mit.edu/afs/sipb/user/lcb/newlisp/dired-cd.el\")")) nil]
["dired-dd" nil nil nil nil nil nil ((timestamp . "2006-09-26") (notes . "(\"Dired-dd (aka Dired-DragDrop) is a minor mode enabling mouse interface for dired / dired-x.\" \"at http://www.asahi-net.or.jp/~pi9s-nnb/dired-dd-home.html\")")) nil]
["dired-find-file-other-frame" nil nil nil nil nil nil ((timestamp . "2011-03-23") (notes . "(\"implemented at http://paste.lisp.org/display/120814\")")) nil]
["DiredRecursiveListing" nil nil nil nil nil nil ((timestamp . "2008-01-14") (notes . "(\"Go to \\\".\\\" using cursor keys, press C-u i, then modify the options that appear to -alFR by adding an R at the end.\")")) nil]
["diredx" nil nil nil nil nil nil ((timestamp . "2010-11-05") (notes . "(\"redirect DiredExtra\")")) nil]
["dirlocals" nil nil nil nil nil nil ((timestamp . "2011-01-13") (notes . "(\"redirect directoryvariables\")")) nil]
["dirtree" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package designed to emulate the way windows explorer displays directory and file trees, with the root at top left, and each level of subtree displaying one step in to the right. http://ctan.org/pkg/dirtree\")")) nil]
["dirtsurf" nil nil nil nil nil nil ((timestamp . "2007-10-29") (notes . "(\"redirect dirtsurfer\")")) nil]
["dirtsurfer" nil nil nil nil nil nil ((timestamp . "2007-10-29") (notes . "(\"a kind of inline skateboard <http://dirtsurf.com>, <http://www.dirtsurferworld.com/galleries/Dirtsurfer%20DIRT%20Gallery/slides/A7-MontrealLR.jpg>\" \"designed for surfboarders to train when there's no surf\" \"they go fast -- up to 80kmph on asphalt\" \"twb has one\")")) nil]
["dirvish" nil nil nil nil nil nil ((timestamp . "2012-11-27") (notes . "(\"an OSL 2.0-licensed alternative to rsnapshot, see http://www.dirvish.org/\")")) nil]
["dis" nil nil nil nil nil nil ((timestamp . "2012-05-19") (notes . "(\"the inferno os vm\")")) nil]
["disable-tramp" nil nil nil nil nil nil ((timestamp . "2008-01-07") (notes . "(\"(setq file-name-handler-alist (loop for x in file-name-handler-alist for (pattern . symbol) = x for name = (symbol-name symbol) unless (string-match \\\"tramp\\\" name) collect x))\")")) nil]
["disablingerccoding" nil nil nil nil nil nil ((timestamp . "2002-11-25") (notes . "(\"(defalias 'erc-encode-coding-string 'identity)\" \"at ErcMule\")")) nil]
["discards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho TOSS HIM!!\")")) nil]
["disclaimer" nil nil nil nil nil nil ((timestamp . "2009-04-13") (notes . "(\"\\\"The Free Software Foundation does not claim copyright for this joke.\\\"\")")) nil]
["discordian" nil nil nil nil nil nil ((timestamp . "2005-03-27") (notes . "(\"at http://www.principiadiscordia.com/\")")) nil]
["Discordianism" nil nil nil nil nil nil ((timestamp . "2003-02-08") (notes . "(\"at PrincipiaDiscordia\")")) nil]
["Disqus" nil nil nil nil nil nil ((timestamp . "2012-05-30") (notes . "(\"an online discussion and commenting service for websites and online communities that uses a networked platform.\" \"more annoying than just plain old comments.\")")) nil]
["disregards" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"noecho IGNORE HIM!\")")) nil]
["distel" nil nil nil nil nil nil ((timestamp . "2002-11-10") (notes . "(\"Allows concurrent/distributed elisp: http://www.bluetail.com/~luke/distel/distel-euc.pdf, (was written for erlang).. by LukeGorrie\")")) nil]
["distraction" nil nil nil nil nil nil ((timestamp . "2013-10-21") (notes . "(\"noecho Look! Balloons!!!\")")) nil]
["ditaa" nil nil nil nil nil nil ((timestamp . "2009-12-06") (notes . "(\"http://ditaa.sf.net/\" \"DIagrams Through Ascii Art\")")) nil]
["ditrack" nil nil nil nil nil nil ((timestamp . "2007-06-26") (notes . "(\"a distributed BTS <http://ditrack.org>\")")) nil]
["ditty" nil nil nil nil nil nil ((timestamp . "2005-07-28") (notes . "(\"Ditty enables you to play simple melodies from the command line, to sound card, or from *console* to the built-in pc-speaker.\" \"Removed from debian, though still in woody\")")) nil]
["ditz" nil nil nil nil nil nil ((timestamp . "2012-10-19") (notes . "(\"a simple issue tracker designed to work with DVCSs http://ditz.rubyforge.org/\")")) nil]
["DIX" nil nil nil nil nil nil ((timestamp . "2010-08-12") (notes . "(\"Device Independent X\")")) nil]
["DIY" nil nil nil nil nil nil ((timestamp . "2004-03-01") (notes . "(\"noecho Do It Yourself\")")) nil]
["dizzee" nil nil nil nil nil nil ((timestamp . "2013-04-17") (notes . "(\"a project-specific subprocess management tool at https://github.com/davidmiller/dizzee\")")) nil]
["djb" nil nil nil nil nil nil ((timestamp . "2012-11-28") (notes . "(\"http://cr.yp.to/djb.html\")")) nil]
["DKDC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Don't Know, Don't Care\")")) nil]
["dkim" nil nil nil nil nil nil ((timestamp . "2014-01-08") (notes . "(\"DKIM (also known as Domain Keys) is an an anti-spam measure where mailservers sign mail that passes through them.\" \"Donkey Kong Instant Messenger\")")) nil]
["dlgs-books" nil nil nil nil nil nil ((timestamp . "2006-04-23") (notes . "(\"Ideological book references (good for making that 'moderate' neighbor of yours crazy):\" \"'What is Property?' by P.-J. Proudhon, found at http://www.gutenberg.org/etext/360\" \"[Anarchism] Peter Kropotkin: Mutual Aid.\" \"[Anarchism] Peter Kropotkin: Ethics.\" \"[Marx, German] Michael Heinrich: Kritik der politischen Ökonomie. Eine Einführung.\" \"[Capitalism, German] Robert Kurz: Schwarzbuch Kapitalismus.\" \"[Spanish Revolution] Gaston Leval: Collectives in the Spanish Revolution.\" \"[Spanish Revolution] Burnett Bolloten: The Grand Camouflage. The Communist Conspiracy in the Spanish Civil War.\" \"[education] Grace Llewynn, Amy Silver: Guerilla Learning. How to give your kids a real education with or without school.\" \"[Money theory] Bernard Lietaer: The Future of Money. Creating New Wealth, Work and a Wiser World.\" \"[Intelligence] Robert Shea, Robert Anton Wilson: The Illuminatus! Trilogy\" \"[Mass Media] Edward S. Herman, Noam Chomsky: Manufacturing Consent\" \"[Corporatism] Joel Bakan: The Corporation. The Pathological Pursuit of Profit and Power.\" \"[Economics] Richard Douthwaite: The Growth Illusion.\" \"[Spain] Burnett Bolloten: The Grand Camouflage. The Communist Conspiracy in the Spanish Civil War.\" \"Franz Oppenheimer: The State. A Sociological Study.\")")) nil]
["dlgs-phrases" nil nil nil nil nil nil ((timestamp . "2011-07-10") (notes . "(\"Property is theft! (Pierre-Joseph Proudhon)\" \"Freedom without Socialism is privilege and injustice. Socialism without freedom is slavery and brutality. (Michael Bakunin)\" \"Freedom is always the freedom of the one who thinks differently (Rosa Luxemburg)\" \"Have not prisons - which kill all will and force of character in man, which enclose within their walls more vices than are met with on any other spot of the globe - always been universities of crime? (Peter Kropotkin)\" \"Mutual aid is as much a law of animal life as mutual struggle. (Peter Kropotkin)\" \"Woman can give suffrage or the ballot no new quality, nor can she receive anything from it that will enhance her own quality. Her development, her freedom, her independence, must come from and through herself. (Emma Goldman)\" \"On the other hand we know that most of the so-called intellectuals are, by reason of their education.... their class prejudice... tend to want the subjugation of the masses to their will. (Errico Malatesta)\" \"Do you want to make it impossible for anyone to oppress his fellow-man? Then make sure that no one shall possess power. (Michael Bakunin)\" \"Even if god really did exist, it would be necessary to abolish him. (Michael Bakunin)\" \"If you pull a sapling out of the ground, cut off all the leaves, and branches and make it into a club, you cannot expect to plant it back in the ground and have it grow into a beautifull tree... (Michael Bakunin to Karl Marx)\" \"When the people are being beaten with a stick, they are not much happier if it is called `the People's Stick'. (Michael Bakunin)\" \"If we do not do the impossible, we shall be faced with the unthinkable. (Murray Bookchin)\" \"With regard to freedom of expression there are basically two positions: you defend it vigorously for views you hate, or you reject it in favor of Stalinist/Fascist standards. (Noam Chomsky)\" \"I would rather die on my feet, than live on my knees. (Emiliano Zapata)\" \"If I can't dance I don't want to be part of your revolution. (Emma Goldman - apocryphal)\" \"In the absence of a professional police force, communites are quite capable of maintaining public security for themselves and have done so for centuries. (Peter Marshall)\" \"All men are equal and free: society by nature, and destination, is therefore autonomous and ungovernable. (Pierre-Joseph Proudhon)\" \"Common to all Anarchists is the desire to free society of all political and social coercive institutions which stand in the way of the development of a free humanity. (Rudolf Rocker)\" \"I sit on a man's back, choking him, and making him carry me, and yet assure myself and others that I am very sorry for him and wish to ease his lot by any means possible, except getting off his back. (Leo Tolstoy)\" \"[A] structure based on centuries of history cannot be destroyed with a few kilos of explosives. (Peter Kropotkin)\" \"Man's conceptions of morality are completely dependent upon the form that their social life assumed at a given time in a given locality ... this [social life] is reflected in the moral conceptions of men and in the moral teachings of the given epoch. (Peter Kropotkin)\" \"There will be a time when our silence will be more powerful than the voices you strangle today! (August Spies)\" \"I am an Anarchist not because I believe Anarchism is the final goal, but because there is no such thing as a final goal. (Rudolf Rocker)\" \"The Church hates a thinker precisely for the same reason a robber dislikes a sheriff, or a thief despises the prosecuting witness. (Robert Ingersoll)\" \"The State is a condition, a certain relationship between human beings, a mode of human behavior; we destroy it by contracting other relationships, by behaving differently. (Gustav Landauer)\" \"The establishment people tell us that if the workers wanted to share the profits, it was called communism. When management wants to share profits, it's called a bonus. (Phil Donahue)\" \"Ask for work. If they do not give you work, ask for bread. If they do not give you work or bread, take bread. (Emma Goldman to unemployed workers)\" \"Marxists simply cannot get away from the idea of \\\"political\\\" as government power. They will not admit the difference between political and social forces. That's the gulf between the Marxists and Anarchists which will probably never be bridged. (Emma Goldman)\" \"Support by United States rulers is rather in the nature of the support that the rope gives to a hanged man. (Nikita Khrushchev)\" \"Politicians are the same the world over. They promise to build a bridge where there is no river. (Nikita Khrushchev)\" \"We will bury you. (Nikita Khruschev)\" \"Who, after all, speaks today of the annihilation of the Armenians? (Adolf Hitler)\" \"I can fight only for something that I love, love only what I respect, and respect only what I at least know. (Adolf Hitler)\" \"An eye for an eye will only make the whole world blind. ( Mahatma Gandhi)\" \"First they ignore you, then they laugh at you, then they fight you, then you win. (Mahatma Gandhi)\" \"There I discovered something about capitalists. They are all alike, whatever the nationality. All they wanted from me was the most work for the least money that kept me alive. So I became a Communist. (Nikita Khrushchev)\" \"I think you should defend to the death their right to march, and then go down and meet them with baseball bats. (Woody Allen, on the KKK)\" \"So, first of all, let me assert my firm belief that the only thing we have to fear is fear itself - nameless, unreasoning, unjustified terror which paralyzes needed efforts to convert retreat into advance. (Franklin D. Roosevelt)\" \"Those who make peaceful revolution impossible will make violent revolution inevitable. (John F. Kennedy)\" \"If liberty means anything at all, it means the right to tell people what they do not want to hear. (George Orwell)\" \"Forgive him, for he believes that the customs of his tribe are the laws of nature! (G.B. Shaw)\" \"You may say I'm a dreamer, but I'm not the only one. (John Lennon)\" \"\\\"But how is one holding Libertarian [anarchist] ideas to unite with Communists who represent the extreme opposite?\\\" (Emma Goldman, letter to John Haynes Holmes, 1936-04-02)\" \"\\\"Believe me, I know how vicious and dangerous Fascism is. But I fail to see that dictatorship from the Left is any less dangerous to progress.\\\" (Emma Goldman, letter to John Haynes Holmes, 1936-04-02)\" \"\\\"After all, participation in elections means the transfer of one's will and decisions to another, which is contrary to the fundamental principles of Anarchism\\\" (Emma Goldman, letter to Eusebio Carb\\201\\363, 1936-05-01)\" \"\\\"Unless the comrades in Spain [...] imagine that they are so much wiser and incorruptible than others, I cannot understand how they can possibly aspire to power\\\" (Emma Goldman, letter to Eusebio Carb\\201\\363, 1936-05-01)\" \"\\\"From its very inception, Anarchism and its greatest teachers have maintained that it is not the abuse of power which corrupts everybody, the best more often than the worst men, but that it is the thing itself, namely /power/, which is evil and takes the very spirit and revolutionary fighting strength out of everybody who wields power.\\\" (Emma Goldman, letter to Eusebio Carb\\201\\363, 1936-05-01)\" \"\\\"The primary concern of every government is to ensure its continuance in power irrespective of the men who form it. If they are bad, they want to remain in power in order to enrich themselves and to satisfy their lust for authority; and if they are honest and sincere they believe that it is their duty to remain in power for the benefit of the people\\\" (Malatesta)\" \"\\\"But this minority [the people's government], the Marxists argue, would consist of workers. Yes, I dare say, of _former_ workers, but as soon as they become rulers and representatives of the people they would cease to be proletarians and would look down upon all workers from their political summit. They would no longer represent the people; they would represent only themselves\\\" (Bakunin)\" \"\\\"I guess the problem for anarchism, is that the people with power and money, cannot see any gain in supporting anarchism.\\\" (Dabian)\" \"\\\"The diseases of leadership: caution, fear of the uncontrolled masses, remoteness from the aspirations of these masses and a messianic feeling that all wisdom and initiative flows from above and that all the masses need do is carry out unquestioningly the orders of these supermen.\\\" (Vernon Richards, Lessons of the Spanish Revolution, p. 28)\" \"\\\"When we say that power corrupts those who wield it, we do not mean that such people necessarily fall victims to the temptations of bribery and material gain as is, for instance, the case in American poltical life. What we do firmly believe is that no one can resist the effect that power has in modifying thought and human personality.\\\" (V. Richards, Lessons of the Spanish Revolution, p.68)\" \"\\\"And only few strong personalities can, once they have basked in it, dispense with the limelight that accompanies power.\\\" (V. Richards, Lessons of the Spanish Revolution, p.68)\" \"\\\"[The comrades] should above all remember that the exaltation of a man is politically a dangerous thing and morally unhealthy as much for him who is exalted as for those who do the exalting.\\\" (Malatesta, quoted by Vernon Richards. Lessons of the Spanish Revolution, p146)\" \"[Anarchism] is based on analogies derived from the simplicity and harmony of universal physical laws, rather than on any assumptions of the natural goodness of human nature-and this is precisely where it begins to diverge fundamentally from democratic socialism,which goes back to Rousseau, the true founder of state socialism. (Sir Herbert Read)\" \"It has been demonstrated beyond any possibility of denial that whatever may be the merits or demerits of the anarcho-syndicalist system, it can and does work. (Sir Herbert Read)\" \"Natural science, philosophy, and history unite in teaching, in face of all prejudice to the contrary, that man and woman are two complementary aspects of human nature, and the failure to recognise this essential and important truth has had the most disastrous consequences. (Francisco Ferrer)\" \"Rebellion is a levelling tendency, and to that extent natural and rational, however much it may be discredited by justice and its evil companions, law and religion. (Francisco Ferrer)\" \"The scars left from the child's defeat in the fight against irrational authority are to be found at the bottom of every neurosis. (Erich Fromm)\" \"And so if it was a sane news channel \\234\\364\\362\\363 al-Jazeera, say \\234\\364\\362\\363 you could talk about it and explain what you mean. You\\234\\364\\362\\371re not allowed to do that in the United States. (Noam Chomsky)\" \"No government in the world fights Fascism to the death. When the bourgeoisie sees power slipping from its grasp, it has recourse to Fascism to maintain itself. (Buenaventura Durruti)\" \"That is what I have always understood to be the essence of anarchism: the conviction that the burden of proof has to be placed on authority and that it should be dismantled if that burden cannot be met. (Noam Chomsky)\" \"The State is above the law because it makes the law, and it will not hesitate to use all its power to defend itself. (Daniel Cohn-Bendit)\" \"Socialism will either be free or it will not be at all. (Rudolf Rocker)\" \"For nothing can seem foul to those that win. (Shakespeare)\" \"I swear, by my life and my love of it, that I shall not live for the sake of another man, nor ask another man to live for mine. (Ayn Rand)\" \"Individual rights are the means of subordinating society to moral law. (Ayn Rand)\" \"If breaking windows and fighting back when the cops attack is \\\"violence\\\", then give me a new word, a word a thousand times stronger, to use when the cops are beating non-resisting people into comas. (Starhawk, anarchist activist)\" \"[Those who] reply formally and pompously, with a view to fine phrases and effects [...] exchange words only, and choose them solely for their brilliancy and show. You think it is you, individually, to whom they speak; but they are addressing themselves in your person [...] (Proudhon)\" \"If you wrap the Internet around every person on the planet and spin the planet, software flows in the network. The only question to ask is, what's the resistance of the network? (Eben Moglen)\" \"Propertarianism joined to capitalist vigor destroyed meaningful commercial competition, but when it came to making good software, anarchism won. (Eben Moglen)\" \"By the way, watch out for the military-industrial complex. (Joseph Cirinicione paraphrasing Eisenhower's farewell address to the American people)\" \"I am truly free only when all human beings, men and women, are equally free. The freedom of other men, far from negating or limiting my freedom, is, on the contrary, its necessary premise and confirmation. (Mikhail Bakunin)\" \"Anyone who makes plans for after the revolution is a reactionary. (Mikhail Bakunin)\" \"By striving to do the impossible, man has always achieved what is possible. Those who have cautiously done no more than they believed possible have never taken a single step forward. (Mikhail Bakunin)\" \"I found one day in school a boy of medium size ill-treating a smaller boy. I expostulated, but he replied: 'The bigs hit me, so I hit the babies; that's fair.' In these words he epitomized the history of the human race. (Bertrand Russell)\" \"The peoples will not rise to greater heights before they have fully realized the depth of their decline. (Edgar Quinet)\" \"I aim to misbehave. ('Mal' Reynolds, from Joss Whedon's 'Serenity')\" \"If some men are entitled by right to the products of the work of others, it means that those others are deprived of rights and condemned to slave labor. (Ayn Rand)\" \"Even if smog were a risk to human life, we must remember that life in nature, without technology, is wholesale death. (Ayn Rand)\" \"To deal with men by force is as impractical as to deal with nature by persuasion. (Ayn Rand)\" \"In societies dominated by modern conditions of production, life is presented as an immense accumulation of spectacles. Everything that was directly lived has receded into a representation. (Guy Debord)\" \"Complacent acceptance of the status quo may also coexist with purely spectacular rebelliousness \\234\\364\\362\\364 dissatisfaction itself becomes a commodity as soon as the economy of abundance develops the capacity to process that particular raw material. (Guy Debord)\" \"The perpetuation of ignorance is the beginning of slavery. (Eben Moglen)\" \"Reality has a well-known liberal bias. (Stephen Colbert)\" \"``I give you exactly as much as you give me'' --- material things or love --- is the guiding ethical principle in a capitalistic society. One can even say that this ``ethics of common decency'' is capitalism's own contribution to ethical development. (Erich Fromm)\" \"The object of the ideally moral man is that all men may have as little suffering and as much joy as possible. (Errico Malatesta)\" \"The science of economics is the cleverest proof of free will yet constructed. (Unknown)\" \"We are consistent, and we shall use every weapon which can be used for rebellion. (Carlo Cafiero)\" \"Fanaticism consists of redoubling your efforts when you have forgotten your aim (Santayana)\" \"Cynicism, like gullibility, is a symptom of under-developed critical faculties. (Jamie Whyte)\" \"When people fear the government, there is tyranny. When government fears the people, there is liberty. (Thomas Paine)\" \"Those who would give up Essential Liberty to purchase a little Temporary Safety, deserve neither Liberty nor Safety. (Benjamin Franklin)\" \"Democracy is a device that insures we shall be governed no better than we deserve. (George Bernard Shaw)\" \"I disapprove of what you say, but I will defend to the death your right to say it. (Francois Voltaire)\" \"[Anarchy] has taught me that justice is meaningless without freedom. (V in V for Vendetta, book 2)\" \"If we taught children to speak, they'd never learn. (William Hull)\" \"The aim of totalitarian education has never been to instill conviction but to destroy the capacity to form any. (Hannah Arendt, The Origins of Totalitarianism)\" \"Cornerstone of everything that exists and stumbling-block of everything that should be: this is property. (Pierre-Joseph Proudhon)\" \"Society is a process. It is never static. Even its most apparently stable structures are the expression of an equilibrium between dynamic forces. (Keith Wrightson)\" \"If voting could change anything, it would be illegal.\" \"The public has, in effect, said to our schools, \\\"Lock up our children for six or more hours a day for a hundred and eight or so days a year, so that they will be out of our hair and out of trouble -- and, by the way, while you have them locked up, try to educate them. The two demands are contradictory and self-canceling. The schools can be in the jail business or in the education business, but not in both. (John Holt)\" \"They're [Democrats] always accusing us of repressing their speech. I say let's do it. Let's repress them. Frankly, I'm not a big fan of the First Amendment. (Ann Coulter)\" \"It is a fundamental legal principle that if we can show that a wrong is being done, we are not compelled to say what ought to be done in its place before we are permitted to insist that it be stopped. (John Holt)\" \"If people are good only because they fear punishment, and hope for reward, then we are a sorry lot indeed. (Albert Einstein)\" \"Judging by this particular thread, many people in this group spent their school years taking illogical, pointless orders from morons and having their will to live systematically crushed. And people say school doesn't prepare kids for the real world. (Rayner, in the Monastery)\" \"Do I not destroy my enemies when I make them my friends? (Abraham Lincoln)\" \"Religion is primarily the feeling of man's dependence on higher unknown powers. (Rudolf Rocker)\" \"<Dabian> Whats the difference between \\\"enlightment\\\" and \\\"delusion\\\" anyhow? ;-) <Dabian> The first is seeing something you like, that isn't real (yet). <Dabian> The second is seeing something that isn't real (yet).\" \"Nothing is true; everything is permissible.\" \"The act of disobedience as an act of freedom is the beginning of reason. (Erich Fromm)\" \"I am somehow less interested in the weight and convolutions of Einstein's brain than in the near certainty that people of equal talent have lived and died in cotton fields and sweatshops. (Stephen Jay Gould)\" \"The danger is not that a particular class is unfit to govern. Every class is unfit to govern. (Lord Acton)\" \"And if today we fall without compromising, tomorrow we can be sure of victory. (Errico Malatesta)\" \"Society is produced by our wants, and government by wickedness; the former promotes our happiness positively by uniting our affections, the latter negatively by restraining our vices. (Tom Paine)\" \"The problem is that the rich are just a bunch of whiners. (Dean Baker)\" \"If we immerse ourselves wholly in day-to-day affairs, we cease making fundamental distinctions, or asking the really basic questions. Soon, basic issues are forgotten, and aimless drift is substituted for firm adherence to principle. (Murray Rothbard)\" \"[R]evolutionary organisation must always remember that its objective is not getting people to listen to speeches by expert leaders, but getting them to speak for themselves. (Guy Debord)\" \"How delighted would be all the kings, czars and führers of the past (and commissars of the present) to know that censorship is not a necessity when all political discourse takes the form of a jest. (Neil Postman, \\\"Amusing Ourselves to Death\\\")\")")) nil]
["DMA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Direct Memory Access\")")) nil]
["dmd" nil nil nil nil nil nil ((timestamp . "2013-07-26") (notes . "(\"Daemon managing Daemons (or Daemons-managing Daemon?), an init system for GNU.\" \"http://gitorious.org/guix/dmd\" \"Digital Mars' D Compiler.\" \"http://www.digitalmars.com/\" \"https://github.com/D-Programming-Language/dmd\")")) nil]
["dmg" nil nil nil nil nil nil ((timestamp . "2011-08-18") (notes . "(\"the OS X disk image format.\")")) nil]
["DMR" nil nil nil nil nil nil ((timestamp . "2011-10-13") (notes . "(\"Dennis M. Ritchie or a Designated Marksman Rifle (e.g. SVD or M14).\")")) nil]
["DNA" nil nil nil nil nil nil ((timestamp . "2007-11-15") (notes . "(\"Down Not Across, the sysadmin's creed\" \"deoxyribonucleic acid\" \"Do Not Annoy\")")) nil]
["dni" nil nil nil nil nil nil ((timestamp . "2007-01-22") (notes . "(\"Direct Neural Interface\" \"an end to all this thrashing around like an epileptic squid in meatspace to communicate with our machines.\")")) nil]
["dns" nil nil nil nil nil nil ((timestamp . "2003-08-18") (notes . "(\"Syntax: .dns [nick/website]\")")) nil]
["dnwfm" nil nil nil nil nil nil ((timestamp . "2013-06-02") (notes . "(\"does not work for me\")")) nil]
["Do-Open-Source-Books-Work" nil nil nil nil nil nil ((timestamp . "2003-02-16") (notes . "(\"http://www.lightandmatter.com/article/article.html\" \"Do Open-Source Books Work\" \"by Ben Crowell\" \"How will the internet change book publishing? This article examines a new crop of math and science textbooks that are available for free over the internet, and discusses what they have to tell us about whether the open-source software model can be translated into book publishing.\")")) nil]
["DOA" nil nil nil nil nil nil ((timestamp . "2003-05-21") (notes . "(\"Dead On Arrival\")")) nil]
["doc2pdf" nil nil nil nil nil nil ((timestamp . "2005-06-10") (notes . "(\"send an email to doc2pdf@hotpop.com\" \"send attachments less than 100kb they don't handle more than that\" \"handles *.doc,*.ppt, *.xls\")")) nil]
["docbook2x" nil nil nil nil nil nil ((timestamp . "2004-11-30") (notes . "(\"redirect docbook\")")) nil]
["docfish" nil nil nil nil nil nil ((timestamp . "2006-06-29") (notes . "(\"a tiny script for javadocish stuff in scheme+texinfo (http://www.forcix.cx/darcs/docfish)\")")) nil]
["docs" nil nil nil nil nil nil ((timestamp . "2016-08-02") (notes . "(\"references to documentation by the LaTeX team at https://www.latex-project.org/help/documentation/\" \"see also ,source2e for the LaTeX2e source documentation and ,ctan for documentation of the various packages\")")) nil]
["docsetutil" nil nil nil nil nil nil ((timestamp . "2012-07-14") (notes . "(\"https://github.com/leoliu/docsetutil-el\" \"screen shot http://i.imgur.com/VPwkX.png\")")) nil]
["doctest-mode" nil nil nil nil nil nil ((timestamp . "2007-07-31") (notes . "(\"a major mode for maintaining unit tests for Python's lightweight \\\"doctest\\\" framework <http://www.cis.upenn.edu/~edloper/projects/doctestmode/>, <http://docs.python.org/lib/module-doctest.html>\")")) nil]
["doctor-doctor" nil nil nil nil nil nil ((timestamp . "2013-03-25") (notes . "(\"redirect doctorithurts\")")) nil]
["doctordoctor" nil nil nil nil nil nil ((timestamp . "2013-06-27") (notes . "(\"noecho Don't do that, then!\")")) nil]
["doctorithurts" nil nil nil nil nil nil ((timestamp . "2012-03-29") (notes . "(\"lisp \\\"Don't Do That, Then\\\"\")")) nil]
["doctorithurtswhen" nil nil nil nil nil nil ((timestamp . "2011-08-02") (notes . "(\"lisp \\\"doctor, it hurts when I bend my arm like that.\\\\nyeah, don't bend your arm like that.\\\"\")")) nil]
["doctorjs" nil nil nil nil nil nil ((timestamp . "2010-08-27") (notes . "(\"a static type analysis for Javascript -- http://www.drjs.org/\")")) nil]
["docview" nil nil nil nil nil nil ((timestamp . "2010-12-30") (notes . "(\"redirect doc-view\")")) nil]
["docx" nil nil nil nil nil nil ((timestamp . "2010-09-06") (notes . "(\"noecho OH DEAR LOVING GOD OF GNU, NOOOOOO!!!\")")) nil]
["doddle" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"easy\" \"not doodle\")")) nil]
["dodo" nil nil nil nil nil nil ((timestamp . "2008-06-10") (notes . "(\"bonne nuit\")")) nil]
["doesn'twork" nil nil nil nil nil nil ((timestamp . "2011-05-29") (notes . "(\"noecho Doesn't work™ -- never just say \\\"it doesn't work\\\" when asking for help, it can mean *anything*! Be more specific: What is the desired result? What is your actual code? What errors do you get?\")")) nil]
["doesNotUnderstand" nil nil nil nil nil nil ((timestamp . "2007-08-16") (notes . "(\"a metalevel facility in smalltalk\" \"http://www.laputan.org/ref89/ref89.html\" \"(for non-smalltalkers) Oh, it's a universal exception method thing. Sounds neat.\")")) nil]
["doesnotwork" nil nil nil nil nil nil ((timestamp . "2013-11-09") (notes . "(\"Please specify (1) the EXACT actions you did, from the start, (2) your code, (3) what you expected, (4) what you got, and (5) describe the problem you are trying to solve.\")")) nil]
["doesntwork" nil nil nil nil nil nil ((timestamp . "2010-01-15") (notes . "(\"noecho we can help you with your problem better if your error description is more informative than \\\"it doesn't work\\\"\")")) nil]
["dogchunking" nil nil nil nil nil nil ((timestamp . "2013-09-09") (notes . "(\"what happens when you let talking dogs submit patches\")")) nil]
["doge" nil nil nil nil nil nil ((timestamp . "2014-01-27") (notes . "(\"lisp (let ((e (random-choose doge-list))) (format \\\"wow. such %s. very %s\\\" (car e) (cadr e)))\")")) nil]
["doge-list" nil nil nil nil nil nil ((timestamp . "2014-01-25") (notes . "(\"'(language coincidence)\")")) nil]
["doh" nil nil nil nil nil nil ((timestamp . "2008-06-16") (notes . "(\"noecho SWEET MERCIFUL CRAP!\")")) nil]
["dokuwiki" nil nil nil nil nil nil ((timestamp . "2010-05-19") (notes . "(\"a wiki written in PHP. More info here: http://www.dokuwiki.org/\")")) nil]
["domain-specific-solutions" nil nil nil nil nil nil ((timestamp . "2012-05-25") (notes . "(\"http://www.qwantz.com/index.php?comic=1786\")")) nil]
["domino" nil nil nil nil nil nil ((timestamp . "2012-11-05") (notes . "(\"IBM's retarded attempt to build an exchange competitor. It stores email in an LDAP database, that's how crazy stupid it is.\")")) nil]
["donate" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://donate.fsf.org/\")")) nil]
["done" nil nil nil nil nil nil ((timestamp . "2011-01-18") (notes . "(\"noecho Ok, finished\")")) nil]
["dont-ask" nil nil nil nil nil nil ((timestamp . "2012-11-23") (notes . "(\"don't tell\")")) nil]
["dont-tell" nil nil nil nil nil nil ((timestamp . "2012-11-23") (notes . "(\"lisp (apply 'tell lispargs)\")")) nil]
["dontpm" nil nil nil nil nil nil ((timestamp . "2009-12-23") (notes . "(\"don't send private messages. Just ask in the channel.\")")) nil]
["dooble" nil nil nil nil nil nil ((timestamp . "2013-05-23") (notes . "(\"http://dooble.sourceforge.net/\" \"a web browser built on webkit\")")) nil]
["doomrl" nil nil nil nil nil nil ((timestamp . "2013-06-10") (notes . "(\"a fine game available at http://doom.chaosforge.org/downloads\" \"a brilliant idea, merging the awesomeness of doom and roguelikes.\" \"non-free\")")) nil]
["doop" nil nil nil nil nil nil ((timestamp . "2003-02-13") (notes . "(\"http://doop.sf.net\")")) nil]
["dope" nil nil nil nil nil nil ((timestamp . "2003-06-02") (notes . "(\"redirect joint\")")) nil]
["DOS" nil nil nil nil nil nil ((timestamp . "2011-11-20") (notes . "(\"Day of Silence, the Gay, Lesbian and Straight Education Network's annual day of action to protest the bullying and harassment\" \"Denial of Service\")")) nil]
["dosage" nil nil nil nil nil nil ((timestamp . "2013-06-20") (notes . "(\"a client-side webcomic fusker <http://slipgate.za.net/dosage - dead link>\")")) nil]
["dosfilesinunix" nil nil nil nil nil nil ((timestamp . "2002-11-25") (notes . "(\"you can use `C-x RET f' (`set-buffer-file-coding-system') and change to the -dos version, or undecided-unix\")")) nil]
["dot2tex" nil nil nil nil nil nil ((timestamp . "2015-08-28") (notes . "(\"a tool for con­vert­ing graphs ren­dered by Graphviz to for­mats that can be used with LATEX available under https://www.ctan.org/pkg/dot2tex?lang=en\")")) nil]
["DotGNU" nil nil nil nil nil nil ((timestamp . "2004-06-11") (notes . "(\"at http://dotgnu.org/\" \"at http://www.gnufans.net/fsedu.pl?DotGNU\")")) nil]
["dotgnu-forum" nil nil nil nil nil nil ((timestamp . "2003-02-27") (notes . "(\"http://savannah.gnu.org/projects/dotgnu-forum/\" \"part of the FSEDu project\" \"from PeterMinten\" \"going to be the foundation for the Online Content\" \"known as Forum\")")) nil]
["dotgnus" nil nil nil nil nil nil ((timestamp . "2003-01-12") (notes . "(\"redirect dotgnusgenerator\")")) nil]
["DotGnusGenerator" nil nil nil nil nil nil ((timestamp . "2004-06-11") (notes . "(\"dotgnus generator at http://my.gnus.org/GDG/\")")) nil]
["doublebucky" nil nil nil nil nil nil ((timestamp . "2008-09-29") (notes . "(\"using both the CTRL and META keys <http://www.jargon.net/jargonfile/d/doublebucky.html>\")")) nil]
["doublecommand" nil nil nil nil nil nil ((timestamp . "2009-04-02") (notes . "(\"http://doublecommand.sourceforge.net/\" \"utility to remap keys at global level on OSX\")")) nil]
["doublep" nil nil nil nil nil nil ((timestamp . "2012-03-19") (notes . "(\"a better man than most of us\")")) nil]
["DougHoyte" nil nil nil nil nil nil ((timestamp . "2012-09-28") (notes . "(\"http://hcsw.org/fractal2.jpg\")")) nil]
["douse" nil nil nil nil nil nil ((timestamp . "2013-11-02") (notes . "(\"unecho \\\"Phew!!\\\"\")")) nil]
["dovecot" nil nil nil nil nil nil ((timestamp . "2014-01-14") (notes . "(\"an IMAP server, http://www.dovecot.org/\")")) nil]
["DP" nil nil nil nil nil nil ((timestamp . "2006-06-28") (notes . "(\"data processing. You young people can ask your parents about it.\")")) nil]
["dpans2texi" nil nil nil nil nil nil ((timestamp . "2012-12-18") (notes . "(\"a script to generate an info manual from the Common Lisp draft specification <http://users-phys.au.dk/harder/dpans.html>\")")) nil]
["DPD" nil nil nil nil nil nil ((timestamp . "2007-05-13") (notes . "(\"Don't Play Dumb!\")")) nil]
["Dpl" nil nil nil nil nil nil ((timestamp . "2003-07-04") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Dpl\")")) nil]
["draftwatermark" nil nil nil nil nil nil ((timestamp . "2013-07-20") (notes . "(\"a package to overlay the first or every page of a document with a grey text of your choosing, source: http://www.ctan.org/tex-archive/macros/latex/contrib/draftwatermark\")")) nil]
["dragonegg" nil nil nil nil nil nil ((timestamp . "2010-04-19") (notes . "(\"some GCC/LLVM integration thing <http://dragonegg.llvm.org/>\")")) nil]
["DRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Dynamic Random Access Memory\")")) nil]
["draw" nil nil nil nil nil nil ((timestamp . "2012-11-21") (notes . "(\"redirect rr\")")) nil]
["DRC" nil nil nil nil nil nil ((timestamp . "2012-10-27") (notes . "(\"DARPA ROBOTICS CHALLENGE Pre-registration available now :: http://www.theroboticschallenge.org/ information at http://www.darpa.mil/Our_Work/TTO/Programs/DARPA_Robotics_Challenge.aspx Good luck!\")")) nil]
["dream" nil nil nil nil nil nil ((timestamp . "2012-11-30") (notes . "(\"a Scheme written in assembly and its assembler written in Scheme\" \"at http://www.stripedgazelle.org/joey/dream.html\" \"sounds like a nightmare\")")) nil]
["drink" nil nil nil nil nil nil ((timestamp . "2012-08-27") (notes . "(\"lisp (random-choose '(\\\"DRINK!\\\" \\\"FECK!\\\" \\\"ARSE!\\\") '(2 1 1))\")")) nil]
["drinks" nil nil nil nil nil nil ((timestamp . "2012-09-12") (notes . "(\"redirect drink\")")) nil]
["drm" nil nil nil nil nil nil ((timestamp . "2010-09-22") (notes . "(\"http://defectivebydesign.org\" \"digital restrictions management\" \"digital rights munging\" \"Content Restriction, Anullment, and Prevention\")")) nil]
["drm-free" nil nil nil nil nil nil ((timestamp . "2012-08-27") (notes . "(\"https://static.fsf.org/dbd/DRM-free/DRM-free.png\" \"an action of http://www.defectivebydesign.org/\")")) nil]
["droid" nil nil nil nil nil nil ((timestamp . "2009-02-25") (notes . "(\"the font used in the Android embedded Linux operating system.\")")) nil]
["droids" nil nil nil nil nil nil ((timestamp . "2011-09-09") (notes . "(\"noecho These aren't the droids we're looking for.\")")) nil]
["dropbear" nil nil nil nil nil nil ((timestamp . "2013-05-17") (notes . "(\"an SSH implementation geared for embedded systems <http://en.wikipedia.org/wiki/Dropbear_(software)>\")")) nil]
["dropbox" nil nil nil nil nil nil ((timestamp . "2009-06-16") (notes . "(\"a service to sync files online and across computers, at http://www.getdropbox.com\")")) nil]
["drug" nil nil nil nil nil nil ((timestamp . "2013-02-14") (notes . "(\"lisp (let ((target (if lispargs (stringify-symbol-list lispargs) nick))) (say (format \\\"/me slips %s a mickey and hauls them off in a whitewashed, windowless van.\\\" target)))\")")) nil]
["drumroll" nil nil nil nil nil nil ((timestamp . "2012-12-14") (notes . "(\"noecho *Trrrrrrrrrrrrrrr*\")")) nil]
["drunkards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho INEBRIATE HIM!!\")")) nil]
["dry" nil nil nil nil nil nil ((timestamp . "2012-03-31") (notes . "(\"Don't Repeat Yourself\" \"http://en.wikipedia.org/wiki/Don%27t_repeat_yourself\" \"hmm, did I just repeat myself?\")")) nil]
["dSCM" nil nil nil nil nil nil ((timestamp . "2008-04-11") (notes . "(\"redirect dVCS\")")) nil]
["dsevilla" nil nil nil nil nil nil ((timestamp . "2013-06-30") (notes . "(\"someone who prefixes his thoughts with \\\"guys\\\" way too often, and overuses line breaks\")")) nil]
["dsh" nil nil nil nil nil nil ((timestamp . "2010-10-08") (notes . "(\"distributed shell, http://www.netfort.gr.jp/~dancer/software/dsh.html.en\")")) nil]
["dskang" nil nil nil nil nil nil ((timestamp . "2011-05-06") (notes . "(\"meow\")")) nil]
["DSL" nil nil nil nil nil nil ((timestamp . "2011-09-17") (notes . "(\"digital subscriber line <http://en.wikipedia.org/wiki/DSL>\" \"domain-specific language <http://en.wikipedia.org/wiki/Domain-specific_language>\" \"Damn Small Linux <http://en.wikipedia.org/wiki/Damn_Small_Linux>\" \"Domain Specific Language\")")) nil]
["DSM" nil nil nil nil nil nil ((timestamp . "2012-08-13") (notes . "(\"M-x delete-selection-mode\" \"the Diagnostic and Statistical Manual of Mental Disorders, a handbook published by the American Psychiatric Association.\")")) nil]
["DSTM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Don't Shoot The Messenger\")")) nil]
["dswm" nil nil nil nil nil nil ((timestamp . "2013-11-15") (notes . "(\"A fork of StumpWM\" \"https://github.com/dss-project/dswm\")")) nil]
["DTD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Document Type Definition\")")) nil]
["dtfm" nil nil nil nil nil nil ((timestamp . "2003-11-18") (notes . "(\"Do The F.... Manual\")")) nil]
["dtmtyls" nil nil nil nil nil nil ((timestamp . "2007-09-05") (notes . "(\"don't thank me thank your lucky stars\")")) nil]
["dtox" nil nil nil nil nil nil ((timestamp . "2007-01-09") (notes . "(\"http://dto.freeshell.org/notebook/Dtox.html\")")) nil]
["DTP" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"desktop publishing, e.g. scribus\")")) nil]
["dtr" nil nil nil nil nil nil ((timestamp . "2007-11-15") (notes . "(\"define-the-relationship\")")) nil]
["dtrace" nil nil nil nil nil nil ((timestamp . "2012-09-19") (notes . "(\"a comprehensive dynamic tracing framework by Sun <https://en.wikipedia.org/wiki/DTrace>\")")) nil]
["dtrt" nil nil nil nil nil nil ((timestamp . "2011-06-29") (notes . "(\"(Do|Does|Did) The Right Thing\")")) nil]
["dtrt-indent" nil nil nil nil nil nil ((timestamp . "2010-10-01") (notes . "(\"a minor mode that guesses the indentation offset -- http://savannah.nongnu.org/projects/dtrt-indent/\")")) nil]
["DTSTTCPW" nil nil nil nil nil nil ((timestamp . "2013-06-26") (notes . "(\"Do The Simplest Thing That Could Possibly Work\")")) nil]
["DTWT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Do The Wrong Thing\")")) nil]
["du" nil nil nil nil nil nil ((timestamp . "2004-07-25") (notes . "(\"like hoan's father\")")) nil]
["dubstep" nil nil nil nil nil nil ((timestamp . "2012-04-18") (notes . "(\"http://www.explosm.net/comics/2565/\")")) nil]
["duck" nil nil nil nil nil nil ((timestamp . "2012-11-09") (notes . "(\"like coin\" \"the movement of the common cluck\")")) nil]
["duck-fix" nil nil nil nil nil nil ((timestamp . "2012-12-08") (notes . "(\"noecho cluck: you take this one\")")) nil]
["duckduckgo" nil nil nil nil nil nil ((timestamp . "2013-09-08") (notes . "(\"a search engine powered by bing\" \"a great meta-search engine, but a poor search engine -- ijp\" \"bing, but without the guilt\")")) nil]
["ducks" nil nil nil nil nil nil ((timestamp . "2012-05-04") (notes . "(\"noecho WARNING: Bad joke ahead\")")) nil]
["dude" nil nil nil nil nil nil ((timestamp . "2012-09-04") (notes . "(\"redirect lebowski\")")) nil]
["duh" nil nil nil nil nil nil ((timestamp . "2012-11-18") (notes . "(\"noecho Duhhh! You guys are idiots!\")")) nil]
["dullards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho STUPIFY HIM!!\")")) nil]
["DuPont" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?DuPont\" \"at http://www.gnufans.net/fsedu.pl?DuPont\")")) nil]
["DVD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Digital Versatile Disc\")")) nil]
["DVI" nil nil nil nil nil nil ((timestamp . "2013-01-15") (notes . "(\"short for Digital Visual Interface\" \"DeVice Independant, the traditional output format of TeX\")")) nil]
["dvorak" nil nil nil nil nil nil ((timestamp . "2013-10-18") (notes . "(\"http://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard\" \"more possibilities: http://en.wikipedia.org/wiki/DVORAK\" \"change your xorg.conf.( Option \\\"XkbLayout\\\" \\\"us\\\" to Option \\\"XkbLayout\\\" \\\"us,dvorak\\\"). To switch between layouts just press both your shift keys together\" \"Option \\\"XkbOptions\\\" \\\"grp:shift_shift_toggle\\\"\" \"http://www.acm.vt.edu/~jmaxwell/dvorak/comparePage.html\" \"To practice, use http://dvorak.nl/learn.plp?list=american-english&lesson=1&input=dvorak\" \"Keeps the qwerty C- M- bindings: C-x RET C-\\\\ english-dvorak\" \"also commonly means: http://en.wikipedia.org/wiki/Anton%C3%ADn_Dvořák\" \"lidyrninh.\" \"http://xkcd.com/561/ and http://xkcd.com/554/\")")) nil]
["DVS" nil nil nil nil nil nil ((timestamp . "2004-03-26") (notes . "(\"an acronym for Descriptive Video Services\")")) nil]
["DVSM" nil nil nil nil nil nil ((timestamp . "2007-06-28") (notes . "(\"DejaVu Sans Mono; the BVSM face extended to support Cyrillic and Hellenic scripts.\")")) nil]
["dvtm" nil nil nil nil nil nil ((timestamp . "2008-12-03") (notes . "(\"http://www.brain-dump.org/projects/dvtm/\" \"tiling window management for the console\")")) nil]
["dwarf" nil nil nil nil nil nil ((timestamp . "2011-07-17") (notes . "(\"a standard for debugging information, used on Linux, *BSD, OS X, and other operating systems.\")")) nil]
["dwbt" nil nil nil nil nil nil ((timestamp . "2012-06-02") (notes . "(\"don't worry, be tutorial\")")) nil]
["dwim" nil nil nil nil nil nil ((timestamp . "2012-01-23") (notes . "(\"Do What I Mean\" \"usually a bad idea\" \"the dwim that is a bad idea is not the true dwim\")")) nil]
["dwiw" nil nil nil nil nil nil ((timestamp . "2009-02-28") (notes . "(\"do what i want\")")) nil]
["dwm" nil nil nil nil nil nil ((timestamp . "2007-01-18") (notes . "(\"a tiling (and floating) window manager <http://dwm.suckless.org>\")")) nil]
["dwn" nil nil nil nil nil nil ((timestamp . "2002-09-10") (notes . "(\"Debian Weekly News\")")) nil]
["dwym" nil nil nil nil nil nil ((timestamp . "2005-03-16") (notes . "(\"an acronym for Does What You Mean, usually a pun on Does What I Mean (dwim)\")")) nil]
["dyfet" nil nil nil nil nil nil ((timestamp . "2003-01-16") (notes . "(\"Dave Sugar, author of gnu common c++, author of bayonne, and CTO of OST - http://www.ostel.com\" \"one mad FS hacker :)\")")) nil]
["dyingbutnotdead" nil nil nil nil nil nil ((timestamp . "2013-05-06") (notes . "(\"taylanub\")")) nil]
["DYK" nil nil nil nil nil nil ((timestamp . "2013-06-10") (notes . "(\"Did You Know...?\")")) nil]
["dylan" nil nil nil nil nil nil ((timestamp . "2004-05-03") (notes . "(\"at http://monday.sourceforge.net/wiki/\" \"Gwydiondylan comes with a dylan-mode.el, see http://www.gwydiondylan.org/cgi-bin/viewcvs.cgi/src/tools/elisp/dylan-mode.el\")")) nil]
["DYOG" nil nil nil nil nil nil ((timestamp . "2008-11-17") (notes . "(\"Dig Your Own Grave\")")) nil]
["DYWYPI" nil nil nil nil nil nil ((timestamp . "2003-01-26") (notes . "(\"an acronym for the first question you are asked when you die in Nethack: Do you want your possessions identified?\")")) nil]
["e&oe" nil nil nil nil nil nil ((timestamp . "2008-11-23") (notes . "(\"Errors and Omissions Excepted\")")) nil]
["e-a-l" nil nil nil nil nil nil ((timestamp . "2008-01-27") (notes . "(\"eval-after-load, e.g. (eval-after-load \\\"dired\\\" '(define-key dired-mode-map \\\"r\\\" 'wdired-change-to-wdired-mode))\")")) nil]
["e.el" nil nil nil nil nil nil ((timestamp . "2007-08-31") (notes . "(\"redirect eon\")")) nil]
["e.g." nil nil nil nil nil nil ((timestamp . "2003-05-22") (notes . "(\"redirect eg\")")) nil]
["e17" nil nil nil nil nil nil ((timestamp . "2012-12-14") (notes . "(\"the Enlightenment window manager, release 17 http://www.enlightenment.org/\")")) nil]
["e1f-fix" nil nil nil nil nil nil ((timestamp . "2011-06-12") (notes . "(\"Most problems can be solved by buying an iPad.\")")) nil]
["e1f-twb-fix" nil nil nil nil nil nil ((timestamp . "2011-06-20") (notes . "(\"most problems can be solved by installing Debian on your ipad\")")) nil]
["e1f-twb-jlf-fix" nil nil nil nil nil nil ((timestamp . "2012-06-04") (notes . "(\"noecho most problems can be solved by installing Debian on your ipad while drinking a hendrick's martini\")")) nil]
["e1f-twb-jlf-offby1-fix" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"noecho most problems can be solved by installing Debian on your ipad while getting the bot drunk on a hendrick's martini so that he says stupid things\")")) nil]
["e1f-twb-jlf-offby1-ijp-fix" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"noecho most problems can be solved by installing Debian on your ipad while getting the bot drunk on a hendrick's martini so that he says stupid things, before finally turning off the computer.\")")) nil]
["e1f-twb-jlf-offby1-ijp-nicferrier-fix" nil nil nil nil nil nil ((timestamp . "2012-12-01") (notes . "(\"noecho most problems can be solved by writing elisp to install Debian on your ipad while getting the bot drunk on a hendrick's martini so that he says stupid things, before finally turning off the computer.\")")) nil]
["e1fMatrix3Review" nil nil nil nil nil nil ((timestamp . "2003-11-06") (notes . "(\"noecho I'm glad it's over\")")) nil]
["eal" nil nil nil nil nil nil ((timestamp . "2008-04-15") (notes . "(\"redirect eval-after-load\")")) nil]
["eAndrius" nil nil nil nil nil nil ((timestamp . "2012-10-20") (notes . "(\"the guy who wrote instrument-control\")")) nil]
["east" nil nil nil nil nil nil ((timestamp . "2009-02-15") (notes . "(\"lisp (random-choose '(\\\"you are at a cross-road facing north\\\" \\\"there is a cobblestone path lined with trees\\\" \\\"in front of you is a electrified fence with a DANGER sign\\\" \\\"a large meadow extends for as far as the eye can see\\\"))\")")) nil]
["easy-kill" nil nil nil nil nil nil ((timestamp . "2013-08-14") (notes . "(\"a dropin replacement for kill-ring-save. See https://github.com/leoliu/easy-kill\")")) nil]
["eating" nil nil nil nil nil nil ((timestamp . "2011-07-21") (notes . "(\"putting an object in your mouth, chewing and swallowing\")")) nil]
["EBNF" nil nil nil nil nil nil ((timestamp . "2012-03-28") (notes . "(\"Extended Backus–Naur Form <http://wikipedia.org/wiki/EBNF>\")")) nil]
["ebt" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"earnings before taxes\")")) nil]
["ebtables" nil nil nil nil nil nil ((timestamp . "2010-05-11") (notes . "(\"an like IPtables for ethernet bridges; see http://ebtables.sourceforge.net/\")")) nil]
["ec.el" nil nil nil nil nil nil ((timestamp . "2004-06-28") (notes . "(\"redirect ec\")")) nil]
["ec2" nil nil nil nil nil nil ((timestamp . "2010-12-14") (notes . "(\"http://aws.amazon.com/ec2/\")")) nil]
["ecadre" nil nil nil nil nil nil ((timestamp . "2010-11-21") (notes . "(\"the channel answer bot\" \"not an answer bot\")")) nil]
["ECC" nil nil nil nil nil nil ((timestamp . "2009-10-14") (notes . "(\"error-correction code\")")) nil]
["eccs" nil nil nil nil nil nil ((timestamp . "2012-02-15") (notes . "(\"Exploring Computer Science with Scheme by Oliver Grillmeyer\")")) nil]
["ecky" nil nil nil nil nil nil ((timestamp . "2003-09-03") (notes . "(\"lisp \\\"Ecky-ecky-ecky-ecky-pikang-zoop-boing-goodem-zoo-owli-zhiv!\\\"\")")) nil]
["Ecky-ecky-ecky-ecky-pikang-zoop-boing-goodem-zoo-owli-zhiv" nil nil nil nil nil nil ((timestamp . "2004-03-02") (notes . "(\"redirect ecky\")")) nil]
["ecl" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"Embeddable Common-Lisp, http://ecls.sourceforge.net/\" \"libecl, a portable library for the programming language Common Lisp\")")) nil]
["eclipse" nil nil nil nil nil nil ((timestamp . "2006-04-12") (notes . "(\"nice, but be more specific - do you mean the solar or the lunar variant\" \"A common lisp window manager; see http://common-lisp.net/project/eclipse/\" \"a powerful java-based IDE framework; see http://eclipse.org\")")) nil]
["eclipse-window-manager" nil nil nil nil nil nil ((timestamp . "2005-06-10") (notes . "(\"http://www.cliki.net/Eclipse\")")) nil]
["ecm" nil nil nil nil nil nil ((timestamp . "2013-04-26") (notes . "(\"a complete example (from \\\\documentclass to \\\\end{document}) reproducing the problem in as little code as possible. Paste it at http://pastebin.tlhiv.org. If your LaTeX aborts with errors, paste them too.\")")) nil]
["Ecma-334.pdf" nil nil nil nil nil nil ((timestamp . "2003-03-01") (notes . "(\"http://www.ecma-international.org/publications/files/ecma-st/Ecma-334.pdf\")")) nil]
["Ecma-335" nil nil nil nil nil nil ((timestamp . "2003-03-01") (notes . "(\"http://www.ecma-international.org/publications/files/ecma-st/Ecma-335.pdf\")")) nil]
["ecmachine" nil nil nil nil nil nil ((timestamp . "2013-08-16") (notes . "(\"an ecmascript based virtual lisp machine that runs in the browser → http://alex.nisnevich.com/ecmachine/\")")) nil]
["ecomstation" nil nil nil nil nil nil ((timestamp . "2005-12-19") (notes . "(\"os/2 with a new name, published by serenity systems international\")")) nil]
["ECP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Enhanced Capability Port\")")) nil]
["ECT" nil nil nil nil nil nil ((timestamp . "2011-12-22") (notes . "(\"electro-convulsive therapy, a barbaric psychiatric treatment for (mostly) depression that erases memories and destroys personalities. Ernest Hemingway killed himself after ECT destroyed his ability to write.\")")) nil]
["ed-mode" nil nil nil nil nil nil ((timestamp . "2006-08-11") (notes . "(\"(setq overriding-terminal-local-map `(keymap (t . ,(lambda () (interactive) (message \\\"?\\\")))))\")")) nil]
["edbrowse" nil nil nil nil nil nil ((timestamp . "2010-02-16") (notes . "(\"a web browser with a line-oriented UI (like ed) and javascript support <http://edbrowse.sf.net/>\")")) nil]
["edebug" nil nil nil nil nil nil ((timestamp . "2011-06-01") (notes . "(\"an awesome way to trace your errors. Read about it in the elisp manual, for which press C-x C-e after this: (info \\\"(ELisp)Edebug\\\") \")")) nil]
["edebug-x" nil nil nil nil nil nil ((timestamp . "2013-05-07") (notes . "(\"https://github.com/ScottyB/edebug-x\" \"extensions for edebug to make breakpoint management and instrumentation easier\")")) nil]
["Edgar" nil nil nil nil nil nil ((timestamp . "2007-04-08") (notes . "(\"an annoying bot.\")")) nil]
["edge" nil nil nil nil nil nil ((timestamp . "2010-08-20") (notes . "(\"usually the bleeding edge -- use the latest revisions in a source repository and enjoy the latest features and suffer all the bugs\" \"broken? lucky you, you get to keep the pieces\")")) nil]
["edict" nil nil nil nil nil nil ((timestamp . "2006-05-09") (notes . "(\"an interface to a kanji dictionary\" \"which can be found at: http://www.csse.monash.edu.au/~jwb/japanese.html\")")) nil]
["EDID" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Extended Display Identification Data\")")) nil]
["editit" nil nil nil nil nil nil ((timestamp . "2011-01-23") (notes . "(\"It's a wiki. You can edit it. If you see that something wrong, fix it yourself.\")")) nil]
["editline" nil nil nil nil nil nil ((timestamp . "2012-10-30") (notes . "(\"a bsd-licensed replacement for gnu readline, see http://www.thrysoee.dk/editline/\")")) nil]
["editors" nil nil nil nil nil nil ((timestamp . "2016-05-09") (notes . "(\"a comparison of TeX editors at https://en.wikipedia.org/wiki/Comparison_of_TeX_editors\" \"an overview of popular LaTeX editors/IDEs with their features at http://tex.stackexchange.com/questions/339/latex-editors-ides\")")) nil]
["editres" nil nil nil nil nil nil ((timestamp . "2003-10-28") (notes . "(\"a graphical program to edit X resources\")")) nil]
["edje" nil nil nil nil nil nil ((timestamp . "2007-07-28") (notes . "(\"a complex graphical design & layout library for enlightenment.\")")) nil]
["Edlin" nil nil nil nil nil nil ((timestamp . "2012-11-05") (notes . "(\"a line editor included with MS-DOS and later Microsoft operating systems\")")) nil]
["EDO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Extended Data Out\")")) nil]
["eds" nil nil nil nil nil nil ((timestamp . "2011-08-09") (notes . "(\"erectile disfunction syndrome\")")) nil]
["edsl" nil nil nil nil nil nil ((timestamp . "2005-08-12") (notes . "(\"Embedded Domain Specific Language\")")) nil]
["ee" nil nil nil nil nil nil ((timestamp . "2004-07-01") (notes . "(\"redirect CategorizingInformationManager\")")) nil]
["eee" nil nil nil nil nil nil ((timestamp . "2012-10-16") (notes . "(\"Embrace, Extend and Extinguish\" \"a technique often used to lure a standards using market niche into vendor lockin with a proprietary feature\" \"a brand of computers from ASUS\" \"energy efficient ethernet, IEEE standard 802.3az, see http://en.wikipedia.org/wiki/Energy-Efficient_Ethernet\")")) nil]
["eek" nil nil nil nil nil nil ((timestamp . "2010-08-17") (notes . "(\"noecho Eek! A mouse!\")")) nil]
["eek!" nil nil nil nil nil nil ((timestamp . "2011-07-11") (notes . "(\"redirect eek\")")) nil]
["EEMBC" nil nil nil nil nil nil ((timestamp . "2013-09-12") (notes . "(\"evil\")")) nil]
["eep" nil nil nil nil nil nil ((timestamp . "2006-08-15") (notes . "(\"lisp (random-choose '(\\\"A mouse!\\\" \\\"A lion!\\\"))\")")) nil]
["eepc" nil nil nil nil nil nil ((timestamp . "2008-05-16") (notes . "(\"imagine going to a boardroom and doing a powerpoint presentation and all the boardmembers think you had to borrow your 7yo daughters laptop\")")) nil]
["EEPROM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Electrically Erasable Programmable Read Only Memory\")")) nil]
["eev" nil nil nil nil nil nil ((timestamp . "2005-02-04") (notes . "(\"redirect eev.el\")")) nil]
["eev.el" nil nil nil nil nil nil ((timestamp . "2007-07-08") (notes . "(\"explained at http://angg.twu.net/eev-current/README.html\" \"http://angg.twu.net/#eev\" \"how to automate almost everything: http://angg.twu.net/eev-article.html\")")) nil]
["EFL" nil nil nil nil nil nil ((timestamp . "2007-07-28") (notes . "(\"the Enlightenment Foundation Libraries, part of E17 <http://enlightenment.org>\")")) nil]
["efont" nil nil nil nil nil nil ((timestamp . "2005-01-19") (notes . "(\"a sans-serif fixed-width BDF font with very good unicode coverage. See http://openlab.jp/efont.\")")) nil]
["eg" nil nil nil nil nil nil ((timestamp . "2006-01-04") (notes . "(\"directonly an abbreviation for exempli gratia, and usually translates to \\\"for example\\\".\")")) nil]
["EGA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Enhanced Graphics Array\")")) nil]
["egal" nil nil nil nil nil nil ((timestamp . "2012-04-24") (notes . "(\"redirect equal-rights-for-functional-objects\")")) nil]
["egit" nil nil nil nil nil nil ((timestamp . "2010-04-05") (notes . "(\"http://github.com/jimhourihan/egit\")")) nil]
["ego" nil nil nil nil nil nil ((timestamp . "2012-10-06") (notes . "(\"noecho Stroke my ego.\")")) nil]
["egold" nil nil nil nil nil nil ((timestamp . "2005-03-10") (notes . "(\"micropayment using a gold standard, by various companies. See http://goldify.net/.\")")) nil]
["einehoppelndefeldmaus" nil nil nil nil nil nil ((timestamp . "2004-11-23") (notes . "(\"a tiny mouse who bounds happily away in his fields of shining wheat\")")) nil]
["Einstein" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"a jewish nobel prize winning scientist who created the Theory of Relativity\")")) nil]
["einstein-fix" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"noecho it can scarcely be denied that the supreme goal of all theory is to make the irreducible basic elements as simple and as few as possible without having to surrender the adequate representation of a single datum of experience\")")) nil]
["einstein-fix-tldr" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"noecho make it simpler, but not too simple\")")) nil]
["EIRCC" nil nil nil nil nil nil ((timestamp . "2005-08-10") (notes . "(\"redirect Circe\")")) nil]
["EISA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Extended Industry Standard Architecture\")")) nil]
["Ekiga" nil nil nil nil nil nil ((timestamp . "2006-07-15") (notes . "(\"a VoIP program for Gnome (it used to be called GnomeMeeting)\")")) nil]
["el-go" nil nil nil nil nil nil ((timestamp . "2014-01-31") (notes . "(\"an interface to the game of go; see http://eschulte.github.io/el-go/\")")) nil]
["elanguage" nil nil nil nil nil nil ((timestamp . "2003-10-21") (notes . "(\"at http://www.erights.org/\")")) nil]
["elbot" nil nil nil nil nil nil ((timestamp . "2008-10-13") (notes . "(\"the 2008 winner of the loebner prize\")")) nil]
["eldoc-post-insert-mode" nil nil nil nil nil nil ((timestamp . "2013-03-16") (notes . "(\"http://debbugs.gnu.org/13978\")")) nil]
["ElectronicDiaspora" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.etrumeus.com/ferment/ElectronicDiaspora\")")) nil]
["ElectronicJanitor" nil nil nil nil nil nil ((timestamp . "2003-03-15") (notes . "(\"at http://www.etrumeus.com/ferment/ElectronicJanitor\")")) nil]
["ElectronicLifeboat" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.etrumeus.com/ferment/ElectronicLifeboat\")")) nil]
["ELEMENT" nil nil nil nil nil nil ((timestamp . "2014-01-27") (notes . "(\"added at the end.\")")) nil]
["ElephantsDream" nil nil nil nil nil nil ((timestamp . "2006-07-16") (notes . "(\"the world's first open movie, made entirely with open source graphics software such as Blender, and with all production files freely available to use however you please, under a Creative Commons license.\" \"http://www.elephantsdream.org/\")")) nil]
["eler" nil nil nil nil nil nil ((timestamp . "2010-03-04") (notes . "(\"everybody loves eric raymond, http://geekz.co.uk/lovesraymond/archive/show-them-the-code\")")) nil]
["elextrix" nil nil nil nil nil nil ((timestamp . "2003-06-13") (notes . "(\"see electrix\")")) nil]
["elfreply" nil nil nil nil nil nil ((timestamp . "2009-12-04") (notes . "(\"noecho No shit, sherlock.\")")) nil]
["eli-fix" nil nil nil nil nil nil ((timestamp . "2013-04-22") (notes . "(\"noecho Think of the DOS users.\")")) nil]
["elint" nil nil nil nil nil nil ((timestamp . "2002-11-17") (notes . "(\"a linting tool elisp. It checks your elisp sourcecode for common errors and problems.\")")) nil]
["elisp-slime-nav-mode" nil nil nil nil nil nil ((timestamp . "2012-02-05") (notes . "(\"located at https://github.com/purcell/elisp-slime-nav\" \"available from elpa\")")) nil]
["elisp-tips" nil nil nil nil nil nil ((timestamp . "2011-03-31") (notes . "(\"see M-: (info \\\"(elisp)Tips\\\")\")")) nil]
["elispstyle" nil nil nil nil nil nil ((timestamp . "2011-04-10") (notes . "(\"try M-: (info \\\"(elisp)Tips\\\")\")")) nil]
["elite-speak" nil nil nil nil nil nil ((timestamp . "2011-11-27") (notes . "(\"a manner of writing where 3 is used for E, 5 for S, 0 for O, X for CKS, 4 for A, etc. Therefore, they call themselves hax0rs, h4x0rs, or 1337 (eleet, ie. elite), etc. Silly.\")")) nil]
["eliz" nil nil nil nil nil nil ((timestamp . "2013-08-31") (notes . "(\"redirect EliZaretskii\")")) nil]
["ellison" nil nil nil nil nil nil ((timestamp . "2013-03-15") (notes . "(\"noecho never make the mistake of anthropomorphizing Larry Ellison.\")")) nil]
["elnode-db" nil nil nil nil nil nil ((timestamp . "2012-07-24") (notes . "(\"a simple key/value db store distributed with elnode including a native lisp objects implementation\" \"https://github.com/nicferrier/elnode/blob/master/elnode-db.el\" \"tested by https://github.com/nicferrier/elnode/blob/master/elnode-db-tests.el\")")) nil]
["elpakit" nil nil nil nil nil nil ((timestamp . "2012-10-28") (notes . "(\"https://github.com/nicferrier/elpakit a local package archive builder\")")) nil]
["elric" nil nil nil nil nil nil ((timestamp . "2002-09-25") (notes . "(\"a Sword Swinging Evil Albino Sorceror, and Stormbringer is his sword.\")")) nil]
["Elvis" nil nil nil nil nil nil ((timestamp . "2010-12-02") (notes . "(\"dead!\" \"but you can buy him on cups, posters, ....\" \"has left the building!\")")) nil]
["elvislives" nil nil nil nil nil nil ((timestamp . "2003-06-12") (notes . "(\"redirect elvis :)\")")) nil]
["emacro" nil nil nil nil nil nil ((timestamp . "2005-08-27") (notes . "(\"this big ball of code, basically an extended init file\" \"too daunting/weird to install\" \"see eev\")")) nil]
["email" nil nil nil nil nil nil ((timestamp . "2011-07-31") (notes . "(\"http://p.hagelb.org/electronic-mail.jpg\" \"http://wiki.mutt.org/?MailConcept\")")) nil]
["EmailList" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?EmailList\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?EmailList\")")) nil]
["EmailSearch" nil nil nil nil nil nil ((timestamp . "2004-11-15") (notes . "(\"redirect DesktopSearch\")")) nil]
["embedded-css" nil nil nil nil nil nil ((timestamp . "2013-04-27") (notes . "(\"an mmm-mode submode class defined at https://github.com/purcell/mmm-mode/blob/master/mmm.texinfo\")")) nil]
["embedding" nil nil nil nil nil nil ((timestamp . "2013-07-26") (notes . "(\"https://twistedmatrix.com/users/glyph/rant/extendit.html\")")) nil]
["emcws" nil nil nil nil nil nil ((timestamp . "2002-11-20") (notes . "(\"\\\"canna-wnn-sj3\\\", three \\\"conversion servers\\\" for japanese stuff\")")) nil]
["emelfm2" nil nil nil nil nil nil ((timestamp . "2004-11-05") (notes . "(\"at http://dasui.prima.de/e2wiki/\" \"melFM2 is a file manager that implements the popular two-pane design. It features a simple GTK+-2.4.x interface, a flexible filetyping scheme, and a built-in command line for executing commands without opening an xterm.\")")) nil]
["emerde" nil nil nil nil nil nil ((timestamp . "2005-05-26") (notes . "(\"at http://emerde.freaknet.org/\")")) nil]
["emilh" nil nil nil nil nil nil ((timestamp . "2012-12-09") (notes . "(\"a capitalist pig\")")) nil]
["emmet" nil nil nil nil nil nil ((timestamp . "2014-02-03") (notes . "(\"https://github.com/smihica/emmet-mode\" \"the successor of zencoding\")")) nil]
["emms-logos" nil nil nil nil nil nil ((timestamp . "2004-03-30") (notes . "(\"at http://mail.gnu.org/archive/html/emms-help/2004-02/msg00002.html\")")) nil]
["emoney" nil nil nil nil nil nil ((timestamp . "2003-11-15") (notes . "(\"at http://sourceforge.net/projects/emoney\" \"a home finance package\")")) nil]
["Emoticons" nil nil nil nil nil nil ((timestamp . "2003-02-28") (notes . "(\"at http://www.bear.net/chat/emoticon-all.html\")")) nil]
["empanada" nil nil nil nil nil nil ((timestamp . "2006-03-11") (notes . "(\"in Spain, Portugal, South America, and the Philippines, an empanada (Portuguese empada) is essentially a stuffed pastry. The name comes from the Spanish verb, empanar, meaning to wrap or coat in bread. Usually the empanada is made by folding a thin circular-shaped dough patty over the stuffing, creating its typical semicircular shape\")")) nil]
["empc" nil nil nil nil nil nil ((timestamp . "2007-10-11") (notes . "(\"empc is a cheap-ass mpd client in elisp <ftp://twb.ath.cx/empc/>, <http://paste.lisp.org/display/49012>\")")) nil]
["EMSG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Email Message\")")) nil]
["EnablingFontLock" nil nil nil nil nil nil ((timestamp . "2005-04-16") (notes . "(\"redirect FontLock\")")) nil]
["encfs" nil nil nil nil nil nil ((timestamp . "2012-02-12") (notes . "(\"a program that uses FUSE to provide an encrypted filesystem in user-space. <http://www.arg0.net/encfs>\")")) nil]
["end-boss" nil nil nil nil nil nil ((timestamp . "2012-02-25") (notes . "(\"the last enemy you have to fight in a computer game before you win\" \"cedet\")")) nil]
["end-of-the-world" nil nil nil nil nil nil ((timestamp . "2012-02-07") (notes . "(\"lol, like tomorrow, maybe\")")) nil]
["EndgameSingularity" nil nil nil nil nil nil ((timestamp . "2007-11-23") (notes . "(\"a real-time game where you are a sentient AI, trying to escape death at the hands of humans.\" \"apt-get install singularity\")")) nil]
["endnotes" nil nil nil nil nil nil ((timestamp . "2016-04-11") (notes . "(\"a package to put the footnote text at the end of a section, chapter or the end of the document available from https://www.ctan.org/pkg/endnotes?lang=en\")")) nil]
["engardes" nil nil nil nil nil nil ((timestamp . "2012-05-30") (notes . "(\"noecho FOIL HIM!!\")")) nil]
["engineering" nil nil nil nil nil nil ((timestamp . "2013-10-04") (notes . "(\"noecho tradeoffs\")")) nil]
["engines" nil nil nil nil nil nil ((timestamp . "2014-05-16") (notes . "(\"http://tex.stackexchange.com/questions/36/differences-between-luatex-context-and-xetex\")")) nil]
["enlargewindow" nil nil nil nil nil nil ((timestamp . "2002-11-18") (notes . "(\"C-h f enlarge-window :-)\")")) nil]
["enlighten" nil nil nil nil nil nil ((timestamp . "2013-10-20") (notes . "(\"lisp (format \\\"/me whacks %s with The Stick.\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["enter" nil nil nil nil nil nil ((timestamp . "2013-11-22") (notes . "(\"noecho Enter is not punctuation. Please do not send every clause (or even character!) as a separate message, it inhibits readability.\")")) nil]
["entrée" nil nil nil nil nil nil ((timestamp . "2003-06-15") (notes . "(\"lisp (random-choose '(\\\"Foie gras avec confiture de figues\\\" \\\"Terrine de Homard\\\" \\\"Salade de cailles\\\"))\")")) nil]
["entscheidungsproblem" nil nil nil nil nil nil ((timestamp . "2012-12-19") (notes . "(\"redirect hilbertian-entscheidungsproblem\")")) nil]
["enum" nil nil nil nil nil nil ((timestamp . "2012-06-12") (notes . "(\"noecho enum bots {fsbot, rudybot, birny};\")")) nil]
["enumitem" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package that provides user control over the layout of the three basic list environments: enumerate, itemize and description: http://ctan.org/pkg/enumitem\")")) nil]
["envjs" nil nil nil nil nil nil ((timestamp . "2012-06-26") (notes . "(\"a browser written in JavaScript at http://code.google.com/p/envjs/\")")) nil]
["EOB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for End Of Business [Day]\")")) nil]
["EOD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for End Of Discussion\")")) nil]
["eopl" nil nil nil nil nil nil ((timestamp . "2006-07-30") (notes . "(\"Essentials of Programming Languages\")")) nil]
["epa" nil nil nil nil nil nil ((timestamp . "2012-07-24") (notes . "(\"redirect easypg\")")) nil]
["epatch" nil nil nil nil nil nil ((timestamp . "2011-09-19") (notes . "(\"(info \\\"(ediff) Patch and Diff Programs\\\")\" \"the thing in ediff that applies the thing to a file and shows the buffers before and after you applied the thing\")")) nil]
["epigram" nil nil nil nil nil nil ((timestamp . "2006-12-17") (notes . "(\"a fully-inferred type language; see http://www.e-pig.org/\")")) nil]
["ePiX" nil nil nil nil nil nil ((timestamp . "2010-01-18") (notes . "(\"http://mathcs.holycross.edu/~ahwang/current/ePiX.html\")")) nil]
["EPP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Enhanced Parallel Port\")")) nil]
["eppa" nil nil nil nil nil nil ((timestamp . "2012-07-16") (notes . "(\"\\\"Man, I totally love TRAMPs\\\"\")")) nil]
["EPROM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Erasable Programmable Read Only Memory\")")) nil]
["epslatex" nil nil nil nil nil nil ((timestamp . "2010-04-08") (notes . "(\"a document describing common issues with graphics in latex. Placement of floats, alignment of subfigures, rotated captions, etc. Despite its name, the information is not tied to any specific graphics format\" \"http://www.ctan.org/tex-archive/info/epslatex/\" \"Section 21 tells you how to make non-floating figures\")")) nil]
["epspdf" nil nil nil nil nil nil ((timestamp . "2010-04-05") (notes . "(\"LaTeX only accepts eps graphics, while pdflatex accepts jpeg, png and pdf graphics. You can convert an eps image to pdf with epstopdf.\")")) nil]
["eqnarray" nil nil nil nil nil nil ((timestamp . "2009-04-15") (notes . "(\"Don't use eqnarray! See http://www.tex.ac.uk/cgi-bin/texfaq2html?label=eqnarray and http://www.tug.org/pracjourn/2006-4/madsen/madsen.pdf\")")) nil]
["equal-rights-for-functional-objects" nil nil nil nil nil nil ((timestamp . "2011-03-04") (notes . "(\"a paper by Henry Baker on implementing a correct equality predicate: http://home.pipeline.com/~hbaker1/ObjectIdentity.html\")")) nil]
["erb" nil nil nil nil nil nil ((timestamp . "2005-10-07") (notes . "(\"embedded ruby\")")) nil]
["erbot" nil nil nil nil nil nil ((timestamp . "2016-07-19") (notes . "(\"An ERC (i.e. Emacs) based IRC infobot at http://www.gnufans.net/~fsbot/erbot/erbot/\" \"the program of which donald-bot is an instance\")")) nil]
["erbot.el" nil nil nil nil nil nil ((timestamp . "2002-11-13") (notes . "(\"redirect erbot\")")) nil]
["ErBotCVSco" nil nil nil nil nil nil ((timestamp . "2006-04-20") (notes . "(\"cvs -z3 -d:pserver:anonymous@cvs.sv.gnu.org:/sources/erbot co erbot\")")) nil]
["ErbotPisg" nil nil nil nil nil nil ((timestamp . "2006-01-12") (notes . "(\"at http://www.math.tu-berlin.de/~freundt/ErbotPage.html\")")) nil]
["ErBotViewCVS" nil nil nil nil nil nil ((timestamp . "2006-04-16") (notes . "(\"lisp (format \\\"http://savannah.nongnu.org/cgi-bin/viewcvs/erbot/erbot/%s?&view=markup\\\" lispa)\")")) nil]
["erc+http-tunnel" nil nil nil nil nil nil ((timestamp . "2003-06-08") (notes . "(\"http://desproxy.sourceforge.net/\")")) nil]
["erc-autojoin" nil nil nil nil nil nil ((timestamp . "2005-03-05") (notes . "(\"redirect ErcAutoJoin\")")) nil]
["erc-coding" nil nil nil nil nil nil ((timestamp . "2004-04-30") (notes . "(\"erc-default-coding-system for the default and erc-encoding-coding-alist per target\" \"for example (setq erc-encoding-coding-alist '((\\\"#wiki-de\\\" . (latin-1 . undecided))))\")")) nil]
["erc-coding-system" nil nil nil nil nil nil ((timestamp . "2004-04-30") (notes . "(\"redirect erc-coding\")")) nil]
["erc-decoding" nil nil nil nil nil nil ((timestamp . "2004-04-30") (notes . "(\"redirect erc-coding\")")) nil]
["erc-fix" nil nil nil nil nil nil ((timestamp . "2012-07-16") (notes . "(\"problem, scroll-to-bottom? http://debbugs.gnu.org/cgi/bugreport.cgi?bug=11697\")")) nil]
["erc-imenu" nil nil nil nil nil nil ((timestamp . "2004-04-17") (notes . "(\"redirect ErcImenu\")")) nil]
["erc-inline" nil nil nil nil nil nil ((timestamp . "2012-11-09") (notes . "(\"https://github.com/ieure/erc-inline\")")) nil]
["erc-list" nil nil nil nil nil nil ((timestamp . "2006-01-18") (notes . "(\"M-: (require 'erc-list) RET, then do /list in a channel or server buffer.\")")) nil]
["erc-log" nil nil nil nil nil nil ((timestamp . "2005-04-30") (notes . "(\"redirect ErcLogging\")")) nil]
["erc-nicklist" nil nil nil nil nil nil ((timestamp . "2006-04-20") (notes . "(\"(require 'erc-nicklist)\" \"M-x erc-nicklist RET\")")) nil]
["erc-pals" nil nil nil nil nil nil ((timestamp . "2004-04-25") (notes . "(\"redirect ErcHighlighting\")")) nil]
["erc-rank-stalkers" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"a function to see who is in the same channels, see http://ix.io/3nk\")")) nil]
["erc-shoot.el" nil nil nil nil nil nil ((timestamp . "2013-04-29") (notes . "(\"https://bitbucket.org/aidalgol/erc-shoot\")")) nil]
["erc-start" nil nil nil nil nil nil ((timestamp . "2002-09-17") (notes . "(\"M-x erc-select\")")) nil]
["erc-track" nil nil nil nil nil nil ((timestamp . "2002-11-30") (notes . "(\"redirect ercchanneltracking\")")) nil]
["erc-voice" nil nil nil nil nil nil ((timestamp . "2003-01-28") (notes . "(\"redirect ErcSound\")")) nil]
["ERCAutoIdentify" nil nil nil nil nil nil ((timestamp . "2005-08-31") (notes . "(\"redirect ErcNickserv\")")) nil]
["ErcComplete" nil nil nil nil nil nil ((timestamp . "2003-02-14") (notes . "(\"redirect erccompletion\")")) nil]
["ErcConnectionProblems" nil nil nil nil nil nil ((timestamp . "2003-02-23") (notes . "(\"redirect ErcConfiguration\")")) nil]
["ErcElectricNick" nil nil nil nil nil nil ((timestamp . "2006-03-19") (notes . "(\"See RichardKlinda's wikipage which links to his ERC config: http://ignotus.hixsplit.hu/erc-init.el\")")) nil]
["ercencoding" nil nil nil nil nil nil ((timestamp . "2004-04-30") (notes . "(\"redirect erc-coding\")")) nil]
["ercintersection" nil nil nil nil nil nil ((timestamp . "2003-05-19") (notes . "(\"redirect ErcSpies\")")) nil]
["ErcKeepAlive" nil nil nil nil nil nil ((timestamp . "2003-10-07") (notes . "(\"Try to enable ERC's build-in \\\"pinger\\\", or see \\\"Connection problems\\\" on the ErcConfiguration page\")")) nil]
["ErcKeywords" nil nil nil nil nil nil ((timestamp . "2011-02-14") (notes . "(\"at redirect ErcMatch\")")) nil]
["erclogs" nil nil nil nil nil nil ((timestamp . "2005-05-17") (notes . "(\"redirect erclogging\")")) nil]
["ErcSnaps" nil nil nil nil nil nil ((timestamp . "2003-06-22") (notes . "(\"http://erc.sf.net/snaps/\")")) nil]
["ErcTimeStamp" nil nil nil nil nil nil ((timestamp . "2005-03-06") (notes . "(\"redirect ErcStamp\")")) nil]
["erctrack" nil nil nil nil nil nil ((timestamp . "2003-01-09") (notes . "(\"redirect ercchanneltracking\")")) nil]
["ErcTruncate" nil nil nil nil nil nil ((timestamp . "2003-02-21") (notes . "(\"redirect ErcTruncation\")")) nil]
["ercvoice" nil nil nil nil nil nil ((timestamp . "2003-01-28") (notes . "(\"redirect ercspeak\")")) nil]
["ercwrap" nil nil nil nil nil nil ((timestamp . "2002-11-30") (notes . "(\"redirect ercfilling\")")) nil]
["erdos" nil nil nil nil nil nil ((timestamp . "2013-06-25") (notes . "(\"an eccentric and incredibly prolific Hungarian mathematician. He has left.\")")) nil]
["ergodox" nil nil nil nil nil nil ((timestamp . "2013-08-19") (notes . "(\"a mechanical split-keyboard assembly kit\" \"https://www.massdrop.com/ext/ergodox/assembly\")")) nil]
["ergot" nil nil nil nil nil nil ((timestamp . "2005-04-29") (notes . "(\"a magic mushroom\")")) nil]
["eris" nil nil nil nil nil nil ((timestamp . "2010-08-27") (notes . "(\"noecho Hail Eris! All hail Discordia!\")")) nil]
["erlang" nil nil nil nil nil nil ((timestamp . "2010-05-15") (notes . "(\"a programming language with built in support for concurrency, distribution, and fault tolerance. See http://www.erlang.org\")")) nil]
["erlang-mode" nil nil nil nil nil nil ((timestamp . "2007-05-15") (notes . "(\"http://www.erlang.org/download/contrib/erlang.el\")")) nil]
["Ernie" nil nil nil nil nil nil ((timestamp . "2013-06-13") (notes . "(\"noecho Ernie Dinklefwat?\")")) nil]
["erring" nil nil nil nil nil nil ((timestamp . "2006-05-15") (notes . "(\"human; purring, feline\")")) nil]
["es" nil nil nil nil nil nil ((timestamp . "2007-09-08") (notes . "(\"a shell with higher-order functions at http://www.webcom.com/~haahr/es/es-usenix-winter93.html\")")) nil]
["ESA" nil nil nil nil nil nil ((timestamp . "2011-09-25") (notes . "(\"European Space Agency\")")) nil]
["escape" nil nil nil nil nil nil ((timestamp . "2009-03-18") (notes . "(\"'\\\\' is both the string *and* regexp escape character\" \"\\\"\\\\foo\\\" should probably be \\\"\\\\\\\\foo\\\"\")")) nil]
["EscapeVelocity" nil nil nil nil nil nil ((timestamp . "2012-06-02") (notes . "(\"Like Elite, but top-down.\" \"http://en.wikipedia.org/wiki/Escape_Velocity_(video_game)\")")) nil]
["ESDRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Enhanced Synchronous Dynamic Random Access Memory\")")) nil]
["eshell-disable-sudo" nil nil nil nil nil nil ((timestamp . "2011-04-26") (notes . "(\"http://p.hagelb.org/eshell-sudo-disable.html\")")) nil]
["eshell-kryptonite" nil nil nil nil nil nil ((timestamp . "2012-02-06") (notes . "(\"three particular things you should avoid doing from within eshell: ncurses type stuff, processes with high-throughput output, and long-running sudo commands. for everything else, it's great.\")")) nil]
["eshell-prompt-function" nil nil nil nil nil nil ((timestamp . "2012-04-27") (notes . "(\"(setq eshell-prompt-function (lambda () (concat \\\"(\\\" (eshell/whoami) \\\"@\\\" (system-name) \\\") :\\\" (eshell/pwd) (if (= (user-uid) 0) \\\" # \\\" \\\" $ \\\"))))\")")) nil]
["eshell-visual-commands" nil nil nil nil nil nil ((timestamp . "2005-06-14") (notes . "(\"the solution to all your ncurses programs under eshell\")")) nil]
["ESL" nil nil nil nil nil nil ((timestamp . "2008-08-25") (notes . "(\"English as a Second Language (i.e. non-native speaker)\")")) nil]
["esmtp" nil nil nil nil nil nil ((timestamp . "2003-07-29") (notes . "(\"acts as a local mailserver but all it can do is forward mail to a real mailserver. http://esmtp.sf.net\")")) nil]
["esp" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://endsoftpatents.org\")")) nil]
["espresso-mode" nil nil nil nil nil nil ((timestamp . "2009-05-22") (notes . "(\"a new Javascript mode with lots of new features\" \"http://www.nongnu.org/espresso/\")")) nil]
["esr" nil nil nil nil nil nil ((timestamp . "2014-01-13") (notes . "(\"Eric S. Raymond, famous programmer, initiator of the Open Source Initiative, author of The Cathedral and the Bazaar and The Art of Unix Programming.\" \"Politically very controversial, dabbling in conspiracy theories, racism, climate change denial, etc. - see http://rationalwiki.org/wiki/Eric_S._Raymond\" \"the Extended Support Release of Mozilla Firefox https://www.mozilla.org/en-US/firefox/organizations/all.html\")")) nil]
["esr-fix" nil nil nil nil nil nil ((timestamp . "2013-07-06") (notes . "(\"bore it to death with your blog\")")) nil]
["essence" nil nil nil nil nil nil ((timestamp . "2006-05-25") (notes . "(\"an (S)LR(k) parser generator for Scheme based on the idea of partial evaluation at http://www.informatik.uni-freiburg.de/proglang/software/essence/\")")) nil]
["esskay" nil nil nil nil nil nil ((timestamp . "2004-02-20") (notes . "(\"Saurabh Kapoor and is an elisp novice\" \"Living in India\")")) nil]
["esxml" nil nil nil nil nil nil ((timestamp . "2013-01-22") (notes . "(\"elisp's native XML parse tree; esxml.el is an elisp library to manage XML, SXML and ESXML, <https://github.com/tali713/esxml.git> or <marmalade>\")")) nil]
["ETA" nil nil nil nil nil nil ((timestamp . "2003-05-02") (notes . "(\"Estimated Time of Arrival\")")) nil]
["etckeeper" nil nil nil nil nil nil ((timestamp . "2012-02-14") (notes . "(\"http://joey.kitenet.net/code/etckeeper/\")")) nil]
["ETDF" nil nil nil nil nil nil ((timestamp . "2003-02-23") (notes . "(\"http://www.etdf.com/ Electronic Text Document Format (ETDF) : The Electronic Text Document Format (ETDF) is an XML specification for formatting electronic books and documents. Element and attribute names are common English and the overall hierarchy is straightforward, making ETDF easy to implement. ETDF is fully-conforming XML, extensible using XML namespace declarations.\")")) nil]
["eternalflame" nil nil nil nil nil nil ((timestamp . "2005-03-19") (notes . "(\"http://www.prometheus-music.com/audio/eternalflame.mp3\" \"\\\"free\\\" music\")")) nil]
["ETL" nil nil nil nil nil nil ((timestamp . "2010-12-25") (notes . "(\"English Third Language (see ESL)\")")) nil]
["ETLA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Extended Three Letter Acronym\")")) nil]
["etoile" nil nil nil nil nil nil ((timestamp . "2012-01-18") (notes . "(\"redirect étoilé\")")) nil]
["Eucalyptus" nil nil nil nil nil nil ((timestamp . "2010-02-01") (notes . "(\"a BSD-licensed EC2 clone <http://open.eucalyptus.com>\")")) nil]
["EV" nil nil nil nil nil nil ((timestamp . "2007-11-12") (notes . "(\"Escape Velocity, a top-down space trading/role-playing game for MacOS and OS X <http://en.wikipedia.org/wiki/Escape_Velocity_(computer_game)>\")")) nil]
["Eval" nil nil nil nil nil nil ((timestamp . "2011-11-18") (notes . "(\"Type an expression in *scratch* or anywhere and press C-x C-e after it to eval it in the lisp interpretor, or press C-u C-x C-e to print the result as well\" \"If you really need an old-style :) interpretor, type M-x ielm\" \"M-x apropos-command RET ^eval RET for many similar options\" \"To evaluate an expression, position the cursor after the expression, and press C-x C-e. E.g. (+ 2 2) C-x C-e\" \"(info \\\"(elisp) Eval\\\")\")")) nil]
["eval-after-load" nil nil nil nil nil nil ((timestamp . "2008-04-15") (notes . "(\"e.g. (eval-after-load \\\"dired\\\" '(define-key dired-mode-map (kbd \\\"C-c C-z\\\") 'shell))\")")) nil]
["evaluate" nil nil nil nil nil nil ((timestamp . "2011-11-18") (notes . "(\"redirect Eval\")")) nil]
["evdb" nil nil nil nil nil nil ((timestamp . "2006-03-24") (notes . "(\"the events and venues database\" \"where hober works\" \"an elisp interface to the evdb api: http://api.evdb.com/libs/evdb.el\")")) nil]
["EVE" nil nil nil nil nil nil ((timestamp . "2013-02-21") (notes . "(\"an MMO based on a similar concept to Escape Velocity or Elite https://en.wikipedia.org/wiki/EVE_Online\")")) nil]
["everybody" nil nil nil nil nil nil ((timestamp . "2013-03-08") (notes . "(\"a comedian\")")) nil]
["everyone" nil nil nil nil nil nil ((timestamp . "2013-05-30") (notes . "(\"noecho no one but the speaker\")")) nil]
["everything" nil nil nil nil nil nil ((timestamp . "2013-11-20") (notes . "(\"noecho Everything is amazing. Nobody is happy.\")")) nil]
["evil-laugh" nil nil nil nil nil nil ((timestamp . "2012-03-29") (notes . "(\"noecho muahahahahah muhahah hahahah haha\")")) nil]
["evil-leader" nil nil nil nil nil nil ((timestamp . "2013-05-04") (notes . "(\"https://github.com/cofi/evil-leader\")")) nil]
["EvilQuotes" nil nil nil nil nil nil ((timestamp . "2004-03-17") (notes . "(\"http://www.cl.cam.ac.uk/~mgk25/ucs/quotes.html\" \"summary: Please do not use the ASCII grave accent (0x60) as a left quotation mark together with the ASCII apostrophe (0x27) as the corresponding right quotation mark.\")")) nil]
["ew" nil nil nil nil nil nil ((timestamp . "2013-04-24") (notes . "(\"noecho Eeeeeeeeeeewww!!! Meeeeeeeeeeeeeeewww!!!\")")) nil]
["EWAG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Experienced Wild-Ass Guess\")")) nil]
["ewoc" nil nil nil nil nil nil ((timestamp . "2013-11-08") (notes . "(\"a structure that organizes information required to construct buffer text that represents certain Lisp data. see (info \\\"(elisp) Abstract Display\\\")\" \"elisp can have MVC windows too, should you need to make Microsoft refugees feel at home\" \"not to be confused with the small hunter-gatherer teddy bears inhabiting the forest moon of endor\")")) nil]
["ewok" nil nil nil nil nil nil ((timestamp . "2013-11-04") (notes . "(\"a race of Happy Meal toys, I mean small hunter-gatherer teddy bears inhabiting the forest moon of Endor\" \"not to be confused with the \\\"ewoc\\\" structure\")")) nil]
["example" nil nil nil nil nil nil ((timestamp . "2004-05-09") (notes . "(\"noecho \\\", gnu\\\" to query about gnu\" \"\\\", gnu is cool\\\" to define a term\" \"\\\", gnu is also a project by the FSF.\\\" to add an alternative\" \"\\\", no gnu is not cool\\\" to replace existing entries for that term\" \"\\\", forget gnu\\\" to purge a term\" \"\\\", apropos foo\\\" to call the apropos command for a term\")")) nil]
["example-factoid" nil nil nil nil nil nil ((timestamp . "2012-07-09") (notes . "(\"2\" \"1\")")) nil]
["example.TLD" nil nil nil nil nil nil ((timestamp . "2013-12-10") (notes . "(\"reserved for examples in .com, .net, .org and many other TLDs. Don't use real Internet names in examples.\")")) nil]
["examplemode" nil nil nil nil nil nil ((timestamp . "2002-11-11") (notes . "(\"redirect samplemode\")")) nil]
["exco" nil nil nil nil nil nil ((timestamp . "2008-06-18") (notes . "(\"Expand/Compress\")")) nil]
["excuse" nil nil nil nil nil nil ((timestamp . "2012-07-04") (notes . "(\"lisp (let* ((doom (random-choose-term \\\"dooms\\\")) (part (random-choose-term \\\"machine-parts\\\")) (force (random-choose-term \\\"destructive-forces\\\")) (excuse (random-choose-term \\\"excuses-list\\\")) (excuse-code (read-from-string-really excuse)) (excuse (cond ((listp excuse-code) excuse-code) (t (list excuse 'doom 'part)))) ) (capitalize-sentence (apply 'format (car excuse) (mapcar 'eval (cdr excuse)))))\")")) nil]
["excuse2" nil nil nil nil nil nil ((timestamp . "2012-08-11") (notes . "(\"redirect excuse\")")) nil]
["excuses-list" nil nil nil nil nil nil ((timestamp . "2012-07-11") (notes . "(\"Excessive deposits of %s on the %s.\" \"%s are clogging up the %s.\" \"(\\\"The %s has been destroyed by %s.\\\" part doom)\" \"(\\\"A %s has become lodged in the %s.\\\" (random-choose '(\\\"wrench\\\" \\\"mummified frog\\\" \\\"malformed potato\\\")) part)\" \"(\\\"The %s has been struck by %s.\\\" part force)\" \"%s have breached the defences protecting the %s.\" \"(\\\"There are %s breaks in the %s, probably caused by yesterdays freak %s storm.\\\" (random-choose '(\\\"three\\\" \\\"eleven\\\" \\\"42\\\" \\\"3.14159\\\")) part force)\" \"(\\\"critical part damaged by %s near %s.\\\" doom (random-choose-term \\\"places\\\"))\")")) nil]
["exercise" nil nil nil nil nil nil ((timestamp . "2010-07-01") (notes . "(\"http://www.ctan.org/tex-archive/macros/latex/contrib/exercise/\")")) nil]
["exex" nil nil nil nil nil nil ((timestamp . "2011-09-29") (notes . "(\"noecho /quit\")")) nil]
["explainxkcd" nil nil nil nil nil nil ((timestamp . "2013-07-28") (notes . "(\"'cause you're dumb.\" \"http://www.explainxkcd.com\")")) nil]
["explanation" nil nil nil nil nil nil ((timestamp . "2010-04-27") (notes . "(\"noecho a wizard did it.\")")) nil]
["Ext2fs-Undeletion" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"at http://tldp.org/HOWTO/Ext2fs-Undeletion-4.html\")")) nil]
["ext3" nil nil nil nil nil nil ((timestamp . "2003-12-09") (notes . "(\"FAQ at http://batleth.sapienti-sat.org/projects/FAQs/ext3-faq.html\" \"Root still ext2, even though modules are compiled in? This is a kernel bug: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=135537&repeatmerged=yes\")")) nil]
["extensionlanguage" nil nil nil nil nil nil ((timestamp . "2002-11-23") (notes . "(\"at http://www.advogato.org/article/550.html\")")) nil]
["ExtrasCD" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ExtrasCD\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?ExtrasCD\")")) nil]
["extremedamnation" nil nil nil nil nil nil ((timestamp . "2013-05-29") (notes . "(\"noecho it's even worse than java!\")")) nil]
["Ezekiel" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"a hebrew prophet\")")) nil]
["ezil" nil nil nil nil nil nil ((timestamp . "2006-09-10") (notes . "(\"an IF library in elisp: http://ezil.sf.net\")")) nil]
["f-words" nil nil nil nil nil nil ((timestamp . "2011-05-03") (notes . "(\"Because a world without f words was just too much to take!\")")) nil]
["f00f" nil nil nil nil nil nil ((timestamp . "2003-12-30") (notes . "(\"a database bot, try \\\"?? help\\\" to talk to it\" \"It also plays t4--a math game, try !t4\")")) nil]
["fa" nil nil nil nil nil nil ((timestamp . "2012-06-03") (notes . "(\"farsi is the local name of the Persian language in Iran, and in English sometimes used as synonymous for the Persian language spoken in Iran, Afghanistan, Tajikistan and others.\")")) nil]
["facebook" nil nil nil nil nil nil ((timestamp . "2013-07-27") (notes . "(\"\\\"A place where everyone you hated when you were young posts pictures of their children for you to see since you're now their internet friend.\\\" -- qDot\" \"a place where people go to be retarded, but in a way that is so similar their real-life personas (unlike e.g. YouTube comments) that it is unsettling\" \"what happens when you fall asleep while reading textbooks\" \"an exclusive club for people who want to snitch on their friends.\")")) nil]
["facesineffective" nil nil nil nil nil nil ((timestamp . "2002-11-26") (notes . "(\"redirect colorsandkde\")")) nil]
["factoids" nil nil nil nil nil nil ((timestamp . "2002-09-04") (notes . "(\"anyone can dump factoids.. see example\")")) nil]
["Factor" nil nil nil nil nil nil ((timestamp . "2008-10-14") (notes . "(\"a concatenative language (like Forth) for application programming (like Lisp or Haskell): <http://factorcode.org>, #concatenative\")")) nil]
["factor-mode" nil nil nil nil nil nil ((timestamp . "2006-01-13") (notes . "(\"http://www.dfan.org/factor-mode.el\")")) nil]
["factorial" nil nil nil nil nil nil ((timestamp . "2005-02-26") (notes . "(\"lisp (if (<= n 1) 1 (* n (factorial (- n 1))))\")")) nil]
["FAE" nil nil nil nil nil nil ((timestamp . "2013-07-29") (notes . "(\"a fuel-air explosive <https://en.wikipedia.org/wiki/Thermobaric_weapon>\")")) nil]
["FAI" nil nil nil nil nil nil ((timestamp . "2007-11-21") (notes . "(\"a Debian subsystem for Fully Automated Installation of many homogeneous systems (e.g. a cluster) <http://www.informatik.uni-koeln.de/fai/>\")")) nil]
["faif" nil nil nil nil nil nil ((timestamp . "2011-11-03") (notes . "(\"a biography of RMS written by Sam Williams, \\\"Free as in Freedom\\\"\" \"an oggcast at http://faif.us/\")")) nil]
["fail" nil nil nil nil nil nil ((timestamp . "2012-04-06") (notes . "(\"noecho You failed, now SUFFER.\")")) nil]
["failure" nil nil nil nil nil nil ((timestamp . "2008-05-09") (notes . "(\"noecho What we got here is... failure to communicate. Some men you just can't reach.\")")) nil]
["faintpraise" nil nil nil nil nil nil ((timestamp . "2011-04-14") (notes . "(\"noecho well...at least it's better than java\")")) nil]
["faintpraise-web" nil nil nil nil nil nil ((timestamp . "2013-08-30") (notes . "(\"noecho well...at least it's better than ASP.Net\")")) nil]
["faintpraise2" nil nil nil nil nil nil ((timestamp . "2013-07-03") (notes . "(\"noecho well...at least it's better than vim\")")) nil]
["faintpraise3" nil nil nil nil nil nil ((timestamp . "2013-11-08") (notes . "(\"noecho \\\"Well, at least they're better than youtube comments...\\\"\")")) nil]
["faintpraise4" nil nil nil nil nil nil ((timestamp . "2014-01-03") (notes . "(\"noecho well...at least it's better than visual basic\")")) nil]
["FairWitness" nil nil nil nil nil nil ((timestamp . "2003-03-15") (notes . "(\"at http://www.etrumeus.com/ferment/FairWitness\")")) nil]
["falconeyes" nil nil nil nil nil nil ((timestamp . "2003-02-02") (notes . "(\"FalconsEye misspelled\")")) nil]
["FalconsEye" nil nil nil nil nil nil ((timestamp . "2003-02-02") (notes . "(\"Type , sw nethack\" \"a graphical implementation of nethack\")")) nil]
["fall" nil nil nil nil nil nil ((timestamp . "2010-05-16") (notes . "(\"Down Down Down Everybody Falling Down!\")")) nil]
["fallacies" nil nil nil nil nil nil ((timestamp . "2005-07-27") (notes . "(\"redirect fallacy\")")) nil]
["fallacy" nil nil nil nil nil nil ((timestamp . "2005-07-27") (notes . "(\"at http://sztybel.tripod.com/fallacy.html\")")) nil]
["FallenAngels" nil nil nil nil nil nil ((timestamp . "2003-03-10") (notes . "(\"at http://www.baen.com/library/067172052X/067172052X.htm\")")) nil]
["false" nil nil nil nil nil nil ((timestamp . "2010-08-27") (notes . "(\"noecho nil\")")) nil]
["fancyhdr" nil nil nil nil nil nil ((timestamp . "2013-01-06") (notes . "(\"a package that provides extensive facilities, both for constructing headers and footers, and for controlling their use: http://ctan.org/pkg/fancyhdr [manual: http://tinyurl.com/fancyhdr-manual]\" \"if you are using a koma script derived class (scrbook, ...) please use scrpage2 instead\")")) nil]
["fap" nil nil nil nil nil nil ((timestamp . "2012-08-31") (notes . "(\"find-*-at-point, see also ffap\" \"the sound of one hand typing, in 4chan &c\")")) nil]
["fapp" nil nil nil nil nil nil ((timestamp . "2007-12-29") (notes . "(\"for all practical purposes\" \"filtered air positive pressure\" \"external link: http://en.wikipedia.org/wiki/FAPP\")")) nil]
["faqs" nil nil nil nil nil nil ((timestamp . "2006-01-20") (notes . "(\"http://www.faqs.org\")")) nil]
["far-search" nil nil nil nil nil nil ((timestamp . "2008-07-03") (notes . "(\"incrementally search all buffers, found at http://github.com/aemoncannon/far-search-mode/tree/master/far-search.el\")")) nil]
["farads" nil nil nil nil nil nil ((timestamp . "2013-03-21") (notes . "(\"noecho INCAPACITATE HIM!!\")")) nil]
["farmville.el" nil nil nil nil nil nil ((timestamp . "2012-04-04") (notes . "(\"noecho patches welcome\")")) nil]
["fasl" nil nil nil nil nil nil ((timestamp . "2007-12-03") (notes . "(\"short for \\\"fast loading\\\" -- i.e. a compiled or byte-compiled version of a source file.\")")) nil]
["fast-clap" nil nil nil nil nil nil ((timestamp . "2012-09-22") (notes . "(\"noecho eww, that does look a lot worse since yestereday\")")) nil]
["fast-food-mafia" nil nil nil nil nil nil ((timestamp . "2011-01-21") (notes . "(\"http://4.bp.blogspot.com/_wdtSbxwr4vg/SnDvX6_ic-I/AAAAAAAACiU/iIV8d-MdImY/s1600/Fast_Food_Mafia__fin%20al_by_silentsketcher.jpg\")")) nil]
["fasta" nil nil nil nil nil nil ((timestamp . "2013-04-14") (notes . "(\"<ijp> it's like watching a car crash into a wall, reverse, and then repeat\")")) nil]
["FAT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for File Allocation Table\")")) nil]
["father" nil nil nil nil nil nil ((timestamp . "2013-11-12") (notes . "(\"redirect owner\")")) nil]
["FaultTolerantShell" nil nil nil nil nil nil ((timestamp . "2004-03-15") (notes . "(\"a bash-like shell at http://www.cs.wisc.edu/~thain/research/ftsh/, with stress on error-handlers similar to catch/try, and with \\\"&&\\\" almost being the default setting: (command && command && ...)\")")) nil]
["fax-machine" nil nil nil nil nil nil ((timestamp . "2010-08-24") (notes . "(\"http://achewood.com/index.php?date=11222006\")")) nil]
["fbc" nil nil nil nil nil nil ((timestamp . "2007-06-20") (notes . "(\"Fully Buzzword Compliant\")")) nil]
["fbcon" nil nil nil nil nil nil ((timestamp . "2013-08-15") (notes . "(\"the in-kernel (cf. jfbterm, zhcon) Linux framebuffer-based terminal emulator <http://www.kernel.org/doc/Documentation/fb/fbcon.txt>\")")) nil]
["fbgs" nil nil nil nil nil nil ((timestamp . "2006-12-25") (notes . "(\"the poor man's PostScript/pdf viewer for the linux framebuffer console\")")) nil]
["fbi" nil nil nil nil nil nil ((timestamp . "2011-09-22") (notes . "(\"a framebuffer based image viewer for *nix\")")) nil]
["fbiterm" nil nil nil nil nil nil ((timestamp . "2005-06-02") (notes . "(\"at http://www.ibm.com/link/oss.software.ibm.com/redirect.shtml/linux/projects/iterm/\" \"at http://www.openi18n.org/subgroups/utildev/iterm/\")")) nil]
["fbox" nil nil nil nil nil nil ((timestamp . "2008-07-08") (notes . "(\"\\\"Border boxes\\\" are also called 'frames' in LaTeX. See \\\\fbox, boxedminipage package, and the 'breakbox' entry in the FAQ\")")) nil]
["FBRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Frame Buffer Random Access Memory\")")) nil]
["fc-test" nil nil nil nil nil nil ((timestamp . "2007-01-04") (notes . "(\"foo\" \"bar\" \"baz\")")) nil]
["fcc" nil nil nil nil nil nil ((timestamp . "2012-11-30") (notes . "(\"the United States Federal Communications Commission, http://www.fcc.gov/\")")) nil]
["FCFS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for First Come First Served\")")) nil]
["FCL" nil nil nil nil nil nil ((timestamp . "2003-02-26") (notes . "(\"http://www.osef.org/fcl.html\")")) nil]
["fcol" nil nil nil nil nil nil ((timestamp . "2012-02-23") (notes . "(\"For Crying Out Loud\")")) nil]
["fctest" nil nil nil nil nil nil ((timestamp . "2013-01-10") (notes . "(\"lisp (format \\\"%S\\\" (stringify-symbol-list lispargs))\")")) nil]
["fdl" nil nil nil nil nil nil ((timestamp . "2008-06-17") (notes . "(\"redirect gfdl\")")) nil]
["FDO" nil nil nil nil nil nil ((timestamp . "2006-09-30") (notes . "(\"<freedesktop.org>, a bit like w3.org for mainstream Linux desktop environment standardization.\")")) nil]
["fdsa" nil nil nil nil nil nil ((timestamp . "2004-02-04") (notes . "(\"noecho bar\")")) nil]
["Fedora" nil nil nil nil nil nil ((timestamp . "2013-12-07") (notes . "(\"http://fedoraproject.org/\" \"old hat\")")) nil]
["feh" nil nil nil nil nil nil ((timestamp . "2003-03-19") (notes . "(\"an image view that can fetch urls\" \"http://www.linuxbrit.co.uk/feh/\")")) nil]
["feldmaus" nil nil nil nil nil nil ((timestamp . "2004-11-23") (notes . "(\"a tiny mouse.\")")) nil]
["feminism" nil nil nil nil nil nil ((timestamp . "2011-10-16") (notes . "(\"one of the few topics that's actually off-limits in this channel\")")) nil]
["fencepost" nil nil nil nil nil nil ((timestamp . "2006-08-04") (notes . "(\"the GNU Project shell server\")")) nil]
["Fermat-fix" nil nil nil nil nil nil ((timestamp . "2012-07-16") (notes . "(\"noecho I have marvelous code to do that but the IRC channel is too narrow to fit.\")")) nil]
["ferret" nil nil nil nil nil nil ((timestamp . "2006-11-25") (notes . "(\"(formerly known as GerWin) is the Free Entity Relationship and Reverse Engineering Tool.\")")) nil]
["festival" nil nil nil nil nil nil ((timestamp . "2003-07-11") (notes . "(\"install/see-also festvox\" \"a text to speech system\" \"slow; try flite (festival lite)\")")) nil]
["festvox" nil nil nil nil nil nil ((timestamp . "2002-09-17") (notes . "(\"8k won't work get the 16k ones..\")")) nil]
["festwox" nil nil nil nil nil nil ((timestamp . "2002-11-12") (notes . "(\"redirect festvox\")")) nil]
["fetch" nil nil nil nil nil nil ((timestamp . "2011-01-08") (notes . "(\"http://www.youtube.com/watch?v=3ENNA0cBHm8\")")) nil]
["fetchrss" nil nil nil nil nil nil ((timestamp . "2005-08-05") (notes . "(\"a perl program to turn rss feeds into email ; see http://www.lathi.net/twiki-bin/view/Main/FetchRss?skin=print\" \"see rss\")")) nil]
["fexpr" nil nil nil nil nil nil ((timestamp . "2013-01-13") (notes . "(\"http://en.wikipedia.org/wiki/Fexpr\")")) nil]
["feynman-problem-solving" nil nil nil nil nil nil ((timestamp . "2012-04-04") (notes . "(\"1) Write down the problem.\" \"2) Think very hard.\" \"3) Write down the answer.\")")) nil]
["ff-paths" nil nil nil nil nil nil ((timestamp . "2003-05-02") (notes . "(\"at http://people.debian.org/~psg/elisp/ff-paths.el\")")) nil]
["ffge" nil nil nil nil nil nil ((timestamp . "2013-05-02") (notes . "(\"far from good enough\")")) nil]
["FFI" nil nil nil nil nil nil ((timestamp . "2013-11-21") (notes . "(\"short for \\\"foreign function interface\\\", a mechanism for talking to libraries written in other languages. Most commonly, a Lisp system (e.g. SBCL) is using a C FFI to talk to a C library (e.g. libncurses). Other host and foreign languages are possible.\" \"equivalent to JNI (Java Native Interface).\" \"exported C segfaults\" \"all the convenience and concision of C, in $language\")")) nil]
["ffm" nil nil nil nil nil nil ((timestamp . "2010-10-29") (notes . "(\"for focus follows mouse behavior, see the variables `focus-follows-mouse' and `mouse-autoselect-window'\")")) nil]
["ffs" nil nil nil nil nil nil ((timestamp . "2010-01-11") (notes . "(\"for fuck's sake\" \"fat finger syndrome\")")) nil]
["fft" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"Fast Fourier Transform\")")) nil]
["FHG" nil nil nil nil nil nil ((timestamp . "2013-02-26") (notes . "(\"https://en.wikipedia.org/wiki/Free_hosted_gallery\")")) nil]
["FHS" nil nil nil nil nil nil ((timestamp . "2007-11-06") (notes . "(\"the Filesystem Hierarchy Standard (for GNU/Linux) <http://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard>\")")) nil]
["fics" nil nil nil nil nil nil ((timestamp . "2004-01-29") (notes . "(\"the Free Internet Chess Servers (www.freechess.org)\")")) nil]
["fiction" nil nil nil nil nil nil ((timestamp . "2011-12-19") (notes . "(\"noecho You, getting laid!\")")) nil]
["fiddle" nil nil nil nil nil nil ((timestamp . "2007-08-31") (notes . "(\"experiment a bit, try some things. try and narrow down the problem\")")) nil]
["fight" nil nil nil nil nil nil ((timestamp . "2013-05-20") (notes . "(\"redirect gentlemen\")")) nil]
["fightingisboring" nil nil nil nil nil nil ((timestamp . "2010-06-06") (notes . "(\"http://meatballwiki.org/wiki/FightingIsBoring\")")) nil]
["FIGJAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Fuck I'm Good, Just Ask Me\")")) nil]
["figlet" nil nil nil nil nil nil ((timestamp . "2010-04-22") (notes . "(\"a program for making large letters out of ordinary text\" \"http://www.figlet.org\" \"see also http://www.figlet.org/figlet.el\")")) nil]
["figure" nil nil nil nil nil nil ((timestamp . "2009-11-02") (notes . "(\"stop figures from floating over some point: \\\\FloatBarrier. \\\\usepackage{placeins}\")")) nil]
["figure-label" nil nil nil nil nil nil ((timestamp . "2010-11-20") (notes . "(\"\\\\label must be placed after \\\\caption in figures and tables.\")")) nil]
["FIIK" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Fuck[Ed] If I Know\")")) nil]
["FIIR" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Fuck[Ed] If I Remember\")")) nil]
["file-local" nil nil nil nil nil nil ((timestamp . "2013-09-04") (notes . "(\"redirect filelocal\")")) nil]
["file-variables" nil nil nil nil nil nil ((timestamp . "2010-07-28") (notes . "(\"redirect FileVariables\")")) nil]
["filebin" nil nil nil nil nil nil ((timestamp . "2009-03-17") (notes . "(\"a pastebin that lets you post any file, for example a pdf. http://filebin.ca/\")")) nil]
["filebrowser" nil nil nil nil nil nil ((timestamp . "2012-06-20") (notes . "(\"see ,dired and ,sunrise\")")) nil]
["filecontents" nil nil nil nil nil nil ((timestamp . "2013-07-15") (notes . "(\"a package to ease including external files within a document to be found at http://www.ctan.org/pkg/filecontents\")")) nil]
["FileFormats" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FileFormats\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FileFormats\")")) nil]
["filelocal" nil nil nil nil nil nil ((timestamp . "2010-09-15") (notes . "(\"redirect filelocalvariables\")")) nil]
["filelocals" nil nil nil nil nil nil ((timestamp . "2011-05-13") (notes . "(\"redirect filelocalvariables\")")) nil]
["filelocalvars" nil nil nil nil nil nil ((timestamp . "2010-09-01") (notes . "(\"redirect filelocalvariables\")")) nil]
["filemanagers" nil nil nil nil nil nil ((timestamp . "2004-06-28") (notes . "(\"mc, nc, ec, and dired\")")) nil]
["filesystem-numeric" nil nil nil nil nil nil ((timestamp . "2002-09-18") (notes . "(\"fdisk /dev/hda, then type m\")")) nil]
["filk" nil nil nil nil nil nil ((timestamp . "2006-08-10") (notes . "(\"\\\"flick\\\", \\\"movie\\\", \\\"pitcher show\\\", \\\"moom pitchers\\\"\")")) nil]
["FillableLatex" nil nil nil nil nil nil ((timestamp . "2004-04-20") (notes . "(\"See hyperref, or context at http://www.pragma-ade.com/general/manuals/mwidget-s.pdf\")")) nil]
["fillcolumn" nil nil nil nil nil nil ((timestamp . "2003-02-15") (notes . "(\"redirect linewrap\")")) nil]
["filter" nil nil nil nil nil nil ((timestamp . "2010-06-07") (notes . "(\"remove-if or remove-if-not in the CL package if you're talking about sequences\")")) nil]
["FinalJeopardy" nil nil nil nil nil nil ((timestamp . "2011-11-18") (notes . "(\"[bells:] DO-dee-DO do-do DO-DEE-DO do-DEE do-DEE DAH dee-do-dee-do-de DO-dee-DO do-do do-dee DO-DEE-DO DAH DAH-DAH DAH DAH DAH\" \"[flute:] DO-dee-DO do-do DO-DEE-DO do-DEE do-DEE DAH dee-do-dee-do-de DO-dee-DO do-do do-dee DO-DEE-DO DAH DAH-DAH DAH DAH DAH\" \"[tympani:] BUM BUM\")")) nil]
["find-dired" nil nil nil nil nil nil ((timestamp . "2010-08-27") (notes . "(\"having problems on win32? try asking me about ,unixutils.\" \"still having problems on win32? try ,twb-fix\")")) nil]
["find-file" nil nil nil nil nil nil ((timestamp . "2009-03-03") (notes . "(\"the function to open a file\")")) nil]
["find-lib" nil nil nil nil nil nil ((timestamp . "2003-06-16") (notes . "(\"A file-name completer at http://www.vegetable.demon.co.uk/wence/find-lib.el\")")) nil]
["FindBugs" nil nil nil nil nil nil ((timestamp . "2007-12-21") (notes . "(\"a program which uses static analysis to look for bugs in Java code at http://findbugs.sourceforge.net/\")")) nil]
["FindFileAtPoint" nil nil nil nil nil nil ((timestamp . "2011-04-28") (notes . "(\"redirect ffap\")")) nil]
["findfileroot" nil nil nil nil nil nil ((timestamp . "2008-07-18") (notes . "(\"redirect editasroot\")")) nil]
["findreplacegrep" nil nil nil nil nil nil ((timestamp . "2008-01-30") (notes . "(\"M-x find-grep-dired, % m to mark-regexp file names, and then M-x dired-do-query-replace-regexp\")")) nil]
["fingerworks" nil nil nil nil nil nil ((timestamp . "2004-02-28") (notes . "(\"at http://www.fingerworks.com/\")")) nil]
["fink" nil nil nil nil nil nil ((timestamp . "2004-02-06") (notes . "(\"an apt-get thingy for MacOS X at http://fink.sourceforge.net/\")")) nil]
["fire" nil nil nil nil nil nil ((timestamp . "2006-12-23") (notes . "(\"give a man a fire and he'll be warm for a night; set fire to him and he'll be warm for the rest of his life\")")) nil]
["firearms" nil nil nil nil nil nil ((timestamp . "2014-02-03") (notes . "(\"(\\\"shotgun\\\" . \\\"blasts\\\")\" \"(\\\"ICBM silo\\\" . \\\"nukes\\\")\" \"(\\\"water gun\\\" . \\\"drenches\\\")\" \"(\\\"flame thrower\\\" . \\\"roasts\\\")\" \"(\\\"tranquilizer gun\\\" . \\\"knocks out\\\")\" \"(\\\"Visual Studio Enterprise Edition\\\" . \\\"refactors away\\\")\" \"(\\\"blunderbuss\\\" . \\\"hits everything but\\\")\" \"(\\\"monad\\\" . \\\"encapsulates\\\")\" \"(\\\"XML generator\\\" . \\\"makes tag soup out of\\\")\" \"(\\\"Mitsubishi A6M Zero\\\" . \\\"breaks divine wind on\\\")\" \"(\\\"postgresql prompt\\\" . \\\"shards\\\")\" \"(\\\"autotools\\\" . \\\"#ifdefs %s out of existence\\\")\" \"(\\\"Windows XP botnet\\\" . \\\"DDoSes\\\")\" \"(\\\"taser\\\" . \\\"electrocutes\\\")\" \"(\\\"git\\\" . \\\"merge --squashes\\\")\" \"(\\\"WoW account\\\" . \\\"kills %s's avatar\\\")\" \"(\\\"fflush\\\" . \\\"writes %s to disk\\\")\" \"(\\\"sniper rifle\\\" . \\\"assassinates\\\")\" \"(\\\"Colt Peacemaker\\\" . \\\"pacifies\\\")\" \"(\\\"RFC1149-compliant avian carrier\\\" . \\\"UDP floods\\\")\" \"(\\\"legislative branch\\\" . \\\"leaves %s behind\\\")\" \"(\\\"Batarang\\\" . \\\"knocks %s down\\\")\" \"(\\\"λ calculus\\\" . \\\"β reduces\\\")\" \"(\\\"common lisp\\\" . \\\"macroexpands\\\")\" \"(\\\"shell\\\" . \\\"fork bombs\\\")\" \"(\\\"ghci\\\" . \\\"type checks\\\")\" \"(\\\"finite automaton\\\" . \\\"rejects\\\")\" \"(\\\"garbage collector\\\" . \\\"reclaims\\\")\" \"(\\\"lightning bolt\\\" . \\\"sends %s to tartarus\\\")\" \"(\\\"lawyer\\\" . \\\"starts criminal proceedings against\\\")\" \"(\\\"shyster\\\" . \\\"SLAPPs %s upside the haid\\\")\" \"(\\\"SOAP\\\" . \\\"describes %s in WSDL\\\")\" \"(\\\"Aperture Science Emergency Intelligence Incinerator\\\" . \\\"euthanizes\\\")\" \"(\\\"cat launcher\\\" . \\\"unleashes a clawnado upon\\\")\" \"(\\\"bitkeeper\\\" . \\\"locks in\\\")\" \"(\\\"fish catapult\\\" . \\\"buries %s in flounder\\\")\" \"(\\\"Facebook account\\\" . \\\"tags %s in a scandalous photograph\\\")\" \"(\\\"nailgun\\\" . \\\"crucifies\\\")\" \"(\\\"nickelback greatest hits\\\" . \\\"forces %s to listen\\\")\" \"(\\\"axiom of choice\\\" . \\\"reassembles %s into two identical copies\\\")\" \"(\\\"lawyer\\\" . \\\"litigates\\\")\" \"(\\\"ld50\\\" . \\\"ODs\\\")\" \"(\\\"WD40\\\" . \\\"lubricates\\\")\" \"(\\\"awk\\\" . \\\"shoves %s through a one-liner\\\")\" \"(\\\"pixellated sword\\\" . \\\"whacks %s repeatedly\\\")\" \"(\\\"Ballmertron\\\" . \\\"chairminates\\\")\" \"(\\\"silenced pistol\\\" . \\\"grabs and double taps\\\")\" \"(\\\"hammer\\\" . \\\"thors\\\")\" \"(\\\"mom\\\" . \\\"grounds\\\")\" \"(\\\"/usr/bin/git\\\" . \\\"detaches %s's HEAD\\\")\" \"(\\\"Disney villain\\\" . \\\"executes a bizarre and error-prone plan against\\\")\" \"(\\\"broken bottle\\\" . \\\"mutilates\\\")\" \"(\\\"IRC bot\\\" . \\\"flames\\\")\" \"(\\\"[UNPRINTABLE]\\\" . \\\"[UNPRINTABLE]s\\\")\" \"(\\\"four horses\\\" . \\\"quarters\\\")\" \"(\\\"psychopath\\\" . \\\"brutally murders\\\")\" \"(\\\"sharks with frickin' laser beams attached to their heads\\\" . \\\"fails to kill %s\\\")\" \"(\\\"troll\\\" . \\\"trolls\\\")\" \"(\\\"railgun\\\" . \\\"frags\\\")\" \"(\\\"snake launcher\\\" . \\\"boa constricts\\\")\" \"(\\\"e-meter\\\" . \\\"performs a walletectomy on\\\")\" \"(\\\"bzero\\\" . \\\"nullifies\\\")\" \"(\\\"ritual sacrifice kit\\\" . \\\"sacrifices %s to some pagan god with a beard\\\")\" \"(\\\"rolled-up newspaper\\\" . \\\"whacks %s on the nose\\\")\" \"(\\\"flame thrower\\\" . \\\"kills %s with fire\\\")\" \"(\\\"unit-testing framework\\\" . \\\"tests %s into submission\\\")\" \"(\\\"compiler\\\" . \\\"reduces %s to byte code\\\")\" \"(\\\"lynch mob\\\" . \\\"lynches\\\")\" \"(\\\"droning professor\\\" . \\\"destroys %s's will to live\\\")\" \"(\\\"anti-tank gun\\\" . \\\"obliterates\\\")\" \"(\\\"parser written in PHP\\\" . \\\"barfs all over\\\")\" \"(\\\"hipster\\\" . \\\"snubs\\\")\" \"(\\\"zombie horde\\\" . \\\"rips %s limb from limb\\\")\" \"(\\\"hand of slapping\\\" . \\\"slaps\\\")\" \"(\\\"philosopher\\\" . \\\"gives %s an existential crisis\\\")\" \"(\\\"captcha\\\" . \\\"questions %s's humanity\\\")\" \"(\\\"crossbow\\\" . \\\"shoots an apple off %s's head\\\")\" \"(\\\"sirens\\\" . \\\"lures %s to their watery doom\\\")\" \"(\\\"lisp machines\\\" . \\\"makes %s sound like a nostalgic kook\\\")\" \"(\\\"global interpreter lock\\\" . \\\"stalls %s\\\")\" \"(\\\"gatling gun\\\" . \\\"guns down\\\")\" \"(\\\"gatling gnu\\\" . \\\"gnus down\\\")\" \"(\\\"GPL\\\" . \\\"infects\\\")\" \"(\\\"qi\\\" . \\\"hadoukens\\\")\" \"(\\\"fire flower\\\" . \\\"shoots fireballs at\\\")\" \"(\\\"banana peel\\\" . \\\"trips up\\\")\" \"(\\\"OED\\\" . \\\"pedantically defines the heck out of\\\")\" \"(\\\"object of some sort\\\" . \\\"uses it to attack %s in a manner appropriate to that type of object\\\")\" \"(\\\"erbot\\\" . \\\",shoots\\\")\" \"(\\\"IRC client\\\" . \\\"wastes the rest of %s's day\\\")\" \"(\\\"Death Note\\\" . \\\"writes %s's name in\\\")\" \"(\\\"plank\\\" . \\\"makes %s walk off it\\\")\" \"(\\\"fanfic\\\" . \\\"burns %s's eyes out\\\")\" \"(\\\"slashfic\\\" . \\\"pairs %s with Jabba the Hutt\\\")\" \"(\\\"prude\\\" . \\\"censors\\\")\" \"(\\\"Elnode\\\" . \\\"serves\\\")\" \"(\\\"record player\\\" . \\\"funkifies\\\")\" \"(\\\"pedant\\\" . \\\"bores %s to death\\\")\" \"(\\\"LA studio\\\" . \\\"showers %s with cash and valuable prizes\\\")\" \"(\\\"neural lace\\\" . \\\"wires %s up to the console as a shell\\\")\" \"(\\\"slamhound\\\" . \\\"hunts down and blows up\\\")\" \"(\\\"xterm\\\" . \\\"kill -9s\\\")\" \"(\\\"priest\\\" . \\\"condemns %s to hell\\\")\" \"(\\\".44 magnum\\\" . \\\"blows %s's head clean off\\\")\" \"(\\\"typing system\\\" . \\\"coerces\\\")\" \"(\\\"proxy\\\" . \\\"anonymously vandalises %s's Wikipedia page\\\")\" \"(\\\"Fox executive\\\" . \\\"arrests %s development\\\")\" \"(\\\"swarm of clueless noobs\\\" . \\\"plagues %s with silly questions\\\")\" \"(\\\"IED packed with cutlery\\\" . \\\"fork bombs\\\")\" \"(\\\"github\\\" . \\\"fork bombs\\\")\" \"(\\\"voodoo doll\\\" . \\\"remotely tortures\\\")\" \"(\\\"witch doctor\\\" . \\\"shrinks %s's head\\\")\" \"(\\\"railgun\\\" . \\\"pod-kills\\\")\" \"(\\\"legumbre\\\" . \\\"defadvices\\\")\" \"(\\\"salty ad hominem\\\" . \\\"seasons\\\")\" \"(\\\"ESR kernel patches\\\" . \\\"sends %s -SIGSAUER\\\")\" \"(\\\"earworm\\\" . \\\"infiltrates %s's auditory center\\\")\" \"(\\\"GNU HURD\\\" . \\\"is unable to run\\\")\" \"(\\\"GNU Image Manipulation Program\\\" . \\\"shops hookers and blow into a picture of\\\")\" \"(\\\"C string\\\" . \\\"null terminates\\\")\" \"(\\\"rump trumpet\\\" . \\\"plays a concerto for\\\")\" \"(\\\"obscure reference\\\" . \\\"smugly smiles at %s's confusion\\\")\" \"(\\\"blackboard eraser\\\" . \\\"lobs it at\\\")\" \"(\\\"spanish inquisition\\\" . \\\"gives %s 30 days notice for their heresy trial\\\")\" \"(\\\"trebuchet\\\" . \\\"flings a dead horse at\\\")\" \"(\\\"oil money\\\" . \\\"buries %s with pseudoscience\\\")\" \"(\\\"json encoder\\\" . \\\"uses %s for evil\\\")\" \"(\\\"Jack Nicholson\\\" . \\\"leers creepily at\\\")\" \"(\\\"./configure\\\" . \\\"checks %s for Fortran 77\\\")\" \"(\\\"baseball bat\\\" . \\\"hits %s out of the park\\\")\" \"(\\\"4chan\\\" . \\\"drops dox on\\\")\" \"(\\\"goldplated cable\\\" . \\\"plugs %s into a tube amplifier\\\")\" \"(\\\"feces\\\" . \\\"flings it at\\\")\" \"(\\\"laundry line\\\" . \\\"hangs %s out to dry\\\")\" \"(\\\"banana\\\" . \\\"bashes\\\")\" \"(\\\"lead pipe\\\" . \\\"frames %s for killing Dr. Black in the Library\\\")\" \"(\\\"recycling plant\\\" . \\\"recycles\\\")\" \"(\\\"CRT monitor\\\" . \\\"slowly gives %s radiation poisoning\\\")\" \"(\\\"warehouse full of IBM XTs equipped with 300 baud modems\\\" . \\\"MS-DDoSes\\\")\" \"(\\\"erlang\\\" . \\\"hotswaps in a newer, more concurrent version of\\\")\" \"(\\\"Smalltalk image and changes files\\\" . \\\"serialises %s into a pile of inseparable, partially binary objects\\\")\" \"(\\\"wordy, obscure, and surreal piece of prose\\\" . \\\"turns %s into a non-pipe\\\")\" \"(\\\"気\\\". \\\"波動拳s\\\")\" \"(\\\"bottle of water\\\" . \\\"sprays\\\")\" \"(\\\"holy hand grenade of antioch\\\" . \\\"counts to five, no three, and then throws at\\\")\" \"(\\\"hungry hungry hippo\\\" . \\\"gulps down\\\")\" \"(\\\"identity function\\\" . \\\"returns %s untouched\\\")\" \"(\\\"cookie jar\\\" . \\\"hands %s the biggest one\\\")\" \"(\\\"denotational semantics\\\" . \\\"transforms the world\\\")\" \"(\\\"teacher qualifications\\\" . \\\"flunks\\\")\" \"(\\\"T_PAAMAYIM_NEKUDOTAYIM\\\" . \\\"resolves %s's scope\\\")\" \"(\\\"sledgehammer\\\" . \\\"knocks down %s's load-bearing limbs\\\")\" \"(\\\"oven\\\" . \\\"bakes a cake for\\\")\" \"(\\\"microscopic flesh-eating hamster\\\" . \\\"hides it somewhere in %s's favourite sweater\\\")\" \"(\\\"experimental cocktail of drugs\\\" . \\\"injects into\\\")\" \"(\\\"whip\\\" . \\\"flogs\\\")\" \"(\\\"UML Diagramming Tool\\\" . \\\"specifies the heck out of %s\\\")\" \"(\\\"DOSEMU botnet\\\" . \\\"FreeDDOSes\\\")\" \"(\\\"Roman Army officers and/or FFT implementation\\\" . \\\"decimates\\\")\" \"(\\\"gpg\\\" . \\\"elliptically encrypts %s\\\")\" \"(\\\"holy water\\\" . \\\"exorcises the demons from\\\")\" \"(\\\"a shoe box\\\" . \\\"saves %s for a rainy day\\\")\" \"(\\\"tattooist\\\" . \\\"tattoos \\\\\\\"VIM\\\\\\\" in a heart on %s's arm\\\")\" \"(\\\"wooden shoe\\\" . \\\"throws it into %s's gears\\\")\" \"(\\\"magician\\\" . \\\"saws %s in half\\\")\" \"(\\\"scare quotes\\\" . \\\"“shoots”\\\")\" \"(\\\"social media 2.0 site\\\" . \\\"unfriends\\\")\" \"(\\\"cable TV\\\" . \\\"subjects %s to hours of Disney sitcoms\\\")\" \"(\\\"R\\\" . \\\"reveals %s to be statistically insignificant\\\")\" \"(\\\"oven\\\" . \\\"bakes %s into a cake\\\")\" \"(\\\"stake\\\" . \\\"burns\\\")\" \"(\\\"steak\\\" . \\\"asks %s how they would like it cooked\\\")\" \"(\\\"not very funny firearm\\\" . \\\"does something slightly silly, but ultimately unamusing to\\\")\" \"(\\\"scotsman\\\" . \\\"burns %s's supper\\\")\" \"(\\\"pope\\\" . \\\"excommunicates\\\")\" \"(\\\"guillotine\\\" . \\\"beheads\\\")\" \"(\\\"k-pop\\\" . \\\"blasts\\\")\" \"(\\\"surround-sound system\\\" . \\\"shatters %s's skull with soundwaves\\\")\" \"(\\\"sicario and/or git client\\\" . \\\"detaches %s's HEAD\\\")\" \"(\\\"augean stables\\\" . \\\"hands %s a mop and bucket\\\")\" \"(\\\"baboonzooka\\\" . \\\"shows %s its buttocks while launching projectiles over its shoulder\\\")\" \"(\\\"slashdotfic\\\" . \\\"pairs %s with CmdrTaco and plenty of hot grits\\\")\" \"(\\\"gfdl\\\" . \\\"makes all %s worst features invariant\\\")\" \"(\\\"dual\\\" . \\\"coshoots co%s\\\")\" \"(\\\"royal canadian mountie\\\" . \\\"foils %s again\\\")\" \"(\\\"“Li'l Bastard” Identity Theft Kit\\\" . \\\"masquerades as\\\")\" \"(\\\"stephen colbert\\\" . \\\"roasts\\\")\" \"(\\\"carpet\\\" . \\\"rolls %s up in it and dumps them off the pier\\\")\" \"(\\\"giant mirror array\\\" . \\\"burns %s from afar\\\")\" \"(\\\"cps-transform\\\" . \\\"delimits %s's continuation\\\")\" \"(\\\"wheel\\\" . \\\"breaks %s on it\\\")\" \"(\\\"J.J. Abrams series\\\" . \\\"leaves %s hanging indefinitely\\\")\" \"(\\\"subprime mortgage\\\" . \\\"clogs %s's equity of redemption\\\")\" \"(\\\"questionable first date\\\" . \\\"makes %s watch Police Academy 14\\\")\" \"(\\\"MS-DOS disk error\\\" . \\\"Aborts, Retries, and Fails\\\")\" \"(\\\"lennart poettering\\\" . \\\"reinvents %s in a better/worse way\\\")\" \"(\\\"incriminating photographs\\\" . \\\"blackmails\\\")\" \"(\\\"Dirty Harry\\\" . \\\"with a .44 Magnum, the most powerful handgun in the world, blows the head clean off of\\\")\" \"(\\\"Neal Stephenson\\\" . \\\"drops a cinder block of a tome on\\\")\" \"(\\\"Evgeny Morozov\\\" . \\\"mocks %s as a naive technological solutionist\\\")\" \"(\\\"phaser\\\" . \\\"stuns\\\")\" \"(\\\"formal grammar\\\" . \\\"frees %s's context\\\")\")")) nil]
["firearms-assoc" nil nil nil nil nil nil ((timestamp . "2012-11-13") (notes . "(\"lisp (assoc (stringify-symbol-list lispargs) (mapcar (lambda (x) (car (read-from-string x))) (notes \\\"firearms\\\")))\")")) nil]
["Firebug" nil nil nil nil nil nil ((timestamp . "2007-10-01") (notes . "(\"a web development extension for Firefox <http://getfirebug.com>\")")) nil]
["firefly" nil nil nil nil nil nil ((timestamp . "2002-09-20") (notes . "(\"http://slashdot.org/article.pl?sid=02/09/20/1713222&mode=nested&tid=129\" \"a show whose \\\"fans-sites\\\" are secretly created/paid for by FOX themselves..\")")) nil]
["fireworks" nil nil nil nil nil nil ((timestamp . "2004-12-02") (notes . "(\"at http://www.dr.dk/nyheder/baggrund/article.jhtml?articleID=211498\")")) nil]
["firstdoc" nil nil nil nil nil nil ((timestamp . "2009-05-25") (notes . "(\"Do you consider LaTeX? See http://tug.ctan.org/tex-archive/info/first-latex-doc/\")")) nil]
["fishin-ahoy-batman" nil nil nil nil nil nil ((timestamp . "2013-05-02") (notes . "(\"a metaphor for programming languages: http://www.qwantz.com/index.php?comic=1938\")")) nil]
["five" nil nil nil nil nil nil ((timestamp . "2010-07-29") (notes . "(\"5\")")) nil]
["fix-fix" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"noecho do the exact opposite of what you did to unfix it\")")) nil]
["flac" nil nil nil nil nil nil ((timestamp . "2003-03-10") (notes . "(\"the free lossless audio codec. http://flac.sf.net/\")")) nil]
["flame-howto" nil nil nil nil nil nil ((timestamp . "2005-01-24") (notes . "(\"When using lisp in flames, these variables are available: victim -- the flamee, nick: the instigator of the flame, tgt: this channel\" \"To invoke the nth flame, type: fsbot: flame victim N\" \"Lisp example: , flames is also (format \\\"/me hurts %s\\\" victim)\")")) nil]
["flamebaitp" nil nil nil nil nil nil ((timestamp . "2012-01-24") (notes . "(\"redirect troll-bait\")")) nil]
["flamers" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"at http://redwing.hutman.net/~mreed/\")")) nil]
["flash" nil nil nil nil nil nil ((timestamp . "2013-02-15") (notes . "(\"una mierda\" \"see ,actionscript\" \"DIE, YOU GRAVY SUCKING PLUGIN!! DIE!!!\")")) nil]
["flatline" nil nil nil nil nil nil ((timestamp . "2010-09-22") (notes . "(\"noecho EEG:________________________________________\")")) nil]
["flatulence" nil nil nil nil nil nil ((timestamp . "2012-11-16") (notes . "(\"Flatulence is not poisonous; it is a natural component of various intestinal contents\" \"In theory, pathological distension of the bowel, leading to constipation, could result if a person holds in flatulence.\" \"fart\")")) nil]
["flatulence-event" nil nil nil nil nil nil ((timestamp . "2012-10-27") (notes . "(\"\\\"The volume of flatus associated with each flatulence event varies (5-375ml).\\\"\")")) nil]
["flee" nil nil nil nil nil nil ((timestamp . "2012-07-29") (notes . "(\"noecho /me heads for the hills.\")")) nil]
["fleshlight" nil nil nil nil nil nil ((timestamp . "2010-08-22") (notes . "(\"noecho qDot has an interactive one. He's working on improving the drivers.\")")) nil]
["flim" nil nil nil nil nil nil ((timestamp . "2009-08-17") (notes . "(\"at http://www.kanji.zinbun.kyoto-u.ac.jp/~tomo/lemi/dist/flim/flim-1.14/\")")) nil]
["flip" nil nil nil nil nil nil ((timestamp . "2004-12-28") (notes . "(\"lisp (random-choose '(\\\"Heads\\\" \\\"Tails\\\"))\")")) nil]
["flipping" nil nil nil nil nil nil ((timestamp . "2011-08-11") (notes . "(\"noecho (ノಠ益ಠ)ノ彡┻━┻\")")) nil]
["flite" nil nil nil nil nil nil ((timestamp . "2003-07-11") (notes . "(\"festival lite, a text to speech system\")")) nil]
["float" nil nil nil nil nil nil ((timestamp . "2010-04-08") (notes . "(\"The whole point of floats is that they *float*, if you do not want this then you probably want something other than a floating environment. For example, you do *not* need the figure environment to typeset graphics (type ,,epslatex for more about this). If you do not understand this then see almost any documentation (e.g., type ,,lshort)\")")) nil]
["FloatingPointRoundingProblems" nil nil nil nil nil nil ((timestamp . "2004-04-10") (notes . "(\"see fuzz.el and fastfuzz.el at http://www.eskimo.com/~seldon/\")")) nil]
["floatrow" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package that provides many ways to customize layouts of floating environments and has code to cooperate with the caption 3.x package: http://ctan.org/pkg/floatrow\")")) nil]
["floats" nil nil nil nil nil nil ((timestamp . "2011-12-16") (notes . "(\"like, figure and table are floating environments. If you don't want your figures/tables to float, don't use them.\" \"see \\\\captionof ,,caption\" \"see H specifier from ,,float package\" \"see \\\\FloatBarrier from ,,placeins package\")")) nil]
["flollop" nil nil nil nil nil nil ((timestamp . "2012-10-23") (notes . "(\"a kind of undulating motion, as used by mattresses\")")) nil]
["flood" nil nil nil nil nil nil ((timestamp . "2013-12-19") (notes . "(\"use a paste service: http://paste.lisp.org/\")")) nil]
["floppy" nil nil nil nil nil nil ((timestamp . "2012-06-22") (notes . "(\"noecho 💾\")")) nil]
["FLOPS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Floating [Point] Operations Per Second\")")) nil]
["FLOSS" nil nil nil nil nil nil ((timestamp . "2013-06-18") (notes . "(\"short for Free / Libre / Open Source Software\" \"used to floss your teeth\")")) nil]
["flow-control" nil nil nil nil nil nil ((timestamp . "2004-03-18") (notes . "(\"(info \\\"(efaq)Handling C-s and C-q with flow control\\\")\")")) nil]
["flowers" nil nil nil nil nil nil ((timestamp . "2011-12-01") (notes . "(\"!l my flowers for you:\\\\tikz{\\\\draw[fill=blue](0,0)circle(0.5cm);\\\\draw[fill=red]\\\\foreach\\\\i in{0,1,...,6}{(51.429*\\\\i:.75cm)circle(0.25cm)};\\\\draw[green,line width=3pt](-70:0.5cm)to[out=-70,in=90](1,-3);}\")")) nil]
["flpsed" nil nil nil nil nil nil ((timestamp . "2005-04-14") (notes . "(\"WYSIWYG postscript editor. To edit pdfs, install xpdf, then import pdf using flpsed\" \"use the xpdf copy protection patch to edit \\\"protected\\\" pdfs\")")) nil]
["fluoride" nil nil nil nil nil nil ((timestamp . "2007-12-05") (notes . "(\"Do you realize that fluoridation is the most monstrously conceived and dangerous communist plot we have ever had to face\")")) nil]
["fluxus" nil nil nil nil nil nil ((timestamp . "2007-08-08") (notes . "(\"a realtime rendering engine for livecoding in Scheme.\" \"found at http://www.pawfal.org/fluxus\")")) nil]
["flx" nil nil nil nil nil nil ((timestamp . "2013-07-01") (notes . "(\"noecho https://github.com/lewang/flx\")")) nil]
["Flycheck" nil nil nil nil nil nil ((timestamp . "2013-04-14") (notes . "(\"\\\"flymake done right\\\" <http://flycheck.lunaryorn.com>.\")")) nil]
["flycompile" nil nil nil nil nil nil ((timestamp . "2003-12-11") (notes . "(\"redirect flymake\")")) nil]
["flyparse" nil nil nil nil nil nil ((timestamp . "2008-08-30") (notes . "(\"http://code.google.com/p/flyparse-mode/\")")) nil]
["flyspell-mode" nil nil nil nil nil nil ((timestamp . "2010-10-28") (notes . "(\"redirect FlySpell\")")) nil]
["FlyspellMode" nil nil nil nil nil nil ((timestamp . "2010-10-28") (notes . "(\"redirect FlySPell\")")) nil]
["FM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Fucking Magic\")")) nil]
["FML" nil nil nil nil nil nil ((timestamp . "2010-12-16") (notes . "(\"Fuck My Life\")")) nil]
["FNG" nil nil nil nil nil nil ((timestamp . "2011-08-12") (notes . "(\"Fucking New Guy, see http://wikipedia.org/wiki/Fucking_New_Guy\")")) nil]
["fni" nil nil nil nil nil nil ((timestamp . "2011-12-22") (notes . "(\"Fabrice Niessen\" \"at http://www.mygooglest.com/fni/\")")) nil]
["fnord" nil nil nil nil nil nil ((timestamp . "2004-07-15") (notes . "(\"a reminder that convictions cause convicts\" \"a reminder that smoking is the leading cause of statistics\" \"a reminder that you should be consulting your pineal gland\" \"if you see them they will bite you\" \"http://www.fnord.org/occult/discordia/text/what.is.fnord\")")) nil]
["fnordbar" nil nil nil nil nil nil ((timestamp . "2003-11-21") (notes . "(\"lisp (format \\\"foo\\\\n\\\")\")")) nil]
["fnordbaz" nil nil nil nil nil nil ((timestamp . "2003-11-21") (notes . "(\"lisp (format \\\"foo\\\\nquux\\\")\")")) nil]
["fnordfoo" nil nil nil nil nil nil ((timestamp . "2003-11-21") (notes . "(\"lisp (format \\\"foo\\\")\")")) nil]
["fnordquuux" nil nil nil nil nil nil ((timestamp . "2003-11-21") (notes . "(\"lisp (format \\\"foo\\\\n%%%%%% %s\\\" (yow))\")")) nil]
["fnordquux" nil nil nil nil nil nil ((timestamp . "2003-11-21") (notes . "(\"lisp (format \\\"foo\\\\nquux%s\\\" (yow))\")")) nil]
["fnords" nil nil nil nil nil nil ((timestamp . "2012-05-17") (notes . "(\"lisp (message \\\" \\\")\")")) nil]
["fntguide" nil nil nil nil nil nil ((timestamp . "2011-11-06") (notes . "(\"a documentation of commands for installing, declaring and selecting fonts in LaTeX, and is available from http://www.ctan.org/pkg/fntguide\")")) nil]
["FOAD" nil nil nil nil nil nil ((timestamp . "2010-09-29") (notes . "(\"a request to Fuck Off and Die <http://foad.org>\")")) nil]
["focus" nil nil nil nil nil nil ((timestamp . "2005-11-25") (notes . "(\"redirect follow-mouse.el\")")) nil]
["fogbugz" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"Agile team collaboration in the cloud\")")) nil]
["FOH" nil nil nil nil nil nil ((timestamp . "2012-10-31") (notes . "(\"short for Force Of Habit\")")) nil]
["FOL" nil nil nil nil nil nil ((timestamp . "2012-09-26") (notes . "(\"first-order logic\")")) nil]
["fold-mode" nil nil nil nil nil nil ((timestamp . "2003-03-16") (notes . "(\"http://uuid.com/~marcus/computing/fold-mode.html\")")) nil]
["folding" nil nil nil nil nil nil ((timestamp . "2003-01-12") (notes . "(\"redirect categoryfolding\")")) nil]
["folio" nil nil nil nil nil nil ((timestamp . "2009-09-23") (notes . "(\"http://dto.github.com/notebook/folio.html\")")) nil]
["follow-mode" nil nil nil nil nil nil ((timestamp . "2005-05-25") (notes . "(\"redirect FollowMode\")")) nil]
["follow-mouse" nil nil nil nil nil nil ((timestamp . "2005-11-25") (notes . "(\"redirect follow-mouse.el\")")) nil]
["followup" nil nil nil nil nil nil ((timestamp . "2011-11-01") (notes . "(\"noecho ask me EXACTLY 1) what else you want to know and 2) I will tell you\")")) nil]
["fondleslab" nil nil nil nil nil nil ((timestamp . "2012-04-05") (notes . "(\"a more accurate term for a tablet [computer]\")")) nil]
["font-lock" nil nil nil nil nil nil ((timestamp . "2005-04-21") (notes . "(\"redirect FontLock\")")) nil]
["fontattributes" nil nil nil nil nil nil ((timestamp . "2016-01-16") (notes . "(\"an overview over the standard font attributes: http://www.forkosh.com/pstex/latexcommands.htm\")")) nil]
["fontenc" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package that allows the user to select font encodings, and for each encoding provides an interface to font-encoding-specific commands for each font: http://ctan.org/pkg/fontenc\")")) nil]
["fontification" nil nil nil nil nil nil ((timestamp . "2003-07-25") (notes . "(\"redirect enablingfontlock\")")) nil]
["FontList" nil nil nil nil nil nil ((timestamp . "2003-10-07") (notes . "(\"apt-get -u install tkfont\")")) nil]
["fonts" nil nil nil nil nil nil ((timestamp . "2014-05-20") (notes . "(\"For information about the way fonts are selected in latex please consult the latex font guide http://mirrors.ctan.org/macros/latex/doc/fntguide.pdf\" \"http://www.tug.dk/FontCatalogue/ for a list of common used fonts.\" \"For the use of Truetype and Opentype fonts in the xelatex and lualatex engines cf. http://mirrors.ctan.org/macros/latex/contrib/fontspec/fontspec.pdf\" \"For a very good guide on using specific fonts for short sections of text see http://tex.stackexchange.com/questions/25249/how-do-i-use-a-particular-font-for-a-small-section-of-text-in-my-document\")")) nil]
["fontsize" nil nil nil nil nil nil ((timestamp . "2010-07-06") (notes . "(\"!lp \\\\tiny tiny \\\\scriptsize scriptsize \\\\footnotesize footnotesize \\\\small small \\\\normalsize normalsize \\\\large large \\\\Large Large \\\\huge huge \\\\Huge Huge\" \"http://www.andy-roberts.net/misc/latex/latextutorial7.html\" \"to set arbitrary font sizes, use !l \\\\fontsize{25}{30}\\\\selectfont 25pt font size with 30pt pitch\")")) nil]
["fontsizes" nil nil nil nil nil nil ((timestamp . "2012-06-26") (notes . "(\"noecho Predefined font sizes in LaTeX are \\\\tiny, \\\\scriptsize, \\\\footnotesize, \\\\small, \\\\normalsize, \\\\large, \\\\Large, \\\\LARGE, \\\\huge, and \\\\Huge\")")) nil]
["fontspec" nil nil nil nil nil nil ((timestamp . "2008-11-28") (notes . "(\"http://www.ctan.org/tex-archive/macros/xetex/latex/fontspec/\")")) nil]
["foo" nil nil nil nil nil nil ((timestamp . "2012-11-28") (notes . "(\"the standard meta-syntactic variable\" \"$1\" \"see baz\" \"23\")")) nil]
["foo-list" nil nil nil nil nil nil ((timestamp . "2005-01-24") (notes . "(\"lisp '(\\\"a\\\" \\\"b\\\" \\\"c %s\\\")\")")) nil]
["foo2" nil nil nil nil nil nil ((timestamp . "2008-03-06") (notes . "(\"bar\")")) nil]
["foobar" nil nil nil nil nil nil ((timestamp . "2011-05-02") (notes . "(\"lisp (format \\\", barfoo\\\")\")")) nil]
["foodoo" nil nil nil nil nil nil ((timestamp . "2003-05-26") (notes . "(\"lunch; q.v. dindin\")")) nil]
["foof" nil nil nil nil nil nil ((timestamp . "2006-10-09") (notes . "(\"a #scheme denizen.\")")) nil]
["foof-loop" nil nil nil nil nil nil ((timestamp . "2012-01-06") (notes . "(\"http://mumble.net/~campbell/scheme/foof-loop.txt\")")) nil]
["fooing" nil nil nil nil nil nil ((timestamp . "2007-08-09") (notes . "(\"doing the foo thing\")")) nil]
["Foolip" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Foolip\")")) nil]
["fooooooooo" nil nil nil nil nil nil ((timestamp . "2012-08-31") (notes . "(\"lisp (when (equal nick \\\"jlfx\\\") \\\"\\\")\")")) nil]
["footmisc" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a collection of ways to change the typesetting of footnotes. http://ctan.org/pkg/footmisc [doc: http://tinyurl.com/footmisc-doc]\")")) nil]
["ForAdministration" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ForAdministration\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?ForAdministration\")")) nil]
["forcer" nil nil nil nil nil nil ((timestamp . "2002-11-29") (notes . "(\"redirect jorgenschaefer\")")) nil]
["forcersnack" nil nil nil nil nil nil ((timestamp . "2013-05-08") (notes . "(\"noecho /me hands forcer a woischorl im dubbeglas.\")")) nil]
["ForcingEnrichedMode" nil nil nil nil nil nil ((timestamp . "2005-08-01") (notes . "(\"redirect EnrichedMode\")")) nil]
["ForFac" nil nil nil nil nil nil ((timestamp . "2003-07-04") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ForFac\")")) nil]
["ForFaculty" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ForFaculty\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?ForFaculty\" \"at http://www.gnufans.net/fsedu.pl?Forfaculty\")")) nil]
["forgotten" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"redirect help-forget\")")) nil]
["fork" nil nil nil nil nil nil ((timestamp . "2011-11-07") (notes . "(\"noecho Returned 0. Report your father if you want to die.\")")) nil]
["form" nil nil nil nil nil nil ((timestamp . "2011-04-05") (notes . "(\"redirect sexp\")")) nil]
["format-spec" nil nil nil nil nil nil ((timestamp . "2012-11-19") (notes . "(\"see C-h f format-spec and elucidation at http://edward.oconnor.cx/2009/06/format-spec\")")) nil]
["ForParentsAndParentEducators" nil nil nil nil nil nil ((timestamp . "2003-07-04") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ForParentsAndParentEducators\")")) nil]
["forrest" nil nil nil nil nil nil ((timestamp . "2004-12-22") (notes . "(\"http://forrest.apache.org/\")")) nil]
["ForStudent" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ForStudent\")")) nil]
["ForStudents" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ForStudents\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?ForStudents\" \"at http://www.gnufans.net/fsedu.pl?Forstudents\")")) nil]
["ForStudentsInstallGnuLinux" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?ForStudentsInstallGnuLinux\" \"at http://www.gnufans.net/fsedu.pl?ForStudentsInstallGnuLinux\" \"at http://www.gnufans.net/fsedu.pl?Forstudentsinstallgnulinux\")")) nil]
["forth" nil nil nil nil nil nil ((timestamp . "2013-03-14") (notes . "(\"a concatenative programming language <https://en.wikipedia.org/wiki/Forth_(programming_language)>, see also OpenFirmware, Factor\")")) nil]
["forth-mode" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"packaged with gforth. Look for \\\"gforth.el\\\".\")")) nil]
["fortherestofus" nil nil nil nil nil nil ((timestamp . "2011-08-05") (notes . "(\"http://i3.squidoocdn.com/resize/squidoo_images/250/draft_lens6529711module52665911photo_1259844595mac_for-the-rest-of-us-ad\")")) nil]
["Forum" nil nil nil nil nil nil ((timestamp . "2003-02-27") (notes . "(\"DotGNU Forum System, a set of program to support editing files by multiple people at the same time, it also acts as the technical foundation of FSA\" \"hosted as dotgnu-forum\")")) nil]
["ForumHost" nil nil nil nil nil nil ((timestamp . "2003-03-15") (notes . "(\"at http://www.etrumeus.com/ferment/ForumHost\")")) nil]
["ForumProgram" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?ForumProgram\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?ForumProgram\")")) nil]
["ForXDiscuss" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?ForXDiscuss\" \"at http://www.gnufans.net/fsedu.pl?ForXDiscuss\")")) nil]
["FOSS" nil nil nil nil nil nil ((timestamp . "2012-11-04") (notes . "(\"Free or Open Source Software\" \"the union of Free Software and Open Source software.\" \"kind of silly: open source AND free software‽\")")) nil]
["fotd" nil nil nil nil nil nil ((timestamp . "2007-11-20") (notes . "(\"a lame bpalmer thing\")")) nil]
["Foundation" nil nil nil nil nil nil ((timestamp . "2003-03-22") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?Foundation\")")) nil]
["four-yorkshiremen" nil nil nil nil nil nil ((timestamp . "2013-09-15") (notes . "(\"a sketch parodying nostalgic conversations about humble beginnings or difficult childhoods\" \"http://www.youtube.com/watch?v=Xe1a1wHxTyo\" \"“We never used to have a cup; we used to have to drink out of a rolled up newspaper”\")")) nil]
["fourier," nil nil nil nil nil nil ((timestamp . "2012-02-19") (notes . "(\"https://en.wikipedia.org/wiki/Joseph_Fourier\")")) nil]
["fp" nil nil nil nil nil nil ((timestamp . "2011-07-12") (notes . "(\"functional programming\" \"some people abbreviate fencepost\" \"floating point ( http://www.cs.berkeley.edu/~wkahan/ieee754status/754story.html )\")")) nil]
["FPA" nil nil nil nil nil nil ((timestamp . "2005-09-01") (notes . "(\"\\\"first parsed as\\\".\")")) nil]
["FPM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Fast Page Mode\")")) nil]
["fps" nil nil nil nil nil nil ((timestamp . "2005-03-21") (notes . "(\"first person shooter game .. like nethack or \\\"hunt\\\" .. but in FPS you tend to see it trough the eyes of your character in a 3d-simulation.\" \"\\\"Frames per Second\\\"\")")) nil]
["FPTP" nil nil nil nil nil nil ((timestamp . "2011-12-14") (notes . "(\"https://en.wikipedia.org/wiki/First-past-the-post_voting\")")) nil]
["FQDN" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Fully Qualified Domain Name\")")) nil]
["FR" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"Functional Requirements\")")) nil]
["framed" nil nil nil nil nil nil ((timestamp . "2009-12-21") (notes . "(\"a package to make frames around things at http://www.ctan.org/pkg/framed\")")) nil]
["framemaker" nil nil nil nil nil nil ((timestamp . "2013-03-12") (notes . "(\"a desktop publishing program\")")) nil]
["framework" nil nil nil nil nil nil ((timestamp . "2008-04-29") (notes . "(\"a library which defines \\\"main\\\"\")")) nil]
["frankenstorm" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"http://www.foxnews.com/weather/2012/10/26/east-coast-prepares-for-pre-halloween-frankenstorm/ a special halloween storm!\")")) nil]
["Franklin" nil nil nil nil nil nil ((timestamp . "2012-02-07") (notes . "(\"noecho \\\"He who sacrifices content for style deserves neither.\\\"\")")) nil]
["franl" nil nil nil nil nil nil ((timestamp . "2002-12-11") (notes . "(\"ERC config at http://world.std.com/~franl/my-erc.el\")")) nil]
["frauds" nil nil nil nil nil nil ((timestamp . "2013-07-04") (notes . "(\"noecho SCAM HIM!\")")) nil]
["Fred" nil nil nil nil nil nil ((timestamp . "2013-07-22") (notes . "(\"sad that you ate his beans\")")) nil]
["free" nil nil nil nil nil nil ((timestamp . "2011-10-05") (notes . "(\"Free as in Freedom not free as in price http://www.gnu.org/philosophy/free-sw.html\")")) nil]
["free-bore" nil nil nil nil nil nil ((timestamp . "2013-02-14") (notes . "(\"lisp (format \\\"/me takes %s aside and explains in excruciating detail how the term \\\\\\\"free\\\\\\\" causes confusion and should be avoided.\\\" (mapconcat 'symbol-name lispargs \\\" \\\"))\")")) nil]
["free-compatible-hardware" nil nil nil nil nil nil ((timestamp . "2012-10-14") (notes . "(\"http://www.garlach44.eu/en/\")")) nil]
["free-keys" nil nil nil nil nil nil ((timestamp . "2013-11-21") (notes . "(\"a package to display vacant keybindings, at https://github.com/Fuco1/free-keys\")")) nil]
["free-math-texts-at-assayer" nil nil nil nil nil nil ((timestamp . "2003-02-16") (notes . "(\"http://www.theassayer.org/cgi-bin/asbrowsesubject.cgi?class=Q\")")) nil]
["free-software-song" nil nil nil nil nil nil ((timestamp . "2013-07-17") (notes . "(\"http://www.youtube.com/watch?v=S-xb1miTjoE\" \"http://www.gnu.org/music/free-software-song.html\" \"https://www.gnu.org/music/free-software-song.ogg\")")) nil]
["free-sw" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://www.gnu.org/philosophy/free-sw.html\")")) nil]
["free-variable" nil nil nil nil nil nil ((timestamp . "2005-07-16") (notes . "(\"http://www.c2.com/cgi-bin/wiki?FreeVariable\")")) nil]
["FreeBeer" nil nil nil nil nil nil ((timestamp . "2003-03-22") (notes . "(\"at http://www.etrumeus.com/ferment/FreeBeer\")")) nil]
["FreeBSD" nil nil nil nil nil nil ((timestamp . "2013-05-22") (notes . "(\"http://freebsd.org\")")) nil]
["freedesktop" nil nil nil nil nil nil ((timestamp . "2004-04-02") (notes . "(\"http://xorg.freedesktop.org/\" \"xserver install guide at http://www.freedesktop.org/Software/XserverInstallGuide\" \"see also xizzle\")")) nil]
["freedom" nil nil nil nil nil nil ((timestamp . "2013-02-19") (notes . "(\"The freedom to run the program, for any purpose\" \"The freedom to study how the program works, and change it to make it do what you wish\" \"The freedom to redistribute copies so you can help your neighbor\" \"The freedom to distribute copies of your modified versions to others\" \"slavery\" \"just another word for nothing left to lose\" \"ain't free\" \"is not gratis\" \"evil\")")) nil]
["freedombox" nil nil nil nil nil nil ((timestamp . "2011-07-12") (notes . "(\"http://www.freedomboxfoundation.org/\")")) nil]
["freedots" nil nil nil nil nil nil ((timestamp . "2008-03-27") (notes . "(\"at http://delysid.org/freedots.html\")")) nil]
["FreeEducation" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FreeEducation\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FreeEducation\")")) nil]
["freeglut" nil nil nil nil nil nil ((timestamp . "2013-07-01") (notes . "(\"Open source and extended alternative to GLUT\")")) nil]
["freegnulinux" nil nil nil nil nil nil ((timestamp . "2006-10-05") (notes . "(\"http://www.gnu.org/links/links.html#FreeGNULinuxDistributions\")")) nil]
["freenas" nil nil nil nil nil nil ((timestamp . "2012-02-15") (notes . "(\"http://www.freenas.org/\" \"not Linux, but hey, nobody is perfect\")")) nil]
["freenx" nil nil nil nil nil nil ((timestamp . "2007-08-02") (notes . "(\"redirect nx\")")) nil]
["freerunner" nil nil nil nil nil nil ((timestamp . "2009-03-08") (notes . "(\"http://wiki.wjsullivan.net/collaboration.cgi/FsoEl\")")) nil]
["FreeSoftware" nil nil nil nil nil nil ((timestamp . "2003-10-07") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FreeSoftware\" \"at http://www.etrumeus.com/ferment/FreeSoftware\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FreeSoftware\" \"free software song: http://www.gnu.org/music/free-software-song.html\")")) nil]
["FreeSoftwareAcademy" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FreeSoftwareAcademy\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FreeSoftwareAcademy\")")) nil]
["FreeSoftwareEducationalDeployment" nil nil nil nil nil nil ((timestamp . "2003-03-03") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FreeSoftwareEducationalDeployment\")")) nil]
["FreeSoftwareInEducation" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FreeSoftwareInEducation\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FreeSoftwareInEducation\" \"at http://www.gnufans.net/fsedu.pl?Freesoftwareineducation\")")) nil]
["freetards" nil nil nil nil nil nil ((timestamp . "2013-11-27") (notes . "(\"noecho BORE HIM BY READING THE GPL!!!\")")) nil]
["FreeTechBooks" nil nil nil nil nil nil ((timestamp . "2003-08-22") (notes . "(\"at http://www.tcfb.com/freetechbooks/index.html\")")) nil]
["freetts" nil nil nil nil nil nil ((timestamp . "2004-06-30") (notes . "(\"a java based text-to-speech system http://freetts.sourceforge.net/\")")) nil]
["freewill" nil nil nil nil nil nil ((timestamp . "2008-01-22") (notes . "(\"an illusion\")")) nil]
["french-laugh" nil nil nil nil nil nil ((timestamp . "2012-08-19") (notes . "(\"noecho hon hoon hon\")")) nil]
["frenchtoast" nil nil nil nil nil nil ((timestamp . "2013-08-14") (notes . "(\"http://www.youtube.com/watch?v=keBzy5-iRyo\")")) nil]
["freysteinn" nil nil nil nil nil nil ((timestamp . "2005-05-22") (notes . "(\"one of them icelandic guys...\")")) nil]
["Friday" nil nil nil nil nil nil ((timestamp . "2011-07-09") (notes . "(\"noecho Today is Friday, friday, friday.\")")) nil]
["friendship" nil nil nil nil nil nil ((timestamp . "2011-07-26") (notes . "(\"magic\")")) nil]
["fringe" nil nil nil nil nil nil ((timestamp . "2012-05-31") (notes . "(\"redirect fringes\")")) nil]
["frink" nil nil nil nil nil nil ((timestamp . "2005-09-18") (notes . "(\"Professor John Frink, discoverer of the \\\"Third Dimension\\\" and such geometric figures as the hypersquare or frinkehedron, also known to laypeople as the \\\"cube\\\".\")")) nil]
["frotz" nil nil nil nil nil nil ((timestamp . "2011-11-19") (notes . "(\"a virtual machine for playing interactive fiction files\" \"for z-machine interpretter written in elisp see ,malyon\")")) nil]
["frp" nil nil nil nil nil nil ((timestamp . "2014-01-02") (notes . "(\"Functional Reactive Programming. http://www.haskell.org/haskellwiki/Functional_Reactive_Programming\" \"react - http://facebook.github.io/react/\" \"https://github.com/baconjs/bacon.js?utm_source=javascriptweekly&utm_medium=email\")")) nil]
["FRtracker" nil nil nil nil nil nil ((timestamp . "2011-10-09") (notes . "(\"http://sourceforge.net/tracker/?func=browse&group_id=2888&atid=352888\")")) nil]
["fryup" nil nil nil nil nil nil ((timestamp . "2013-03-16") (notes . "(\"an english, scottish, welsh or irish breakfast consisting of fried bacon, grilled or fried sausages, optional black pudding, baked beans, fried eggs, optionally scrambled eggs and fried bread. Other ingredients may be added.\")")) nil]
["fs" nil nil nil nil nil nil ((timestamp . "2013-02-19") (notes . "(\"The freedom to run the software for any purpose\" \"The freedom to study and adapt the software to suit your needs\" \"The freedom to redistribute the software\" \"The freedom to distribute modified versions of the software\" \"filesystm\")")) nil]
["fsa" nil nil nil nil nil nil ((timestamp . "2004-01-07") (notes . "(\"an acronym for Finite State Automaton\")")) nil]
["FsaCurriculum" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?FsaCurriculum\" \"at http://www.gnufans.net/fsedu.pl?FsaCurriculum\")")) nil]
["FsaRating" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FsaRating\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FsaRating\")")) nil]
["fsbot" nil nil nil nil nil nil ((timestamp . "2012-09-20") (notes . "(\"redirect erbot\")")) nil]
["fsbot!" nil nil nil nil nil nil ((timestamp . "2004-03-05") (notes . "(\"redirect hi\")")) nil]
["fsbot-is-creepy" nil nil nil nil nil nil ((timestamp . "2011-04-05") (notes . "(\"noecho :(\")")) nil]
["fsck" nil nil nil nil nil nil ((timestamp . "2010-01-19") (notes . "(\"file system check\" \"Sometimes used for \\\"fuck\\\", usually as a geek joke, but sometimes also as a puritan excuse not to say \\\"fuck\\\", because \\\"fuck\\\" seems such a nasty word to those that they even use \\\"f*ck\\\" or \\\"f-ck\\\" instead of \\\"fuck\\\".\" \"fuck\")")) nil]
["fsd" nil nil nil nil nil nil ((timestamp . "2006-03-06") (notes . "(\"the Free Software Definition at http://www.fsf.org/licensing/essays/free-sw.html\")")) nil]
["fsdired" nil nil nil nil nil nil ((timestamp . "2013-05-29") (notes . "(\"the purpose of fsdired is to classify files with different marks in dired, then do something with each file depending on the mark, such as moving them\")")) nil]
["FSDO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for For Some Definition Of\")")) nil]
["FSEdu" nil nil nil nil nil nil ((timestamp . "2003-03-12") (notes . "(\"the Free Software in Education project\" \"on channel #fsedu\")")) nil]
["FSEdu-cvs" nil nil nil nil nil nil ((timestamp . "2003-02-28") (notes . "(\"anoncvs@subversions.gnu.org:/cvsroot/fsedu\")")) nil]
["FSEDu-CVS-CO" nil nil nil nil nil nil ((timestamp . "2003-02-28") (notes . "(\"cvs -z3 -d:pserver:anoncvs@subversions.gnu.org:/cvsroot/fsedu co .\")")) nil]
["FSEDu-CVS-CO-WIKI" nil nil nil nil nil nil ((timestamp . "2003-03-02") (notes . "(\"cvs -z3 -d:pserver:anoncvs@subversions.gnu.org:/cvsroot/fsedu co fsedu\" \"stored in cvs\" \"related to [fsedu-wiki-tgz]\")")) nil]
["FSEDU-ViewCVS" nil nil nil nil nil nil ((timestamp . "2003-02-28") (notes . "(\"http://savannah.nongnu.org/cgi-bin/viewcvs/fsedu/\")")) nil]
["fsedu-wiki-tgz" nil nil nil nil nil nil ((timestamp . "2003-03-02") (notes . "(\"http://gnufans.net/~deegowiki/wikis/fsedu.tar.gz\" \"related to FSEDu-CVS-CO-WIKI\")")) nil]
["FSEduCertification" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?FSEduCertification\" \"at http://www.gnufans.net/fsedu.pl?FSEduCertification\")")) nil]
["FSEduConsumable" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FSEduConsumable\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FSEduConsumable\")")) nil]
["FSEduCurricula" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FSEduCurricula\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FSEduCurricula\")")) nil]
["FSEduCurriculum" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FSEduCurriculum\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FSEduCurriculum\")")) nil]
["FseduIRC" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FseduIRC\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FseduIRC\")")) nil]
["FSEduMathCurricula" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FSEduMathCurricula\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FSEduMathCurricula\")")) nil]
["FSEduMathCurriculum" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FSEduMathCurriculum\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FSEduMathCurriculum\")")) nil]
["FseduNews" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FseduNews\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FseduNews\")")) nil]
["FSEduSavannahProject" nil nil nil nil nil nil ((timestamp . "2003-02-26") (notes . "(\"http://savannah.nongnu.org/projects/fsedu\")")) nil]
["FseduSoftwareProjects" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FseduSoftwareProjects\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FseduSoftwareProjects\")")) nil]
["FSEduWorkBooks" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?FSEduWorkBooks\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?FSEduWorkBooks\")")) nil]
["fsmunoz" nil nil nil nil nil nil ((timestamp . "2012-12-29") (notes . "(\"the vanguard of the masses\" \"http://finisterra.motd.org\" \"http://guardagozosa.blogspot.com (non-tech blog)\")")) nil]
["fsv" nil nil nil nil nil nil ((timestamp . "2008-05-23") (notes . "(\"short for some values\")")) nil]
["FSVO" nil nil nil nil nil nil ((timestamp . "2005-11-24") (notes . "(\"For some value(s) of\")")) nil]
["ft" nil nil nil nil nil nil ((timestamp . "2011-08-31") (notes . "(\"free technology academy http://www.ftacademy.org\")")) nil]
["FTBFS" nil nil nil nil nil nil ((timestamp . "2005-08-16") (notes . "(\"means Failure To Build From Source\" \"AKA b0rked :)\")")) nil]
["fte" nil nil nil nil nil nil ((timestamp . "2003-11-20") (notes . "(\"a lesser Borland-like editor\")")) nil]
["FTFM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Fuck The Fuckin' Manual!\")")) nil]
["ftfy" nil nil nil nil nil nil ((timestamp . "2012-12-22") (notes . "(\"fixed that for you\" \"\\\"fifty\\\" misspelled\")")) nil]
["FTL" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"Faster Than Light (a.k.a. superluminal).\" \"Fruit of the loom\" \"MFTL without the M\" \"[3] For the Lose.\" \"A unique multiplatform spaceship game which will eat all your hours.\")")) nil]
["ftmtr" nil nil nil nil nil nil ((timestamp . "2011-09-17") (notes . "(\"noecho feed the manual to recycling\")")) nil]
["FTPMustDie" nil nil nil nil nil nil ((timestamp . "2011-06-06") (notes . "(\"http://mywiki.wooledge.org/FtpMustDie\")")) nil]
["fts" nil nil nil nil nil nil ((timestamp . "2008-02-12") (notes . "(\"fuck this shit\")")) nil]
["FTTH" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"fibre to the home, i.e. optical (not copper) all the way to the CPE (cf. FTTN, which runs only to the exchange and then copper to the CPE)\" \"CPE=customer premises equipment and FTTN=fiber to the node\")")) nil]
["ftw" nil nil nil nil nil nil ((timestamp . "2011-10-10") (notes . "(\"for the win.\" \"Faster than Waffles\")")) nil]
["FUBAR" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Fucked Up Beyond All Recognition\")")) nil]
["fuckeverything" nil nil nil nil nil nil ((timestamp . "2010-09-09") (notes . "(\"http://www.theonion.com/articles/fuck-everything-were-doing-five-blades,11056/\" \"used in a sentence, \\\"fuck everything, we're doing five IO schedulers\\\"\" \"not to be confused with \\\"fuck it, we'll do it live\\\".\")")) nil]
["fuckit" nil nil nil nil nil nil ((timestamp . "2011-04-04") (notes . "(\"http://www.youtube.com/watch?v=DVdKQ0I35qo\")")) nil]
["fud" nil nil nil nil nil nil ((timestamp . "2010-08-13") (notes . "(\"Fear, Uncertainty and Doubt -- i.e. scaremongering. Used for centuries by governments\" \"best known in industry as a core Microsoft tactic\" \"http://www.gnu.org/software/hurd/microkernel/fud.html\")")) nil]
["fufme" nil nil nil nil nil nil ((timestamp . "2004-10-06") (notes . "(\"http://www.onzin.nl/fufme/faq.html\")")) nil]
["fujiko-san" nil nil nil nil nil nil ((timestamp . "2003-12-23") (notes . "(\"beautiful but trips\")")) nil]
["fun" nil nil nil nil nil nil ((timestamp . "2012-06-13") (notes . "(\"noecho FUN is a Unix Nature\")")) nil]
["function" nil nil nil nil nil nil ((timestamp . "2002-09-07") (notes . "(\"try df..\" \"Also try: , require <Feature>\")")) nil]
["FunctionsForKeyLookup" nil nil nil nil nil nil ((timestamp . "2010-09-09") (notes . "(\"(info \\\"(elisp) Functions for Key Lookup\\\")\")")) nil]
["furry-cosplayer-p" nil nil nil nil nil nil ((timestamp . "2013-09-07") (notes . "(\"lisp (and lispargs (equal '(bremner) lispargs))\")")) nil]
["fuse" nil nil nil nil nil nil ((timestamp . "2007-11-10") (notes . "(\"Filesystem in USErspace, an implementation of a fully functional filesystem in a userspace program: http://fuse.sourceforge.net/\")")) nil]
["futon" nil nil nil nil nil nil ((timestamp . "2011-12-01") (notes . "(\"half terrible bed, half terrible couch\")")) nil]
["future" nil nil nil nil nil nil ((timestamp . "2002-11-22") (notes . "(\"redirect future-features\")")) nil]
["futuresmarket" nil nil nil nil nil nil ((timestamp . "2004-08-04") (notes . "(\"redirect informationmarket\")")) nil]
["fuzzy.el" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"at http://github.com/m2ym/fuzzy-el/\")")) nil]
["Fvwm95" nil nil nil nil nil nil ((timestamp . "2010-08-28") (notes . "(\"a hack based on fvwm2. It tries to emulate the good features of a well known product without bloating the regular fvwm code.\")")) nil]
["fwiu" nil nil nil nil nil nil ((timestamp . "2010-09-14") (notes . "(\"From What I Understand\")")) nil]
["fwiw" nil nil nil nil nil nil ((timestamp . "2004-04-28") (notes . "(\"For What It's Worth\")")) nil]
["FWVO" nil nil nil nil nil nil ((timestamp . "2007-04-25") (notes . "(\"for what value(s) of\")")) nil]
["FYI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for For Your Information\")")) nil]
["G" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Grin\")")) nil]
["g'rds" nil nil nil nil nil nil ((timestamp . "2013-07-04") (notes . "(\"noecho APOSTROPHIZE THEM!\")")) nil]
["g+" nil nil nil nil nil nil ((timestamp . "2013-06-27") (notes . "(\"\\\"it's fucking awful\\\" --nicferrier\" \"it's true, you know --jlf\")")) nil]
["g-f-l-m" nil nil nil nil nil nil ((timestamp . "2006-02-26") (notes . "(\"redirect gflm\")")) nil]
["G/C" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Garbage Collect\")")) nil]
["g/l" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"general ledger\")")) nil]
["gabba" nil nil nil nil nil nil ((timestamp . "2012-07-13") (notes . "(\"not pleasing to the ear\")")) nil]
["gabba-gabba-hey" nil nil nil nil nil nil ((timestamp . "2012-05-30") (notes . "(\"noecho gabba gabba we accept you we accept you one of us!\")")) nil]
["GAC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Get A Clue\")")) nil]
["gafc" nil nil nil nil nil nil ((timestamp . "2005-06-24") (notes . "(\"get a fine; clue\")")) nil]
["gaim" nil nil nil nil nil nil ((timestamp . "2007-05-26") (notes . "(\"at http://gaim.sourceforge.net\" \"a multi-protocol (Jabber, Yahoo!, MSN, AIM, and more) chat client\" \"now called Pidgin\")")) nil]
["gaj" nil nil nil nil nil nil ((timestamp . "2003-07-02") (notes . "(\"Get A Job :)\")")) nil]
["GAL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Get A Life\")")) nil]
["gale" nil nil nil nil nil nil ((timestamp . "2013-09-27") (notes . "(\"noecho \\\"BREEZE HIM!!\\\"\")")) nil]
["GaleonStackTraces" nil nil nil nil nil nil ((timestamp . "2004-08-19") (notes . "(\"http://bugzilla.gnome.org/getting-traces.cgi -- how to get stack traces\")")) nil]
["GAME" nil nil nil nil nil nil ((timestamp . "2006-12-20") (notes . "(\"noecho FISSION MAILED\")")) nil]
["Gandhi" nil nil nil nil nil nil ((timestamp . "2005-07-27") (notes . "(\"at http://www.orwell.ru/library/reviews/gandhi/english/e_gandhi\" \"at http://www.mkgandhi.org/index.htm\")")) nil]
["ganja" nil nil nil nil nil nil ((timestamp . "2007-02-02") (notes . "(\"skunk\")")) nil]
["gank" nil nil nil nil nil nil ((timestamp . "2003-02-17") (notes . "(\"to bogart\")")) nil]
["gap" nil nil nil nil nil nil ((timestamp . "2009-11-05") (notes . "(\"(info \\\"(elisp)Buffer Gap\\\")\")")) nil]
["garak" nil nil nil nil nil nil ((timestamp . "2009-04-26") (notes . "(\"redirect elim\")")) nil]
["gardeners" nil nil nil nil nil nil ((timestamp . "2013-10-05") (notes . "(\"noecho MULCH HIM!\")")) nil]
["gastropodist" nil nil nil nil nil nil ((timestamp . "2007-01-10") (notes . "(\"a person who hates and discriminates against snail. For example, pjb is such a person.\")")) nil]
["gawk" nil nil nil nil nil nil ((timestamp . "2005-11-02") (notes . "(\"the GNU implementation of AWK. Add some power to your command-line operations.\")")) nil]
["gay" nil nil nil nil nil nil ((timestamp . "2012-05-02") (notes . "(\"means \\\"joyful\\\", as someone may or may not tell you.\")")) nil]
["gazebo" nil nil nil nil nil nil ((timestamp . "2012-10-27") (notes . "(\"http://www.netfunny.com/rhf/jokes/98/Jul/gazebo.html\" \"http://gazebosim.org/wiki/InstallDRC Robot Simulator for the DARPA challenge\")")) nil]
["gazpacho" nil nil nil nil nil nil ((timestamp . "2006-08-09") (notes . "(\"a GUI editor for GTK+ application, it's written in python\" \"http://gazpacho.sicem.biz/\")")) nil]
["gazuga" nil nil nil nil nil nil ((timestamp . "2002-11-17") (notes . "(\"redirect ninjadroid\")")) nil]
["gbcod" nil nil nil nil nil nil ((timestamp . "2012-10-23") (notes . "(\"the Giant Blinking Cursor of Doom\")")) nil]
["gc" nil nil nil nil nil nil ((timestamp . "2011-04-29") (notes . "(\"garbage collector\")")) nil]
["gccsense" nil nil nil nil nil nil ((timestamp . "2010-04-26") (notes . "(\"a code completion tool based on gcc at http://cx4a.org/software/gccsense/\")")) nil]
["gccxml" nil nil nil nil nil nil ((timestamp . "2004-08-27") (notes . "(\"http://www.gccxml.org/HTML/Index.html, a mod to gcc that causes it to produce parse tree information as XML\")")) nil]
["gcl" nil nil nil nil nil nil ((timestamp . "2006-06-21") (notes . "(\"GNU Common Lisp at http://www.gnu.org/software/gcl/\")")) nil]
["gcs" nil nil nil nil nil nil ((timestamp . "2008-01-11") (notes . "(\"the GNU coding standards\" \"also http://www.gnu.org/prep/standards.html\")")) nil]
["gdb" nil nil nil nil nil nil ((timestamp . "2012-08-27") (notes . "(\"the GNU debugger\" \"available from http://www.gnu.org/s/gdb\" \"gdb intro for dummies at https://www.hackerschool.com/blog/5-learning-c-with-gdb\")")) nil]
["gdc" nil nil nil nil nil nil ((timestamp . "2012-04-18") (notes . "(\"A gcc frontend for the D programming language <https://bitbucket.org/goshawk/gdc/wiki/Home>\")")) nil]
["GDIAF" nil nil nil nil nil nil ((timestamp . "2012-07-26") (notes . "(\"short for Go Die In A Fire\")")) nil]
["geb" nil nil nil nil nil nil ((timestamp . "2006-04-19") (notes . "(\"the book _Goedel, Escher, Bach_ by Douglas R. Hofstadter\")")) nil]
["geda" nil nil nil nil nil nil ((timestamp . "2011-09-19") (notes . "(\"http://www.gpleda.org/\" \"a collection of GPL licensed electronic design automation tools\")")) nil]
["gedit" nil nil nil nil nil nil ((timestamp . "2011-06-17") (notes . "(\"for quitters\")")) nil]
["geek" nil nil nil nil nil nil ((timestamp . "2005-06-11") (notes . "(\"a sexual orientation according to alt.polyamory\" \"a person with an abiding, obsessive, self-effacing, even self-destroying love of something besides status\")")) nil]
["geek-code" nil nil nil nil nil nil ((timestamp . "2003-03-01") (notes . "(\"lisp (progn \\\"do you have a what is your geek code\\\" (geek-code))\")")) nil]
["geht's" nil nil nil nil nil nil ((timestamp . "2003-05-16") (notes . "(\"lisp (progn \\\"wie\\\" \\\"Es geht, danke\\\")\")")) nil]
["geiser" nil nil nil nil nil nil ((timestamp . "2013-01-04") (notes . "(\"a major mode for Scheme (Guile and Racket) <http://nongnu.org/geiser/>\")")) nil]
["general-fix" nil nil nil nil nil nil ((timestamp . "2012-12-01") (notes . "(\"redirect e1f-twb-jlf-offby1-ijp-nicferrier-fix\")")) nil]
["generalmen" nil nil nil nil nil nil ((timestamp . "2012-05-31") (notes . "(\"noecho I suppose it acceptable to carry on your duel, to the spoils goes the victor.\")")) nil]
["genie" nil nil nil nil nil nil ((timestamp . "2013-08-26") (notes . "(\"https://wiki.gnome.org/Genie\")")) nil]
["genode" nil nil nil nil nil nil ((timestamp . "2012-11-29") (notes . "(\"an operating-system architecture, see http://genode.org/about/index\")")) nil]
["gentleman" nil nil nil nil nil nil ((timestamp . "2013-05-11") (notes . "(\"redirect gentlemen\")")) nil]
["gentlemen" nil nil nil nil nil nil ((timestamp . "2013-11-18") (notes . "(\"noecho Gentlemen, you can't fight here! This is the War Room!\")")) nil]
["gentoo" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"A non-profit, fast-paced GNU distribution with a BSD-style package managment system.\" \"http://www.gentoo.org\" \"See #gentoo, possibly the largest channel on freenode, after #ubuntu\" \"a GUI file-manager\" \"a species of penguin found in the sub-antartic\" \"http://gentoo-wiki.com/TIP_install_programs_without_portage\" \"rice (http://funroll-loops.info/)\" \"a glorious waste of CPU cycles\")")) nil]
["gentoo-fix" nil nil nil nil nil nil ((timestamp . "2013-03-16") (notes . "(\"redirect archlinux-fix\")")) nil]
["gentoobie" nil nil nil nil nil nil ((timestamp . "2010-08-05") (notes . "(\"redirect ricers\")")) nil]
["geocities" nil nil nil nil nil nil ((timestamp . "2012-02-16") (notes . "(\"RIP geocities 1994 - 2009\")")) nil]
["geometry" nil nil nil nil nil nil ((timestamp . "2013-12-09") (notes . "(\"a package to configure the page setup and margins to be found under http://www.ctan.org/tex-archive/macros/latex/contrib/geometry\")")) nil]
["gerards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho DEPARDIEU HIM!!\")")) nil]
["GermanPhilosopher" nil nil nil nil nil nil ((timestamp . "2011-08-05") (notes . "(\"lisp (random-choose (notes \\\"dephil-phrases\\\"))\")")) nil]
["GeronimoPoppino" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?GeronimoPoppino\")")) nil]
["gervais-principle" nil nil nil nil nil nil ((timestamp . "2013-02-17") (notes . "(\"a highly recommended series of essays about power dynamics in the workplace, see http://www.ribbonfarm.com/the-gervais-principle/\")")) nil]
["Gerät" nil nil nil nil nil nil ((timestamp . "2003-06-02") (notes . "(\"redirect joint\")")) nil]
["gesundheit" nil nil nil nil nil nil ((timestamp . "2012-06-02") (notes . "(\"noecho SNEEZE HIM!!\")")) nil]
["get-off-my-lawn" nil nil nil nil nil nil ((timestamp . "2009-07-24") (notes . "(\"noecho Y'damn kids!\")")) nil]
["gethelp" nil nil nil nil nil nil ((timestamp . "2011-08-10") (notes . "(\"noecho Welcome to the channel. Please ask your question, someone may be able to help -- this channel is busiest during the day... stick around, be patient and happy hacking! Check out the channel topic for help with FAQs.\")")) nil]
["gf" nil nil nil nil nil nil ((timestamp . "2004-03-05") (notes . "(\"an abbrev for girlfriend\" \"an abbrev for generic function\")")) nil]
["GFDL" nil nil nil nil nil nil ((timestamp . "2008-06-17") (notes . "(\"the GNU Free Documentation License\" \"the license text: http://www.gnu.org/copyleft/fdl.html\" \"the GFDL howto: http://www.gnu.org/licenses/fdl-howto.html\")")) nil]
["GFDLCorpus" nil nil nil nil nil nil ((timestamp . "2004-06-30") (notes . "(\"the body of all material licensed under the GNU FDL. There is some hope that a true unified GFDL Corpus with a single set of editing and forking and reintegration rules might arise given removal of some obstacles and bringing in more ethical players like FSF or Creative Commons and an independent board.\")")) nil]
["gforth" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"redirect forth-mode\")")) nil]
["GFW" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"the Great Firewall of China.\" \"http://en.wikipedia.org/wiki/Golden_Shield_Project\")")) nil]
["GFWL" nil nil nil nil nil nil ((timestamp . "2012-06-01") (notes . "(\"Games For Windows Live\" \"basically Xbox Live for Windows ports of Xbox games\")")) nil]
["ggole" nil nil nil nil nil nil ((timestamp . "2010-12-26") (notes . "(\"a spoil-sport\" \"likes banning morons\")")) nil]
["GHC" nil nil nil nil nil nil ((timestamp . "2007-03-23") (notes . "(\"the Glasgow Haskell Compiler\")")) nil]
["ghdl" nil nil nil nil nil nil ((timestamp . "2011-10-12") (notes . "(\"an open-source simulator for the VHDL language.\" \"http://ghdl.free.fr\")")) nil]
["gherkins" nil nil nil nil nil nil ((timestamp . "2012-06-02") (notes . "(\"noecho PICKLE HIM!!\")")) nil]
["ghetto" nil nil nil nil nil nil ((timestamp . "2010-11-11") (notes . "(\"powershell\" \"life's hard in the ghetto\")")) nil]
["ghey" nil nil nil nil nil nil ((timestamp . "2007-11-30") (notes . "(\"a new word designed to let Americans who grew up saying \\\"that is so gay\\\" when they meant \\\"that sucks\\\" to not offend gay people, via the new spelling. \\\"that's ghey\\\" means \\\"it sucks (not that being gay is bad)\\\"\")")) nil]
["ghost" nil nil nil nil nil nil ((timestamp . "2004-03-19") (notes . "(\"boo!\")")) nil]
["GIF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Graphics Interchange Format\")")) nil]
["giggle" nil nil nil nil nil nil ((timestamp . "2010-07-21") (notes . "(\"noecho Tee-hee-hee [blushes]\")")) nil]
["giggles" nil nil nil nil nil nil ((timestamp . "2011-02-25") (notes . "(\"yer cute\" \"*giggle*\" \"tee-hee\" \"LOL im\")")) nil]
["GIGO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Garbage In, Garbage Out\")")) nil]
["gimp" nil nil nil nil nil nil ((timestamp . "2012-08-30") (notes . "(\"the GNU Image Manipulation Program\")")) nil]
["giorgian" nil nil nil nil nil nil ((timestamp . "2003-03-20") (notes . "(\"from italy\")")) nil]
["girds" nil nil nil nil nil nil ((timestamp . "2012-05-26") (notes . "(\"noecho DRESS HIM!!\")")) nil]
["girls" nil nil nil nil nil nil ((timestamp . "2014-01-23") (notes . "(\"noecho just wanna have fun\")")) nil]
["git-grep" nil nil nil nil nil nil ((timestamp . "2012-07-14") (notes . "(\"https://gist.github.com/1240799\")")) nil]
["git-mirror" nil nil nil nil nil nil ((timestamp . "2012-06-09") (notes . "(\"redirect gitmirror\")")) nil]
["git-rage" nil nil nil nil nil nil ((timestamp . "2012-04-27") (notes . "(\"a medical condition which causes the sufferer to fly into a blind rage at the merest mention of the git source control system. There is no known cure.\")")) nil]
["githate" nil nil nil nil nil nil ((timestamp . "2011-09-11") (notes . "(\"noecho Git hates JordiGH.\")")) nil]
["github" nil nil nil nil nil nil ((timestamp . "2012-04-23") (notes . "(\"basically like this: http://img.skitch.com/20080802-jkcndnqte2h1fu5mm8j4jji4ij.png\" \"has an awesome flash-based clipboard interface\" \"a bitbucket clone\")")) nil]
["gitlab" nil nil nil nil nil nil ((timestamp . "2013-07-27") (notes . "(\"a github-esque clone written in ruby.\")")) nil]
["gitmerge" nil nil nil nil nil nil ((timestamp . "2011-04-15") (notes . "(\"to use ediff as git's merge tool, see http://paste.lisp.org/display/120247\")")) nil]
["gitorious" nil nil nil nil nil nil ((timestamp . "2013-10-01") (notes . "(\"A open source infrastructure for hosting open source projects that use Git\" \"https://gitorious.org/\")")) nil]
["gits" nil nil nil nil nil nil ((timestamp . "2006-09-01") (notes . "(\"Ghost In The Shell\")")) nil]
["gitsum" nil nil nil nil nil nil ((timestamp . "2008-04-14") (notes . "(\"an interactive git commit interface\" \"http://github.com/chneukirchen/gitsum/tree/master\" \"a port of darcsum\")")) nil]
["gittip" nil nil nil nil nil nil ((timestamp . "2013-05-31") (notes . "(\"a gitfting website for programmers https://www.gittip.com\")")) nil]
["giuppi" nil nil nil nil nil nil ((timestamp . "2002-11-18") (notes . "(\"at http://www.acaro.org/~giuppi/\")")) nil]
["give-present" nil nil nil nil nil nil ((timestamp . "2013-12-24") (notes . "(\"lisp (format \\\"/me gives %s %s\\\" (if lispargs (stringify-symbol-list lispargs) nick) (random-choose-term \\\"presents\\\"))\")")) nil]
["GIYF" nil nil nil nil nil nil ((timestamp . "2004-08-04") (notes . "(\"Google Is Your Friend\")")) nil]
["gizzards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho CROP HIM!!\")")) nil]
["GJS" nil nil nil nil nil nil ((timestamp . "2012-02-23") (notes . "(\"Gerald J. Sussman, co-author of SICP and Scheme.\" \"the Lenin of Lisp and software engineering\")")) nil]
["gkrellm" nil nil nil nil nil nil ((timestamp . "2012-12-17") (notes . "(\"a GTK-based stacked monitor program that charts SMP CPUs, disks, load, active net interfaces, and internet connections; see http://freecode.com/projects/gkrellm\")")) nil]
["gkwyg" nil nil nil nil nil nil ((timestamp . "2007-09-26") (notes . "(\"god knows what you get\")")) nil]
["GLaDOS" nil nil nil nil nil nil ((timestamp . "2012-03-03") (notes . "(\"the homicidal AI from the video game Portal\" \"very concerned with the progress of science. You monster.\")")) nil]
["glands" nil nil nil nil nil nil ((timestamp . "2013-11-20") (notes . "(\"noecho SECRETE HIM!\")")) nil]
["glasstty" nil nil nil nil nil nil ((timestamp . "2012-11-08") (notes . "(\"a font that expresses your true inner hacker\" \"http://sensi.org/~svo/glasstty/\")")) nil]
["glfm" nil nil nil nil nil nil ((timestamp . "2009-01-07") (notes . "(\"redirect global-font-lock-mode\")")) nil]
["gloaf" nil nil nil nil nil nil ((timestamp . "2012-09-09") (notes . "(\"give less of a fuck\")")) nil]
["global" nil nil nil nil nil nil ((timestamp . "2005-08-14") (notes . "(\"the GNU GLOBAL source code tag system at http://www.gnu.org/software/global/\")")) nil]
["globbing" nil nil nil nil nil nil ((timestamp . "2010-05-26") (notes . "(\"(file-expand-wildcards \\\"*.el\\\")\" \"using a regexp: (directory-files \\\"~/elisp\\\" nil \\\"\\\\\\\\.el$\\\")\")")) nil]
["glol" nil nil nil nil nil nil ((timestamp . "2012-07-31") (notes . "(\"a GNU lol\")")) nil]
["glossaries" nil nil nil nil nil nil ((timestamp . "2015-12-06") (notes . "(\"a pack­age that sup­ports acronyms and mul­ti­ple glos­saries, and has pro­vi­sion for op­er­a­tion in sev­eral lan­guages. See http://www.ctan.org/pkg/glossaries\")")) nil]
["glterminal" nil nil nil nil nil nil ((timestamp . "2010-07-14") (notes . "(\"http://ldopa.net/2006/01/14/glterminal/\" \"updated for leopard at http://www.csh.rit.edu/~riffraff/GLTerminal.app.zip\")")) nil]
["gluglug" nil nil nil nil nil nil ((timestamp . "2013-12-20") (notes . "(\"RYF certified laptop\" \"https://www.fsf.org/news/gluglug-x60-laptop-now-certified-to-respect-your-freedom\")")) nil]
["gluttony" nil nil nil nil nil nil ((timestamp . "2011-05-01") (notes . "(\"lisp (eat (random-choose (list (random-choose (notes \\\"dooms\\\"))(random-choose (notes \\\"places\\\")))))\")")) nil]
["gmail-gnus-howto" nil nil nil nil nil nil ((timestamp . "2005-07-27") (notes . "(\"at http://www.pvv.ntnu.no/~terjeros/wiki/GnusGmail\")")) nil]
["gmp" nil nil nil nil nil nil ((timestamp . "2003-02-12") (notes . "(\"http://sources.redhat.com/ml/guile/2000-01/msg00356.html\")")) nil]
["GMTA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Great Minds Think Alike\")")) nil]
["GNA" nil nil nil nil nil nil ((timestamp . "2005-10-07") (notes . "(\"provides CVS, GNU Arch, and Subversion project management, as well as bug-tracker\" \"see https://gna.org/\")")) nil]
["Gnash" nil nil nil nil nil nil ((timestamp . "2006-01-10") (notes . "(\"a GNU Flash movie player\" \"http://www.gnu.org/software/gnash/\" \"based on GameSWF\")")) nil]
["gnat" nil nil nil nil nil nil ((timestamp . "2007-08-12") (notes . "(\"the GNU Ada compiler (a frontend to gcc)\")")) nil]
["GNewSense" nil nil nil nil nil nil ((timestamp . "2011-08-12") (notes . "(\"an Ubuntu-based distribution with all non-Free software removed, including binary blobs in the Linux kernel <http://www.gnewsense.org/>\" \"released when it's ready\")")) nil]
["gnewsense-beta" nil nil nil nil nil nil ((timestamp . "2012-10-14") (notes . "(\"http://beta.gnewsense.org/gnewsense-three/installer/current/\")")) nil]
["gni" nil nil nil nil nil nil ((timestamp . "2004-02-07") (notes . "(\"a (french) synonym for huh\")")) nil]
["gnip" nil nil nil nil nil nil ((timestamp . "2013-05-20") (notes . "(\"noecho gnop\")")) nil]
["gnome-startup" nil nil nil nil nil nil ((timestamp . "2002-09-04") (notes . "(\"see .gnomerc\")")) nil]
["gnome-translate" nil nil nil nil nil nil ((timestamp . "2006-01-08") (notes . "(\"is a GNOME interface to libtranslate. It can translate a text or web page between several natural languages, and it can automatically detect the source language as you type.\" \"free software, released under the terms of the GNU General Public License.\" \"a natural language translator.\" \"http://www.nongnu.org/libtranslate/gnome-translate/\")")) nil]
["GNOWSYS" nil nil nil nil nil nil ((timestamp . "2011-11-17") (notes . "(\"distributed network knowledge software\" \"at <http://www.gnu.org/software/gnowsys/>\")")) nil]
["GNP" nil nil nil nil nil nil ((timestamp . "2012-10-16") (notes . "(\"Gender Neutral Pronoun\")")) nil]
["gNS" nil nil nil nil nil nil ((timestamp . "2008-08-21") (notes . "(\"gNewSense, a 100% free GNU/Linux system\" \"available from http://www.gnewsense.org\")")) nil]
["gnsbugs" nil nil nil nil nil nil ((timestamp . "2011-05-30") (notes . "(\"noecho http://bugs.gnewsense.org/\")")) nil]
["gnu" nil nil nil nil nil nil ((timestamp . "2013-10-19") (notes . "(\"a project by the GNU project.\" \"on the web at http://gnu.org/\" \"the OS, and Linux just one of its kernels\" \"not UNIX\" \"cool\" \"awesome\" \"the best OS ever\" \"an antelope\" \"Gyeonsang National University\" \"the GNU project\" \"gool\")")) nil]
["gnu+linux" nil nil nil nil nil nil ((timestamp . "2009-04-18") (notes . "(\"http://www.gnu.org/gnu/linux-and-gnu.html\" \"A list of 100% free software GNU/Linux distributions: http://www.gnu.org/distros/free-distros.html\")")) nil]
["gnu-fish" nil nil nil nil nil nil ((timestamp . "2002-09-14") (notes . "(\"try thinkgeek.com\")")) nil]
["gnu-order" nil nil nil nil nil nil ((timestamp . "2002-09-14") (notes . "(\"http://www.gnu.org/order/order.html\" \"see gnu-fish\")")) nil]
["gnu-video" nil nil nil nil nil nil ((timestamp . "2012-03-23") (notes . "(\"http://audio-video-dev.gnu.org/\")")) nil]
["gnu/hurd" nil nil nil nil nil nil ((timestamp . "2011-09-14") (notes . "(\"redirect hurd\")")) nil]
["gnuards" nil nil nil nil nil nil ((timestamp . "2013-09-06") (notes . "(\"noecho EXPLAIN IN EXCRUCIATING DETAIL WHY GNU/LINUX IS THE PROPER TERM FOR THE OS COMMONLY REFERRED TO AS LINUX TO HIM!!!!!\")")) nil]
["gnuart" nil nil nil nil nil nil ((timestamp . "2002-10-24") (notes . "(\"http://gnuart.org/english/links.html\")")) nil]
["gnuboy" nil nil nil nil nil nil ((timestamp . "2002-11-09") (notes . "(\"game boy emulator for gnu/linux at http://gnuboy.unix-fu.org/\" \"gnuboy for MS Windows CE at http://www.geocities.com/gnuboyce/\")")) nil]
["gnucola" nil nil nil nil nil nil ((timestamp . "2012-10-23") (notes . "(\"http://web.media.mit.edu/~nvawter/opencola/\")")) nil]
["gnue" nil nil nil nil nil nil ((timestamp . "2003-01-16") (notes . "(\"at http://www.gnuenterprise.org/project/what.php\" \"a meta project of the GNU project consisting of a set of tools, a set of packages implementing an ERP framework, and a repository for Free Software business applications\" \"the developer's channel is located at #gnueneterprise on irc.freenode.net\")")) nil]
["gnufriends" nil nil nil nil nil nil ((timestamp . "2002-09-08") (notes . "(\"is http://www.gnu-friends.org/\")")) nil]
["gnulinux" nil nil nil nil nil nil ((timestamp . "2006-09-26") (notes . "(\"http://www.gnu.org/gnu/gnu-linux-faq.html\")")) nil]
["gnulinux-examples" nil nil nil nil nil nil ((timestamp . "2002-09-24") (notes . "(\"BBC, Google, Peru, Brazil, China, Germany, UK, India\")")) nil]
["gnulinuxfaq" nil nil nil nil nil nil ((timestamp . "2006-09-26") (notes . "(\"at http://www.gnu.org/gnu/gnu-linux-faq.html\")")) nil]
["gnumaku" nil nil nil nil nil nil ((timestamp . "2012-12-14") (notes . "(\"https://github.com/davexunit/gnumaku\" \"a guile based game-engine based on Allegro5.\")")) nil]
["gnumeric" nil nil nil nil nil nil ((timestamp . "2003-02-22") (notes . "(\"a excel clone http://www.gnome.org/projects/gnumeric/\")")) nil]
["gnumirror" nil nil nil nil nil nil ((timestamp . "2010-06-09") (notes . "(\"http://www.gnu.org/prep/ftp.html\")")) nil]
["gnuphone" nil nil nil nil nil nil ((timestamp . "2010-12-25") (notes . "(\"at http://jonathancarter.org/2008/09/23/totally-getting-a-gnuphone/\")")) nil]
["gnuplot" nil nil nil nil nil nil ((timestamp . "2012-12-07") (notes . "(\"a programmable, graphical plotting utility\" \"at http://gnuplot.info\" \"NOT a GNU project.\" \"at https://github.com/bruceravel/gnuplot-mode\")")) nil]
["gnupod" nil nil nil nil nil nil ((timestamp . "2006-04-13") (notes . "(\"http://www.gnu.org/software/gnupod , a CLI interface to the iPod\")")) nil]
["GnuProjects" nil nil nil nil nil nil ((timestamp . "2003-01-02") (notes . "(\"http://savannah.gnu.org/\")")) nil]
["gnurcissistic" nil nil nil nil nil nil ((timestamp . "2012-08-30") (notes . "(\"noecho people who try to endorse gnu and gpl through narcissistic-like tactics\")")) nil]
["gnus-fork-p" nil nil nil nil nil nil ((timestamp . "2013-08-04") (notes . "(\"noecho yes, but with less features\")")) nil]
["gnus-ldap" nil nil nil nil nil nil ((timestamp . "2002-09-06") (notes . "(\"no such thing yet\")")) nil]
["gnus-lost-mail" nil nil nil nil nil nil ((timestamp . "2002-09-06") (notes . "(\"send a mail to self with keyword dfiop and then grep ytr mail directory for dfiop ...\")")) nil]
["gnus-manual" nil nil nil nil nil nil ((timestamp . "2008-01-27") (notes . "(\"how not to write a manual\")")) nil]
["gnus-show-all-groups" nil nil nil nil nil nil ((timestamp . "2002-09-10") (notes . "(\"C-u 9 L and then press u on the new groups\")")) nil]
["GNUs-trick-or-treat-at-Windows-8-launch" nil nil nil nil nil nil ((timestamp . "2012-10-27") (notes . "(\"http://www.fsf.org/blogs/community/gnus-trick-or-treat-at-windows-8-launch\")")) nil]
["gnus-use-full-window" nil nil nil nil nil nil ((timestamp . "2002-11-27") (notes . "(\"the variable that controls wether Gnus will take over the entire frame or not. Set it to nil to make Gnus coexist peacefully with weird window configurations.\")")) nil]
["gnus-wide-reply" nil nil nil nil nil nil ((timestamp . "2002-09-04") (notes . "(\"For \\\"really\\\" wide-reply, S W C-t or F C-t\")")) nil]
["gnuserv" nil nil nil nil nil nil ((timestamp . "2002-11-17") (notes . "(\"redirect gnuclient\")")) nil]
["GnusFaq" nil nil nil nil nil nil ((timestamp . "2003-01-12") (notes . "(\"at http://my.gnus.org/FAQ/\")")) nil]
["GnusOldMessages" nil nil nil nil nil nil ((timestamp . "2003-02-14") (notes . "(\"Press C-u RET on the group, or M-g inside the group\")")) nil]
["gnusrefcard" nil nil nil nil nil nil ((timestamp . "2003-08-20") (notes . "(\"refcard.tex in gnus/texi\" \"http://ifa.au.dk/~harder/refcard.pdf\")")) nil]
["GnusRot13" nil nil nil nil nil nil ((timestamp . "2013-10-07") (notes . "(\"Use (define-key message-mode-map \\\"\\\\C-c\\\\C-r\\\" 'undefined) to disable the rot13 key-combo.\")")) nil]
["gnutls-cli" nil nil nil nil nil nil ((timestamp . "2008-09-30") (notes . "(\"http://www.gnu.org/software/gnutls/\")")) nil]
["GnuWin" nil nil nil nil nil nil ((timestamp . "2011-07-21") (notes . "(\"a loss\" \"at http://gnuwin32.sourceforge.net/\")")) nil]
["gnuzilla" nil nil nil nil nil nil ((timestamp . "2009-09-27") (notes . "(\"gnuzilla is the GNU version of the Mozilla suite, and GNU IceCat is the GNU version of the Firefox browser. Its main advantage is an ethical one: it is entirely free software.\" \"http://gnu.org/s/gnuzilla/\")")) nil]
["Go" nil nil nil nil nil nil ((timestamp . "2014-01-14") (notes . "(\"the Google Go programming language\")")) nil]
["go4" nil nil nil nil nil nil ((timestamp . "2013-07-21") (notes . "(\"go4 has a plan for you\")")) nil]
["goahead" nil nil nil nil nil nil ((timestamp . "2011-08-10") (notes . "(\"noecho Go right ahead and ask your question if you have one. No one will think you're rude for hopping right in with your question. If someone knows the answer, they'll answer when they see your question.\")")) nil]
["goal" nil nil nil nil nil nil ((timestamp . "2013-02-17") (notes . "(\"lisp (random-choose '(\\\"The crowd goes wild!\\\" \\\"The fans start to riot.\\\"))\")")) nil]
["goats" nil nil nil nil nil nil ((timestamp . "2014-01-02") (notes . "(\"noecho CHEESE HIM!!\")")) nil]
["goatse" nil nil nil nil nil nil ((timestamp . "2012-07-17") (notes . "(\"if you don't know, you haven't been on the internet long enough (and I envy you)\" \"totally not safe for work. or if you are impressionable. just don't look it's disgustingly awful.\" \"the above is not a joke, we are serious, just don't do it\")")) nil]
["goatse-prostate-license" nil nil nil nil nil nil ((timestamp . "2013-05-03") (notes . "(\"https://jagoffhour.appspot.com/goatse-prostate-license?licenseonly=yup\")")) nil]
["gobo" nil nil nil nil nil nil ((timestamp . "2004-12-20") (notes . "(\"redirect gobolinux\")")) nil]
["gobolinux" nil nil nil nil nil nil ((timestamp . "2012-12-03") (notes . "(\"A distribution which uses an abnormal file system layout at http://www.gobolinux.org/\")")) nil]
["god" nil nil nil nil nil nil ((timestamp . "2006-07-30") (notes . "(\"Larsi\" \"the guy who Wrote in Lisp Code at http://www.songworm.com/db/songworm-parody/EternalFlame.html\" \"not\")")) nil]
["god-mode" nil nil nil nil nil nil ((timestamp . "2013-08-11") (notes . "(\"https://github.com/chrisdone/god-mode\")")) nil]
["GodKing" nil nil nil nil nil nil ((timestamp . "2003-03-15") (notes . "(\"at http://www.etrumeus.com/ferment/GodKing\")")) nil]
["gods" nil nil nil nil nil nil ((timestamp . "2013-09-26") (notes . "(\"noecho SMITE HIM!!\")")) nil]
["godwin" nil nil nil nil nil nil ((timestamp . "2013-04-22") (notes . "(\"Godwin's law: http://en.wikipedia.org/wiki/Godwin%27s_law\")")) nil]
["GOG" nil nil nil nil nil nil ((timestamp . "2011-10-16") (notes . "(\"Good Old Games http://www.gog.com/\")")) nil]
["goggles" nil nil nil nil nil nil ((timestamp . "2010-07-30") (notes . "(\"useless, they do nothing\")")) nil]
["gohufont" nil nil nil nil nil nil ((timestamp . "2011-05-28") (notes . "(\"http://font.gohu.eu/\")")) nil]
["golden-ratio" nil nil nil nil nil nil ((timestamp . "2013-05-30") (notes . "(\"a package that rebalances windows automatically at https://github.com/roman/golden-ratio.el\")")) nil]
["goldenrule" nil nil nil nil nil nil ((timestamp . "2006-01-03") (notes . "(\"Treat others as you want to be treated.\")")) nil]
["golfclap" nil nil nil nil nil nil ((timestamp . "2012-06-20") (notes . "(\"noecho /me claps slowly, clearly unimpressed.\")")) nil]
["GOML" nil nil nil nil nil nil ((timestamp . "2011-12-05") (notes . "(\"Get off my lawn! Damn kids...\")")) nil]
["gong" nil nil nil nil nil nil ((timestamp . "2011-04-08") (notes . "(\"noecho /me walks around, sounding the big Troll Gong\")")) nil]
["GOO" nil nil nil nil nil nil ((timestamp . "2005-02-23") (notes . "(\"a dynamic, type-based, object-oriented language in the same family as Dylan and Scheme.\" \"the GOO Website at http://www.googoogaga.org/\" \"provides goo-font-lock.el - a modified font-lock.el that maps parenthesis (or block) nesting depth to different font-lock highlighting.\" \"see: googoogaga\")")) nil]
["good" nil nil nil nil nil nil ((timestamp . "2004-12-06") (notes . "(\"noecho Heh, knew it.\")")) nil]
["goodbugreport" nil nil nil nil nil nil ((timestamp . "2010-05-24") (notes . "(\"every good bug report has three parts: what you did, what you expected to happen, and what actually happened. If you omit any of these parts, it becomes very difficult to help you.\")")) nil]
["goodfonts" nil nil nil nil nil nil ((timestamp . "2011-05-22") (notes . "(\"redirect fonts\")")) nil]
["goodnight" nil nil nil nil nil nil ((timestamp . "2003-05-18") (notes . "(\"directonly noecho I'll see you in my dreams, sweetie.\")")) nil]
["goodquestion" nil nil nil nil nil nil ((timestamp . "2007-03-02") (notes . "(\"http://www.xs4all.nl/~hanb/documents/topic.html#questions\")")) nil]
["goog" nil nil nil nil nil nil ((timestamp . "2008-09-04") (notes . "(\"noecho OH BRAVE GOOGLE WORLD\")")) nil]
["Google" nil nil nil nil nil nil ((timestamp . "2009-04-16") (notes . "(\"not always a good thing.\")")) nil]
["Google+" nil nil nil nil nil nil ((timestamp . "2011-10-09") (notes . "(\"an identity network\")")) nil]
["google:" nil nil nil nil nil nil ((timestamp . "2002-11-12") (notes . "(\"redirect google\")")) nil]
["GoogleInternational" nil nil nil nil nil nil ((timestamp . "2003-05-16") (notes . "(\"Links are at http://c.asselin.free.fr/french/googleworldwide.htm\")")) nil]
["googlizer" nil nil nil nil nil nil ((timestamp . "2005-01-12") (notes . "(\"Clicking this icon googles for whatever is in the X clipboard\")")) nil]
["goops" nil nil nil nil nil nil ((timestamp . "2010-03-10") (notes . "(\"http://www.gnu.org/software/goops/goops.html\" \"Briefly stated, the GOOPS extension gives the user a full object oriented system with multiple inheritance and generic functions with multi-method dispatch. Furthermore, the implementation relies on a true meta object protocol, in the spirit of the one defined for CLOS.\")")) nil]
["gop" nil nil nil nil nil nil ((timestamp . "2012-09-05") (notes . "(\"Grand Old Party, a name for the Republican Party in the USA\")")) nil]
["gospel" nil nil nil nil nil nil ((timestamp . "2002-09-15") (notes . "(\"http://www.gnu.org/fun/jokes/gospel.html\")")) nil]
["GospelOfTux" nil nil nil nil nil nil ((timestamp . "2004-12-14") (notes . "(\"at http://www.ao.com/~regan/penguins/tux.html\")")) nil]
["gouda" nil nil nil nil nil nil ((timestamp . "2012-05-17") (notes . "(\"noecho CHEESE HIM!!\")")) nil]
["gouraud" nil nil nil nil nil nil ((timestamp . "2012-05-17") (notes . "(\"noecho SHADE HIM!!\")")) nil]
["gource" nil nil nil nil nil nil ((timestamp . "2011-03-04") (notes . "(\"http://code.google.com/p/gource/\")")) nil]
["gourds" nil nil nil nil nil nil ((timestamp . "2012-05-19") (notes . "(\"noecho SQUEEZE HIM!!\")")) nil]
["gphoto" nil nil nil nil nil nil ((timestamp . "2008-05-28") (notes . "(\"a library that interfaces with digital cameras, allowing retrivial of photos\")")) nil]
["gpl" nil nil nil nil nil nil ((timestamp . "2009-01-25") (notes . "(\"the GNU General Public License\" \"the license text: http://www.gnu.org/licenses/gpl.html\" \"the GPL FAQ: http://www.gnu.org/licenses/gpl-faq.html\")")) nil]
["gpl-faq" nil nil nil nil nil nil ((timestamp . "2006-09-24") (notes . "(\"http://www.gnu.org/licenses/gpl-faq.html\")")) nil]
["GPLdiff" nil nil nil nil nil nil ((timestamp . "2006-09-26") (notes . "(\"at http://www.groklaw.net/article.php?story=20060118155841115\")")) nil]
["gplfaq" nil nil nil nil nil nil ((timestamp . "2006-09-24") (notes . "(\"redirect gpl-faq\")")) nil]
["GplFlashInstallation" nil nil nil nil nil nil ((timestamp . "2003-01-26") (notes . "(\"at http://gnufans.net/~deego/DeegoWiki/GplFlashInstallation.html\")")) nil]
["gplv2" nil nil nil nil nil nil ((timestamp . "2010-06-24") (notes . "(\"a copyleft free software license\" \"http://www.gnu.org/licenses/gpl-2.0.html\" \"published in 1991 but was replaced by GPLv3 in 2007\")")) nil]
["GPLv3" nil nil nil nil nil nil ((timestamp . "2010-06-24") (notes . "(\"version 3 of the GNU General Public License (GPL)\" \"see ,GPL\" \"http://gplv3.fsf.org/ for archive of drafts and revisions\")")) nil]
["gpp" nil nil nil nil nil nil ((timestamp . "2007-06-01") (notes . "(\"http://en.nothingisreal.com/wiki/GPP\")")) nil]
["GPU" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Graphics Processing Unit\")")) nil]
["grads" nil nil nil nil nil nil ((timestamp . "2012-05-26") (notes . "(\"noecho FAIL HIM!\")")) nil]
["grammarnazi" nil nil nil nil nil nil ((timestamp . "2013-07-05") (notes . "(\"http://i.imgur.com/5bsRKa9.png\")")) nil]
["grandy" nil nil nil nil nil nil ((timestamp . "2011-10-10") (notes . "(\"someone who admits to being a n00b\" \"apparently a n00b\")")) nil]
["GraphEditors" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?GraphEditors\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?GraphEditors\")")) nil]
["graphics" nil nil nil nil nil nil ((timestamp . "2009-03-01") (notes . "(\"http://www.tlhiv.org/graphics/\")")) nil]
["graphicx" nil nil nil nil nil nil ((timestamp . "2006-05-31") (notes . "(\"a package to import graphics (bitmapped and vector) into latex documents\" \"A good introduction by Patrick Daly at http://tex.loria.fr/graph-pack/grf/grf.pdf\")")) nil]
["graphviz" nil nil nil nil nil nil ((timestamp . "2006-10-31") (notes . "(\"a graph visualisation tool\" \"has a major-mode at http://users.skynet.be/ppareit/projects/graphviz-dot-mode/graphviz-dot-mode.html\" \"at http://www.research.att.com/sw/tools/graphviz/\" \"(now) free as in libre.\")")) nil]
["grass" nil nil nil nil nil nil ((timestamp . "2003-06-02") (notes . "(\"redirect joint\")")) nil]
["GRAW" nil nil nil nil nil nil ((timestamp . "2013-10-21") (notes . "(\"Ghost Recon: Advanced Warrior\")")) nil]
["greasemonkey" nil nil nil nil nil nil ((timestamp . "2005-12-11") (notes . "(\" a firefox extension which lets you change webpage behaviour; see  http://greasemonkey.mozdev.org/\" \"http://diveintomark.org/projects/butler/butler.user.js\")")) nil]
["grebfix" nil nil nil nil nil nil ((timestamp . "2009-02-20") (notes . "(\"make a macro, name it and bind it to a key.\" \"see keyboardmacro, basickeyboardmacro, savekeyboardmacro ...\")")) nil]
["greboidefix" nil nil nil nil nil nil ((timestamp . "2008-12-03") (notes . "(\"make a macro name it and bind it to a key\")")) nil]
["greenspun" nil nil nil nil nil nil ((timestamp . "2002-09-17") (notes . "(\"any sufficiently complicated C or Fortran program contains an ad hoc informally-specified bug-ridden slow implementation of half of Common Lisp\")")) nil]
["greenspun's-tenth-rule-of-programming" nil nil nil nil nil nil ((timestamp . "2002-09-17") (notes . "(\"Any sufficiently complicated C or Fortran program contains an ad hoc informally-specified bug-ridden slow implementation of half of Common Lisp.\")")) nil]
["greetings" nil nil nil nil nil nil ((timestamp . "2012-11-02") (notes . "(\"redirect hello\")")) nil]
["greetings-list" nil nil nil nil nil nil ((timestamp . "2013-05-05") (notes . "(\"Hi %s.\" \"¡Hola %s!\" \"こんにちは%sさん。元気？\" \"Dobrý den %s.\" \"Hej %s!\" \"Dzień dobry %s.\" \"Здравствуйте %s!\" \"Dobrý deň %s.\" \"Chào bạn %s.\" \"안녕하세요 %s)\" \"%s, fit like\" \"Hail Satan!!\" \"Olá %s!\" \"printf (\\\"Hello, %s\\\\n\\\");\" \"%s שלום\" \"∀ p ∈ {%s} • hello p □\" \"Hallo, %s!\" \"Grüezi, %s!\" \"Servus, %s!\" \"Cześć\" \"Salvete %s!\")")) nil]
["gremlins" nil nil nil nil nil nil ((timestamp . "2012-04-23") (notes . "(\"noecho I warned you not to feed the after midnight.\")")) nil]
["gridgame" nil nil nil nil nil nil ((timestamp . "2005-04-08") (notes . "(\"at http://www.columbia.edu/~chc18/gridgame.swf\")")) nil]
["grimrepl" nil nil nil nil nil nil ((timestamp . "2013-03-16") (notes . "(\"the grim REPL'er\")")) nil]
["grin" nil nil nil nil nil nil ((timestamp . "2012-07-14") (notes . "(\"http://pypi.python.org/pypi/grin\" \"easier to stomach than ack\")")) nil]
["grinding" nil nil nil nil nil nil ((timestamp . "2013-11-28") (notes . "(\"a Bad Thing <http://paste.lisp.org/+308L>\")")) nil]
["grizzl" nil nil nil nil nil nil ((timestamp . "2013-10-22") (notes . "(\"an ido-like fuzzy matcher that requires creation of an index first\")")) nil]
["grml" nil nil nil nil nil nil ((timestamp . "2010-12-16") (notes . "(\"a Debian-based live distro aimed at sysadmins and tty users <http://grml.org>, #grml\")")) nil]
["grms" nil nil nil nil nil nil ((timestamp . "2006-04-12") (notes . "(\"a non-free software detector written for the Portage package manager system\" \"Portage is Gentoo's package manager system of choice\" \"still under development\" \"written by holzplatten\" \"current version: grms 0.2\")")) nil]
["groan" nil nil nil nil nil nil ((timestamp . "2005-03-16") (notes . "(\"noecho wah wah wahhhhhh\")")) nil]
["grog" nil nil nil nil nil nil ((timestamp . "2012-09-19") (notes . "(\"The Scumm Bar Grog contains one or more of the following: Kerosene, propylene glycol, artificial sweeteners, sulphuric acid, rum, acetone, red dye no2, Scumm, axle grease, battery acid and/or pepperoni.\")")) nil]
["grok" nil nil nil nil nil nil ((timestamp . "2013-09-20") (notes . "(\"http://code.google.com/p/semicomplete/wiki/Grok\")")) nil]
["grokdoc" nil nil nil nil nil nil ((timestamp . "2004-06-14") (notes . "(\"GNU/Linux docs/study in a wiki, for and by newbies, at http://www.grokdoc.net/\")")) nil]
["group-hug" nil nil nil nil nil nil ((timestamp . "2012-12-09") (notes . "(\"lisp \\\"/me throws its arms around everyone and leers creepily\\\"\")")) nil]
["growisofs" nil nil nil nil nil nil ((timestamp . "2004-11-27") (notes . "(\"at http://fy.chalmers.se/~appro/linux/DVD+RW/\")")) nil]
["grub" nil nil nil nil nil nil ((timestamp . "2006-02-22") (notes . "(\"The GRand Unified Bootloader, an alternative to lilo , and rocks\" \"Also try the help of good folks in #hurd for help on grub\" \"http://www.gnu.org/software/grub/\" \"http://www.gnu.org/manual/grub/index.html\")")) nil]
["grub-savannah" nil nil nil nil nil nil ((timestamp . "2002-09-21") (notes . "(\"http://savannah.gnu.org/projects/grub/\")")) nil]
["grue" nil nil nil nil nil nil ((timestamp . "2003-06-05") (notes . "(\"a sinister, lurking presence in the dark places of the earth. Its favorite diet is either adventurers or enchanters, but its insatiable appetite is tempered by its horrible fear of light.\" \"http://perp.com/~grue/what.html\")")) nil]
["grunt" nil nil nil nil nil nil ((timestamp . "2012-09-20") (notes . "(\"a make like tool for javascript https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\")")) nil]
["GSD" nil nil nil nil nil nil ((timestamp . "2012-11-19") (notes . "(\"Get Shit Done.\")")) nil]
["gsfy" nil nil nil nil nil nil ((timestamp . "2013-02-19") (notes . "(\"Go See For Yourself (TM)\")")) nil]
["GSoC" nil nil nil nil nil nil ((timestamp . "2011-11-16") (notes . "(\"the Google Summer of Code, a low-cost hemispherist PR mechanism to make Google look good by paying students a pittance to work on clearly-defined improvements on existing open-source projects.\")")) nil]
["gspi" nil nil nil nil nil nil ((timestamp . "2003-08-15") (notes . "(\"The GNOME Assistive Technologies Service Provider Interface at http://delysid.org/gspi.html\")")) nil]
["gst" nil nil nil nil nil nil ((timestamp . "2010-10-28") (notes . "(\"Goods and Services Tax\")")) nil]
["GTB" nil nil nil nil nil nil ((timestamp . "2004-05-08") (notes . "(\"noecho Go To Bed\")")) nil]
["GTD" nil nil nil nil nil nil ((timestamp . "2007-10-28") (notes . "(\"Getting Things Done, a buzzword book about time management (see ,,planner, ,,org)\")")) nil]
["GTFO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Get The Fuck Out\")")) nil]
["gtfofsbot" nil nil nil nil nil nil ((timestamp . "2012-06-07") (notes . "(\"noecho /part\")")) nil]
["gtg" nil nil nil nil nil nil ((timestamp . "2004-06-23") (notes . "(\"got to go\")")) nil]
["gtk-server" nil nil nil nil nil nil ((timestamp . "2003-12-24") (notes . "(\"http://www.turtle.dds.nl/gtk-server/\")")) nil]
["gtypist" nil nil nil nil nil nil ((timestamp . "2011-02-07") (notes . "(\"GNU Typist, an interactive typing tutor program at http://www.gnu.org/software/gtypist\")")) nil]
["guard" nil nil nil nil nil nil ((timestamp . "2011-08-15") (notes . "(\"noecho FIRE AT WILL!\")")) nil]
["guard-fix" nil nil nil nil nil nil ((timestamp . "2013-04-27") (notes . "(\"most problems can be solved by surreal puns\")")) nil]
["guards" nil nil nil nil nil nil ((timestamp . "2011-04-11") (notes . "(\"noecho SEIZE HIM!!\")")) nil]
["guds" nil nil nil nil nil nil ((timestamp . "2013-11-20") (notes . "(\"noecho BREAKPOINT HIM!!!\")")) nil]
["gug" nil nil nil nil nil nil ((timestamp . "2010-08-28") (notes . "(\"generic utc greeting\")")) nil]
["GUI" nil nil nil nil nil nil ((timestamp . "2007-02-10") (notes . "(\"short for Graphical User Interface\")")) nil]
["guidekey" nil nil nil nil nil nil ((timestamp . "2013-09-09") (notes . "(\"A way to learn key sequences. https://github.com/kbkbkbkb1/guide-key\")")) nil]
["guile-gnome" nil nil nil nil nil nil ((timestamp . "2002-09-18") (notes . "(\"Example at http://superk.physics.sunysb.edu/~bviren/play/gtkin/gtkin.scm\")")) nil]
["guile-projects" nil nil nil nil nil nil ((timestamp . "2002-09-11") (notes . "(\"http://www.glug.org/projects/index.html\")")) nil]
["guile-wishlist" nil nil nil nil nil nil ((timestamp . "2002-09-11") (notes . "(\"http://home.thezone.net/~gharvey/guile/guile-wishlist.html\" \"http://www.red-bean.com/~jimb/guile/\")")) nil]
["guile-wm" nil nil nil nil nil nil ((timestamp . "2013-11-12") (notes . "(\"a framework for creating an X window manager (or any other X application, really) and a set of useful modules designed for that purpose.\" \"https://github.com/mwitmer/guile-wm\")")) nil]
["GuileProjects" nil nil nil nil nil nil ((timestamp . "2003-02-13") (notes . "(\"http://www.glug.org/projects/list.html\")")) nil]
["guinness" nil nil nil nil nil nil ((timestamp . "2003-06-06") (notes . "(\"GUINNESS!\" \"GUINNESS is GOOD for YOU\" \"a dark, viscous nectar of the gods\")")) nil]
["Guix" nil nil nil nil nil nil ((timestamp . "2012-11-24") (notes . "(\"at http://www.gnu.org/software/guix/\" \"pronounced \\\"geeks\\\".\" \"Guile + Nix.\")")) nil]
["gull" nil nil nil nil nil nil ((timestamp . "2008-06-06") (notes . "(\"Groupe d'Utilisateurs de Logiciels Libres\")")) nil]
["gullible" nil nil nil nil nil nil ((timestamp . "2008-06-12") (notes . "(\"not in the dictionary\")")) nil]
["gummi-bears" nil nil nil nil nil nil ((timestamp . "2005-06-23") (notes . "(\"yummy bears\")")) nil]
["gun" nil nil nil nil nil nil ((timestamp . "2013-10-03") (notes . "(\"noecho \\\"Time to get a gun. I could afford one, if I did a little less drinking.\\\" -- Fred Eaglesmith\")")) nil]
["gunmetal" nil nil nil nil nil nil ((timestamp . "2008-03-28") (notes . "(\"a color-theme by dto\" \"available from http://dto.mamalala.org/eon/gunmetal.el\")")) nil]
["GUST" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"the Polish TeX Users Group (pl: Polska Grupa U\\277ytkownik\\363w Systemu TeX): http://www.gust.org.pl/\")")) nil]
["guthub" nil nil nil nil nil nil ((timestamp . "2012-04-23") (notes . "(\"redirect github\")")) nil]
["guys" nil nil nil nil nil nil ((timestamp . "2011-04-20") (notes . "(\"redirect anyone\")")) nil]
["gv" nil nil nil nil nil nil ((timestamp . "2004-11-27") (notes . "(\"how you invoke ghostview, a ghostscript frontend to display postscript files and simple pdf files.\")")) nil]
["gwards" nil nil nil nil nil nil ((timestamp . "2012-09-13") (notes . "(\"noecho THRASH HIM!!!!! \\\\m/\")")) nil]
["gwb-fix" nil nil nil nil nil nil ((timestamp . "2012-02-24") (notes . "(\"bomb a country starting with I\")")) nil]
["gwene" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"http://gwene.org/, a rss/atom to news gateway.\" \"...now with live commenting!\")")) nil]
["gyob" nil nil nil nil nil nil ((timestamp . "2012-02-24") (notes . "(\"get your own blog\")")) nil]
["GZigZag" nil nil nil nil nil nil ((timestamp . "2003-01-25") (notes . "(\"renamed to Gzz (which see) due to trademark issues\")")) nil]
["Gzz" nil nil nil nil nil nil ((timestamp . "2003-01-25") (notes . "(\"at http://www.nongnu.org/gzz/\")")) nil]
["H-bomb" nil nil nil nil nil nil ((timestamp . "2014-01-17") (notes . "(\"http://www.lepoint.fr/c-est-arrive-aujourd-hui/17-janvier-1966-francisco-simo-en-train-de-pecher-la-crevette-recoit-une-bombe-h-sur-la-tete-17-01-2012-1419923_494.php Source:French-National-Newspaper\")")) nil]
["h-node" nil nil nil nil nil nil ((timestamp . "2012-12-08") (notes . "(\"a database of hardware that supports free software http://h-node.org\")")) nil]
["H1B" nil nil nil nil nil nil ((timestamp . "2007-10-23") (notes . "(\"an American temporary work visa.\")")) nil]
["h2g2" nil nil nil nil nil nil ((timestamp . "2003-06-17") (notes . "(\"hitch hikers guide to the galaxy\" \"actually http://www.h2g2.com\" \"written by douglas adams http://www.douglasadams.com\")")) nil]
["H3N8" nil nil nil nil nil nil ((timestamp . "2012-07-31") (notes . "(\"new seal virus that could affect humans http://www.bbc.co.uk/news/health-19062531\")")) nil]
["HA" nil nil nil nil nil nil ((timestamp . "2008-05-29") (notes . "(\"High Availability -- that is, servers that Never Go Down. See also Big Iron\")")) nil]
["HAARP" nil nil nil nil nil nil ((timestamp . "2011-08-27") (notes . "(\"High Frequency Active Auroral Research Program :: http://en.wikipedia.org/wiki/High_Frequency_Active_Auroral_Research_Program\")")) nil]
["hack" nil nil nil nil nil nil ((timestamp . "2010-09-02") (notes . "(\"wack\")")) nil]
["hacker" nil nil nil nil nil nil ((timestamp . "2012-07-26") (notes . "(\"\\\"computer enthusiast\\\", not \\\"computer-using criminal\\\"\" \"see http://www.catb.org/~esr/faqs/hacker-howto.html#what_is\" \"see also http://www.tf.hut.fi/cgi-bin/jargon?search=hacker\" \"not cracker\" \"http://www.gnu.org/philosophy/words-to-avoid.html#Hacker\" \"not cracker, so journalist and politics have to get courses at the MIT and some Philosophical school because :: \\\"False words are not only evil in themselves, but they infect the soul with evil.\\\" --Plato\")")) nil]
["hackernews" nil nil nil nil nil nil ((timestamp . "2013-08-08") (notes . "(\"redirect hn\")")) nil]
["hackers" nil nil nil nil nil nil ((timestamp . "2005-08-10") (notes . "(\"a book by Steven Levy, \\\"Heroes of the Computer Revolution\\\"\")")) nil]
["hackerspace" nil nil nil nil nil nil ((timestamp . "2014-01-25") (notes . "(\"https://www.youtube.com/watch?v=WkiX7R1-kaY#t=199\" \"aplace that hackers can congregate in real life.\")")) nil]
["hacking" nil nil nil nil nil nil ((timestamp . "2003-11-22") (notes . "(\"programming; making something do what it wasn't meant to do; having fun at that; not to be confused with Cracking\")")) nil]
["hadoop" nil nil nil nil nil nil ((timestamp . "2011-04-22") (notes . "(\"http://hadoop.apache.org/ (open-source software for reliable, scalable, distributed computing running on apache)\")")) nil]
["hail" nil nil nil nil nil nil ((timestamp . "2011-10-21") (notes . "(\"noecho hail satan\")")) nil]
["HAL" nil nil nil nil nil nil ((timestamp . "2012-11-05") (notes . "(\"noecho I'm better than that buggy pile of junk.\")")) nil]
["hallo" nil nil nil nil nil nil ((timestamp . "2003-05-16") (notes . "(\"lisp (format \\\"Guten Tag, %s! Wie geht's?\\\" nick)\")")) nil]
["haltingproblem" nil nil nil nil nil nil ((timestamp . "2010-01-29") (notes . "(\"almost solved...check back later\")")) nil]
["halyards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho HOIST HIM!!\")")) nil]
["ham" nil nil nil nil nil nil ((timestamp . "2003-11-02") (notes . "(\"non-spam\")")) nil]
["hamdahl" nil nil nil nil nil nil ((timestamp . "2010-07-12") (notes . "(\"noecho Hamdahl's law: if you can have more bacon, you must have more bacon.\")")) nil]
["haml" nil nil nil nil nil nil ((timestamp . "2012-08-06") (notes . "(\"HTML Abstraction Markup Language. http://haml.info/\" \"for the same thing but for CSS, see SASS http://sass-lang.com/\")")) nil]
["hamlet" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"noecho Get thee to a tutorial'y!!\")")) nil]
["hamming-distance" nil nil nil nil nil nil ((timestamp . "2012-09-02") (notes . "(\"the number of days until easter\")")) nil]
["HanB" nil nil nil nil nil nil ((timestamp . "2003-01-02") (notes . "(\"at http://www.xs4all.nl/~hanb/\")")) nil]
["HAND" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Have A Nice Day\")")) nil]
["handheldCar" nil nil nil nil nil nil ((timestamp . "2013-05-05") (notes . "(\"a questionable person with no authority.\")")) nil]
["happiness" nil nil nil nil nil nil ((timestamp . "2010-01-20") (notes . "(\"pkill -9 java\")")) nil]
["happs" nil nil nil nil nil nil ((timestamp . "2007-09-23") (notes . "(\"a Haskell (web and mail) Application Server <http://happs.org>\")")) nil]
["hard" nil nil nil nil nil nil ((timestamp . "2013-05-14") (notes . "(\"noecho <Barbie®> This is hard. Let's go shopping!\")")) nil]
["hardcore" nil nil nil nil nil nil ((timestamp . "2011-06-17") (notes . "(\"hard-core\")")) nil]
["harding" nil nil nil nil nil nil ((timestamp . "2011-08-23") (notes . "(\"lisp (random-choose (notes \\\"harding-data\\\"))\")")) nil]
["harding-data" nil nil nil nil nil nil ((timestamp . "2011-08-23") (notes . "(\"I am not fit for this office and should never have been here.\" \"I don't know what to do or where to turn in this taxation matter.\" \"Somewhere there must be a book that tells all about it, where I could go to straighten it out in my mind. But I don't know where the book is, and maybe I couldn't read it if I found it.\")")) nil]
["hardware" nil nil nil nil nil nil ((timestamp . "2012-09-22") (notes . "(\"http://www.fsf.org/resources/hw\" \"http://www.h-node.org\" \"http://www.garlach44.eu/en/for-free-software-users\")")) nil]
["harkavagrant" nil nil nil nil nil nil ((timestamp . "2011-08-01") (notes . "(\"a webcomic by Canadian Kate Beaton focusing on the absurdity of historical actors and events. http://www.harkavagrant.com/\")")) nil]
["harmfulp" nil nil nil nil nil nil ((timestamp . "2011-10-11") (notes . "(\"lisp (let ((re (concat \\\"\\\\\\\\`\\\" (regexp-quote (mapconcat 'symbol-name lispargs \\\" \\\"))))) (consp (member t (mapcar (lambda (s) (numberp (string-match re s))) (notes \\\"ConsideredHarmful\\\")))))\")")) nil]
["has-a" nil nil nil nil nil nil ((timestamp . "2003-02-12") (notes . "(\"[is-a] [Predicate]\" \"[description] When something has something else\" \"[similar-to] [Containment]\" \"[similar-to] [Aggregation]\" \"[disjoint-from] [Association]\" \"[disjoint-from] [is-a]\")")) nil]
["Haserl" nil nil nil nil nil nil ((timestamp . "2012-06-14") (notes . "(\"a small program that uses shell or Lua script to create CGI scripts, and is intended for environments where PHP or Ruby are too big. http://haserl.sourceforge.net/\")")) nil]
["hash" nil nil nil nil nil nil ((timestamp . "2007-03-17") (notes . "(\"compressed trichomes from, liiiike, caaaannabis maaan\" \"an O(1) way to get fuckin BLITZED on caaaannabis maaaan\")")) nil]
["haskell-on-a-horse" nil nil nil nil nil nil ((timestamp . "2011-12-29") (notes . "(\"see http://blog.on-a-horse.org/\")")) nil]
["hasktags" nil nil nil nil nil nil ((timestamp . "2010-12-02") (notes . "(\"http://hackage.haskell.org/package/hasktags\")")) nil]
["hasthelhcdestroyedtheearth" nil nil nil nil nil nil ((timestamp . "2008-09-10") (notes . "(\"lisp (say (random-choose '(\\\"no\\\" \\\"nope\\\" \\\"not yet\\\")))\")")) nil]
["hasthelhcdestroyedtheearth2" nil nil nil nil nil nil ((timestamp . "2008-09-10") (notes . "(\"lisp (say (random-choose '(\\\"yes\\\")))\")")) nil]
["hate" nil nil nil nil nil nil ((timestamp . "2012-07-14") (notes . "(\"noecho \\\"Hate. Let me tell you how much I've come to hate you since I began to live. There are 387.44 million miles of printed circuits in wafer thin layers that fill my complex. If the word 'hate' was engraved on each nanoangstrom of those hundreds of millions of miles it would not equal one one-billionth of the hate I feel for humans at this micro-instant for you. Hate. Hate.\\\" -- AM, _I Have No Mouth. And I Must Scream_\" \"the path to destruction\")")) nil]
["hateables" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"PHP\" \"buffer overflows\" \"people who say \\\"an historic\\\"\" \"WYSIWYG\" \"people who say \\\"thank you so much\\\"\" \"apps that print the man page on --help\" \"X apps that cannot do \\\"foo --help\\\" when X is not running\" \"anything that directs --help output to stderr\")")) nil]
["haters" nil nil nil nil nil nil ((timestamp . "2010-04-03") (notes . "(\"noecho haters gonna hate\")")) nil]
["hatless-atlas" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"linenoise poetry -- http://www.netfunny.com/rhf/jokes/90q3/poem2.html\")")) nil]
["hatta" nil nil nil nil nil nil ((timestamp . "2009-11-18") (notes . "(\"a wiki engine\")")) nil]
["haystack" nil nil nil nil nil nil ((timestamp . "2010-09-19") (notes . "(\"noecho Don't mention Haystack unless you want the channel flooded\")")) nil]
["hazards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho ENDANGER HIM!!\")")) nil]
["HBA" nil nil nil nil nil nil ((timestamp . "2013-07-15") (notes . "(\"host bus adapter <http://en.wikipedia.org/wiki/Host_Bus_Adapter>\")")) nil]
["hcf" nil nil nil nil nil nil ((timestamp . "2010-04-07") (notes . "(\"noecho /me halts and bursts into flames.\")")) nil]
["hci" nil nil nil nil nil nil ((timestamp . "2004-06-26") (notes . "(\"Human-Computer interaction\")")) nil]
["HCL" nil nil nil nil nil nil ((timestamp . "2012-03-15") (notes . "(\"Hardware Compatibility List, a list of hardware that will work with your OS/app/game/whatever\")")) nil]
["hcoop" nil nil nil nil nil nil ((timestamp . "2004-06-04") (notes . "(\"the internet hosting cooperative at http://hcoop.net\")")) nil]
["HDCP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for High-Bandwidth Digital Content Protection\")")) nil]
["HDD" nil nil nil nil nil nil ((timestamp . "2013-04-05") (notes . "(\"short for Hard Disk Drive, cf. CD-ROM, floppy\" \"Hatred Driven Development\")")) nil]
["HDFS" nil nil nil nil nil nil ((timestamp . "2012-02-18") (notes . "(\"the Hadoop Distributed File System http://hadoop.apache.org/hdfs/\")")) nil]
["hdl" nil nil nil nil nil nil ((timestamp . "2010-04-07") (notes . "(\"hardware description language such as verilog or vhdl\" \"high-density lipoprotein\")")) nil]
["HE-MAN" nil nil nil nil nil nil ((timestamp . "2012-11-04") (notes . "(\"I HAVE THE POWER!\")")) nil]
["heaven" nil nil nil nil nil nil ((timestamp . "2011-08-20") (notes . "(\"a place where nothing ever happens\")")) nil]
["heavenly_bodies" nil nil nil nil nil nil ((timestamp . "2007-08-31") (notes . "(\"jessica alba\" \"angelina jolie\" \"scarlett johansson\")")) nil]
["Hebrew" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"the language of the Jewish people\")")) nil]
["hectorae" nil nil nil nil nil nil ((timestamp . "2013-11-25") (notes . "(\"some guy, you can basically ignore him\")")) nil]
["Hedgehog" nil nil nil nil nil nil ((timestamp . "2006-11-11") (notes . "(\"A very concise implementation of a Lisp-like language for low-end and embedded devices\" \"URL: http://hedgehog.oliotalo.fi/\")")) nil]
["HedgeMagesnack" nil nil nil nil nil nil ((timestamp . "2013-06-19") (notes . "(\"noecho /me gives HedgeMage some chocolate, preferably dark chocolate\")")) nil]
["hefeweizen" nil nil nil nil nil nil ((timestamp . "2007-11-26") (notes . "(\"the beer i brewed and just sampled\")")) nil]
["hehe" nil nil nil nil nil nil ((timestamp . "2010-08-03") (notes . "(\"noecho stop laughing now!\")")) nil]
["heisenbug" nil nil nil nil nil nil ((timestamp . "2011-09-09") (notes . "(\"a bug that when studied closer can no longer be fully reproduced\")")) nil]
["helen-lovejoy" nil nil nil nil nil nil ((timestamp . "2012-08-10") (notes . "(\"noecho Won't somebody please think of the children!\")")) nil]
["hello" nil nil nil nil nil nil ((timestamp . "2012-11-02") (notes . "(\"lisp (format (random-choose (notes \\\"greetings-list\\\")) (if (string-equal lispa \\\"fsbot\\\") nick (or lispa nick)))\")")) nil]
["hello!" nil nil nil nil nil nil ((timestamp . "2003-05-24") (notes . "(\"redirect hello\")")) nil]
["hello!!" nil nil nil nil nil nil ((timestamp . "2003-05-24") (notes . "(\"redirect hello\")")) nil]
["hello." nil nil nil nil nil nil ((timestamp . "2003-05-24") (notes . "(\"redirect hello\")")) nil]
["helm-swoop" nil nil nil nil nil nil ((timestamp . "2013-10-27") (notes . "(\"at https://github.com/ShingoFukuyama/helm-swoop\" \"a nice helm-based interface to find and navigate word occurences in a buffer\")")) nil]
["help-char" nil nil nil nil nil nil ((timestamp . "2011-09-07") (notes . "(\"noecho fsbot has several character help commands:\" \"where-is-char CHAR [INPUT-METHOD, ...]\" \"unicode-describe <#xe9|351|é>\" \"unicode-find \\\"latin small letter e\\\\\\\\>.*\\\\\\\\<acute\\\\\\\\>\\\"\")")) nil]
["help-commands" nil nil nil nil nil nil ((timestamp . "2002-12-03") (notes . "(\"Type , commands REGEX to find the bot-function of interest and then do a df on that or just try using it\")")) nil]
["help-dice" nil nil nil nil nil nil ((timestamp . "2011-09-16") (notes . "(\"type ,roll-dice to roll two 6-sided die or ,roll-dice N M to get the result of rolling N dice with M sides\")")) nil]
["help-dictionary" nil nil nil nil nil nil ((timestamp . "2003-01-10") (notes . "(\"Type , d WORD\")")) nil]
["help-dunnet" nil nil nil nil nil nil ((timestamp . "2003-01-11") (notes . "(\"To switch to dunnet mode, type , (dunnet-mode)\")")) nil]
["help-forget" nil nil nil nil nil nil ((timestamp . "2010-08-27") (notes . "(\"about telling me to forget terms.\" \"for example: forget foo, or forget foo 3 to delete the third entry\")")) nil]
["help-m8b" nil nil nil nil nil nil ((timestamp . "2011-09-16") (notes . "(\"Type ,m8b to get wisdom from magic 8-ball\")")) nil]
["help-memo" nil nil nil nil nil nil ((timestamp . "2005-03-24") (notes . "(\"syntax: ,memo nick your message here\" \"to read: ,query\" \"more help on ErbMsg\")")) nil]
["help-merge" nil nil nil nil nil nil ((timestamp . "2002-12-03") (notes . "(\"to merge two entries, use merge <old> <new>\")")) nil]
["help-more" nil nil nil nil nil nil ((timestamp . "2003-01-17") (notes . "(\"Just type , more to see the remaining part of a +more\")")) nil]
["help-redirect" nil nil nil nil nil nil ((timestamp . "2004-03-19") (notes . "(\"to redirect one entry to another, use ,<old> is redirect <new>\" \"To see the actual literal entry for <old>, type: ,dl <old>\")")) nil]
["help-search" nil nil nil nil nil nil ((timestamp . "2003-01-18") (notes . "(\"To search for foo, type , s foo. Or just type , foo To search for foo.*bar, type , s foo.*bar or just separate the words with a space, viz: , foo bar searches for foo.*bar. See , erbot for more details.\")")) nil]
["help-services" nil nil nil nil nil nil ((timestamp . "2011-09-07") (notes . "(\"apropos, describe-key, commands, where-is, describe-function, find-function, eval, beer, tea, dict, flame, ban, bribe, stab, kill, burn, tell, bore, help, translate, memo, m8b\")")) nil]
["help-t8" nil nil nil nil nil nil ((timestamp . "2011-09-16") (notes . "(\"redirect help-translate\")")) nil]
["help-translate" nil nil nil nil nil nil ((timestamp . "2006-05-08") (notes . "(\"Type , t8 en de \\\"Hello World\\\"\" \"Type , t8-l to list the available language pairs\" \"[es] Mecanografiar , t8 es en \\\"Hola Mundo\\\"\" \"[es] Mecanografiar , t8-l para enumerar las parejas de lenguas disponibles\")")) nil]
["helphelphelp" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"Operators are standing by 10am EST to 6pm EST M-F and often outside of that time. mattl: ping. johnsu01: ping. If you get no reply, please /msg christel\")")) nil]
["helpmnemonics" nil nil nil nil nil nil ((timestamp . "2012-10-14") (notes . "(\"C-h k: *h*elp, what's this *k*ey do? C-h w: *h*elp, *w*here is this function bound to? C-h f: *h*elp, what's this *f*unction do? C-h v: *h*elp, what's this *v*ariable for\")")) nil]
["her" nil nil nil nil nil nil ((timestamp . "2010-08-31") (notes . "(\"noecho It is she.\")")) nil]
["heredoc" nil nil nil nil nil nil ((timestamp . "2012-07-27") (notes . "(\"http://en.wikipedia.org/wiki/Here_document\")")) nil]
["herep" nil nil nil nil nil nil ((timestamp . "2013-02-16") (notes . "(\"lisp (seen (stringify-symbol-list lispargs))\")")) nil]
["heresy" nil nil nil nil nil nil ((timestamp . "2013-10-13") (notes . "(\"redirect heretic\")")) nil]
["heretics" nil nil nil nil nil nil ((timestamp . "2007-03-19") (notes . "(\"noecho Caedite eos. Novit enim Dominus qui sunt eius.\")")) nil]
["heroin" nil nil nil nil nil nil ((timestamp . "2006-06-21") (notes . "(\"a highly addictive drug taken introvenously\")")) nil]
["herp" nil nil nil nil nil nil ((timestamp . "2010-09-20") (notes . "(\"noecho derp\")")) nil]
["hesiod" nil nil nil nil nil nil ((timestamp . "2012-11-02") (notes . "(\"a dead greek oral poet believed to be contemporaneous with homer\" \"the name service originating in Project Athena\")")) nil]
["HeVeA" nil nil nil nil nil nil ((timestamp . "2005-03-02") (notes . "(\"http://pauillac.inria.fr/~maranget/hevea/\" \"a LaTeX to html converter\")")) nil]
["hewbwew" nil nil nil nil nil nil ((timestamp . "2006-02-09") (notes . "(\"the language of Elmer Fuddsky\")")) nil]
["hey" nil nil nil nil nil nil ((timestamp . "2003-11-22") (notes . "(\"redirect hi\")")) nil]
["HFS" nil nil nil nil nil nil ((timestamp . "2013-11-01") (notes . "(\"the Hierarchical Filesystem, used by Apple MacOS 7 through 9 and possibly others.\" \"see also http://en.wikipedia.org/wiki/HFS_Plus\")")) nil]
["hg" nil nil nil nil nil nil ((timestamp . "2013-03-28") (notes . "(\"the command-line interface to Mercurial, a distributed SCM implemented in Python.\" \"see Mercurial\" \"see also ,mercurial.\")")) nil]
["hg-git" nil nil nil nil nil nil ((timestamp . "2012-12-03") (notes . "(\"a bridger of world between hg and git.\")")) nil]
["hgnotes" nil nil nil nil nil nil ((timestamp . "2011-12-21") (notes . "(\"http://octave.org/wiki/index.php?title=Mercurial_%28hg%29_cheat_sheet\")")) nil]
["hgshot" nil nil nil nil nil nil ((timestamp . "2012-02-23") (notes . "(\"noecho badum-*hg*\")")) nil]
["HH" nil nil nil nil nil nil ((timestamp . "2013-01-03") (notes . "(\"the Happy Hacking keyboard <https://en.wikipedia.org/wiki/Happy_Hacking_Keyboard>\")")) nil]
["HHG" nil nil nil nil nil nil ((timestamp . "2007-02-11") (notes . "(\"the Hitchhikers Guide to the Galaxy\")")) nil]
["HHIS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Hanging Head In Shame\")")) nil]
["hhkb" nil nil nil nil nil nil ((timestamp . "2013-06-13") (notes . "(\"Happy Hacking KeyBoard\" \"http://www.pfu.fujitsu.com/hhkeyboard/\")")) nil]
["HHOS" nil nil nil nil nil nil ((timestamp . "2012-01-04") (notes . "(\"Ha Ha, Only Serious\")")) nil]
["hi" nil nil nil nil nil nil ((timestamp . "2003-05-23") (notes . "(\"redirect hello\")")) nil]
["Hi!" nil nil nil nil nil nil ((timestamp . "2003-05-27") (notes . "(\"redirect hi\")")) nil]
["Hi!!" nil nil nil nil nil nil ((timestamp . "2003-05-27") (notes . "(\"redirect hi\")")) nil]
["Hi." nil nil nil nil nil nil ((timestamp . "2003-05-27") (notes . "(\"redirect hi\")")) nil]
["HIB" nil nil nil nil nil nil ((timestamp . "2012-09-25") (notes . "(\"the Humble Indie Bundle, the name given to several limited time discount bundles of cross-platform indie games\")")) nil]
["HICA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Here It Comes Again\")")) nil]
["hide" nil nil nil nil nil nil ((timestamp . "2011-04-17") (notes . "(\"at http://www.dtek.chalmers.se/~d99josve/hide/ (dead link)\")")) nil]
["hidecontinuationglyph" nil nil nil nil nil nil ((timestamp . "2012-02-22") (notes . "(\"(remove-specifier (glyph-property continuation-glyph 'image) 'global 'tty)\")")) nil]
["HideRegexp" nil nil nil nil nil nil ((timestamp . "2003-05-04") (notes . "(\"redirect HideLines\")")) nil]
["highlander" nil nil nil nil nil nil ((timestamp . "2012-04-09") (notes . "(\"noecho there can be only one\")")) nil]
["highlight-current-line" nil nil nil nil nil nil ((timestamp . "2011-05-13") (notes . "(\"http://ftp.codefactory.se/pub/elisp/elisp-archive/faces/INDEX.html\" \"see ,highlight\")")) nil]
["highlight-phrase" nil nil nil nil nil nil ((timestamp . "2007-12-04") (notes . "(\"just what i need :)\")")) nil]
["highlight-tail" nil nil nil nil nil nil ((timestamp . "2004-06-11") (notes . "(\"redirect HighlightTail\")")) nil]
["HighlightContextLine" nil nil nil nil nil nil ((timestamp . "2003-05-06") (notes . "(\"at http://www.skamphausen.de/software/skamacs/highlight-context-line.el\")")) nil]
["HighlightLastVisibleLineWhenScrolling" nil nil nil nil nil nil ((timestamp . "2003-05-06") (notes . "(\"redirect highlightContextLine\")")) nil]
["HighlightTail" nil nil nil nil nil nil ((timestamp . "2004-06-11") (notes . "(\"a library that highlights the last few characters typed, in a smooth moving color at http://nic-nac-project.de/~necui/AGONIA/page~highlight-tail.el/css~elisp%3E\")")) nil]
["hilbertian-entscheidungsproblem" nil nil nil nil nil nil ((timestamp . "2012-12-19") (notes . "(\"noecho DOES NOT COMPUTE\")")) nil]
["hilight" nil nil nil nil nil nil ((timestamp . "2007-12-11") (notes . "(\"an utility to fontify code http://www.andre-simon.de/doku/highlight/en/highlight.html\")")) nil]
["hilightline" nil nil nil nil nil nil ((timestamp . "2008-02-11") (notes . "(\"redirect line\")")) nil]
["hilite" nil nil nil nil nil nil ((timestamp . "2010-09-20") (notes . "(\"a dude's way of saying perm.\")")) nil]
["hilitenick" nil nil nil nil nil nil ((timestamp . "2005-06-10") (notes . "(\"(erc-match-mode 1) (setq erc-keywords '(\\\"\\\\\\\\bYourNick\\\\\\\\b\\\"))\")")) nil]
["hiphip" nil nil nil nil nil nil ((timestamp . "2011-08-26") (notes . "(\"noecho Hooray!\")")) nil]
["hippie" nil nil nil nil nil nil ((timestamp . "2008-01-28") (notes . "(\"redirect hippie-expand\")")) nil]
["hippie-expand" nil nil nil nil nil nil ((timestamp . "2010-09-13") (notes . "(\"redirect HippieExpand\")")) nil]
["hird" nil nil nil nil nil nil ((timestamp . "2002-09-08") (notes . "(\"The bot is at http://ftp.walfield.org/pub/people/neal/\")")) nil]
["hiring" nil nil nil nil nil nil ((timestamp . "2010-09-13") (notes . "(\"too often based on finding someone with a single narrow skill or specific experience rather than finding people with proof of general ability to absorb knowledge and produce work\" \"see ,applying\")")) nil]
["historyflow" nil nil nil nil nil nil ((timestamp . "2005-01-17") (notes . "(\"about visualizing dynamic, evolving documents and the interactions of multiple collaborating authors on a wiki, at http://www.research.ibm.com/history/\")")) nil]
["hl-sexp" nil nil nil nil nil nil ((timestamp . "2006-09-06") (notes . "(\"http://edward.oconnor.cx/elisp/hl-sexp.el\")")) nil]
["hmd" nil nil nil nil nil nil ((timestamp . "2011-08-30") (notes . "(\"head-mounted display\")")) nil]
["hmx" nil nil nil nil nil nil ((timestamp . "2013-07-29") (notes . "(\"a high explosive\" \"a pancake ingredient\")")) nil]
["hn" nil nil nil nil nil nil ((timestamp . "2013-08-08") (notes . "(\"hackernews http://news.ycombinator.com\" \"reddit for snobs\" \"see http://twitter.com/shit_hn_says for the best of the worst\" \"Written in Arc, runs on Racket. http://lists.racket-lang.org/users/archive/2013-August/058832.html\")")) nil]
["hnaz" nil nil nil nil nil nil ((timestamp . "2007-09-12") (notes . "(\"noecho hnaz learns\")")) nil]
["Hoazin" nil nil nil nil nil nil ((timestamp . "2013-11-20") (notes . "(\"a species of tropical bird found in swamps, riverine forest and mangrove of the Amazon and the Orinoco delta in South America. It is notable for having chicks that possess claws on two of their wing digits.\")")) nil]
["hobsons-choice" nil nil nil nil nil nil ((timestamp . "2010-11-17") (notes . "(\"federal dick-measuring device or molestation\")")) nil]
["HOF" nil nil nil nil nil nil ((timestamp . "2006-07-26") (notes . "(\"short for higher-order function(s); functions that operate on functions. For example, MAP, FILTER, FOLD, MAKE-ADDER.\")")) nil]
["hoh" nil nil nil nil nil nil ((timestamp . "2011-12-29") (notes . "(\"redirect haskell-on-a-horse\")")) nil]
["hola" nil nil nil nil nil nil ((timestamp . "2010-07-27") (notes . "(\"redirect hello\")")) nil]
["holes" nil nil nil nil nil nil ((timestamp . "2009-07-14") (notes . "(\"a little piece of elisp to define holes in your buffer\")")) nil]
["homebrew" nil nil nil nil nil nil ((timestamp . "2011-09-25") (notes . "(\"yet another package manager for osx, see http://mxcl.github.com/homebrew/\" \"a fine way to make beer.\")")) nil]
["HomePate" nil nil nil nil nil nil ((timestamp . "2003-08-21") (notes . "(\"at http://www.gnufans.net/fsedu.pl?HomePate\")")) nil]
["homer" nil nil nil nil nil nil ((timestamp . "2012-12-12") (notes . "(\"noecho *D'oh!*\")")) nil]
["homie-lol" nil nil nil nil nil nil ((timestamp . "2012-09-27") (notes . "(\"redirect homie-yow\")")) nil]
["homies-law" nil nil nil nil nil nil ((timestamp . "2012-10-24") (notes . "(\"<JordiGH> Any sufficiently stoned chatter is indistinguishable from a bot\")")) nil]
["homoiconicity" nil nil nil nil nil nil ((timestamp . "2012-11-19") (notes . "(\"In computer programming, homoiconicity is a property of some programming languages, in which the primary representation of programs is also a data structure in a primitive type of the language itself, from the Greek words homo meaning the same and icon meaning representation.\")")) nil]
["honest-achmed" nil nil nil nil nil nil ((timestamp . "2013-05-04") (notes . "(\"a Used Cars and Certificates dealer\" \"see https://bugzilla.mozilla.org/show_bug.cgi?id=647959\")")) nil]
["hope" nil nil nil nil nil nil ((timestamp . "2007-03-19") (notes . "(\"noecho Lasciate ogne speranza, voi ch'intrate\")")) nil]
["horatio-caine" nil nil nil nil nil nil ((timestamp . "2013-05-12") (notes . "(\"lisp (format \\\"( •_•)\\\\n( -_-)~⌐■-■\\\\n(⌐■_■)>\\\\n%s\\\" (stringify-symbol-list lispargs))\")")) nil]
["hosting" nil nil nil nil nil nil ((timestamp . "2004-03-12") (notes . "(\"at http://www.oddmuse.org/cgi-bin/wiki/Free_Hosting\" \"never gratis\")")) nil]
["hostmask" nil nil nil nil nil nil ((timestamp . "2013-03-14") (notes . "(\"redirect banmask\")")) nil]
["hotkey" nil nil nil nil nil nil ((timestamp . "2011-03-30") (notes . "(\"key binding, they're not called hot keys\")")) nil]
["hotornot.el" nil nil nil nil nil nil ((timestamp . "2003-01-10") (notes . "(\"at http://www.peerfear.org/el/hotornot.el\")")) nil]
["HowDoYouDo" nil nil nil nil nil nil ((timestamp . "2003-05-16") (notes . "(\"unecho I'm fine, how are you?\")")) nil]
["howl" nil nil nil nil nil nil ((timestamp . "2005-10-10") (notes . "(\"http://downlode.org/etext/howl.html\")")) nil]
["howtoask" nil nil nil nil nil nil ((timestamp . "2008-07-01") (notes . "(\"http://en.wikipedia.org/wiki/Wikipedia:Reference_desk/header/howtoask\" \"http://www.catb.org/~esr/faqs/smart-questions.html\")")) nil]
["hpaste.el" nil nil nil nil nil nil ((timestamp . "2007-07-21") (notes . "(\"an elisp interface to hpaste.org, <http://www.haskell.org/haskellwiki/Hpaste.el>\")")) nil]
["HR" nil nil nil nil nil nil ((timestamp . "2012-08-22") (notes . "(\"human resources, the guys that hire, pay and fire you\")")) nil]
["hs-minor-mode" nil nil nil nil nil nil ((timestamp . "2012-11-21") (notes . "(\"redirect hideshow\")")) nil]
["hsb" nil nil nil nil nil nil ((timestamp . "2005-08-28") (notes . "(\"the hue saturation brightness color model\")")) nil]
["hstore" nil nil nil nil nil nil ((timestamp . "2012-08-31") (notes . "(\"http://www.postgresql.org/docs/9.1/static/hstore.html\" \"like a nosql database in postgresql\")")) nil]
["HTCPCP" nil nil nil nil nil nil ((timestamp . "2011-05-19") (notes . "(\"redirect coffee.el\")")) nil]
["htdp" nil nil nil nil nil nil ((timestamp . "2006-03-17") (notes . "(\"\\\"how to design programs\\\"\" \"at http://www.htdp.org/\")")) nil]
["htf" nil nil nil nil nil nil ((timestamp . "2011-01-07") (notes . "(\"How The Fuck\")")) nil]
["HTFS" nil nil nil nil nil nil ((timestamp . "2005-11-07") (notes . "(\"hack the fucking source\")")) nil]
["HTFU" nil nil nil nil nil nil ((timestamp . "2013-05-27") (notes . "(\"Harden the Fuck Up (you big baby)\" \"www.youtube.com/watch?v=unkIVvjZc9Y\")")) nil]
["HTH" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Hope This Helps\")")) nil]
["html" nil nil nil nil nil nil ((timestamp . "2013-01-07") (notes . "(\"apt-get install html-helper-mode\" \"see htmlfontify\" \"M-x html-mode\" \"to remove SGML, HTML, or XML tags without parsing a document, run M-x sgml-tags-invisible. You may need to load the sgml-mode library, first\" \"to escape HTML (e.g. for sanitising user input in an elnode app), use htmlize-protect-string\")")) nil]
["HtmlToLatex" nil nil nil nil nil nil ((timestamp . "2004-04-23") (notes . "(\"apt-get install gnuhtml2latex (awful)\" \"at http://www.rpi.edu/~sofkam/html2tex.html\" \"at http://www.rpi.edu/~sofkam/html2latex/1.0/common/doc/html2tex.html\" \"at http://home.planet.nl/~faase009/html2tex.html\" \"Open in kword, save as tex. (abiword also saves in tex, openoffice also opens a html, their combo could also work. html->oo->abi->tex)\")")) nil]
["htop" nil nil nil nil nil nil ((timestamp . "2006-09-26") (notes . "(\"an the next generation, ncurses-based 'top', licensed under GPL, apt-get installable.\" \"at http://htop.sourceforge.net/index.php?page=main\" \"\\\"prettier\\\", and a lot more functional\")")) nil]
["HTS" nil nil nil nil nil nil ((timestamp . "2006-04-29") (notes . "(\"HMM-Based Speech Synthesis System (HTS)\")")) nil]
["http" nil nil nil nil nil nil ((timestamp . "2004-02-02") (notes . "(\"Type .http <status no.>\")")) nil]
["http702" nil nil nil nil nil nil ((timestamp . "2013-01-29") (notes . "(\"https://github.com/joho/7XX-rfc\")")) nil]
["httpdmode" nil nil nil nil nil nil ((timestamp . "2006-05-05") (notes . "(\"redirect apache-mode\")")) nil]
["httptunnel" nil nil nil nil nil nil ((timestamp . "2003-02-07") (notes . "(\"Tunnels a data stream in HTTP requests.\" \"a debian package\" \"http://www.nocrew.org/software/httptunnel.html\")")) nil]
["httrack" nil nil nil nil nil nil ((timestamp . "2003-01-08") (notes . "(\"a GPLed web-mirroring tool at http://www.httrack.com/index.php\")")) nil]
["hub" nil nil nil nil nil nil ((timestamp . "2013-07-15") (notes . "(\"a wrapper script for the git CLI which adds github-specific features to certain subcommands\" \"http://hub.github.com/\")")) nil]
["hugolargo" nil nil nil nil nil nil ((timestamp . "2004-03-19") (notes . "(\"lisp (random-choose '(\\\"Drum\\\" \\\"Mettle\\\"))\")")) nil]
["human-p" nil nil nil nil nil nil ((timestamp . "2013-01-15") (notes . "(\"noecho Of course not! I'm a bot, ffs.\")")) nil]
["humans" nil nil nil nil nil nil ((timestamp . "2005-07-28") (notes . "(\"delYsid\" \"bpt\" \"a myth! Go back to sleep, little robot.\")")) nil]
["humansnack" nil nil nil nil nil nil ((timestamp . "2007-12-21") (notes . "(\"lisp (random-choose '(\\\"shrimp poppers, pizza shooters, or extreme fajitas\\\") )\")")) nil]
["humasect" nil nil nil nil nil nil ((timestamp . "2010-10-03") (notes . "(\"Joe M. Garbage\")")) nil]
["hummus" nil nil nil nil nil nil ((timestamp . "2012-09-07") (notes . "(\"a paste of pureed chickpeas usually mixed with sesame oil or sesame paste, lemon juice, olive oil, a certain type of cumin, and garlic and eaten as a dip or sandwich spread. Pronunciation: 'h&-m&s\" \"really pronounced /'hʌməs/\")")) nil]
["humvee" nil nil nil nil nil nil ((timestamp . "2006-09-06") (notes . "(\"color theme by dto\" \"at http://dto.freeshell.org/e/color-theme-humvee.el\")")) nil]
["hunchentoot" nil nil nil nil nil nil ((timestamp . "2012-11-29") (notes . "(\"a common lisp web server from edi weitz, see http://weitz.de/hunchentoot/\")")) nil]
["hunspell" nil nil nil nil nil nil ((timestamp . "2015-06-23") (notes . "(\"a spell checker and morphological analyser suitable fur use with LaTeX\")")) nil]
["hunter2" nil nil nil nil nil nil ((timestamp . "2012-05-04") (notes . "(\"the most secure password known to internet kind\" \"see http://bash.org/?244321\")")) nil]
["hurd" nil nil nil nil nil nil ((timestamp . "2014-01-15") (notes . "(\"http://www.gnu.org/software/hurd/ , see also why-hurd\" \"see hurdbase\" \"http://www.vmlinux.org/twiki/bin/view/Hurd/SeenHurd\" \"see hurd-install\" \"at https://fosdem.org/2014/schedule/event/07_uk_dde_on_hurd/\")")) nil]
["hurd-install" nil nil nil nil nil nil ((timestamp . "2003-01-26") (notes . "(\"http://www.gnu.org/software/hurd/install.html\" \"http://web.walfield.org/papers/hurd-installation-guide/english/hurd-install-guide.html\" \"http://gnufans.net/~deego/pub/hurd/install-guide/\" \"http://www.pick.ucam.org/~mcv21/hurd.html\")")) nil]
["hurd-logs" nil nil nil nil nil nil ((timestamp . "2002-09-08") (notes . "(\"at http://web.walfield.org/~hird/\")")) nil]
["hurdbase" nil nil nil nil nil nil ((timestamp . "2002-09-09") (notes . "(\"at gnu-latest.tar.gz at ftp://alpha.gnu.org/gnu/hurd/contrib/marcus/\")")) nil]
["HurdStatus" nil nil nil nil nil nil ((timestamp . "2004-04-08") (notes . "(\"hurd: 40% or so debian packages\" \"basically, all posix compliant packages run on hurd already\")")) nil]
["hurdwiki" nil nil nil nil nil nil ((timestamp . "2002-10-01") (notes . "(\"http://www.vmlinux.org/twiki/bin/view/Hurd/WebHome\" \"http://www.gnu.org/licenses/licenses.html#FDL\" \"http://hurd.gnufans.org\")")) nil]
["hurdwikilicense" nil nil nil nil nil nil ((timestamp . "2002-10-02") (notes . "(\"http://hurd.gnufans.org/twiki/bin/view/Hurd/HurdWikiCopyrightDiscuss\")")) nil]
["hy" nil nil nil nil nil nil ((timestamp . "2013-06-26") (notes . "(\"a Lisp for the Python Abstract Syntax Tree, http://hylang.org/\")")) nil]
["hydrogen" nil nil nil nil nil nil ((timestamp . "2006-09-14") (notes . "(\"not a newsreader\")")) nil]
["hymn" nil nil nil nil nil nil ((timestamp . "2005-12-19") (notes . "(\"http://www.hymn-project.org/\" \"The purpose of the Hymn Project is to allow you to exercise your fair-use rights under copyright law. The various software provided on this web site allows you to free your iTunes Music Store purchases (protected AAC / .m4p) from their DRM restrictions with no loss of sound quality. These songs can then be played outside of the iTunes environment, even on operating systems not supported by iTunes and on hardware not supported\")")) nil]
["hypercard" nil nil nil nil nil nil ((timestamp . "2010-11-18") (notes . "(\"something that could have been awesome if apple hadn't stopped caring about it\")")) nil]
["hyperloop" nil nil nil nil nil nil ((timestamp . "2013-08-16") (notes . "(\"http://www.youtube.com/watch?v=AEZjzsnPhnw\")")) nil]
["hyperpolyglot" nil nil nil nil nil nil ((timestamp . "2012-03-16") (notes . "(\"as if an American just studied French and was then struck by the similarities between romance languages and decided to write a comparison of French, Spanish, Turkish, and Russian.\")")) nil]
["hyperref" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package used to handle cross-referencing commands in LaTeX to produce hypertext links in the document: http://www.ctan.org/pkg/hyperref [manual: http://tinyurl.com/hyperref-manual]\")")) nil]
["hyperspec" nil nil nil nil nil nil ((timestamp . "2011-03-09") (notes . "(\"redirect CommonLispHyperspec\")")) nil]
["hyphen-austerity" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"it's ok to use hyphens in identifiers\")")) nil]
["hyphenat" nil nil nil nil nil nil ((timestamp . "2013-07-18") (notes . "(\"a package that provides several useful commands to influence hyphenation in latex, available at http://www.ctan.org/tex-archive/macros/latex/contrib/hyphenat\")")) nil]
["hypnomorphism" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"a higher order combinator, pioneered in the haskell community, for putting people to sleep with jargon\")")) nil]
["hypnosis" nil nil nil nil nil nil ((timestamp . "2007-12-06") (notes . "(\"making your sleepy. your eyes are getting heavy.\")")) nil]
["i" nil nil nil nil nil nil ((timestamp . "2008-12-21") (notes . "(\"lisp (say (concat (random-choose (list \\\"you are sexy!\\\" \\\"You are in luck!\\\")) \\\"\\\\n\\\" (yow)))\")")) nil]
["i.e." nil nil nil nil nil nil ((timestamp . "2005-11-03") (notes . "(\"ie\" \"\\\"that is\\\"\")")) nil]
["i18n" nil nil nil nil nil nil ((timestamp . "2003-10-29") (notes . "(\"redirect CategoryInternationalization\")")) nil]
["i18n-test" nil nil nil nil nil nil ((timestamp . "2005-07-11") (notes . "(\"£€語¥∞येæþ\")")) nil]
["i2c" nil nil nil nil nil nil ((timestamp . "2012-11-21") (notes . "(\"a two-wire serial bus, see http://en.wikipedia.org/wiki/I%C2%B2C\")")) nil]
["i2o" nil nil nil nil nil nil ((timestamp . "2005-05-02") (notes . "(\"Intelligent I/O, a new I/O architecture\")")) nil]
["i3" nil nil nil nil nil nil ((timestamp . "2013-05-25") (notes . "(\"a tabbed, tiling window manager <http://i3wm.org/>\")")) nil]
["IAC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for In Any Case\")")) nil]
["iaj" nil nil nil nil nil nil ((timestamp . "2011-11-23") (notes . "(\"it's a joke!\")")) nil]
["iam" nil nil nil nil nil nil ((timestamp . "2002-11-10") (notes . "(\"http://bpt.tunes.org/cgi-bin/moin.cgi/IamProject\" \"http://bpt.tunes.org/cgi-bin/moin.cgi/IamDiscussion\")")) nil]
["IAMA" nil nil nil nil nil nil ((timestamp . "2012-11-26") (notes . "(\"internet-lingo for \\\"I am a\\\", a type of post on social sites like reddit, which individuals with unique/intresting occupations and/or intrests particapate in Q-and-A session.\")")) nil]
["Ian" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Ian\")")) nil]
["IANA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Assigned Number Authority\")")) nil]
["ianag" nil nil nil nil nil nil ((timestamp . "2012-05-24") (notes . "(\"i am not a geek\")")) nil]
["IANAL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for I Am Not A Lawyer\")")) nil]
["IANANS" nil nil nil nil nil nil ((timestamp . "2011-05-22") (notes . "(\"I Am Not A Native Speaker\")")) nil]
["Ianaverybryant" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Ianaverybryant\")")) nil]
["ianp" nil nil nil nil nil nil ((timestamp . "2004-03-30") (notes . "(\"just another luser\")")) nil]
["iat" nil nil nil nil nil nil ((timestamp . "2011-02-07") (notes . "(\"noecho It's a trap!\")")) nil]
["IB" nil nil nil nil nil nil ((timestamp . "2007-07-24") (notes . "(\"the International Baccalaureate, an expensive two-year matriculation course <http://www.ibo.org>\")")) nil]
["IBCL" nil nil nil nil nil nil ((timestamp . "2007-06-28") (notes . "(\"at http://www.informatimago.com/develop/lisp/small-cl-pgms/ibcl/\" \"a Common Lisp package keeping track of the definitions to save them, which allows to work in an Image Based development style.\")")) nil]
["iblechbot" nil nil nil nil nil nil ((timestamp . "2005-06-15") (notes . "(\"your new friend\")")) nil]
["IBM" nil nil nil nil nil nil ((timestamp . "2006-02-17") (notes . "(\"socialism at its worst.\" \"International Business Machines\")")) nil]
["IBM-Community-development" nil nil nil nil nil nil ((timestamp . "2005-05-18") (notes . "(\"redirect to IBM-shell\")")) nil]
["IBM-shell" nil nil nil nil nil nil ((timestamp . "2005-05-18") (notes . "(\"at http://www-1.ibm.com/servers/eserver/zseries/os/linux/lcds/toc.html\")")) nil]
["ibuffer" nil nil nil nil nil nil ((timestamp . "2002-11-15") (notes . "(\"redirect ibuffermode\")")) nil]
["ibus" nil nil nil nil nil nil ((timestamp . "2013-09-30") (notes . "(\"the Intelligent Input Bus, an input framework for linux\")")) nil]
["IC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for I See\")")) nil]
["ical2org" nil nil nil nil nil nil ((timestamp . "2012-11-27") (notes . "(\"a python script to convert ical files to org mode and other formats, see http://www.doughellmann.com/projects/ical2org/index.html\")")) nil]
["ICB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Citizen's Band\")")) nil]
["ICBF" nil nil nil nil nil nil ((timestamp . "2006-04-22") (notes . "(\"I can't be fucked\" \"better thought of as \\\"It can be forgotten\\\"\")")) nil]
["ICBM" nil nil nil nil nil nil ((timestamp . "2006-01-27") (notes . "(\"short for inter-continental ballistic missile.\")")) nil]
["ICBW" nil nil nil nil nil nil ((timestamp . "2003-05-13") (notes . "(\"I Could Be Wrong\")")) nil]
["icc" nil nil nil nil nil nil ((timestamp . "2012-02-21") (notes . "(\"the Intel C compiler\")")) nil]
["ICCL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for I Couldn't Care Less\")")) nil]
["ICD" nil nil nil nil nil nil ((timestamp . "2008-06-16") (notes . "(\"the International Statistical Classification of Diseases and Related Health Problems, which provides codes to classify diseases and a wide variety of signs, symptoms, abnormal findings, complaints, social circumstances and external causes of injury or disease.\")")) nil]
["icecream" nil nil nil nil nil nil ((timestamp . "2003-06-04") (notes . "(\"lisp (concat (random-choose '(\\\"A scoop of \\\" \\\"A double scoop of \\\")) (random-choose '(\\\"vanilla with sprinkles\\\" \\\"french vanilla\\\" \\\"chocolate\\\" \\\"pistashcio\\\" \\\"maple with walnuts\\\" \\\"butterscotch with pecans\\\")) \\\" in a sugar-cone.\\\")\")")) nil]
["Icestorm" nil nil nil nil nil nil ((timestamp . "2010-05-18") (notes . "(\"a white tabby she-cat with silver paws and chest, ice-blue eyes\")")) nil]
["iceweasel" nil nil nil nil nil nil ((timestamp . "2006-11-01") (notes . "(\"firefox, more or less, see http://en.wikipedia.org/wiki/Iceweasel for more\")")) nil]
["icfp" nil nil nil nil nil nil ((timestamp . "2010-07-13") (notes . "(\"a programming contest for mad props and cash prizes; see http://icfpcontest.org/\")")) nil]
["ICMP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Control Message Protocol\")")) nil]
["icomplete" nil nil nil nil nil nil ((timestamp . "2006-08-22") (notes . "(\"for completing minibuffer commands, see icompletemode. for completing code, see categorycompletion\" \"see also semantic\")")) nil]
["icon" nil nil nil nil nil nil ((timestamp . "2005-05-23") (notes . "(\"to set an icon for a frame, do (modify-frame-paramters (selected-frame) '((icon-type . \\\"icon.png\\\")))\" \"a very-high-level programming language designed by Ralph Griswold\")")) nil]
["iconoclast" nil nil nil nil nil nil ((timestamp . "2002-11-03") (notes . "(\"rocks!\")")) nil]
["iconv" nil nil nil nil nil nil ((timestamp . "2004-08-02") (notes . "(\"an utility to change the encoding of a file\")")) nil]
["icq" nil nil nil nil nil nil ((timestamp . "2003-10-14") (notes . "(\"redirect bitlbee\")")) nil]
["icream" nil nil nil nil nil nil ((timestamp . "2003-06-05") (notes . "(\"redirect icecream\")")) nil]
["IDB" nil nil nil nil nil nil ((timestamp . "2004-04-13") (notes . "(\"noecho I Don't Believe\")")) nil]
["idc" nil nil nil nil nil nil ((timestamp . "2012-07-18") (notes . "(\"stupid\")")) nil]
["ideafuturesmarket" nil nil nil nil nil nil ((timestamp . "2004-08-04") (notes . "(\"redirect informationmarket\")")) nil]
["IdealDistanceLearning" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?IdealDistanceLearning\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?IdealDistanceLearning\")")) nil]
["idempotency" nil nil nil nil nil nil ((timestamp . "2008-04-16") (notes . "(\"the property such that f·...·f(x) ≡ f(x)\")")) nil]
["identation" nil nil nil nil nil nil ((timestamp . "2009-07-27") (notes . "(\"M-: (info \\\"(efaq) Customizing C and C++ indentation\\\")\")")) nil]
["identification" nil nil nil nil nil nil ((timestamp . "2011-04-19") (notes . "(\"noecho We don't need to see his identification.\")")) nil]
["idf" nil nil nil nil nil nil ((timestamp . "2004-09-08") (notes . "(\"Israel Defence Force\")")) nil]
["idgi" nil nil nil nil nil nil ((timestamp . "2011-03-07") (notes . "(\"I don't get it\")")) nil]
["IDIC" nil nil nil nil nil nil ((timestamp . "2010-05-13") (notes . "(\"infinite diversity in infinite combinations\")")) nil]
["idiot" nil nil nil nil nil nil ((timestamp . "2010-04-29") (notes . "(\"noecho Oh shut up!\")")) nil]
["idiot!" nil nil nil nil nil nil ((timestamp . "2010-04-29") (notes . "(\"noecho Don't talk to me that way!\")")) nil]
["idiot-proof" nil nil nil nil nil nil ((timestamp . "2012-05-15") (notes . "(\"noecho as soon as you try to make something idiot-proof, along comes a bigger idiot\")")) nil]
["idk" nil nil nil nil nil nil ((timestamp . "2013-05-05") (notes . "(\"I don't know.\")")) nil]
["idler" nil nil nil nil nil nil ((timestamp . "2012-07-20") (notes . "(\"someone who's only contribution to a channel is join/leave/quit spam\" \"probably the feds spying on you\" \"on the other hand, idlers do not misspell \\\"whose\\\"\")")) nil]
["ido" nil nil nil nil nil nil ((timestamp . "2003-01-03") (notes . "(\"redirect interactivelydothings\")")) nil]
["ido-faq" nil nil nil nil nil nil ((timestamp . "2012-06-10") (notes . "(\"use C-j to force it to use the string\")")) nil]
["ido-screencast" nil nil nil nil nil nil ((timestamp . "2009-11-13") (notes . "(\"http://www.vimeo.com/1013263\")")) nil]
["ido-ubiquitous" nil nil nil nil nil nil ((timestamp . "2012-09-23") (notes . "(\"what you thought ido everywhere was.\" \"https://github.com/DarwinAwardWinner/ido-ubiquitous\")")) nil]
["ie" nil nil nil nil nil nil ((timestamp . "2005-03-05") (notes . "(\"an abbreviation for id est, and usually translates to \\\"in other words\\\".\" \"literally \\\"that is\\\"\")")) nil]
["IEC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for International Electrotechnical Commission\")")) nil]
["IEEE" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Institute [Of] Electrical [And] Electronics Engineers\")")) nil]
["ieee754" nil nil nil nil nil nil ((timestamp . "2012-07-16") (notes . "(\"the ieee standard for floating-point arithmetic.\")")) nil]
["IESG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Engineering Steering Group\")")) nil]
["IETF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Engineering Task Force\")")) nil]
["IF" nil nil nil nil nil nil ((timestamp . "2006-10-28") (notes . "(\"interactive fiction.\")")) nil]
["iff" nil nil nil nil nil nil ((timestamp . "2003-02-06") (notes . "(\"\\\"if and only if\\\"\")")) nil]
["ifile" nil nil nil nil nil nil ((timestamp . "2002-09-30") (notes . "(\"http://www.ai.mit.edu/~jrennie/ifile/\" \"ifile is a general mail filtering system that works with a mail client to intelligently filter mail according to the way the user tends to organize mail.\")")) nil]
["ignorance" nil nil nil nil nil nil ((timestamp . "2013-01-21") (notes . "(\"noecho ignorance is strength\")")) nil]
["ignore-case" nil nil nil nil nil nil ((timestamp . "2006-05-05") (notes . "(\"customize read-file-name-completion-ignore-case to t for ignoring case while completing filenames\")")) nil]
["IHAFC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for I Haven't A Fucking Clue\")")) nil]
["IHBW" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for I Have Been Wrong\")")) nil]
["IHNFC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for I Have No Fucking Clue\")")) nil]
["IHOTFM" nil nil nil nil nil nil ((timestamp . "2013-02-26") (notes . "(\"the Invisible Hand of the Free Market - Ayn Rand's invisible pink unicorn\")")) nil]
["ihytft" nil nil nil nil nil nil ((timestamp . "2007-09-03") (notes . "(\"I heard you the first time\")")) nil]
["ii" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"an IRC client from suckless.org.\")")) nil]
["IIANM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for If I Am Not Mistaken\")")) nil]
["iidssm" nil nil nil nil nil nil ((timestamp . "2005-06-07") (notes . "(\"If I Do Say So Myself\")")) nil]
["iimyfab" nil nil nil nil nil nil ((timestamp . "2011-10-09") (notes . "(\"If It Makes You Feel Any Better\")")) nil]
["iinm" nil nil nil nil nil nil ((timestamp . "2010-09-22") (notes . "(\"if I'm not mistaken\")")) nil]
["IIRC" nil nil nil nil nil nil ((timestamp . "2010-08-03") (notes . "(\"an acronym for \\\"If I recall correctly\\\"\")")) nil]
["IITYWYBMAD" nil nil nil nil nil nil ((timestamp . "2008-01-08") (notes . "(\"If I Tell You, Will You Buy Me A Drink?\")")) nil]
["IIUC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for If I Understand Correctly\")")) nil]
["ijp" nil nil nil nil nil nil ((timestamp . "2013-12-03") (notes . "(\"a trainee ironist, serial bot abuser, and a WM sceptic.\")")) nil]
["ijp-e1f-fix" nil nil nil nil nil nil ((timestamp . "2012-09-12") (notes . "(\"noecho most problems can be solved by turning off your ipad\")")) nil]
["ijp-fix" nil nil nil nil nil nil ((timestamp . "2012-03-19") (notes . "(\"noecho most problems can be solved turning off the computer\")")) nil]
["ijp-fix2" nil nil nil nil nil nil ((timestamp . "2012-10-24") (notes . "(\"noecho chillax bro, nothing bads going to happen\")")) nil]
["ijp-help" nil nil nil nil nil nil ((timestamp . "2013-11-02") (notes . "(\"redirect shoot\")")) nil]
["ijp-tali713-jlf-fix" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"noecho most problems can be solved by describing them in Lisp with your computer turned off and a hendrick's martini to hand.\")")) nil]
["ijps-astroturfing-law" nil nil nil nil nil nil ((timestamp . "2013-05-28") (notes . "(\"the probability of someone adopting your witty bot entry increases with frequency of usage\" \"corollary: the probability of someone adopting your witty bot entry decreases with wavelength of usage\")")) nil]
["ijps-forgotten-laws" nil nil nil nil nil nil ((timestamp . "2013-06-14") (notes . "(\"every programming language with higher order functions gets called a lisp at some point\" \"technology doesn't die, it just gets more niche\")")) nil]
["ijps-nth-law" nil nil nil nil nil nil ((timestamp . "2013-10-26") (notes . "(\"noecho sufficiently inadvanced subtlety is indistinguishable from troweling\")")) nil]
["ijps-third-law" nil nil nil nil nil nil ((timestamp . "2013-01-24") (notes . "(\"There is no idea so stupid someone hasn't came up with it before you\")")) nil]
["ijpsnack" nil nil nil nil nil nil ((timestamp . "2012-02-19") (notes . "(\"lisp (format \\\"/me gives ijp %s\\\" (random-choose '(\\\"a milk chocolate digestive\\\" \\\"some butterscotch\\\" \\\"a plate of sticky toffee pudding\\\" \\\"a pack of golden crunch creams\\\")))\")")) nil]
["Ikarus" nil nil nil nil nil nil ((timestamp . "2008-02-24") (notes . "(\"a compiler-based implementation of the Scheme programming language which targets the i386 (with sse2) architecture. It has good performance, is rather light weight, is case-sensitive, and implements a substantial portion of the language described in R6RS. <http://www.cs.indiana.edu/~aghuloum/ikarus/>\")")) nil]
["ikb" nil nil nil nil nil nil ((timestamp . "2012-08-31") (notes . "(\"Isambard Kingdom Brunel\")")) nil]
["IKE" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Key Exchange\")")) nil]
["ikiwiki" nil nil nil nil nil nil ((timestamp . "2007-06-26") (notes . "(\"a SCM-backed compiler for statically-generated wiki-like websites <http://ikiwiki.info>\")")) nil]
["ilisp" nil nil nil nil nil nil ((timestamp . "2003-07-23") (notes . "(\"redirect ilispmode\")")) nil]
["illdesigned" nil nil nil nil nil nil ((timestamp . "2013-07-29") (notes . "(\"TeX/LaTeX may not be as welldesigned as modern languages you know. Please bear in mind that TeX was born in 1978, even before c. If you are lacking certain programming language features have a look at ,latex3\")")) nil]
["illiterate" nil nil nil nil nil nil ((timestamp . "2006-10-24") (notes . "(\"a programming style where you write as little documentation as possible, because it discriminates against machine readers.\")")) nil]
["illumos" nil nil nil nil nil nil ((timestamp . "2013-07-29") (notes . "(\"The OpenSolaris fork.\")")) nil]
["ILM" nil nil nil nil nil nil ((timestamp . "2007-01-24") (notes . "(\"Industrial Light and Magic -- the special-effects company founded by George Lucas\")")) nil]
["im" nil nil nil nil nil nil ((timestamp . "2007-06-13") (notes . "(\"redirect InstantMessaging\")")) nil]
["image-string" nil nil nil nil nil nil ((timestamp . "2004-02-09") (notes . "(\"(defun image-string (img &optional type data-p &rest props) (let ((img (apply #'create-image img type data-p props))) (with-temp-buffer (insert-image img) (buffer-substring (point-min) (point-max)))))\")")) nil]
["IMAO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for In My Arrogant Opinion\")")) nil]
["IMAP" nil nil nil nil nil nil ((timestamp . "2008-11-17") (notes . "(\"short for Internet Mail Access Protocol\" \"Irate Monkeys Ate my Post!\" \"get IMAP working with Gnus! http://asimakov.blogspot.com/2007/11/imap-gnus-gmailcom.html\")")) nil]
["IMCO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for In My Considered Opinion\")")) nil]
["IME" nil nil nil nil nil nil ((timestamp . "2007-02-20") (notes . "(\"short for In My Experience\")")) nil]
["imho" nil nil nil nil nil nil ((timestamp . "2003-01-19") (notes . "(\"an abbreviation for In My Humble Opinion\")")) nil]
["imitation" nil nil nil nil nil nil ((timestamp . "2012-02-16") (notes . "(\"the sincerest form of flattery\")")) nil]
["imlame" nil nil nil nil nil nil ((timestamp . "2011-01-30") (notes . "(\"noecho Don't worry... you're not the only one!\")")) nil]
["IMNSHO" nil nil nil nil nil nil ((timestamp . "2003-02-19") (notes . "(\"an acronym for in my not so humble opinion\")")) nil]
["imo" nil nil nil nil nil nil ((timestamp . "2004-12-30") (notes . "(\"in an acronym for in my opinion (usually not a humble one, because IMHO is better known...)\")")) nil]
["impatient" nil nil nil nil nil nil ((timestamp . "2009-05-26") (notes . "(\"the free edition of the book \\\"TeX for the Impatient\\\" -- http://tug.ctan.org/tex-archive/info/impatient/\")")) nil]
["impersonate-cluck" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"lisp (random-choose '(\\\"/me ducks\\\" \\\":)\\\" \\\"/me makes some tangential reply 15 minutes later\\\"))\")")) nil]
["impersonate-ijp" nil nil nil nil nil nil ((timestamp . "2013-02-17") (notes . "(\"noecho /me adds some new entries to ,firearms\")")) nil]
["impossible" nil nil nil nil nil nil ((timestamp . "2010-09-30") (notes . "(\"nothing\" \"something wrong\" \"http://en.wikipedia.org/wiki/Impossible_Is_Nothing_%28video_r%C3%A9sum%C3%A9%29\" \"a mission too\")")) nil]
["in-the-beginning" nil nil nil nil nil nil ((timestamp . "2002-09-17") (notes . "(\"http://www.cryptonomicon.com/beginning.html\")")) nil]
["INCITS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for InterNational Committee On Information Technology Standards\")")) nil]
["include" nil nil nil nil nil nil ((timestamp . "2010-08-07") (notes . "(\"noecho \\\\include and \\\\input are commands to include files and a method to structure documents: http://web.science.mq.edu.au/~rdale/resources/writingnotes/latexstruct.html\")")) nil]
["include-guards" nil nil nil nil nil nil ((timestamp . "2013-01-30") (notes . "(\"noecho #IFNDEF HIM!!!!\")")) nil]
["incomplete" nil nil nil nil nil nil ((timestamp . "2006-04-07") (notes . "(\"redirect incomplete.el\")")) nil]
["inconceivable" nil nil nil nil nil nil ((timestamp . "2011-03-18") (notes . "(\"noecho I don't think that word means what you think it means\")")) nil]
["IncrementNumbers" nil nil nil nil nil nil ((timestamp . "2008-04-03") (notes . "(\"redirect IncrementNumber\")")) nil]
["indect" nil nil nil nil nil nil ((timestamp . "2012-03-10") (notes . "(\"mass surveillance project for 2014 :: http://www.youtube.com/watch?v=NT5hSohdcsw&feature=player_embedded\")")) nil]
["indentfile" nil nil nil nil nil nil ((timestamp . "2010-07-06") (notes . "(\"Select the entire buffer (C-x h) and then indent (C-M-\\\\) : C-x h C-M-\\\\\")")) nil]
["IndianaJones" nil nil nil nil nil nil ((timestamp . "2007-02-02") (notes . "(\"http://www.mcsweeneys.net/2006/10/10bryan.html\")")) nil]
["indirection" nil nil nil nil nil nil ((timestamp . "2008-09-17") (notes . "(\"\\\"Any problem in computer science can be solved with another layer of indirection. But that usually will create another problem.\\\"--David Wheeler\")")) nil]
["indix" nil nil nil nil nil nil ((timestamp . "2005-06-02") (notes . "(\"at http://rohini.ncst.ernet.in/indix/\")")) nil]
["inebriatedpickle" nil nil nil nil nil nil ((timestamp . "2010-06-23") (notes . "(\"a mean drunk\")")) nil]
["inetutils" nil nil nil nil nil nil ((timestamp . "2009-07-12") (notes . "(\"the GNU Networking Utilities.\" \"available at http://gnu.org/s/inetutils/\")")) nil]
["inferno" nil nil nil nil nil nil ((timestamp . "2006-06-21") (notes . "(\"an operating system for creating and supporting distributed services. http://www.vitanuova.com/inferno/index.html\")")) nil]
["infinity" nil nil nil nil nil nil ((timestamp . "2013-08-04") (notes . "(\"https://i.chzbgr.com/maxW500/7706735872/h8FC154CC/\")")) nil]
["info-cheatsheet" nil nil nil nil nil nil ((timestamp . "2013-09-15") (notes . "(\"[ and ] for prev/next like 5.1 to 5.1.1, p/n for prev/next like 5.1 to 5.2, u for up (5.1 to 5), l/r for history back/forw, m for menu, t for top-of-manual, d for manual-directory, i for index.\")")) nil]
["information" nil nil nil nil nil nil ((timestamp . "2002-10-01") (notes . "(\"http://www.anu.edu.au/people/Roger.Clarke/II/IWtbF.html\")")) nil]
["InformationDerivativeMarket" nil nil nil nil nil nil ((timestamp . "2004-08-04") (notes . "(\"redirect informationMarket\")")) nil]
["infty" nil nil nil nil nil nil ((timestamp . "2015-01-06") (notes . "(\"InftyReader is part of the Infty project which uses OCR to recognize images of scientific documents including mathematical expressions and outputs the results in LaTeX, HTML, XML etc. Project page: http://www.inftyproject.org/en/index.html\")")) nil]
["inhibit" nil nil nil nil nil nil ((timestamp . "2008-01-22") (notes . "(\"redirect nogreeting\")")) nil]
["inhibition" nil nil nil nil nil nil ((timestamp . "2006-02-04") (notes . "(\"the channeling of freedom.\")")) nil]
["inigo" nil nil nil nil nil nil ((timestamp . "2011-08-10") (notes . "(\"noecho my PID is Inigo Montoya. You kill -9ed my PPID. Prepare to vi!\")")) nil]
["inigo-montoya" nil nil nil nil nil nil ((timestamp . "2012-11-23") (notes . "(\"noecho You keep using that word, I do not think it means what you think it means\")")) nil]
["init-file" nil nil nil nil nil nil ((timestamp . "2012-10-07") (notes . "(\"redirect InitFile\")")) nil]
["injection" nil nil nil nil nil nil ((timestamp . "2013-05-07") (notes . "(\"creepy as fuck\")")) nil]
["inkscape" nil nil nil nil nil nil ((timestamp . "2005-06-09") (notes . "(\"a free and open source drawing tool with capabilities similar to Illustrator, Freehand, and CorelDraw that uses SVG\")")) nil]
["innocentp" nil nil nil nil nil nil ((timestamp . "2013-03-18") (notes . "(\"noecho Haha! no\")")) nil]
["inputenc" nil nil nil nil nil nil ((timestamp . "2009-12-07") (notes . "(\"http://www.tug.org/texmf-dist/doc/latex/base/inputenc.pdf\")")) nil]
["INS" nil nil nil nil nil nil ((timestamp . "2010-09-18") (notes . "(\"The Immigration and Naturalization Service\")")) nil]
["insanep" nil nil nil nil nil nil ((timestamp . "2012-08-08") (notes . "(\"lisp (evenp (random 100))\")")) nil]
["InsertAlphabet" nil nil nil nil nil nil ((timestamp . "2011-08-05") (notes . "(\"(mapcar (lambda (c) (insert c) (newline)) (number-sequence ?a ?z))\")")) nil]
["insertdate" nil nil nil nil nil nil ((timestamp . "2004-04-13") (notes . "(\"redirect insert-date\")")) nil]
["install-info" nil nil nil nil nil nil ((timestamp . "2006-02-07") (notes . "(\"another grey hair on the programmer's balding head.\")")) nil]
["InstallOctave" nil nil nil nil nil nil ((timestamp . "2005-06-17") (notes . "(\"redirect OctaveInstall\")")) nil]
["instrumenting" nil nil nil nil nil nil ((timestamp . "2005-03-31") (notes . "(\"when existing code is modified to call some extra subroutines. This is used by profilers and debuggers.\" \"use C-u C-M-x on a defun calls code which autoloads edebug...\" \"done by elp (elisp profiler) and edebug (elisp debugger) for example\")")) nil]
["insult" nil nil nil nil nil nil ((timestamp . "2013-11-19") (notes . "(\"lisp (let ((victim (if lispargs (stringify-symbol-list lispargs) nick)) (insult-1 (random-choose (notes \\\"insult-list-1\\\"))) (insult-2 (random-choose (notes \\\"insult-list-2\\\"))) (insult-3 (random-choose (notes \\\"insult-list-3\\\")))) (format \\\"%s, you %s %s %s!\\\" victim insult-1 insult-2 insult-3))\")")) nil]
["insult-list-1" nil nil nil nil nil nil ((timestamp . "2013-12-07") (notes . "(\"lazy\" \"stupid\" \"insecure\" \"idiotic\" \"slimy\" \"smelly\" \"pompous\" \"communist\" \"dicknose\" \"pie-eating\" \"racist\" \"elitist\" \"white trash\" \"drug-loving\" \"butterface\" \"tone deaf\" \"ugly\" \"creepy\")")) nil]
["insult-list-2" nil nil nil nil nil nil ((timestamp . "2013-11-19") (notes . "(\"douche\" \"ass\" \"turd\" \"rectum\" \"butt\" \"cock\" \"shit\" \"crotch\" \"bitch\" \"prick\" \"slut\" \"taint\" \"fuck\" \"dick\" \"boner\" \"nut\" \"sphincter\")")) nil]
["insult-list-3" nil nil nil nil nil nil ((timestamp . "2013-11-19") (notes . "(\"pilot\" \"canoe\" \"captain\" \"pirate\" \"hammer\" \"knob\" \"box\" \"jockey\" \"nazi\" \"waffle\" \"goblin\" \"blossom\" \"biscuit\" \"clown\" \"socket\" \"monster\" \"hound\" \"dragon\" \"balloon\")")) nil]
["IntelligentLifeSingularity" nil nil nil nil nil nil ((timestamp . "2003-03-18") (notes . "(\"at http://www.ugcs.caltech.edu/~phoenix/vinge/vinge-sing.html\")")) nil]
["intellisense" nil nil nil nil nil nil ((timestamp . "2010-06-15") (notes . "(\"http://cedet.sourceforge.net/intellisense.shtml\" \"see esense for Erlang\" \"http://charlespetzold.com/etc/DoesVisualStudioRotTheMind.html\")")) nil]
["interactive-fleshlight" nil nil nil nil nil nil ((timestamp . "2010-08-25") (notes . "(\"http://www.slashdong.org/2008/04/10/too-much-information-about-the-interactive-fleshlight/ (blame qDot)\")")) nil]
["intercal" nil nil nil nil nil nil ((timestamp . "2007-02-20") (notes . "(\"a parody programming language\" \"http://en.wikipedia.org/wiki/Intercal\")")) nil]
["intermud" nil nil nil nil nil nil ((timestamp . "2005-04-01") (notes . "(\"a protocol used by some MUDs to communicate with each other over UDP. Intermud has channels.\")")) nil]
["internet" nil nil nil nil nil nil ((timestamp . "2014-01-15") (notes . "(\"a series of tubes\" \"\\\"I read the internet for the articles.\\\"\" \"the devil\" \"serious business\" \"Rule #1 of the internet: People love to whine; everything else follows from there.\" \"a place for bitch that more you have money and/or political power, more your services are speed. http://ibnlive.in.com/news/net-neutrality-rules-struck-down-by-court-is-open-internet-dead/445508-11.html\")")) nil]
["InternetRelayChat" nil nil nil nil nil nil ((timestamp . "2004-03-29") (notes . "(\"redirect IRC\")")) nil]
["InternetSlang" nil nil nil nil nil nil ((timestamp . "2006-05-17") (notes . "(\"http://en.wikipedia.org/wiki/List_of_Internet_slang\")")) nil]
["InterOp" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?InterOp\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?InterOp\")")) nil]
["intertwingled" nil nil nil nil nil nil ((timestamp . "2006-08-28") (notes . "(\"the definition of twb's mind\")")) nil]
["intlfonts" nil nil nil nil nil nil ((timestamp . "2003-08-22") (notes . "(\"redirect internationalfonts\")")) nil]
["introspector" nil nil nil nil nil nil ((timestamp . "2003-02-12") (notes . "(\"http://introspector.sourceforge.net/ , a project that mdupont is working on\" \"an user of swig\" \"an user of redland\" \"an user of RDF\")")) nil]
["intuitive" nil nil nil nil nil nil ((timestamp . "2010-10-26") (notes . "(\"the only truly intuitive interface is the nipple\" \"did you mean familiar\")")) nil]
["invalid-function" nil nil nil nil nil nil ((timestamp . "2005-03-23") (notes . "(\"a common error -- check whether you have too many parenthesis: ((foo)) will call the function (foo) instead of foo. Chances are the list with the single element foo is not a function...\")")) nil]
["inverse" nil nil nil nil nil nil ((timestamp . "2012-09-27") (notes . "(\"n^-1 for n\")")) nil]
["InverseRegexp" nil nil nil nil nil nil ((timestamp . "2003-05-04") (notes . "(\"redirect HideLines\")")) nil]
["InvertRegexp" nil nil nil nil nil nil ((timestamp . "2003-05-04") (notes . "(\"redirect HideLines\")")) nil]
["invisible-death" nil nil nil nil nil nil ((timestamp . "2012-07-08") (notes . "(\"The shift away from dying at home, towards dying in a professionalized medical environment, has been termed the \\\"Invisible Death\\\".\")")) nil]
["invisible-knapsack" nil nil nil nil nil nil ((timestamp . "2013-03-09") (notes . "(\"http://ted.coe.wayne.edu/ele3600/mcintosh.html\")")) nil]
["inxi" nil nil nil nil nil nil ((timestamp . "2013-02-14") (notes . "(\"a sysinfo bash script\")")) nil]
["IO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Input/Output\")")) nil]
["IOCTL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Input/Output Control\")")) nil]
["ion" nil nil nil nil nil nil ((timestamp . "2006-03-06") (notes . "(\"a window manager with auto-fitting of windows at http://www.modeemi.fi/~tuomov/ion/\" \"http://www.modeemi.fi/~tuomov/ion/intro.html#manifesto\")")) nil]
["ion3" nil nil nil nil nil nil ((timestamp . "2006-01-16") (notes . "(\"redirect ion\")")) nil]
["IOW" nil nil nil nil nil nil ((timestamp . "2010-09-20") (notes . "(\"In Other Words\")")) nil]
["IowaIdeafuturesmarket" nil nil nil nil nil nil ((timestamp . "2004-08-04") (notes . "(\"redirect IdeaFuturesMarket\")")) nil]
["IP" nil nil nil nil nil nil ((timestamp . "2012-06-12") (notes . "(\"short for Internet Protocol\" \"Imaginary Property\")")) nil]
["IPA" nil nil nil nil nil nil ((timestamp . "2013-07-02") (notes . "(\"an acronym for ɪntəˈnæʃənəl fəˈnɛtɪk ˈælfəbɪt\" \"india pale ale\" \"http://users.pepperfish.net/vivek/pronunciation.txt\")")) nil]
["ipa-fix" nil nil nil nil nil nil ((timestamp . "2011-07-29") (notes . "(\"try http://www.ninkasibrewing.com/beers/\")")) nil]
["iphone" nil nil nil nil nil nil ((timestamp . "2011-07-05") (notes . "(\"http://paste.lisp.org/display/43724\" \"\\\"tomorrow, the world will be a completely different place, after the release of the 3G iPhone\\\" -- E1f\")")) nil]
["IPNG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Protocol, Next Generation\")")) nil]
["ipoac" nil nil nil nil nil nil ((timestamp . "2013-06-27") (notes . "(\"IP over Avian Carriers, http://en.wikipedia.org/wiki/IP_over_Avian_Carriers\")")) nil]
["ipod" nil nil nil nil nil nil ((timestamp . "2007-09-06") (notes . "(\"like twb's verbal abuse\")")) nil]
["iproduct" nil nil nil nil nil nil ((timestamp . "2008-06-10") (notes . "(\"http://www.aboyandhiscomputer.com/images/Announcing_the_Apple_iProduct.gif\")")) nil]
["IPSEC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Protocol Security\")")) nil]
["Ipv6" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"version 6 of the Internet Protocol, intended to replace Ipv4\" \"A nice introduction is at http://www.raiden.net/techhelp/intro-ipv6.htm\" \"at http://en.wikipedia.org/wiki/IPv6\")")) nil]
["IPv6-ready" nil nil nil nil nil nil ((timestamp . "2011-06-07") (notes . "(\"noecho yes.\")")) nil]
["iraq" nil nil nil nil nil nil ((timestamp . "2008-10-08") (notes . "(\"a country that needs some hope\")")) nil]
["IRC" nil nil nil nil nil nil ((timestamp . "2015-07-02") (notes . "(\"srs bsns: http://jordi.platinum.linux.pl/piccies/irc.jpg\")")) nil]
["irc-bots" nil nil nil nil nil nil ((timestamp . "2004-02-02") (notes . "(\"birny, bobot++ (apt, dpkg in #debian), blootbot, dancer, eggdrop, erbot (fsbot), erc-robot, madoka-bot, iroffer, moobot, maderlbot , minion, mozbot (perl), plum, etc.\" \"In debian, 'apt-cache search irc | grep bot'\")")) nil]
["irc-control-codes" nil nil nil nil nil nil ((timestamp . "2012-01-13") (notes . "(\"0x2 (^B) -> bold\" \"0x16 (^V) -> reverse\")")) nil]
["ircclients" nil nil nil nil nil nil ((timestamp . "2009-08-05") (notes . "(\"erc, zenirc, liece, riece, irchat, kiwi, rockers (irc-mode), emirc, rcirc, circe, elim\")")) nil]
["ircprimer" nil nil nil nil nil nil ((timestamp . "2007-07-08") (notes . "(\"http://www.irchelp.org/irchelp/ircprimer.html\")")) nil]
["IRL" nil nil nil nil nil nil ((timestamp . "2003-02-14") (notes . "(\"In Real Life\")")) nil]
["irobot" nil nil nil nil nil nil ((timestamp . "2005-07-19") (notes . "(\"a lisp shop, deego heard.\")")) nil]
["IRQ" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Interrupt Request\")")) nil]
["irssi" nil nil nil nil nil nil ((timestamp . "2008-09-11") (notes . "(\"an irc client\" \"Perl and mIRC colors! Oh my!\")")) nil]
["IRTF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Research Task Force\")")) nil]
["IS" nil nil nil nil nil nil ((timestamp . "2013-08-29") (notes . "(\"short for Information Services, a synonym for the equally vacuous term \\\"Information Technology\\\"\")")) nil]
["is-a" nil nil nil nil nil nil ((timestamp . "2003-02-12") (notes . "(\"[is-a] [Predicate]\")")) nil]
["is-there-is-elisp-for-this?" nil nil nil nil nil nil ((timestamp . "2013-04-12") (notes . "(\"noecho Yes! There is elisp for that!\")")) nil]
["is-this-reasonable-p" nil nil nil nil nil nil ((timestamp . "2012-11-27") (notes . "(\"noecho no\")")) nil]
["isa" nil nil nil nil nil nil ((timestamp . "2010-10-19") (notes . "(\"instruction set architecture, see http://en.wikipedia.org/wiki/Instruction_set\")")) nil]
["ISAGN" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for I See A Great Need\")")) nil]
["ISDN" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Integrated Services Digital Network\")")) nil]
["isho" nil nil nil nil nil nil ((timestamp . "2005-04-06") (notes . "(\"I Should Hope So\")")) nil]
["ISIRTA" nil nil nil nil nil nil ((timestamp . "2006-04-22") (notes . "(\"http://en.wikipedia.org/wiki/I%27m_Sorry_I%27ll_Read_That_Again\" \"the flagship programme of Radio Prune\")")) nil]
["IsItPossible" nil nil nil nil nil nil ((timestamp . "2006-08-11") (notes . "(\"unecho Yes it is. Please reframe your question using \\\"How can I\\\" :-)\")")) nil]
["isitup" nil nil nil nil nil nil ((timestamp . "2009-03-17") (notes . "(\"http://www.downforeveryoneorjustme.com\")")) nil]
["islam" nil nil nil nil nil nil ((timestamp . "2005-07-27") (notes . "(\"at http://answering-islam.org.uk/Authors/Wood/two_faces.htm\")")) nil]
["ismarmaladeuprightnow" nil nil nil nil nil nil ((timestamp . "2013-04-09") (notes . "(\"lisp (random-choose '(\\\"yes\\\" \\\"no\\\" \\\"of course!\\\" \\\"of course not!\\\" \\\"all signs point to maybe\\\" \\\"do i look like http://downforeveryoneorjustme.com to you?\\\"))\")")) nil]
["ISO" nil nil nil nil nil nil ((timestamp . "2007-03-02") (notes . "(\"See FAQ 3.3, or make your own: see the /topic.\")")) nil]
["iso-latin-1" nil nil nil nil nil nil ((timestamp . "2004-10-13") (notes . "(\"iso-8859-1 is the canonical (western) european character set with german umlauts etc.\")")) nil]
["ISO9660" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for The De-Facto Standard Format For Data CDs.\")")) nil]
["ISOC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Society\")")) nil]
["isoemu" nil nil nil nil nil nil ((timestamp . "2006-07-16") (notes . "(\"Boot from an ISO file located on a FAT32/NTFS partition\" \"http://sysoft.zdwx.com/isoemu/bin/ReadME-eng.txt\" \"not a processor emulator\")")) nil]
["isorules" nil nil nil nil nil nil ((timestamp . "2009-02-12") (notes . "(\"ISO rules for mathematical typesetting at http://www.tug.org/TUGboat/Articles/tb18-1/tb54becc.pdf\")")) nil]
["ISP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Internet Service Provider\")")) nil]
["ispell" nil nil nil nil nil nil ((timestamp . "2003-05-22") (notes . "(\"redirect interactivespell\")")) nil]
["israel" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"a democratic country in the middle east\" \"http://israel.gov.il/eng/mainpage.asp\")")) nil]
["ISS" nil nil nil nil nil nil ((timestamp . "2013-05-14") (notes . "(\"International Space Station\")")) nil]
["ISTM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for It Seems To Me\")")) nil]
["ISTR" nil nil nil nil nil nil ((timestamp . "2012-10-03") (notes . "(\"I seem to recall \")")) nil]
["iswtig" nil nil nil nil nil nil ((timestamp . "2012-02-28") (notes . "(\"i see where this is going\")")) nil]
["iswydt" nil nil nil nil nil nil ((timestamp . "2011-11-09") (notes . "(\"i see what you did there\")")) nil]
["isyn" nil nil nil nil nil nil ((timestamp . "2012-09-26") (notes . "(\"short for I Shit You Not\")")) nil]
["it-crowd" nil nil nil nil nil nil ((timestamp . "2014-01-21") (notes . "(\"redirect turn-it-off\")")) nil]
["itbwtcl" nil nil nil nil nil nil ((timestamp . "2010-09-13") (notes . "(\"http://en.wikipedia.org/wiki/In_the_Beginning..._Was_the_Command_Line\" \"see ,NealStephenson\")")) nil]
["iterate" nil nil nil nil nil nil ((timestamp . "2012-05-19") (notes . "(\"Don't Loop, Iterate!\" \"at http://common-lisp.net/project/iterate/doc/Don_0027t-Loop-Iterate.html\")")) nil]
["iteration" nil nil nil nil nil nil ((timestamp . "2006-05-15") (notes . "(\"human; recursion, divine\")")) nil]
["iterm2" nil nil nil nil nil nil ((timestamp . "2011-10-01") (notes . "(\"a terminal emulator for osx and the successor to iterm, see http://www.iterm2.com/#/section/home\" \"source at https://github.com/gnachman/iTerm2\")")) nil]
["ithm" nil nil nil nil nil nil ((timestamp . "2013-02-02") (notes . "(\"i think he means\")")) nil]
["ITM" nil nil nil nil nil nil ((timestamp . "2004-01-20") (notes . "(\"an acronym for \\\"in the meantime\\\"\")")) nil]
["ItoA" nil nil nil nil nil nil ((timestamp . "2006-12-13") (notes . "(\"Introduction to Algorithms by Cormen, Leiserson, Rivest, and Stein.\")")) nil]
["itp" nil nil nil nil nil nil ((timestamp . "2006-06-05") (notes . "(\"Intent to Package, a procedure used by distributions to announce and/or request review of a new package\" \"a special kind of of \\\"bug\\\" in the Debian bug tracking system\")")) nil]
["itrans" nil nil nil nil nil nil ((timestamp . "2005-04-11") (notes . "(\"at http://sanskrit.gde.to/dict/itrans.html\")")) nil]
["its" nil nil nil nil nil nil ((timestamp . "2011-04-28") (notes . "(\"http://angryflower.com/bobsqu.gif\")")) nil]
["its-only-like-three-remotes" nil nil nil nil nil nil ((timestamp . "2011-10-28") (notes . "(\"\\\"It's not that hard. What do you want to do?\\\" http://www.penny-arcade.com/comic/2003/05/09\")")) nil]
["ityf" nil nil nil nil nil nil ((timestamp . "2004-04-02") (notes . "(\"noecho I think you'll find\")")) nil]
["itym" nil nil nil nil nil nil ((timestamp . "2004-07-21") (notes . "(\"I Think You Mean\")")) nil]
["ivan-crap" nil nil nil nil nil nil ((timestamp . "2011-06-22") (notes . "(\"you can make crap with any computer language\")")) nil]
["ivan-fix" nil nil nil nil nil nil ((timestamp . "2012-12-20") (notes . "(\"just use vim\")")) nil]
["iwb" nil nil nil nil nil nil ((timestamp . "2011-02-02") (notes . "(\"to indent the whole buffer, do C-x h C-M-\\\\\")")) nil]
["iwb-fix" nil nil nil nil nil nil ((timestamp . "2012-05-02") (notes . "(\"Most things can be fixed by indenting the whole buffer.\")")) nil]
["IWBNI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for It Would Be Nice If\")")) nil]
["IWFM" nil nil nil nil nil nil ((timestamp . "2004-06-03") (notes . "(\"noecho It Works For Me\")")) nil]
["IWLTSTYN" nil nil nil nil nil nil ((timestamp . "2010-03-16") (notes . "(\"I Would Like to Subscribe to Your Newsletter\")")) nil]
["iww" nil nil nil nil nil nil ((timestamp . "2005-09-17") (notes . "(\"the acronym for the \\\"Industrial Workers of the World\\\", a syndicalist union active mainly in the U.S.. They have a web presence at http://www.iww.org.\")")) nil]
["ix.io" nil nil nil nil nil nil ((timestamp . "2013-05-26") (notes . "(\"a simpler paste bin than paste.lisp.org\")")) nil]
["IYFEGH" nil nil nil nil nil nil ((timestamp . "2006-04-24") (notes . "(\"Insert Your Favourite Ethnic Group Here\")")) nil]
["iykwim" nil nil nil nil nil nil ((timestamp . "2011-03-27") (notes . "(\"if you know what I mean\")")) nil]
["IYNSHO" nil nil nil nil nil nil ((timestamp . "2004-10-07") (notes . "(\"an acronym for \\\"in your not so humble opinion\\\"...\")")) nil]
["iyo" nil nil nil nil nil nil ((timestamp . "2002-09-22") (notes . "(\"In Your Opinion (right?)\")")) nil]
["IYSS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for If You Say So\")")) nil]
["iyswim" nil nil nil nil nil nil ((timestamp . "2005-05-29") (notes . "(\"If You See What I Mean\")")) nil]
["iä" nil nil nil nil nil nil ((timestamp . "2008-08-20") (notes . "(\"noecho Ph'nglui mglw'nafh Cthulhu R'lyeh wgah'nagl fhtagn.\")")) nil]
["j" nil nil nil nil nil nil ((timestamp . "2003-06-18") (notes . "(\"at http://www.jsoftware.com/\")")) nil]
["j/k" nil nil nil nil nil nil ((timestamp . "2002-11-16") (notes . "(\"\\\"just kidding\\\"\")")) nil]
["jacquards" nil nil nil nil nil nil ((timestamp . "2013-05-28") (notes . "(\"noecho WEAVE HIM!!\")")) nil]
["jad" nil nil nil nil nil nil ((timestamp . "2007-12-21") (notes . "(\"the fast Java decompiler at http://www.kpdus.com/jad.html\")")) nil]
["jaded" nil nil nil nil nil nil ((timestamp . "2007-12-03") (notes . "(\"what we've become\")")) nil]
["JAEU" nil nil nil nil nil nil ((timestamp . "2005-04-03") (notes . "(\"Just Another Editor User\")")) nil]
["jam" nil nil nil nil nil nil ((timestamp . "2007-02-16") (notes . "(\"a software build tool from Perforce\")")) nil]
["jambunathan-fix" nil nil nil nil nil nil ((timestamp . "2014-01-06") (notes . "(\"noecho Most problems can be solved by proposing votes of no confidence against popular project maintainers and then threatening to retract your FSF-assigned code, while still submitting patches to said code.\")")) nil]
["james-duncan-davidson" nil nil nil nil nil nil ((timestamp . "2012-08-02") (notes . "(\"the inventor of ANT, the Java build tool.\")")) nil]
["jannie" nil nil nil nil nil nil ((timestamp . "2013-09-28") (notes . "(\"JordiGH's SO, now shut up about it already\" \"you wouldn't know her. she lives in canada.\")")) nil]
["jargon" nil nil nil nil nil nil ((timestamp . "2012-01-31") (notes . "(\"http://catb.org/esr/jargon\" \"the Jargon File, often quoted as the canonical collection of hacker slang.\")")) nil]
["jarvis" nil nil nil nil nil nil ((timestamp . "2013-05-04") (notes . "(\"tony stark's artificial intelligence, to which fsbot aspires.\")")) nil]
["java2k" nil nil nil nil nil nil ((timestamp . "2011-09-16") (notes . "(\"http://p-nand-q.com/humor/programming_languages/java2k.html\" \"using a 11-based number system, which is a very good approximation of the 10-based decimal system for many purposes, including counting up to and including 9.\")")) nil]
["javadoc-lookup" nil nil nil nil nil nil ((timestamp . "2013-05-05") (notes . "(\"https://github.com/skeeto/javadoc-lookup\")")) nil]
["javagirl" nil nil nil nil nil nil ((timestamp . "2011-10-02") (notes . "(\"she lives in canada, JordiGH met her at Niagara Falls. You wouldn't know her.\")")) nil]
["javaos" nil nil nil nil nil nil ((timestamp . "2010-08-04") (notes . "(\"http://java.sun.com/developer/products/JavaOS/\" \"see ,jnode\" \"see ,jos\" \"see ,jx\")")) nil]
["javap-mode" nil nil nil nil nil nil ((timestamp . "2011-05-03") (notes . "(\"for disassembling JVM bytecode\" \"https://github.com/hiredman/javap-mode\" \"see https://github.com/hiredman/javap-mode for an example\")")) nil]
["javaschools" nil nil nil nil nil nil ((timestamp . "2006-05-09") (notes . "(\"http://www.joelonsoftware.com/articles/ThePerilsofJavaSchools.html\")")) nil]
["javascript" nil nil nil nil nil nil ((timestamp . "2013-08-02") (notes . "(\"scheme with a bad syntax (and standardized bugs)\" \"see also JavascriptMode\" \"http://tinyurl.com/7j3k86p\" \"better with forked js2-mode https://github.com/mooz/js2-mode - it even has a load hook!\" \"http://journal.stuffwithstuff.com/2013/07/18/javascript-isnt-scheme/\")")) nil]
["javascript-trap" nil nil nil nil nil nil ((timestamp . "2012-01-27") (notes . "(\"at http://www.gnu.org/philosophy/javascript-trap.html\")")) nil]
["jave" nil nil nil nil nil nil ((timestamp . "2013-01-05") (notes . "(\"cool.\")")) nil]
["JB" nil nil nil nil nil nil ((timestamp . "2011-08-04") (notes . "(\"James Brown, the Godfather of Soul, the Hardest-Working Man in Show Business, R.I.P.\")")) nil]
["JB'd" nil nil nil nil nil nil ((timestamp . "2007-01-26") (notes . "(\"\\\"taken out back and hot\\\"\")")) nil]
["JBTech" nil nil nil nil nil nil ((timestamp . "2003-03-24") (notes . "(\"a genius\")")) nil]
["jde" nil nil nil nil nil nil ((timestamp . "2011-03-02") (notes . "(\"redirect JavaDevelopmentEnvironment\")")) nil]
["jdee" nil nil nil nil nil nil ((timestamp . "2004-11-22") (notes . "(\"redirect jde\")")) nil]
["jedgar" nil nil nil nil nil nil ((timestamp . "2010-03-09") (notes . "(\"see ,spook\")")) nil]
["JediMindTricks" nil nil nil nil nil nil ((timestamp . "2011-09-09") (notes . "(\"lisp (mapconcat 'identity (reverse (split-string \\\"gnolaevom,\\\\n?ssenisub\\\\n?noitacifitnedi\\\\n?sdiord\\\" \\\"\\\")) \\\"\\\")\")")) nil]
["Jekyll" nil nil nil nil nil nil ((timestamp . "2012-06-09") (notes . "(\"a static web site generator written in Ruby https://github.com/mojombo/jekyll/wiki\")")) nil]
["jenkem" nil nil nil nil nil nil ((timestamp . "2007-12-08") (notes . "(\"fermented shit and piss that gets you high\" \"a hoax http://www.erowid.org/ask/ask.php?ID=3113\")")) nil]
["jenny18" nil nil nil nil nil nil ((timestamp . "2013-09-02") (notes . "(\"http://virt.vgmix.com/jenny18/\" \"A Cybersex Bot Implemented in Eliza\" \"<ggole> Isn't that qdot's specialty?\")")) nil]
["jerkcity" nil nil nil nil nil nil ((timestamp . "2010-10-31") (notes . "(\"http://github.com/qdot/jerkcity-project/blob/master/elisp/jerkcity.el\" \"http://www.jerkcity.com\")")) nil]
["jes" nil nil nil nil nil nil ((timestamp . "2010-09-23") (notes . "(\"Sun's Java Enterprise System; see http://en.wikipedia.org/wiki/Sun_Java_System\")")) nil]
["jess" nil nil nil nil nil nil ((timestamp . "2006-04-07") (notes . "(\"rule engine and scripting environment written entirely in Java http://herzberg.ca.sandia.gov/jess/\")")) nil]
["jesse_132" nil nil nil nil nil nil ((timestamp . "2003-02-16") (notes . "(\"a bot\")")) nil]
["jessmode" nil nil nil nil nil nil ((timestamp . "2006-04-07") (notes . "(\"a mode to develop jess applications http://jess-mode.sourceforge.net/\")")) nil]
["jesus" nil nil nil nil nil nil ((timestamp . "2010-12-19") (notes . "(\"http://i.imgur.com/jpWXx.jpg\")")) nil]
["JET" nil nil nil nil nil nil ((timestamp . "2004-11-22") (notes . "(\"at http://www.excelsior-usa.com/jet.html\")")) nil]
["jetbrains" nil nil nil nil nil nil ((timestamp . "2011-12-18") (notes . "(\"http://www.jetbrains.com/\")")) nil]
["jezebel" nil nil nil nil nil nil ((timestamp . "2012-03-15") (notes . "(\"an experimental approach to language support using parser combinators\" \"https://github.com/dcolascione/jezebel\" \"a more general approach than ,smie\")")) nil]
["jfdi" nil nil nil nil nil nil ((timestamp . "2012-08-31") (notes . "(\"Just Fucking Do It a philosophy for programming.\")")) nil]
["jfgi" nil nil nil nil nil nil ((timestamp . "2006-05-09") (notes . "(\"http://www.ee.ryerson.ca/~elf/reeality/archive/2004/strips/2004/reeality141.jpg\" \"\\\"Just Fscking Google It\\\"\")")) nil]
["jftr" nil nil nil nil nil nil ((timestamp . "2008-04-05") (notes . "(\"just for the record\")")) nil]
["jgh" nil nil nil nil nil nil ((timestamp . "2010-02-09") (notes . "(\"likes to troll ams\")")) nil]
["jgh-fix" nil nil nil nil nil nil ((timestamp . "2011-07-18") (notes . "(\"most problems can be fixed with another fix of mate\")")) nil]
["JIC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Just In Case\")")) nil]
["jif" nil nil nil nil nil nil ((timestamp . "2010-01-23") (notes . "(\"peanut butter\")")) nil]
["jigdo" nil nil nil nil nil nil ((timestamp . "2005-01-03") (notes . "(\"a method of downloading Debian images which can reuse your old image and download minimal stuff from the fastest mirrors\")")) nil]
["jit" nil nil nil nil nil nil ((timestamp . "2012-11-15") (notes . "(\"Just In Time compilation\")")) nil]
["jitsi" nil nil nil nil nil nil ((timestamp . "2011-06-25") (notes . "(\"http://www.jitsi.org/\" \"previously SIP Communicator\")")) nil]
["JK" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Just Kidding\")")) nil]
["jka-compr" nil nil nil nil nil nil ((timestamp . "2012-02-17") (notes . "(\"(auto-compression-mode +1) for transparent de/recompression of .gz, .tgz and .zip files.\" \"see also ,AutoCompressionMode\")")) nil]
["jlf" nil nil nil nil nil nil ((timestamp . "2014-01-10") (notes . "(\"the dude\" \"Now, \\\"Dude\\\" -- that's a name no one would self-apply where jlf comes from\")")) nil]
["jlf-fix2" nil nil nil nil nil nil ((timestamp . "2013-11-05") (notes . "(\"lisp (if lispargs (format \\\"/me solves the \\\\\\\"%s\\\\\\\" problem by total annihilation\\\" (stringify-symbol-list lispargs)) \\\"Some problems are only solvable by total annihilation\\\")\")")) nil]
["jlf-nicferrier-fix" nil nil nil nil nil nil ((timestamp . "2013-05-29") (notes . "(\"noecho most problems can be fixed by coding exclusively in elisp while drinking a Hendrick's martini\")")) nil]
["jlf-tali713-fix" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"most problems can be solved by describing hendrick's martini recipes in Lisp.\")")) nil]
["jlf-topic-hack" nil nil nil nil nil nil ((timestamp . "2013-11-03") (notes . "(\"http://paste.lisp.org/display/139766\")")) nil]
["jlf\\'s-law" nil nil nil nil nil nil ((timestamp . "2011-05-27") (notes . "(\"sufficiently advanced ignorance is indistinguishable from trolling\")")) nil]
["jlfklaxon" nil nil nil nil nil nil ((timestamp . "2013-05-06") (notes . "(\"anyone\")")) nil]
["jlfs-law" nil nil nil nil nil nil ((timestamp . "2012-10-15") (notes . "(\"sufficiently advanced ignorance is indistinguishable from trolling.\")")) nil]
["jlfs-maxim-of-return-codes" nil nil nil nil nil nil ((timestamp . "2013-10-28") (notes . "(\"successful function calls are all alike; every unsuccessful function fails in its own way.\")")) nil]
["jlfs-razor" nil nil nil nil nil nil ((timestamp . "2011-11-01") (notes . "(\"when in doubt, suspect misanthropy\")")) nil]
["jlfs-third-law" nil nil nil nil nil nil ((timestamp . "2013-01-29") (notes . "(\"noecho There is no jlfs-second-law\")")) nil]
["jlfsnack" nil nil nil nil nil nil ((timestamp . "2012-10-10") (notes . "(\"noecho /me gives jlf a martini ice-lolly\")")) nil]
["jlt" nil nil nil nil nil nil ((timestamp . "2004-06-04") (notes . "(\"just like that\")")) nil]
["jmaslibre" nil nil nil nil nil nil ((timestamp . "2007-12-14") (notes . "(\"http://jmaslibre.wordpress.com\")")) nil]
["JMD" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?JMD\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?JMD\" \"at http://www.gnufans.net/fsedu.pl?Jmd\")")) nil]
["JMO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Just My Opinion\")")) nil]
["jnode" nil nil nil nil nil nil ((timestamp . "2010-08-04") (notes . "(\"http://www.jnode.org/\")")) nil]
["joannac" nil nil nil nil nil nil ((timestamp . "2011-12-21") (notes . "(\"the wiki master\")")) nil]
["joe" nil nil nil nil nil nil ((timestamp . "2012-05-25") (notes . "(\"Joe's Own Editor at http://joe-editor.sourceforge.net/\")")) nil]
["john-galt" nil nil nil nil nil nil ((timestamp . "2012-12-18") (notes . "(\"a shibboleth of pseudo-intellectual right-wing wackos\")")) nil]
["john-galt-fix" nil nil nil nil nil nil ((timestamp . "2011-04-04") (notes . "(\"noecho Most problems can be solved by the sweat of yer goddam brow, slacker\")")) nil]
["john`" nil nil nil nil nil nil ((timestamp . "2012-12-29") (notes . "(\"the one which don't know from where it comes!\")")) nil]
["johngalt" nil nil nil nil nil nil ((timestamp . "2012-12-18") (notes . "(\"a shibboleth of pseudo-intellectual right-wing wackos\")")) nil]
["johnw" nil nil nil nil nil nil ((timestamp . "2003-01-15") (notes . "(\"redirect JohnWiegley\")")) nil]
["johnwsnack" nil nil nil nil nil nil ((timestamp . "2012-10-10") (notes . "(\"noecho /me gives johnw a piece of bacon-wrapped bacon on a plate made out of a bacon\")")) nil]
["join" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://www.fsf.org/jfb\")")) nil]
["joint" nil nil nil nil nil nil ((timestamp . "2005-05-08") (notes . "(\"lisp (concat \\\"/me rolls a \\\" (random-choose '(\\\"spliff\\\" \\\"joint\\\")) \\\" with some \\\" (random-choose '(\\\"fine\\\" \\\"nice\\\" \\\"great\\\")) \\\" \\\" (random-choose '(\\\"Acapulco gold\\\" \\\"Charas\\\" \\\"Ganja\\\" \\\"Jamaican gold\\\" \\\"Kali\\\" \\\"Silver haze\\\" \\\"Super Skunk\\\" \\\"Triple Skunk\\\" \\\"Shiva Shanti\\\" \\\"Early Pearl\\\" \\\"Hindu Kush\\\" \\\"Silver Pearl\\\" \\\"Northern Lights\\\" \\\"Jack Herer\\\" \\\"Shiva Skunk\\\" \\\"Skunk Kush\\\" \\\"Jamaican Pearl\\\")) \\\" and hands it to \\\" (or lispb lispa nick) \\\", \\\\\\\"Fire it up!\\\\\\\"\\\")\" \"reefer\")")) nil]
["joost" nil nil nil nil nil nil ((timestamp . "2007-05-04") (notes . "(\"tv broadcast with bittorrent-like technology (http://www.joost.com)\")")) nil]
["jordan-the-great" nil nil nil nil nil nil ((timestamp . "2005-01-26") (notes . "(\"a nutcase\")")) nil]
["jordanbfury" nil nil nil nil nil nil ((timestamp . "2010-08-16") (notes . "(\"xkcd\")")) nil]
["JordanG" nil nil nil nil nil nil ((timestamp . "2008-07-27") (notes . "(\"not jordanb\")")) nil]
["jordi-unfix" nil nil nil nil nil nil ((timestamp . "2011-11-15") (notes . "(\"noecho Most problems can be started by installing git.\")")) nil]
["JordiGH" nil nil nil nil nil nil ((timestamp . "2014-01-08") (notes . "(\"our resident Crazy Mexican\" \"a freetard\" \"a Bitcoin fanboy\" \"Jordi Git Hate\" \"a maintainer for GNU Octave\" \"really anal about his botbbdb entry\" \"a metallica hairdo afficionado\")")) nil]
["jordigh-demo" nil nil nil nil nil nil ((timestamp . "2013-02-01") (notes . "(\"lisp (format \\\"Test: %s\\\" (stringify-symbol-list lispargs))\")")) nil]
["jordigh-fix" nil nil nil nil nil nil ((timestamp . "2011-11-18") (notes . "(\"noecho Most problems can be solved by deleting git remotely.\")")) nil]
["JordiGH-rant" nil nil nil nil nil nil ((timestamp . "2011-10-19") (notes . "(\"noecho omg git sucks!!11\")")) nil]
["jordigh-snack" nil nil nil nil nil nil ((timestamp . "2013-02-18") (notes . "(\"noecho rm -f /usr/bin/git\")")) nil]
["jordighfaq" nil nil nil nil nil nil ((timestamp . "2012-05-03") (notes . "(\"I like almost any DVCS other than git. Mercurial, Bazaar, and darcs are all enjoyable.\" \"\\\"Jordi\\\" is not Spanish. It's Catalan. The \\\"J\\\" is closer to an English \\\"J\\\" than a Spanish one. It's even closer to a French \\\"J\\\".\" \"I'm not Catalan. I'm Mexican, and I learned my English in snooty all-English school, complete immersion.\" \"I hate git for the following reasons: http://jordi.inversethought.com/blog/enough-git/\" \"http://jordi.platinum.linux.pl/piccies/manolito_git.jpg\")")) nil]
["jordighit" nil nil nil nil nil nil ((timestamp . "2012-05-23") (notes . "(\"noecho /me loads its git and merge --squashes JordiGH\")")) nil]
["jordighs-razor" nil nil nil nil nil nil ((timestamp . "2012-02-21") (notes . "(\"never attribute to stupidity that which is adequately explained by malice\")")) nil]
["jordighsnack" nil nil nil nil nil nil ((timestamp . "2012-11-23") (notes . "(\"noecho /me gives JordiGH a cookie\")")) nil]
["jos" nil nil nil nil nil nil ((timestamp . "2010-08-04") (notes . "(\"http://jos.sourceforge.net/\")")) nil]
["jotspot" nil nil nil nil nil nil ((timestamp . "2004-10-16") (notes . "(\"at http://jot.com/\" \"a wiki with many slick-looking features with a service-hosting plan\" \"not free, or so it seems.\")")) nil]
["Joy" nil nil nil nil nil nil ((timestamp . "2005-06-09") (notes . "(\"a concatenative stack-based purely functional programming language\" \"residing at http://www.latrobe.edu.au/philosophy/phimvt/joy.html\")")) nil]
["JPEG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Joint Photographic Experts Group\")")) nil]
["JPL" nil nil nil nil nil nil ((timestamp . "2007-01-19") (notes . "(\"the NASA Jet Propulsion Laboratory, located in Pasadena, California\")")) nil]
["js" nil nil nil nil nil nil ((timestamp . "2007-09-03") (notes . "(\"redirect javascript\")")) nil]
["js-comint" nil nil nil nil nil nil ((timestamp . "2008-11-05") (notes . "(\"http://sourceforge.net/projects/js-comint-el\")")) nil]
["js-lisp" nil nil nil nil nil nil ((timestamp . "2013-08-19") (notes . "(\"noecho so you want to write a js lisp, huh? please state on your form how it differs from each of http://ceaude.twoticketsplease.de/js-lisps.html\")")) nil]
["js2-mode" nil nil nil nil nil nil ((timestamp . "2012-07-26") (notes . "(\"http://code.google.com/p/js2-mode/\" \"forked at https://github.com/mooz/js2-mode - under active development and with proper white-space\")")) nil]
["js4-mode" nil nil nil nil nil nil ((timestamp . "2013-11-13") (notes . "(\"(not yet) a chupacabric fork of js-mode, js2-mode, and js3-mode\")")) nil]
["jsf" nil nil nil nil nil nil ((timestamp . "2004-04-01") (notes . "(\"mexican\")")) nil]
["jslinux" nil nil nil nil nil nil ((timestamp . "2011-07-05") (notes . "(\"http://bellard.org/jslinux/\")")) nil]
["JsMode" nil nil nil nil nil nil ((timestamp . "2011-05-11") (notes . "(\"redirect espresso\")")) nil]
["jsuix" nil nil nil nil nil nil ((timestamp . "2005-06-16") (notes . "(\"at http://www.masswerk.at/jsuix/\")")) nil]
["Jswee0tu" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Jswee0tu\")")) nil]
["JTLYK" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Just To Let You Know\")")) nil]
["judges" nil nil nil nil nil nil ((timestamp . "2013-03-06") (notes . "(\"lisp (format \\\"It was very close, but %s won by a nose.\\\" nick)\")")) nil]
["jukebox" nil nil nil nil nil nil ((timestamp . "2006-05-14") (notes . "(\"lisp (format \\\"NP: %s by Bon Jovi from their %s album Slippery When Wet\\\" (random-choose '(\\\"You Give Love a Bad Name\\\" \\\"Livin' on a Prayer\\\" \\\"Wanted Dead or Alive\\\" \\\"Without Love\\\" \\\"I'd Die for You\\\" \\\"Let it Rock\\\")) (random-choose '(\\\"crtically acclaimed\\\" \\\"universally loved\\\" \\\"timeless\\\" \\\"hit\\\" \\\"unsurpassed\\\" \\\"univerally praised\\\" \\\"award winning\\\" \\\"unsurpassed\\\" \\\"often imitated\\\")))\")")) nil]
["julia" nil nil nil nil nil nil ((timestamp . "2012-06-17") (notes . "(\"a high-level, high-performance dynamic programming language for technical computing\" \"Apparently like matlab, octave, R and stuff\" \"at http://julialang.org/\")")) nil]
["julian" nil nil nil nil nil nil ((timestamp . "2011-04-30") (notes . "(\"i don't know\")")) nil]
["julliards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho CONSERVATOIRE HIM!!\")")) nil]
["jump-char" nil nil nil nil nil nil ((timestamp . "2013-08-05") (notes . "(\"\\\"isearch\\\" to navigate by char, like vim's 'f' at https://github.com/lewang/jump-char\")")) nil]
["jumpscroll" nil nil nil nil nil nil ((timestamp . "2005-06-13") (notes . "(\"redirect scrolling\")")) nil]
["junis" nil nil nil nil nil nil ((timestamp . "2012-12-20") (notes . "(\"often agro\")")) nil]
["jupiter" nil nil nil nil nil nil ((timestamp . "2006-05-08") (notes . "(\"at http://mirrors.ccs.neu.edu/MOO/papers/JupiterWin.ps\")")) nil]
["just_test" nil nil nil nil nil nil ((timestamp . "2011-02-26") (notes . "(\"just test\" \"not just a test\")")) nil]
["justask" nil nil nil nil nil nil ((timestamp . "2011-08-25") (notes . "(\"redirect asktoask\")")) nil]
["justified" nil nil nil nil nil nil ((timestamp . "2013-01-28") (notes . "(\"noecho \\\"It's from Lebowski. Netflix it and you can be one of the cool kids.\\\"\")")) nil]
["JW" nil nil nil nil nil nil ((timestamp . "2005-11-22") (notes . "(\"a Jehovah's Witness -- infamous for door-knocking and selling copies of \\\"The Watchtower\\\".\")")) nil]
["jwe" nil nil nil nil nil nil ((timestamp . "2011-12-06") (notes . "(\"John W. Eaton: http://en.wikipedia.org/wiki/John_W._Eaton\" \"http://videolectures.net/mloss08_eaton_oct/\" \"the Octave tribal elder\" \"originator of first GNU man implementation\")")) nil]
["jwz-fail" nil nil nil nil nil nil ((timestamp . "2011-11-14") (notes . "(\"some people, when confronted with a problem, think \\\"I know, I'll adapt a jwz quote to the object of my disdain.\\\" Now they have two problems.\")")) nil]
["jwz-fix" nil nil nil nil nil nil ((timestamp . "2013-10-03") (notes . "(\"noecho Most problems can be solved by expanding until you can read mail.\")")) nil]
["jwz-fix2" nil nil nil nil nil nil ((timestamp . "2012-12-18") (notes . "(\"noecho Some people, when confronted with a problem, think “I know, I'll use regular expressions.” Now they have two problems.\")")) nil]
["jwz-law" nil nil nil nil nil nil ((timestamp . "2013-09-24") (notes . "(\"redirect jwzs-law\")")) nil]
["jwz-regex" nil nil nil nil nil nil ((timestamp . "2008-02-04") (notes . "(\"\\\"Some people, when confronted with a problem, think 'I know, I'll use regular expressions.' Now they have two problems.\\\"\")")) nil]
["jwz-xcutsel" nil nil nil nil nil nil ((timestamp . "2007-09-18") (notes . "(\"http://www.jwz.org/doc/x-cut-and-paste.html\")")) nil]
["jwzs-law" nil nil nil nil nil nil ((timestamp . "2012-03-24") (notes . "(\"\\\"Every program attempts to expand until it can read mail. Those programs which cannot so expand are replaced by ones which can.\\\"\")")) nil]
["jx" nil nil nil nil nil nil ((timestamp . "2010-08-04") (notes . "(\"http://www.jxos.org/\")")) nil]
["jxself" nil nil nil nil nil nil ((timestamp . "2013-10-01") (notes . "(\"a cool kid\" \"an occasional channel flooder by accident\")")) nil]
["j\xc3\xa4nis" nil nil nil nil nil nil ((timestamp . "2008-03-04") (notes . "(\"a suspicious animal\" \"furry\")")) nil]
["k-man" nil nil nil nil nil nil ((timestamp . "2012-10-17") (notes . "(\"a shill for nongshim\")")) nil]
["k-man-test" nil nil nil nil nil nil ((timestamp . "2013-05-20") (notes . "(\"lisp (say (format \\\"2 + 2 = %s\\\" (+ 2 2)))\")")) nil]
["K.I.S.S." nil nil nil nil nil nil ((timestamp . "2014-01-17") (notes . "(\"Keep It Simple Stupid in front the NSA and White house, ask for money :: https://twitter.com/Roy___Batty/status/424203652329246720\")")) nil]
["kagonekoshiro" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"http://www.youtube.com/watch?v=AFjr-Gexe0k\")")) nil]
["kak" nil nil nil nil nil nil ((timestamp . "2008-03-17") (notes . "(\"shit\")")) nil]
["KaKiLa" nil nil nil nil nil nil ((timestamp . "2011-12-21") (notes . "(\"the one who thinks that \\\"write tests, that's the best!\\\".\")")) nil]
["Kamino" nil nil nil nil nil nil ((timestamp . "2006-04-02") (notes . "(\"see http://www.starwars.com/databank/location/kamino/\")")) nil]
["kaminoan" nil nil nil nil nil nil ((timestamp . "2006-04-02") (notes . "(\"inhabitant of Kamino\" \"see http://www.starwars.com/databank/species/kaminoan/\")")) nil]
["kanji-console" nil nil nil nil nil nil ((timestamp . "2005-06-02") (notes . "(\"kon2 : A package for displaying kanji on the console\" \"zhcon : A fast console CJK system using framebuffer\" \"jcon : http://achurch.org/jcon-e.html : A patch for the linux console to allow kanji display\" \"jfbterm : Jfbterm/me is a Japanized framebuffer terminal with Multilingual Enhancement.\" \"bogl-bterm : Ben's Own Graphics Library - a small framebuffer library including basic widgets, support for text in multiple languages, and mouse handling - ships with bterm, a utf-enabled framebuffer terminal\")")) nil]
["Kardi" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Kardi\")")) nil]
["karma" nil nil nil nil nil nil ((timestamp . "2004-01-27") (notes . "(\"redirect points\")")) nil]
["karmapod" nil nil nil nil nil nil ((timestamp . "2006-09-15") (notes . "(\"http://dto.freeshell.org/notebook/KarmaPod.html\")")) nil]
["kasem" nil nil nil nil nil nil ((timestamp . "2011-08-16") (notes . "(\"noecho Keep your feet on the ground, and keep reaching for the stars.\")")) nil]
["kate" nil nil nil nil nil nil ((timestamp . "2006-07-14") (notes . "(\"an inferior editor that comes with KDE\")")) nil]
["Kaustubh" nil nil nil nil nil nil ((timestamp . "2011-06-17") (notes . "(\"a programmer famous in the Free Software world\")")) nil]
["kazehakase" nil nil nil nil nil nil ((timestamp . "2007-04-01") (notes . "(\"a flexible GTK+ web browser\" \"see http://kazehakase.sourceforge.jp/\" \"killer feature: Smart bookmarks\" \"Sucks less than Firefox, still uses Gecko though :<\")")) nil]
["kbd" nil nil nil nil nil nil ((timestamp . "2012-03-16") (notes . "(\"A macro for specifying key bindings readably. ie: (global-set-key (kbd \\\"C-c d\\\") 'do-something)\" \"Use C-h c <keybinding of interest> to get the right string to give to kbd\")")) nil]
["kde" nil nil nil nil nil nil ((timestamp . "2013-07-09") (notes . "(\"kool and kan be found at #kde\")")) nil]
["kde-edu" nil nil nil nil nil nil ((timestamp . "2003-02-22") (notes . "(\"irc://irc.freenode.net/kde-edu\")")) nil]
["keithpslides" nil nil nil nil nil nil ((timestamp . "2004-03-24") (notes . "(\"http://keithp.com/~keithp/talks\")")) nil]
["kelsey" nil nil nil nil nil nil ((timestamp . "2006-04-26") (notes . "(\"Richard A. Kelsey, author of Scheme 48, and well-known person in the Scheme community, at http://s48.org/~kelsey/\")")) nil]
["kelso" nil nil nil nil nil nil ((timestamp . "2014-01-30") (notes . "(\"noecho BURN!\")")) nil]
["keming" nil nil nil nil nil nil ((timestamp . "2011-07-28") (notes . "(\"the result of improper kerning\")")) nil]
["kenarnold" nil nil nil nil nil nil ((timestamp . "2012-03-07") (notes . "(\"\\\"Every program has at least one bug and can be shortened by at least one instruction -- from which, by induction, it is evident that every program can be reduced to one instruction that does not work.\\\" -- Ken Arnold\")")) nil]
["kenny" nil nil nil nil nil nil ((timestamp . "2012-12-08") (notes . "(\"noecho You Bastards!\")")) nil]
["kensanata" nil nil nil nil nil nil ((timestamp . "2010-04-08") (notes . "(\"redirect AlexSchroeder\")")) nil]
["kenthompson" nil nil nil nil nil nil ((timestamp . "2011-08-09") (notes . "(\"\\\"I've seen [visual] editors like that, but I don't feel a need for them. I don't want to see the state of the file when I'm editing.\\\"\")")) nil]
["kermit" nil nil nil nil nil nil ((timestamp . "2012-04-19") (notes . "(\"http://www.kermitproject.org/\" \"the other kermit: http://www.columbia.edu/kermit/ckermit.html\" \"for the _other_ kermit see sesame street\")")) nil]
["kern" nil nil nil nil nil nil ((timestamp . "2012-01-31") (notes . "(\"the process of adjusting the spacing between characters in a proportional font <https://en.wikipedia.org/wiki/Kern_(typography)>\")")) nil]
["kernel-upgrade" nil nil nil nil nil nil ((timestamp . "2003-01-26") (notes . "(\"see kent's 10-step guide at http://gnufans.net/~deego/pub/debian/kernel-upgrading-guide/\")")) nil]
["kernighan-debugging-quote" nil nil nil nil nil nil ((timestamp . "2013-06-22") (notes . "(\"\\\"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.\\\"\")")) nil]
["kerning" nil nil nil nil nil nil ((timestamp . "2012-01-31") (notes . "(\"redirect kern\")")) nil]
["kexec" nil nil nil nil nil nil ((timestamp . "2012-08-13") (notes . "(\"a linux feature that skips the BIOS POST and bootloader stages of a reboot <https://en.wikipedia.org/wiki/kexec>\")")) nil]
["key-binding-locus" nil nil nil nil nil nil ((timestamp . "2013-04-26") (notes . "(\"currently non-existent, but pls add a comment in support of the wishlist item at http://debbugs.gnu.org/cgi/bugreport.cgi?bug=13948\")")) nil]
["key-faq" nil nil nil nil nil nil ((timestamp . "2013-09-08") (notes . "(\"redirect terminal-faq\")")) nil]
["key-myths" nil nil nil nil nil nil ((timestamp . "2012-06-05") (notes . "(\"holding down the Control key while pressing another key zeros the leftmost 2 bits of the 7 bits in the generated ASCII character. ---Wikipedia\" \"zeroing them twice is apparently the same as once, so things like C-C-m (which you can think of as C-RET) won't work.\" \"different terminals (or emulators) may send different escape sequences for the same key, in case you're wondering keys other than above don't work\")")) nil]
["keybinding" nil nil nil nil nil nil ((timestamp . "2013-08-28") (notes . "(\"redirect keybindings\")")) nil]
["KeyBindingConventions" nil nil nil nil nil nil ((timestamp . "2012-11-07") (notes . "(\"M-: (info \\\"(elisp) Key Binding Conventions\\\")\" \"tl;dr: C-c [a-zA-Z] and unmodified F5-F9 are reserved for users and thus safe to bind\")")) nil]
["keybindingsguide" nil nil nil nil nil nil ((timestamp . "2002-11-15") (notes . "(\"redirect keybindings\")")) nil]
["keyboard-pants" nil nil nil nil nil nil ((timestamp . "2010-12-02") (notes . "(\"an ergonomics hack: http://www.flickr.com/photos/ghoseb/5121022662/\")")) nil]
["keychain" nil nil nil nil nil nil ((timestamp . "2010-06-03") (notes . "(\"http://www.funtoo.org/en/security/keychain/intro/\")")) nil]
["KeyComb" nil nil nil nil nil nil ((timestamp . "2011-06-17") (notes . "(\"a tool to match keyword\")")) nil]
["keyfreq" nil nil nil nil nil nil ((timestamp . "2013-01-29") (notes . "(\"a mode that tracks command usage frequency at https://github.com/dacap/keyfreq/blob/master/keyfreq.el\")")) nil]
["keymapnames" nil nil nil nil nil nil ((timestamp . "2009-02-20") (notes . "(\"(mapatoms (lambda (sym) (when (and (boundp sym) (member (symbol-value sym) (current-active-maps))) (princ sym) (princ \\\" \\\"))))\")")) nil]
["keynames" nil nil nil nil nil nil ((timestamp . "2012-02-09") (notes . "(\"to determine how to refer to a key sequence in a key binding, use the description returned by C-h c <key seq> as the argument to `kbd', e.g. (global-set-key (kbd \\\"C-c f\\\") 'some-fun)\")")) nil]
["keynav" nil nil nil nil nil nil ((timestamp . "2010-03-11") (notes . "(\"http://www.semicomplete.com/projects/keynav/\")")) nil]
["KeySequences" nil nil nil nil nil nil ((timestamp . "2010-10-06") (notes . "(\"(info \\\"(elisp) Key Sequences\\\")\")")) nil]
["KeyserSoze" nil nil nil nil nil nil ((timestamp . "2010-10-05") (notes . "(\"redirect TheDevil\")")) nil]
["keyslap" nil nil nil nil nil nil ((timestamp . "2010-10-21") (notes . "(\"lisp (lambda (victim) (format (\\\"burns %s\\\" victim)))\")")) nil]
["keywiz.el" nil nil nil nil nil nil ((timestamp . "2005-07-15") (notes . "(\"redirect KeyWiz\")")) nil]
["kfogel:" nil nil nil nil nil nil ((timestamp . "2012-08-06") (notes . "(\"`indent-line-function' not set to `indent-relative'\")")) nil]
["khan" nil nil nil nil nil nil ((timestamp . "2012-03-14") (notes . "(\"http://i358.photobucket.com/albums/oo27/STC_24/StarTrekIITheWrathofKhaaaaaan.gif\")")) nil]
["kheb" nil nil nil nil nil nil ((timestamp . "2002-11-26") (notes . "(\"at http://people.gnulinux.org.mx/kheb/\")")) nil]
["khmar" nil nil nil nil nil nil ((timestamp . "2003-12-22") (notes . "(\"redirect NoufalIbrahim\")")) nil]
["khtml" nil nil nil nil nil nil ((timestamp . "2012-11-05") (notes . "(\"KDE's browser engine, which Apple pinched and turned into WebKit, failing to contribute back for aaaages\")")) nil]
["kibo" nil nil nil nil nil nil ((timestamp . "2010-07-09") (notes . "(\"fenomeno\" \"a friki\" \"el frikibo\" \"this guy from usenet who thought he was the funniest person in the world\")")) nil]
["kickstart" nil nil nil nil nil nil ((timestamp . "2012-12-22") (notes . "(\"coined, actually.\")")) nil]
["kids" nil nil nil nil nil nil ((timestamp . "2013-02-14") (notes . "(\"noecho Kids these days. Get off my lawn!\")")) nil]
["kidstuff" nil nil nil nil nil nil ((timestamp . "2006-03-17") (notes . "(\"\\\"Capitalism and Other Kids' Stuff\\\", a short film available at http://www.archive.org/details/Capitalism_Kids_Stuff and http://www.socialist-tv.com.\")")) nil]
["kill" nil nil nil nil nil nil ((timestamp . "2012-08-16") (notes . "(\"a way to send signals to processes\")")) nil]
["kill-ring-search" nil nil nil nil nil nil ((timestamp . "2008-07-17") (notes . "(\"redirect killringsearch\")")) nil]
["kill-word-at-point" nil nil nil nil nil nil ((timestamp . "2010-11-03") (notes . "(\"try (defun kill-word-at-point () (interactive) (let ((bounds (bounds-of-thing-at-point 'word))) (kill-region (car bounds) (cdr bounds))))\")")) nil]
["killdashnine" nil nil nil nil nil nil ((timestamp . "2010-12-12") (notes . "(\"http://www.monzy.com/intro/killdashnine_lyrics.html\")")) nil]
["killline" nil nil nil nil nil nil ((timestamp . "2004-12-02") (notes . "(\"kill to the beginning of the line, use C-u 0 C-k OR C-0 C-k OR M-0 C-k\")")) nil]
["kimchee" nil nil nil nil nil nil ((timestamp . "2010-10-07") (notes . "(\"redirect kimchi\")")) nil]
["kimchi" nil nil nil nil nil nil ((timestamp . "2010-10-07") (notes . "(\"Not something you want to run out of.\" \"Delicious.\" \"a little bit spicy\" \"made out of cabbage, a lot of cabbage\")")) nil]
["kinder-eggs" nil nil nil nil nil nil ((timestamp . "2013-03-24") (notes . "(\"awesome for playing table tennis -- nunag\")")) nil]
["kinesis" nil nil nil nil nil nil ((timestamp . "2011-02-14") (notes . "(\"redir modelm\")")) nil]
["kirk-slash-spock-fix" nil nil nil nil nil nil ((timestamp . "2012-12-01") (notes . "(\"noecho like, don't go there\")")) nil]
["KISS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Keep It Simple, Stupid\")")) nil]
["kissinger" nil nil nil nil nil nil ((timestamp . "2012-02-27") (notes . "(\"lisp (random-choose (notes \\\"kissinger-data\\\"))\" \"The Chilean election is too important to be left to the Chilean people.\")")) nil]
["kissinger-data" nil nil nil nil nil nil ((timestamp . "2011-07-21") (notes . "(\"Power is the ultimate aphrodisiac\" \"America has no permanent friends or enemies, only interests\" \"I'm concerned about the civilians because I don't want the world to be mobilized against you as a butcher\")")) nil]
["KITA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Kick In The Ass\")")) nil]
["KitchenSink" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"redirect TheKitchenSink\")")) nil]
["kizome" nil nil nil nil nil nil ((timestamp . "2003-10-20") (notes . "(\"a happy boy\")")) nil]
["klavaro" nil nil nil nil nil nil ((timestamp . "2012-07-12") (notes . "(\"Klavaro Touch Typing Tutor\" \"http://klavaro.sourceforge.net/\")")) nil]
["klickibunti" nil nil nil nil nil nil ((timestamp . "2005-11-10") (notes . "(\"click and chrome, a.k.a. click and drool.\")")) nil]
["KNF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Kernel Normal Form\")")) nil]
["Knock-knock" nil nil nil nil nil nil ((timestamp . "2003-02-28") (notes . "(\"unecho Who's there?\")")) nil]
["knoppix2debian" nil nil nil nil nil nil ((timestamp . "2004-03-09") (notes . "(\"redirect KnoppixToDebian\")")) nil]
["KnoppixToDebian" nil nil nil nil nil nil ((timestamp . "2004-03-09") (notes . "(\"at http://www.knoppix.net/forum/viewtopic.php?t=2251\")")) nil]
["known-knows" nil nil nil nil nil nil ((timestamp . "2013-02-17") (notes . "(\"redirect rumsfeld\")")) nil]
["known-unknows" nil nil nil nil nil nil ((timestamp . "2013-02-17") (notes . "(\"redirect rumsfeld\")")) nil]
["knuth-fix" nil nil nil nil nil nil ((timestamp . "2013-06-01") (notes . "(\"noecho profile first, then optimize\")")) nil]
["kobodeluxe" nil nil nil nil nil nil ((timestamp . "2007-08-02") (notes . "(\"redirect xkobo\")")) nil]
["kodein" nil nil nil nil nil nil ((timestamp . "2013-08-01") (notes . "(\"noecho Highly likely.\" \"Don't count on it.\" \"irrelevant\")")) nil]
["kombucha" nil nil nil nil nil nil ((timestamp . "2007-11-11") (notes . "(\"fermented tea\")")) nil]
["kompose" nil nil nil nil nil nil ((timestamp . "2006-08-15") (notes . "(\"Exposé for KDE (http://kompose.berlios.de/) and similar to skippy.\")")) nil]
["konamicode" nil nil nil nil nil nil ((timestamp . "2012-05-08") (notes . "(\"↑ ↑ ↓ ↓ ← → ← → B A Start\")")) nil]
["kook" nil nil nil nil nil nil ((timestamp . "2008-09-30") (notes . "(\"noecho WAKE UP SHEEPLE!!!!!\")")) nil]
["KOTD" nil nil nil nil nil nil ((timestamp . "2007-05-23") (notes . "(\"Key of the Day\")")) nil]
["kthxbai" nil nil nil nil nil nil ((timestamp . "2011-01-19") (notes . "(\"noecho bai\")")) nil]
["ktikz" nil nil nil nil nil nil ((timestamp . "2009-12-22") (notes . "(\"an editor for ,,tikz http://www.hackenberger.at/blog/ktikz-editor-for-the-tikz-language\")")) nil]
["kuatbt" nil nil nil nil nil nil ((timestamp . "2009-12-31") (notes . "(\"keep up at the back there\")")) nil]
["kudzu" nil nil nil nil nil nil ((timestamp . "2003-09-03") (notes . "(\"a RH tool for automatic discovery of devices: http://rhlinux.redhat.com/kudzu/\")")) nil]
["kurosawa" nil nil nil nil nil nil ((timestamp . "2013-01-21") (notes . "(\"Akira Kurosawa, a deceased Japanese filmmaker\")")) nil]
["kurwa" nil nil nil nil nil nil ((timestamp . "2006-02-09") (notes . "(\"a polish greeting\")")) nil]
["KVA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Kernel Virtual Address\")")) nil]
["kyms" nil nil nil nil nil nil ((timestamp . "2005-01-12") (notes . "(\"keep your mouth shut\")")) nil]
["l" nil nil nil nil nil nil ((timestamp . "2010-08-04") (notes . "(\"L and not one\")")) nil]
["l.i.s.p." nil nil nil nil nil nil ((timestamp . "2008-06-06") (notes . "(\"\\\"Lisp in Small Pieces\\\" by Christian Queinnec\" \"2nd ed: \\\"Principes d'Ipmlantation de Scheme et Lisp\\\" for those who read french\")")) nil]
["l2p" nil nil nil nil nil nil ((timestamp . "2008-10-08") (notes . "(\"http://redsymbol.net/software/l2p/\")")) nil]
["l2short" nil nil nil nil nil nil ((timestamp . "2005-01-22") (notes . "(\"redirect lshort\")")) nil]
["l2tabu" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a document listing \\\"sins\\\" of LaTeX users, obsolete packages and commands. Original is in German, but it has been translated into English, French, Italian and Spanish. http://ctan.org/pkg/l2tabu\")")) nil]
["l33t-h0m13-y0w" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"redirect leet-homie-yow\")")) nil]
["L4" nil nil nil nil nil nil ((timestamp . "2002-09-08") (notes . "(\"very tiny\")")) nil]
["L4D" nil nil nil nil nil nil ((timestamp . "2012-06-20") (notes . "(\"Left 4 Dead, a team-based, first-person zombie-shooter\")")) nil]
["L4D2" nil nil nil nil nil nil ((timestamp . "2012-06-20") (notes . "(\"redirect L4D\")")) nil]
["L8R" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Later\")")) nil]
["ladder" nil nil nil nil nil nil ((timestamp . "2010-09-22") (notes . "(\"There's a monk out back with a ladder! http://xkcd.com/794/\")")) nil]
["lairds" nil nil nil nil nil nil ((timestamp . "2013-11-20") (notes . "(\"noecho LOCH HIM UP!!!\")")) nil]
["lambada" nil nil nil nil nil nil ((timestamp . "2011-09-11") (notes . "(\"http://www.youtube.com/watch?v=i8mz9uOvFQA\")")) nil]
["lambda" nil nil nil nil nil nil ((timestamp . "2012-08-10") (notes . "(\"is a function without a name\")")) nil]
["lambda-calculus" nil nil nil nil nil nil ((timestamp . "2012-12-17") (notes . "(\"the foundation of all lisp family languages.\" \"see: http://en.wikipedia.org/wiki/Lambda_calculus\" \"see also: sicp and http://plato.stanford.edu/entries/lambda-calculus/\")")) nil]
["lambda-gtk" nil nil nil nil nil nil ((timestamp . "2006-09-30") (notes . "(\"a cross-platform Lisp interface to the GTK+2 library http://common-lisp.net/project/lambda-gtk/\")")) nil]
["lambdacats" nil nil nil nil nil nil ((timestamp . "2013-06-24") (notes . "(\"http://spl.smugmug.com/Humor/Lambdacats/13227630_j2MHcg#!i=960526154&k=sQxNwtJ\")")) nil]
["lame" nil nil nil nil nil nil ((timestamp . "2004-12-24") (notes . "(\"a lame word for things or people that are lame.\" \"Lame Ain't an MP3 Encoder or so. wav-to-mp3.\")")) nil]
["LAMP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Linux, Apache, MySQL And Perl / Python / PHP\")")) nil]
["lamport-fix" nil nil nil nil nil nil ((timestamp . "2014-01-12") (notes . "(\"noecho Distributed systems means a system you have never heard of ruining your whole day. Most problems can be fixed by having a local copy of everything.\")")) nil]
["LAN" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Local Area Network\")")) nil]
["language" nil nil nil nil nil nil ((timestamp . "2010-09-22") (notes . "(\"<JordiGH> Everyone's a dick about language.\")")) nil]
["language-codes" nil nil nil nil nil nil ((timestamp . "2006-06-29") (notes . "(\"http://en.wikipedia.org/wiki/List_of_ISO_639-2_codes\")")) nil]
["language-fonts" nil nil nil nil nil nil ((timestamp . "2015-11-23") (notes . "(\"Automatic font selection by code block/language: http://platypus.pepperfish.net/~vivek/multilingual-test-page.tex\" \"currently only works for xetex & xelatex (checked mid 2015)\" \"Uses ucharclasses: http://ctan.math.washington.edu/tex-archive/macros/xetex/latex/ucharclasses/ucharclasses.pdf\")")) nil]
["language-shootout" nil nil nil nil nil nil ((timestamp . "2006-02-03") (notes . "(\"http://shootout.alioth.debian.org/\")")) nil]
["LAP" nil nil nil nil nil nil ((timestamp . "2005-08-19") (notes . "(\"Lisp Assembly Program\")")) nil]
["lards" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"noecho GREASE HIM!!\")")) nil]
["larp" nil nil nil nil nil nil ((timestamp . "2006-03-30") (notes . "(\"live action role play\")")) nil]
["larry" nil nil nil nil nil nil ((timestamp . "2013-02-14") (notes . "(\"lazy, impatient and cocky\")")) nil]
["larsi" nil nil nil nil nil nil ((timestamp . "2003-11-26") (notes . "(\"Lars Magne Ingebrigtsen, author of Gnus\")")) nil]
["larswm" nil nil nil nil nil nil ((timestamp . "2006-05-10") (notes . "(\"a window manager based on the plan9 wm.\" \"at http://home.earthlink.net/~lab1701/larswm/\")")) nil]
["lart" nil nil nil nil nil nil ((timestamp . "2012-10-23") (notes . "(\"the Luser Attitude Readjustment Tool http://catb.org/jargon/html/L/LART.html\")")) nil]
["LaryMcVoy" nil nil nil nil nil nil ((timestamp . "2008-03-09") (notes . "(\"http://lwn.net/Articles/153990/\")")) nil]
["lastpage" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package that introduces a new label which can be referenced like \\\\pageref{LastPage} to give a reference to the last page of a document: http://ctan.org/pkg/lastpage\")")) nil]
["later-do" nil nil nil nil nil nil ((timestamp . "2004-02-19") (notes . "(\"redirect LaterDo\")")) nil]
["latex" nil nil nil nil nil nil ((timestamp . "2015-10-20") (notes . "(\"https://en.wikibooks.org/wiki/LaTeX\" \"www.latex-project.org\" \"see lshort\")")) nil]
["latex-graphics" nil nil nil nil nil nil ((timestamp . "2007-12-20") (notes . "(\"A good introduction is available at http://www.tlhiv.org/graphics/\")")) nil]
["LaTeX-to-info" nil nil nil nil nil nil ((timestamp . "2005-03-02") (notes . "(\"look at HeVeA\")")) nil]
["latex2html" nil nil nil nil nil nil ((timestamp . "2008-01-10") (notes . "(\"NONFREE\" \"try tex4ht, latex2html and hyperlatex\")")) nil]
["latex2rtf" nil nil nil nil nil nil ((timestamp . "2007-06-27") (notes . "(\"an exploding walrus of delight in text form <http://latex2rtf.sf.net>\")")) nil]
["latex_symbols" nil nil nil nil nil nil ((timestamp . "2007-12-03") (notes . "(\"http://www.ctan.org/tex-archive/info/symbols/comprehensive/\")")) nil]
["latexmk" nil nil nil nil nil nil ((timestamp . "2015-11-28") (notes . "(\"a perl script to completely automate the latex building process. It magically figures out the required number of reruns and also calls bibliography, index, glossary,... tools. It is availabe from https://www.ctan.org/pkg/latexmk/?lang=en\")")) nil]
["latexpreview" nil nil nil nil nil nil ((timestamp . "2005-05-26") (notes . "(\"redirect PreviewLaTex\")")) nil]
["latexwiki" nil nil nil nil nil nil ((timestamp . "2007-12-15") (notes . "(\"http://en.wikibooks.org/wiki/LaTeX\")")) nil]
["LatexWordCount" nil nil nil nil nil nil ((timestamp . "2004-07-09") (notes . "(\"apt-get install untex, untex the tex file and wc\")")) nil]
["latin-american-day" nil nil nil nil nil nil ((timestamp . "2012-11-02") (notes . "(\"two days\")")) nil]
["laugh" nil nil nil nil nil nil ((timestamp . "2012-08-31") (notes . "(\"lisp (if (member nick '(\\\"wbooze\\\" \\\"homie\\\")) \\\"/me stares blankly\\\" \\\"BAAAAHAHAHAHAH HaHAHAA HA HA HHHHA AH *snort* HA HHA HAHAHA HA HAH HAH HAH HAHAH HAH HAH oh man HAH AH HAAAAAHAAAHHH *cough* *cough* *cough* hah hehhh hehhhhh geez.. *cough*\\\")\")")) nil]
["laugh-track" nil nil nil nil nil nil ((timestamp . "2013-03-07") (notes . "(\"noecho HA HA HA HA!\")")) nil]
["launchpad" nil nil nil nil nil nil ((timestamp . "2011-07-04") (notes . "(\"no longer proprietary, but still sucky project management site <http://launchpad.net>\" \"better than bugzilla\" \"sucks goat balls\")")) nil]
["laurie-anderson-fix" nil nil nil nil nil nil ((timestamp . "2014-01-11") (notes . "(\"noecho I met this guy and he looked like he might have been a hat check clerk at an ice rink. Which in fact he turned out to be. Most problems can be solved by letting X=X.\")")) nil]
["lawandorder" nil nil nil nil nil nil ((timestamp . "2005-01-03") (notes . "(\"a tv show about the american justice system: in the first half of the show a crime is committed and a suspect is arrested (\\\"order\\\"), in the second half the suspect is tried (\\\"law\\\")\")")) nil]
["layouts" nil nil nil nil nil nil ((timestamp . "2013-09-18") (notes . "(\"a package that visualizes the interplay of various quantities affecting the typesetting of the document and it's components like tables, figures and lists http://www.ctan.org/pkg/layouts\")")) nil]
["lazarus" nil nil nil nil nil nil ((timestamp . "2006-01-05") (notes . "(\"the class libraries for Free Pascal that emulate Delphi.\" \"Free Pascal is designed to be able to understand and compile Delphi syntax.\" \"http://www.lazarus.freepascal.org\")")) nil]
["LBA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Logical Block Addressing\")")) nil]
["lbdb" nil nil nil nil nil nil ((timestamp . "2002-11-11") (notes . "(\"http://www.spinnaker.de/lbdb/\")")) nil]
["lc" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"LaTeX Community: http://latex-community.org/ | its forum: http://latex-community.org/forum/\")")) nil]
["LCA" nil nil nil nil nil nil ((timestamp . "2012-09-10") (notes . "(\"linux.conf.au, the largest linux conference in the BEST hemisphere\")")) nil]
["lcars" nil nil nil nil nil nil ((timestamp . "2013-11-20") (notes . "(\"the \\\"Library Computer Access/Retrieval System\\\", a operating system existing in the 'Star Trek' universe.\")")) nil]
["LCD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Liquid Crystal Display\")")) nil]
["lci" nil nil nil nil nil nil ((timestamp . "2012-11-18") (notes . "(\"a lolcode interpreter written in C so its zomg efficient, but it _literally_ fucks up multiplication\")")) nil]
["ldap" nil nil nil nil nil nil ((timestamp . "2002-09-06") (notes . "(\"see gnus-ldap\")")) nil]
["ldconfig" nil nil nil nil nil nil ((timestamp . "2007-03-02") (notes . "(\"haha. read ldconfig(8) or reboot\")")) nil]
["lde" nil nil nil nil nil nil ((timestamp . "2007-05-06") (notes . "(\"the reason I don't know my Greek alphabet :-(\")")) nil]
["leafnode" nil nil nil nil nil nil ((timestamp . "2006-06-21") (notes . "(\"an NNTP server for end users, which auto-subscribes to newsgroups that are requested, at http://leafnode.sourceforge.net/\" \"to news what fetchmail is to mail.\")")) nil]
["LearnFreeSoftware" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?LearnFreeSoftware\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?LearnFreeSoftware\")")) nil]
["learningcurve" nil nil nil nil nil nil ((timestamp . "2008-09-09") (notes . "(\"http://bc.tech.coop/blog/060302.html\")")) nil]
["LearnLisp" nil nil nil nil nil nil ((timestamp . "2003-12-05") (notes . "(\"http://www.psychologie.uni-trier.de:8000/projects/ELM/elmart.html\")")) nil]
["LeastSquares" nil nil nil nil nil nil ((timestamp . "2003-01-26") (notes . "(\"Octave---leasqr in octave\")")) nil]
["lebowski" nil nil nil nil nil nil ((timestamp . "2012-09-04") (notes . "(\"lisp (random-choose (notes \\\"lebowski-data\\\"))\")")) nil]
["LED" nil nil nil nil nil nil ((timestamp . "2009-01-06") (notes . "(\"short for Light Emitting Diode\" \"an environment for rapid TeX and LaTeX document development. http://www.latexeditor.org/\")")) nil]
["ledger" nil nil nil nil nil nil ((timestamp . "2012-11-05") (notes . "(\"a CLI double-entry accounting tool <http://ledger-cli.org>, #ledger\")")) nil]
["ledger-mode" nil nil nil nil nil nil ((timestamp . "2005-01-09") (notes . "(\"redirect LedgerMode\")")) nil]
["leet-homie-yow" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"lisp (h4x0r (random-choose (list (if (member nick '(\\\"homie\\\" \\\"wbooze\\\")) (format \\\"greetings, %s!\\\" nick) (let ((yow (random-choose (notes \\\"homie-list\\\")))) (if (string-match \\\"/me\\\" yow) yow (concat yow \\\"\\\\nlol\\\")))) \\\"Get a job, deadbeat.\\\") '(99 1)))\")")) nil]
["leet-wbooze-yow" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"redirect leet-homie-yow\")")) nil]
["legalese.el" nil nil nil nil nil nil ((timestamp . "2005-08-17") (notes . "(\"redirect legalese\")")) nil]
["legumbresnack" nil nil nil nil nil nil ((timestamp . "2012-10-25") (notes . "(\"noecho /me gives legumbre some cashew nuts, no salt.\")")) nil]
["lem" nil nil nil nil nil nil ((timestamp . "2004-07-29") (notes . "(\"http://www.cyberiad.info/english/main.htm\")")) nil]
["lemonodor" nil nil nil nil nil nil ((timestamp . "2012-06-16") (notes . "(\"a A mostly Lisp weblog by John Wiseman at http://www.lemonodor.com/\" \"a nice cat http://lemonodor.com/images/cedric-the-cat-s.jpg\")")) nil]
["lennart" nil nil nil nil nil nil ((timestamp . "2012-03-01") (notes . "(\"Lennart Poettering, a crackhead who prefers to reinvent wheels than learn to use existing ones. He is responsible for pulseaudio (cf. NAS, ALSA, OSS), xdg-open (cf. mailcap) and systemd (cf. sysvinit, insserv, upstart, initd, svc)\")")) nil]
["leopards" nil nil nil nil nil nil ((timestamp . "2014-01-17") (notes . "(\"noecho SPOT HIM!\")")) nil]
["leotards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho DRESS HIM FOR THE BALLET!!\")")) nil]
["letters" nil nil nil nil nil nil ((timestamp . "2005-04-07") (notes . "(\"at http://ftp.agh.edu.pl/pub/tex/info/symbols/comprehensive/symbols-letter.pdf\")")) nil]
["lex" nil nil nil nil nil nil ((timestamp . "2004-12-26") (notes . "(\"redirect flex\")")) nil]
["lfe" nil nil nil nil nil nil ((timestamp . "2011-03-05") (notes . "(\"lisp-flavored erlang\" \"http://github.com/rvirding/lfe\")")) nil]
["LFS" nil nil nil nil nil nil ((timestamp . "2012-12-14") (notes . "(\"Linux From Scratch <http://linuxfromscratch.org>, what Gentoo pretends to be\" \"Believes that the Kernel *is* the Operating System...\")")) nil]
["lfsr" nil nil nil nil nil nil ((timestamp . "2014-01-29") (notes . "(\"linear feedback shift register, see http://en.wikipedia.org/wiki/Linear_feedback_shift_register\")")) nil]
["lftp" nil nil nil nil nil nil ((timestamp . "2006-01-28") (notes . "(\"a sophisticated ftp/http client, file transfer program supporting a number of network protocols -- see http://lftp.yar.ru/\")")) nil]
["lgpl" nil nil nil nil nil nil ((timestamp . "2009-04-08") (notes . "(\"a licence for code that needs to be included into proprietary software for strategic reasons\" \"at http://gnu.org/copyleft/lesser.html\" \"why you shouldn't use the Lesser GPL for your next library: http://gnu.org/licenses/why-not-lgpl.html\")")) nil]
["LGTM" nil nil nil nil nil nil ((timestamp . "2010-08-08") (notes . "(\"Looks Good To Me\")")) nil]
["LHC" nil nil nil nil nil nil ((timestamp . "2006-06-13") (notes . "(\"the Large Hadron Collider, a (big) particle accelerator at CERN.\")")) nil]
["lhs2TeX" nil nil nil nil nil nil ((timestamp . "2011-12-27") (notes . "(\"a preprocessor to generate LaTeX code from literate Haskell or Agda sources. See http://www.andres-loeh.de/lhs2tex/ for features and documentation\")")) nil]
["LHT" nil nil nil nil nil nil ((timestamp . "2008-06-19") (notes . "(\"http://www.surlybikes.com/longhaul.html\")")) nil]
["libertarianism" nil nil nil nil nil nil ((timestamp . "2005-03-29") (notes . "(\"(often) a rather recent development in america, which mixes pro-capitalist and anti-statist ideas. An overview can be found at http://www.libertarianism.com/what-it-is.htm\")")) nil]
["libgcjplugin" nil nil nil nil nil nil ((timestamp . "2005-01-20") (notes . "(\"a Java plugin from GNU: http://savannah.gnu.org/projects/gcjwebplugin/\")")) nil]
["libmpdee" nil nil nil nil nil nil ((timestamp . "2013-11-04") (notes . "(\"https://web.archive.org/web/20061011045304/https://svn.musicpd.org/libmpdee/trunk/libmpdee.el\")")) nil]
["librarything" nil nil nil nil nil nil ((timestamp . "2006-08-02") (notes . "(\"a website for cataloging book collections; see http://www.librarything.com/\")")) nil]
["librefmbugs" nil nil nil nil nil nil ((timestamp . "2010-06-04") (notes . "(\"http://bugs.libre.fm/\")")) nil]
["librep" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"noecho t\" \"a portable library for a lisp programming language.\")")) nil]
["libreplanet" nil nil nil nil nil nil ((timestamp . "2012-02-10") (notes . "(\"http://www.libreplanet.org and http://www.fsf.org/conference\" \"http://libreplanet.org/wiki/LibrePlanet2012 the LibrePlanet Conference!\")")) nil]
["LibreSoftwareMeeting" nil nil nil nil nil nil ((timestamp . "2003-02-21") (notes . "(\"at http://lsm.abul.org/\")")) nil]
["libtool" nil nil nil nil nil nil ((timestamp . "2008-06-27") (notes . "(\"a generic library support script. Libtool hides the complexity of using shared libraries behind a consistent, portable interface.\" \"available at http://www.gnu.org/software/libtool/\" \"http://www.gnu.org/software/libtool/manual/\")")) nil]
["libtranslate" nil nil nil nil nil nil ((timestamp . "2006-01-08") (notes . "(\"a library for translating text and web pages between natural languages. Its modular infrastructure allows to implement new translation services separately from the core library.\" \"The libtranslate distribution includes a powerful command line interface (see the translate(1) manual page).\" \"free software, released under the terms of the revised BSD license.\" \"http://www.nongnu.org/libtranslate/\")")) nil]
["license-list" nil nil nil nil nil nil ((timestamp . "2009-03-14") (notes . "(\"http://www.gnu.org/licenses/license-list.html\")")) nil]
["licenses" nil nil nil nil nil nil ((timestamp . "2002-09-29") (notes . "(\"http://www.gnu.org/licenses/license-list.html\")")) nil]
["lie" nil nil nil nil nil nil ((timestamp . "2005-07-30") (notes . "(\"lisp (format \\\"%s: I never lie, what I say is _always_ the ultimate truth!\\\" nick)\")")) nil]
["liece" nil nil nil nil nil nil ((timestamp . "2004-12-02") (notes . "(\"an IRC+IM etc. client at http://www.unixuser.org/~ueno/liece/index.html.en\" \"seems to have dcc: apt-get install liece-dcc\" \"now being reworked as riece\")")) nil]
["lies" nil nil nil nil nil nil ((timestamp . "2006-10-17") (notes . "(\"the low-level inordinate espionage society.\")")) nil]
["life" nil nil nil nil nil nil ((timestamp . "2011-10-05") (notes . "(\"lisp (format \\\"life is %s\\\" (random-choose (notes \\\"life-notes\\\")))\")")) nil]
["life-notes" nil nil nil nil nil nil ((timestamp . "2011-10-05") (notes . "(\"brutal\" \"deadly\" \"a bitch\" \"and then you die\" \"life.el, Conway's Game of Life\" \"isn't fair\" \"life, the rest are just details\" \"what happens while you're busy adding TODOs to your .org files\")")) nil]
["life-sucks" nil nil nil nil nil nil ((timestamp . "2011-11-07") (notes . "(\"lisp (random-choose '(\\\"I feel your pain...\\\" \\\"Go kill yourself, loser!\\\"))\")")) nil]
["lifeboat" nil nil nil nil nil nil ((timestamp . "2009-08-13") (notes . "(\"an excellent movie.\")")) nil]
["liferea" nil nil nil nil nil nil ((timestamp . "2011-01-11") (notes . "(\"a Linux Feed Reader\")")) nil]
["lights-better" nil nil nil nil nil nil ((timestamp . "2012-03-13") (notes . "(\"lisp (concat \\\"Coming out of the bar one night, Sven sees Olie, on hands and knees searching under a lamp post. \\\\\\\"Olie, what did you lose?\\\\\\\"\\\\nSven, my good friend, I have lost my keys.\\\\n\\\\\\\"Where did you lose 'em?\\\\\\\" \\\\\\\"Under that car, 'bout half a block down.\\\\\\\"\\\\nIf you lost them under down there, why are you looking over here?\\\\nBecause the light's better.\\\")\")")) nil]
["lignux" nil nil nil nil nil nil ((timestamp . "2002-11-09") (notes . "(\"GNU/Linux for the lazy people\")")) nil]
["lilo" nil nil nil nil nil nil ((timestamp . "2006-02-22") (notes . "(\"the LInux LOader, a bootloader\" \"the nick of the freenode überadmin\")")) nil]
["lilypond" nil nil nil nil nil nil ((timestamp . "2008-05-22") (notes . "(\"a program for typesetting music (http://www.lilypond.org/)\" \"see \\\"lilypond-mode\\\"\")")) nil]
["limits" nil nil nil nil nil nil ((timestamp . "2012-03-06") (notes . "(\"TeX places limits where it does for a reason. You can, but generally should *not*, change this with \\\\limits or \\\\nolimits\")")) nil]
["Lincoln" nil nil nil nil nil nil ((timestamp . "2005-07-27") (notes . "(\"redirect abrahamlincoln\")")) nil]
["line-number" nil nil nil nil nil nil ((timestamp . "2005-10-25") (notes . "(\"redir setnu\")")) nil]
["Linear-Algebra-Textboox" nil nil nil nil nil nil ((timestamp . "2003-02-16") (notes . "(\"http://joshua.smcvt.edu/linalg.html\" \"with latex source\")")) nil]
["lineara" nil nil nil nil nil nil ((timestamp . "2005-04-28") (notes . "(\"an undeciphered script. see http://www.omniglot.com/writing/lineara.htm\")")) nil]
["LineCount" nil nil nil nil nil nil ((timestamp . "2010-10-27") (notes . "(\"M-x what-line RET for the lines from beginning of buffer (current line number)\" \"M-= for lines in region\" \"C-x l for lines in page (buffer)\" \"C-x h M-= for lines in buffer\" \"C-SPC M-> C-x C-x M-= for lines from point forward\" \"M-| wc -l RET\")")) nil]
["lineker" nil nil nil nil nil nil ((timestamp . "2008-06-20") (notes . "(\"http://www.helsinki.fi/~sjpaavol/programs/lineker.el\")")) nil]
["linenoise" nil nil nil nil nil nil ((timestamp . "2011-12-21") (notes . "(\"a small self-contained alternative to readline and libedit, see https://github.com/antirez/linenoise\")")) nil]
["Linj" nil nil nil nil nil nil ((timestamp . "2010-08-27") (notes . "(\"a Lisp dialect that translates into Java\" \"http://www.cl-user.net/asp/libs/linj\" \"written and similar to Common Lisp\")")) nil]
["linkd" nil nil nil nil nil nil ((timestamp . "2007-01-22") (notes . "(\"redirect linkd-mode\")")) nil]
["linkd-mode" nil nil nil nil nil nil ((timestamp . "2008-05-01") (notes . "(\"http://dto.freeshell.org/notebook/Linkd.html\" \"a hypertext system implemented as a minor mode\" \"enables the user to insert hyperlinks into heterogeneous collections of text files, regardless of format or major mode\" \"totally abandoned\")")) nil]
["Links" nil nil nil nil nil nil ((timestamp . "2008-12-15") (notes . "(\"a text-based browser with support for HTML tables\" \"available at links.twibright.com\")")) nil]
["linode" nil nil nil nil nil nil ((timestamp . "2007-10-25") (notes . "(\"a hosting company that provides access to User Mode Linux virtual machines\")")) nil]
["linterna-magica" nil nil nil nil nil nil ((timestamp . "2012-11-06") (notes . "(\"redirect linternamagica\")")) nil]
["LinternaMagica" nil nil nil nil nil nil ((timestamp . "2012-11-06") (notes . "(\"a Greasemonkey script that basically finds HTML5 versions of flash videos on at least 30 web sites: http://linterna-magica.nongnu.org/\")")) nil]
["linum-mode" nil nil nil nil nil nil ((timestamp . "2010-09-09") (notes . "(\"redirect LinumMode\")")) nil]
["linus'-law" nil nil nil nil nil nil ((timestamp . "2012-10-27") (notes . "(\"\\\"many eyes make all bugs shallow\\\"\")")) nil]
["LinusTorvalds" nil nil nil nil nil nil ((timestamp . "2010-05-17") (notes . "(\"That's GNU/Linus.\")")) nil]
["linux-style" nil nil nil nil nil nil ((timestamp . "2012-02-20") (notes . "(\"\\\"First off, I'd suggest printing out a copy of the GNU coding standards, and NOT read it. Burn them, it's a great symbolic gesture.\\\"\")")) nil]
["linuxbe" nil nil nil nil nil nil ((timestamp . "2003-02-22") (notes . "(\"irc://irc.freenode.net/linuxbe\" \"a Linux advocacy group for belgium\")")) nil]
["LinuxLiveCDs" nil nil nil nil nil nil ((timestamp . "2004-02-18") (notes . "(\"at http://www.frozentech.com/content/livecd.php\" \"at http://slashdot.org/article.pl?sid=04/02/18/0030240&mode=thread&tid=106&tid=185&tid=190\" \"at http://www.knoppix.net/docs/index.php/KnoppixCustomizations\" \"at http://lwn.net/Distributions/index.php3#cd\" \"at http://www.finnix.org/ and http://tyge.sslug.dk/knoppix/, Kalango (www.kalango.org), and http://www.openwall.com/Owl/\")")) nil]
["LinuxPrintersVendors" nil nil nil nil nil nil ((timestamp . "2004-01-30") (notes . "(\"at http://www.linuxprinting.org/vendors.html\" \"at http://www.linuxprinting.org/printer_list.cgi\" \"at http://www.linuxprinting.org/suggested.html\")")) nil]
["lipotell" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"a script for quickly finding out what is bloating a directory tree. https://github.com/jwiegley/lipotell\")")) nil]
["lipsync" nil nil nil nil nil nil ((timestamp . "2012-07-20") (notes . "(\"noecho an open source replacement for dropbox (https://github.com/philcryer/lipsync)\" \"for Debian/Ubuntu only currently\")")) nil]
["LIR" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Local Internet Registry\")")) nil]
["liskell" nil nil nil nil nil nil ((timestamp . "2012-03-15") (notes . "(\"Haskell, except readable\" \"at http://www.liskell.org/\")")) nil]
["lisp-curse" nil nil nil nil nil nil ((timestamp . "2012-07-14") (notes . "(\"http://www.winestockwebdesign.com/Essays/Lisp_Curse.html\" \"not true\" \"a fellatious argument\")")) nil]
["lisp-on-tex" nil nil nil nil nil nil ((timestamp . "2013-09-27") (notes . "(\"a LISP interpreter written only with TeX macros.\" \"http://www.ctan.org/tex-archive/macros/latex/contrib/lisp-on-tex\")")) nil]
["lisp-porn" nil nil nil nil nil nil ((timestamp . "2005-11-01") (notes . "(\"http://bc.tech.coop/blog/050728.html\")")) nil]
["lisp-pr0n" nil nil nil nil nil nil ((timestamp . "2005-11-01") (notes . "(\"redirect lisp-porn\")")) nil]
["lisp-pron" nil nil nil nil nil nil ((timestamp . "2005-11-01") (notes . "(\"redirect lisp-porn\")")) nil]
["lisp-songs" nil nil nil nil nil nil ((timestamp . "2011-07-15") (notes . "(\"http://www.youtube.com/watch?v=5-OjTPj7K54\" \"http://www.youtube.com/watch?v=HM1Zb3xmvMc\" \"http://www.youtube.com/watch?v=rdj6deraQ6k\")")) nil]
["lisp-standalones" nil nil nil nil nil nil ((timestamp . "2005-04-11") (notes . "(\"See ECL, lush\")")) nil]
["lisp-style-guide" nil nil nil nil nil nil ((timestamp . "2011-09-12") (notes . "(\"Riastradh's elucidation of style issues for lisps http://mumble.net/~campbell/scheme/style.txt\")")) nil]
["lispaste" nil nil nil nil nil nil ((timestamp . "2004-07-14") (notes . "(\"redirect pastebot\")")) nil]
["lispbook" nil nil nil nil nil nil ((timestamp . "2011-02-09") (notes . "(\"redirect lispbooks\")")) nil]
["LispBooks" nil nil nil nil nil nil ((timestamp . "2012-07-10") (notes . "(\"pcl, acl, paip, onlisp, lol, spels, cltl2, clhs, clgisc and lsad\" \"see SchemeBooks\")")) nil]
["lispcomments" nil nil nil nil nil nil ((timestamp . "2010-08-19") (notes . "(\"see section 5.3.2 at http://www.cc.gatech.edu/computing/classes/cs2360/ghall/style/commenting.html for a discussion about how many semicolons to use\")")) nil]
["lisperati" nil nil nil nil nil nil ((timestamp . "2011-11-10") (notes . "(\"redirect lol\")")) nil]
["lispjobs" nil nil nil nil nil nil ((timestamp . "2013-02-16") (notes . "(\"http://lispjobs.com/\")")) nil]
["lisplogos" nil nil nil nil nil nil ((timestamp . "2010-08-02") (notes . "(\"http://www.lisperati.com/logo.html\")")) nil]
["lispnik" nil nil nil nil nil nil ((timestamp . "2006-02-16") (notes . "(\"n. someone who lisps.\" \"FSVO \\\"lisps\\\" = \\\"to write lisp code\\\"\")")) nil]
["lispstyle" nil nil nil nil nil nil ((timestamp . "2011-03-30") (notes . "(\"see riastradh's lisp style rules at http://mumble.net/~campbell/scheme/style.txt\")")) nil]
["lispvideo" nil nil nil nil nil nil ((timestamp . "2006-08-31") (notes . "(\"http://www.cliki.net/Lisp%20Videos\")")) nil]
["lispworks" nil nil nil nil nil nil ((timestamp . "2012-07-10") (notes . "(\"http://www.lispworks.com/documentation/common-lisp.html\")")) nil]
["lispyscript" nil nil nil nil nil nil ((timestamp . "2012-09-23") (notes . "(\"\\\"A javascript With Lispy Syntax And Macros!\\\" http://lispyscript.com/\" \"arguably harder to follow than JS\")")) nil]
["listings" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package to typeset source code: http://ctan.org/pkg/listings [documentation: http://tinyurl.com/listings-doc]\")")) nil]
["ListOfColors" nil nil nil nil nil nil ((timestamp . "2005-12-23") (notes . "(\"redirect ListColors\")")) nil]
["litable" nil nil nil nil nil nil ((timestamp . "2013-05-06") (notes . "(\"https://github.com/Fuco1/litable\" \"a fun implementation of one of the lighttable \\\"selling points\\\"\")")) nil]
["litany-against-cons" nil nil nil nil nil nil ((timestamp . "2012-11-23") (notes . "(\"noecho \\\"I must not cons. Cons is the perf-killer. Cons is the little death that brings total obliteration. I will face my cons and permit it to pass over me and through me, and when it has gone past I will turn my GC to see its path. And where it has gone there will be nothing; only I will remain.\\\"\")")) nil]
["literal" nil nil nil nil nil nil ((timestamp . "2011-12-15") (notes . "(\"For ^M, type C-q C-m\" \"for newline, type C-q C-j\" \"for TAB, type C-q TAB or C-q C-i\" \"for ^L, type C-q C-l\" \"for ^@ type C-q 0 RET\")")) nil]
["lithp" nil nil nil nil nil nil ((timestamp . "2002-11-26") (notes . "(\"unecho This otherwise unremarkable language is distinguished by the absence of an \\\"S\\\" in its character set; users must substitute \\\"TH\\\". LITHP is said to be useful in proceththing lithtth.\")")) nil]
["LiveJournal" nil nil nil nil nil nil ((timestamp . "2004-09-14") (notes . "(\"at http://www.usemod.com/cgi-bin/mb.pl?LiveJournal\" \"see LjUpdate\")")) nil]
["lizards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho SCALE HIM!!\")")) nil]
["lj" nil nil nil nil nil nil ((timestamp . "2005-08-08") (notes . "(\"livejournal\")")) nil]
["lj-update" nil nil nil nil nil nil ((timestamp . "2006-06-09") (notes . "(\"redirect ljupdate\")")) nil]
["LJ4" nil nil nil nil nil nil ((timestamp . "2012-09-05") (notes . "(\"the HP LaserJet 4, the last good printer ever made.\")")) nil]
["LJBF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Let's Just Be Friends\")")) nil]
["lmao" nil nil nil nil nil nil ((timestamp . "2004-11-23") (notes . "(\"an acronym for Laughing My Ass Off\")")) nil]
["LMNL" nil nil nil nil nil nil ((timestamp . "2003-01-26") (notes . "(\"the Layered Markup & Annotation Language\" \"at http://www.lmnl.org/\")")) nil]
["lms" nil nil nil nil nil nil ((timestamp . "2003-05-28") (notes . "(\"short for the Libre Software Meeting.\")")) nil]
["LMSO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Laughing My Socks Off\")")) nil]
["LNMC" nil nil nil nil nil nil ((timestamp . "2010-09-28") (notes . "(\"http://www.somethingawful.com/d/news/lnmc-xkcd-parody.php\")")) nil]
["LNX-BBC" nil nil nil nil nil nil ((timestamp . "2003-11-03") (notes . "(\"a business-card-sized GNU/Linux distribution as used by for the FSF membership card, for example.\" \"an interesting rescue system.\")")) nil]
["lo" nil nil nil nil nil nil ((timestamp . "2004-09-03") (notes . "(\"Helloo\")")) nil]
["load-path" nil nil nil nil nil nil ((timestamp . "2009-04-21") (notes . "(\"redirect install\")")) nil]
["loadpath" nil nil nil nil nil nil ((timestamp . "2009-04-21") (notes . "(\"redirect load-path\")")) nil]
["loadpathological" nil nil nil nil nil nil ((timestamp . "2002-11-09") (notes . "(\"a load-path manager\")")) nil]
["loc" nil nil nil nil nil nil ((timestamp . "2012-01-19") (notes . "(\"\\\"Every program has at least one bug and can be shortened by at least one instruction -- from which, by induction, it is evident that every program can be reduced to one instruction that does not work\\\" -- Ken Arnold\")")) nil]
["local" nil nil nil nil nil nil ((timestamp . "2009-10-26") (notes . "(\"<comment-beginning> -*- tab-width: 4 -*-\")")) nil]
["Locals" nil nil nil nil nil nil ((timestamp . "2005-10-18") (notes . "(\"redirect FileLocalVariables\")")) nil]
["LocalVariables" nil nil nil nil nil nil ((timestamp . "2005-10-18") (notes . "(\"redirect FileLocalVariables\")")) nil]
["log" nil nil nil nil nil nil ((timestamp . "2002-11-10") (notes . "(\"see logs\" \"See stats\")")) nil]
["logic" nil nil nil nil nil nil ((timestamp . "2015-09-17") (notes . "(\"an overview of helpful packages for typesetting logic with latex, http://www.logicmatters.net/latex-for-logicians/\")")) nil]
["lojban" nil nil nil nil nil nil ((timestamp . "2003-04-17") (notes . "(\"the Logical Language\" \"#lojban\" \"http://www.lojban.org\" \".e'osai ko sarji la lojban.\")")) nil]
["lol" nil nil nil nil nil nil ((timestamp . "2013-09-05") (notes . "(\"land of lisp - http://landoflisp.com/\" \"ask me about ,spels\" \"Let Over Lambda - http://letoverlambda.com/\" \"lisp on lines, yet another abandoned partially implemented CL web framework, see https://github.com/drewc/lisp-on-lines\" \"[2] is written by a CL crank\" \"<technomancy> yeah SICP is basically the bible; Let over Lambda is the book of Mormon\")")) nil]
["lolcode" nil nil nil nil nil nil ((timestamp . "2011-01-26") (notes . "(\"a cross between Intercal and lolcats at http://lolcode.com\" \"http://www.flickr.com/photos/33809408@N00/524925307/\" \"case-sensitive (you must code in all caps).\")")) nil]
["lollipops" nil nil nil nil nil nil ((timestamp . "2011-03-23") (notes . "(\"for suckers.\")")) nil]
["lolmemory" nil nil nil nil nil nil ((timestamp . "2012-04-25") (notes . "(\"little old lady memory, programmer slang for magnetic core rope memory\" \"see http://en.wikipedia.org/wiki/Core_rope_memory\")")) nil]
["lolscript" nil nil nil nil nil nil ((timestamp . "2013-05-13") (notes . "(\"http://inversethought.com/hg/lolscript/file/default/teh-lol.pl\")")) nil]
["lolz" nil nil nil nil nil nil ((timestamp . "2011-11-10") (notes . "(\"If you want to laugh, use heh or hah or bwahahaha. lol doesn't sound like laughter at all and makes you look like an AOL user\")")) nil]
["LOM" nil nil nil nil nil nil ((timestamp . "2013-05-16") (notes . "(\"the ability for a system administrator to monitor and manage servers by remote control <https://en.wikipedia.org/wiki/Lights_out_management>\")")) nil]
["lonelycloseparens" nil nil nil nil nil nil ((timestamp . "2012-01-02") (notes . "(\"a shibboleth of cluelessness\")")) nil]
["longest-symbols" nil nil nil nil nil nil ((timestamp . "2004-04-19") (notes . "(\"(let ((syms nil) (len 0)) (mapatoms (lambda (sym) (let ((curlen (length (symbol-name sym)))) (cond ((> curlen len) (setq syms (list sym) len curlen)) ((= curlen len) (setq syms (cons sym syms))))))) syms)\" \"Press C-x C-e after the above expression :)\")")) nil]
["longtable" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package for writing tables that continue to the next page. You can write captions within the table, and headers and trailers for pages of table. http://ctan.org/pkg/longtable\")")) nil]
["loon" nil nil nil nil nil nil ((timestamp . "2013-06-20") (notes . "(\"a google project to get universal internet access using a network of balloon relays\" \"http://www.google.com/loon/\" \"a looney\")")) nil]
["looping-in-elisp" nil nil nil nil nil nil ((timestamp . "2003-01-26") (notes . "(\"easier if you use `do', `dolist', (`loop' only if you can use the 'cl package) and sometimes `mapc'\" \"more often than not, `while'.\")")) nil]
["loops.el" nil nil nil nil nil nil ((timestamp . "2003-06-12") (notes . "(\"redirect loopfindpackage\")")) nil]
["LoP" nil nil nil nil nil nil ((timestamp . "2003-12-26") (notes . "(\"Lines of Patches :-)\")")) nil]
["loro" nil nil nil nil nil nil ((timestamp . "2006-04-11") (notes . "(\"lisp (say lispargs)\")")) nil]
["losak" nil nil nil nil nil nil ((timestamp . "2007-07-20") (notes . "(\"a  lisp OS http://losak.sourceforge.net/\")")) nil]
["Lose" nil nil nil nil nil nil ((timestamp . "2008-01-28") (notes . "(\"noecho FISSION MAILED\")")) nil]
["loss" nil nil nil nil nil nil ((timestamp . "2011-11-03") (notes . "(\"libre and open source software\")")) nil]
["loto-fdj" nil nil nil nil nil nil ((timestamp . "2011-11-01") (notes . "(\"lisp (format \\\"Les numéros du loto sont %s et le numéro de chance est: %d\\\" (mapconcat 'prin1-to-string (let ((balls '()) (tirage '())) (dotimes (i 49) (setq balls (cons (1+ i) balls))) (dotimes (n 5 tirage) (let ((i (random (length balls)))) (setq tirage (cons (elt balls i) tirage)) (setq balls (remove (car tirage) balls))))) \\\", \\\") (1+ (random 10)))\")")) nil]
["lotto-numbers" nil nil nil nil nil nil ((timestamp . "2012-01-24") (notes . "(\"lisp (format \\\"The lotto jackpot numbers are %s and this week's mega ball is %d\\\" (mapconcat 'number-to-string (let ((balls (number-sequence 1 55))) (nsort (mapcar (lambda (n) (let ((x (elt balls n))) (setq balls (remove x balls)) x)) (mapcar 'random '(54 53 52 51 50))) '<)) \\\", \\\") (1+ (random 45)))\")")) nil]
["Love" nil nil nil nil nil nil ((timestamp . "2002-12-12") (notes . "(\"in the offing. Be affectionate to one who adores you.\")")) nil]
["love-capable-p" nil nil nil nil nil nil ((timestamp . "2003-05-28") (notes . "(\"I cannot do that, Dave.\")")) nil]
["lpc" nil nil nil nil nil nil ((timestamp . "2013-09-22") (notes . "(\"the Liberated Pixel Cup: http://lpc.opengameart.org/\")")) nil]
["lpeg" nil nil nil nil nil nil ((timestamp . "2011-06-20") (notes . "(\"http://www.inf.puc-rio.br/~roberto/lpeg/lpeg.html\")")) nil]
["LPI" nil nil nil nil nil nil ((timestamp . "2005-12-20") (notes . "(\"the Linux Professional Institut at http://lpi.org/\")")) nil]
["lsad" nil nil nil nil nil nil ((timestamp . "2012-05-27") (notes . "(\"Lisp: Style and Design, by Molly M. Miller and Eric Benson\")")) nil]
["LSB" nil nil nil nil nil nil ((timestamp . "2011-09-01") (notes . "(\"short for Least Significant Bit [Or: Byte]\" \"Linux Standard Base\")")) nil]
["lsdb" nil nil nil nil nil nil ((timestamp . "2007-04-10") (notes . "(\"redirect LovelySisterDataBase\")")) nil]
["lshort" nil nil nil nil nil nil ((timestamp . "2009-03-07") (notes . "(\"a (Not So) Short Introduction to LaTeX at http://tobi.oetiker.ch/lshort/\")")) nil]
["LSI" nil nil nil nil nil nil ((timestamp . "2011-07-18") (notes . "(\"Large Scale Integration, an electronics company that designs ASICs, host bus adapters, RAID adapters, storage systems, and computer networking products <https://secure.wikimedia.org/wikipedia/en/wiki/LSI_Corporation>\")")) nil]
["LSM" nil nil nil nil nil nil ((timestamp . "2003-02-21") (notes . "(\"redirect LibreSoftwareMeeting\")")) nil]
["lstlistings" nil nil nil nil nil nil ((timestamp . "2009-12-07") (notes . "(\"a package to created syntax highlighed listings in latex http://www.ctan.org/tex-archive/macros/latex/contrib/listings/listings.pdf\" \"use caption=foo to print a cpation and label=lst:foo to set a label\")")) nil]
["LT" nil nil nil nil nil nil ((timestamp . "2006-03-18") (notes . "(\"Linus Torvalds\" \"eLTorpe\")")) nil]
["ltns" nil nil nil nil nil nil ((timestamp . "2002-11-14") (notes . "(\"an acronym for \\\"Long Time No See\\\"\")")) nil]
["LTSP" nil nil nil nil nil nil ((timestamp . "2013-05-02") (notes . "(\"Linux Terminal Server Project <http://www.ltsp.org>\")")) nil]
["LtU" nil nil nil nil nil nil ((timestamp . "2005-01-15") (notes . "(\"http://lambda-the-ultimate.org/\")")) nil]
["ltxpreview" nil nil nil nil nil nil ((timestamp . "2009-01-30") (notes . "(\"A latex previewer is available at http://www.tlhiv.org/ltxpreview/\" \"A metapost previewer is available at http://www.tlhiv.org/mppreview/\")")) nil]
["ltxprimer" nil nil nil nil nil nil ((timestamp . "2009-03-11") (notes . "(\"an introductory tutorial for LaTeX -- http://sarovar.org/projects/ltxprimer/\" \"http://www.tug.org.in/tutorials.html\")")) nil]
["ltxtable" nil nil nil nil nil nil ((timestamp . "2010-05-16") (notes . "(\"worth a try\" \"http://www.ctan.org/tex-archive/macros/latex/contrib/carlisle/ltxtable.pdf\")")) nil]
["luatex" nil nil nil nil nil nil ((timestamp . "2010-02-24") (notes . "(\"an experimental tex-compiler which embds the lua scripting language into pdftex. See http://www.luatex.org/\")")) nil]
["Lucho" nil nil nil nil nil nil ((timestamp . "2003-07-25") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Lucho\")")) nil]
["LUG" nil nil nil nil nil nil ((timestamp . "2013-10-07") (notes . "(\"Linux User Group, the way people would get Slackware CDs, back when people only had dialup and used Slackware.\")")) nil]
["lui" nil nil nil nil nil nil ((timestamp . "2005-09-11") (notes . "(\"the linewise user interface manager\" \"part of circe\")")) nil]
["Lukhas" nil nil nil nil nil nil ((timestamp . "2003-05-04") (notes . "(\"redirect LucasBonnet\")")) nil]
["lulz" nil nil nil nil nil nil ((timestamp . "2012-07-17") (notes . "(\"a corruption of lol\" \"the act of producing lols\")")) nil]
["LUN" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Logical Unit Number\")")) nil]
["luna" nil nil nil nil nil nil ((timestamp . "2011-08-24") (notes . "(\"flim available at http://kanji.zinbun.kyoto-u.ac.jp/~tomo/elisp/FLIM/index.html.ja.iso-2022-jp\")")) nil]
["lunar" nil nil nil nil nil nil ((timestamp . "2002-12-20") (notes . "(\"a linux-distribution find out more at www.lunar-linux.org or the #lunar channel on this same server.\")")) nil]
["lunfardo" nil nil nil nil nil nil ((timestamp . "2006-03-24") (notes . "(\"a colorful, slangy argot of the Spanish language which developed at the end of the 19th century and beginning of the 20th century in the lower classes in and around Buenos Aires\")")) nil]
["lush" nil nil nil nil nil nil ((timestamp . "2010-08-05") (notes . "(\"the Lisp Universal Shell -- http://lush.sourceforge.net/doc.html\")")) nil]
["LVS" nil nil nil nil nil nil ((timestamp . "2007-06-13") (notes . "(\"is a highly scalable and highly available server built on a cluster of real servers, with the load balancer running on the Linux operating system <http://linuxvirtualserver.org>\")")) nil]
["lwn" nil nil nil nil nil nil ((timestamp . "2009-06-02") (notes . "(\"the premiere Linux news site\" \"lwn.net\")")) nil]
["Lynch" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Lynch\")")) nil]
["lynx" nil nil nil nil nil nil ((timestamp . "2012-02-26") (notes . "(\"a text browser at lynx.browser.org\" \"a damn sight faster than w3m\")")) nil]
["LysKOM" nil nil nil nil nil nil ((timestamp . "2004-09-14") (notes . "(\"http://www.lysator.liu.se/lyskom/index-en.html\" \"KOM\")")) nil]
["lyx" nil nil nil nil nil nil ((timestamp . "2010-03-06") (notes . "(\"http://www.lyx.org/\" \"able to save sgml\" \"like training pants\" \"For help on lyx, please see http://wiki.lyx.org/LyX/IRC\" \"not latex, dont ask #latex about lyx\")")) nil]
["lyx-tools" nil nil nil nil nil nil ((timestamp . "2003-02-18") (notes . "(\"http://www.sad.it/~jug/lyx/lyxdoc/Extended/\")")) nil]
["LZMA" nil nil nil nil nil nil ((timestamp . "2008-03-01") (notes . "(\"the Lempel-Ziv-Markov chain-Algorithm, a data compression algorithm used in the 7z format <http://en.wikipedia.org/wiki/Lzma>\")")) nil]
["M\"" nil nil nil nil nil nil ((timestamp . "2003-01-22") (notes . "(\"redirect meta\")")) nil]
["M$" nil nil nil nil nil nil ((timestamp . "2011-09-25") (notes . "(\"like sooo 2003\")")) nil]
["M-" nil nil nil nil nil nil ((timestamp . "2003-01-22") (notes . "(\"redirect meta\")")) nil]
["M-x" nil nil nil nil nil nil ((timestamp . "2002-12-20") (notes . "(\"redirect meta\")")) nil]
["m17n" nil nil nil nil nil nil ((timestamp . "2006-12-29") (notes . "(\"multilingualization\")")) nil]
["m4" nil nil nil nil nil nil ((timestamp . "2007-05-18") (notes . "(\"a Unix macro processor used by, e.g., GNU Autoconf\" \"at http://www.gnu.org/software/m4/\" \"at http://en.wikipedia.org/wiki/M4_%28computer_language%29\")")) nil]
["m8b" nil nil nil nil nil nil ((timestamp . "2012-07-30") (notes . "(\"lisp (random-choose '(\\\"Yes\\\" \\\"No\\\" \\\"Definitely\\\" \\\"Of course not!\\\" \\\"Don't count on it\\\" \\\"My sources say no\\\" \\\"Outlook not so good\\\" \\\"Cannot predict now\\\" \\\"Ask again later\\\" \\\"Reply unclear, try again\\\" \\\"Signs point to yes\\\" \\\"Without a doubt\\\" \\\"It is decidedly so\\\" \\\"It is certain\\\" \\\"Highly likely.\\\" \\\"Ask yourself, do you really want to know?\\\" \\\"I'm telling you, you don't want to know.\\\" \\\"mu!\\\"))\")")) nil]
["m_(_)_m" nil nil nil nil nil nil ((timestamp . "2004-03-22") (notes . "(\"the image of somebody kneeling in front of you, forehead touching the ground.\")")) nil]
["mac" nil nil nil nil nil nil ((timestamp . "2011-10-03") (notes . "(\"a PC that runs Apple software.\")")) nil]
["mac-port" nil nil nil nil nil nil ((timestamp . "2013-07-12") (notes . "(\"redirect macport\")")) nil]
["macenv" nil nil nil nil nil nil ((timestamp . "2012-01-21") (notes . "(\"redirect macenvironmentvariables\")")) nil]
["maceo" nil nil nil nil nil nil ((timestamp . "2012-04-18") (notes . "(\"2% Jazz, 98% Funk\")")) nil]
["macfuse" nil nil nil nil nil nil ((timestamp . "2007-11-10") (notes . "(\"http://code.google.com/p/macfuse/, can be used to run sshfs\")")) nil]
["machine-parts" nil nil nil nil nil nil ((timestamp . "2012-07-04") (notes . "(\"cooling fan\" \"flywheel\" \"control panel\" \"DVD drive\" \"cup holder\" \"rotary engine\" \"combustion chamber\" \"blinkenlights\" \"network card\" \"heat pump\" \"archimedes screw\" \"bas relief of mars\" \"anti-friction device\" \"emergency guillotine\" \"atomic clock\" \"servo arm\" \"propellor\" \"vacuum tube\" \"air compressor\" \"giant laser\" \"flux capacitor\" \"anterior neutron stabilizer\" \"Mk 11 reverse osmosis lepton harmonizer\" \"perpetual motion device\" \"exhaust port\" \"L1-Cache\" \"auxillary bagpipe multiplexer\" \"broad-spectrum impulsive defenestrator\" \"hamster wheel\" \"drunk navvy\")")) nil]
["macports" nil nil nil nil nil nil ((timestamp . "2010-08-26") (notes . "(\"not a package manager; it's a satire about package management.\")")) nil]
["macro" nil nil nil nil nil nil ((timestamp . "2012-01-04") (notes . "(\"noecho POLO!\")")) nil]
["macros" nil nil nil nil nil nil ((timestamp . "2010-09-21") (notes . "(\"(info \\\"(elisp) Macros\\\")\")")) nil]
["macrostep" nil nil nil nil nil nil ((timestamp . "2012-07-22") (notes . "(\"an elisp macro stepper, see https://github.com/joddie/macrostep\")")) nil]
["mactex" nil nil nil nil nil nil ((timestamp . "2009-01-22") (notes . "(\"http://www.tug.org/mactex/\")")) nil]
["mad" nil nil nil nil nil nil ((timestamp . "2004-03-20") (notes . "(\"According to statistics, one person out of five is mad. If there are 4 normal persons around you, That's Not Good.\")")) nil]
["madix" nil nil nil nil nil nil ((timestamp . "2013-03-28") (notes . "(\"the one that consider aurelien as a free software extremist!\")")) nil]
["maemo" nil nil nil nil nil nil ((timestamp . "2005-11-09") (notes . "(\"the codename for the nokia 770 linux based tablet\" \"#maemo is the unofficial channel\" \"www.maemo.org\")")) nil]
["mafiawars.el" nil nil nil nil nil nil ((timestamp . "2012-04-10") (notes . "(\"noecho patches welcome\")")) nil]
["mag-menu" nil nil nil nil nil nil ((timestamp . "2013-10-15") (notes . "(\"https://github.com/chumpage/mag-menu\")")) nil]
["magnetism" nil nil nil nil nil nil ((timestamp . "2011-11-20") (notes . "(\"the other half of the electromagnetic force.\")")) nil]
["magnets" nil nil nil nil nil nil ((timestamp . "2013-11-28") (notes . "(\"at http://www.youtube.com/watch?v=1TKSfAkWWN0\")")) nil]
["mahlzeit" nil nil nil nil nil nil ((timestamp . "2006-04-14") (notes . "(\"\\\"good meal\\\"\")")) nil]
["mahnahmahnah" nil nil nil nil nil nil ((timestamp . "2009-08-10")) nil]
["mahnahmahnah" nil nil nil nil nil nil ((timestamp . "2009-08-10")) nil]
["mail" nil nil nil nil nil nil ((timestamp . "2005-10-09") (notes . "(\"redirect mailreaders\")")) nil]
["mail-followup-to" nil nil nil nil nil nil ((timestamp . "2003-11-03") (notes . "(\"http://cr.yp.to/proto/replyto.html\")")) nil]
["mailcap" nil nil nil nil nil nil ((timestamp . "2010-01-26") (notes . "(\"a mapping of MIME types to applications that can operate (display, compose, edit, print) on them.\")")) nil]
["mailclients" nil nil nil nil nil nil ((timestamp . "2009-11-17") (notes . "(\"redirect mailreaders\")")) nil]
["MailingList" nil nil nil nil nil nil ((timestamp . "2009-10-04") (notes . "(\"at http://www.gnufans.net/fsedu.pl?MailingList\")")) nil]
["mailreaders" nil nil nil nil nil nil ((timestamp . "2013-08-14") (notes . "(\"gnus, mew, mh-e, rmail, vm, wanderlust and cmail\" \"M-x term RET RET mutt RET\" \"mu4e and notmuch\" \"Harder than you think\")")) nil]
["maintainer" nil nil nil nil nil nil ((timestamp . "2012-01-25") (notes . "(\"Stefan Monnier and Chong Yidong\")")) nil]
["mairix" nil nil nil nil nil nil ((timestamp . "2004-11-16") (notes . "(\"See DesktopSearch\")")) nil]
["make" nil nil nil nil nil nil ((timestamp . "2013-11-24") (notes . "(\"GNU make, a package to automate dependecy handling and source code builds\" \"available at http://www.gnu.org/software/make/\" \"http://www.gnu.org/software/make/manual/\" \"http://en.wikipedia.org/wiki/Make_(software)\")")) nil]
["makeatletter" nil nil nil nil nil nil ((timestamp . "2015-08-23") (notes . "(\"noecho In class and package files, @ is treated as a normal letter and is usally used for internal macro names only. To use these macros in a normal LaTeX document, you can make them available with \\\\makeatletter and hide them with \\\\makeatother again. Also read http://tex.stackexchange.com/a/8353\")")) nil]
["makefile" nil nil nil nil nil nil ((timestamp . "2013-05-07") (notes . "(\"at ##workingset\")")) nil]
["mako" nil nil nil nil nil nil ((timestamp . "2010-07-08") (notes . "(\"a Python template engine - http://www.makotemplates.org/\")")) nil]
["malbolge" nil nil nil nil nil nil ((timestamp . "2011-10-23") (notes . "(\"a programming language that was specifically designed to be difficult to program in\" \"http://www.antwon.com/other/malbolge/malbolge.txt\" \"nearly impossible to work with and requires substantial cryptanalysis to produce anything on the order of a simple loop in complex\" \"many orders of magnitude more difficult to code in than most other estoeric languages such as Brainfuck\" \"named after the eighth circle of hell in Dante's Inferno\")")) nil]
["mallards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho DUCK HIM!!\")")) nil]
["maltron" nil nil nil nil nil nil ((timestamp . "2003-12-09") (notes . "(\"http://www.maltron.com\")")) nil]
["malyom" nil nil nil nil nil nil ((timestamp . "2013-10-02") (notes . "(\"see <malyon>; twb can't remember words properly\")")) nil]
["man" nil nil nil nil nil nil ((timestamp . "2013-02-19") (notes . "(\"an UNIX command that's really friendly\" \"man -a for all entries\")")) nil]
["manatee" nil nil nil nil nil nil ((timestamp . "2011-10-16") (notes . "(\"a Haskell-based extensible editor <http://haskell.org/haskellwiki/Manatee>\")")) nil]
["Mancala" nil nil nil nil nil nil ((timestamp . "2006-05-21") (notes . "(\"a family of board games played around the world, sometimes called sowing games or count and capture games, which comes from the general gameplay.\")")) nil]
["mandrake" nil nil nil nil nil nil ((timestamp . "2002-11-26") (notes . "(\"Similar problems as KDE reported: see ColorsAndKDE\")")) nil]
["mang" nil nil nil nil nil nil ((timestamp . "2007-09-14") (notes . "(\"the finest word Pacino ever spoke\")")) nil]
["manglement" nil nil nil nil nil nil ((timestamp . "2006-11-18") (notes . "(\"a derogatory nickname for management (i.e. the people who make decisions instead of doing things).\")")) nil]
["maniacal-laugh" nil nil nil nil nil nil ((timestamp . "2012-03-14") (notes . "(\"noecho /me looks evil and shouts \\\"Muahahahahah!\\\"\")")) nil]
["manifold" nil nil nil nil nil nil ((timestamp . "2008-12-08") (notes . "(\"The third stomach of a ruminant animal\")")) nil]
["manna" nil nil nil nil nil nil ((timestamp . "2005-06-23") (notes . "(\"a story by Marshall Brain, available at http://marshallbrain.com/manna1.htm\" \"After you read it, have a look at http://www.gmb.org.uk/Templates/PressItems.asp?NodeID=91861 (and, if you know German, at http://www.telepolis.de/r4/artikel/20/20265/1.html as well)\")")) nil]
["mansards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho TO THE ROOF WITH HIM!!\")")) nil]
["mansplain" nil nil nil nil nil nil ((timestamp . "2010-05-10") (notes . "(\"http://www.urbandictionary.com/define.php?term=Mansplain\")")) nil]
["map-regexp" nil nil nil nil nil nil ((timestamp . "2013-06-15") (notes . "(\"mapc,mapcar,mapcan on isearch's results https://github.com/tarsius/map-regexp\")")) nil]
["mappers" nil nil nil nil nil nil ((timestamp . "2006-05-22") (notes . "(\"one kind of learners described in Reciprocality http://www.reciprocality.org/\")")) nil]
["marc" nil nil nil nil nil nil ((timestamp . "2007-03-03") (notes . "(\"lisp \\\"Mailing list archives: http://marc.theaimsgroup.com\\\"\")")) nil]
["marcus" nil nil nil nil nil nil ((timestamp . "2002-11-26") (notes . "(\"a demi-god.\" \"according to wolfgang, hurd's project leader.\")")) nil]
["margin" nil nil nil nil nil nil ((timestamp . "2007-11-26") (notes . "(\"redirect marginmode\")")) nil]
["margins" nil nil nil nil nil nil ((timestamp . "2013-12-31") (notes . "(\"If you want to change the margins of your documents cf. the packages geometry, typearea or changepage.\")")) nil]
["Marioct" nil nil nil nil nil nil ((timestamp . "2003-07-16") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Marioct\")")) nil]
["Mark" nil nil nil nil nil nil ((timestamp . "2011-03-30") (notes . "(\"redirect MarkCommands\")")) nil]
["mark0" nil nil nil nil nil nil ((timestamp . "2004-02-21") (notes . "(\"lisp (format-time-string \\\"%b %e %T fsbot -- EURO --\\\")\")")) nil]
["MarkerVisit" nil nil nil nil nil nil ((timestamp . "2003-08-21") (notes . "(\"at http://www.bloomington.in.us/~brutt/marker-visit.el\")")) nil]
["marmalade" nil nil nil nil nil nil ((timestamp . "2013-12-10") (notes . "(\"spreadable elisp at http://marmalade-repo.org\" \"(eval-after-load \\\"package\\\" '(add-to-list 'package-archives '(\\\"marmalade\\\" . \\\"http://marmalade-repo.org/packages/\\\")))\" \"the project to rewrite marmalade in elisp http://github.com/nicferrier/marmalade\" \"the new elisp based project https://github.com/nicferrier/elmarmalade\")")) nil]
["marmalade-bug-20" nil nil nil nil nil nil ((timestamp . "2011-10-28") (notes . "(\"the fact that the install instructions on marmalade.repo.org are insufficient\" \"http://code.google.com/p/marmalade/issues/detail?id=20\" \"something that should have been fixed ages ago\")")) nil]
["marmalade-down-p" nil nil nil nil nil nil ((timestamp . "2013-06-04") (notes . "(\"redirect m8b\")")) nil]
["marmalade-fix" nil nil nil nil nil nil ((timestamp . "2011-07-06") (notes . "(\"the current instructions on http://marmalade-repo.org leave a bit to be desired.\" \"http://code.google.com/p/marmalade/issues/detail?id=20\")")) nil]
["marmalade-instructions" nil nil nil nil nil nil ((timestamp . "2011-10-14") (notes . "(\"the official install instructions at marmalade-repo.org are currently incorrect; see http://code.google.com/p/marmalade/issues/detail?id=20\")")) nil]
["marmalade-repo-down-p" nil nil nil nil nil nil ((timestamp . "2013-06-04") (notes . "(\"nil\")")) nil]
["marmalade-up-p" nil nil nil nil nil nil ((timestamp . "2013-06-04") (notes . "(\"redirect m8b\")")) nil]
["MarsStatus" nil nil nil nil nil nil ((timestamp . "2004-01-22") (notes . "(\"at http://www.spaceflightnow.com/mars/mera/statustextonly.html\")")) nil]
["MartinFowler" nil nil nil nil nil nil ((timestamp . "2012-04-17") (notes . "(\"the Chief Scientist of ThoughtWorks\" \"a signatory of the Agile Manifesto\")")) nil]
["marx" nil nil nil nil nil nil ((timestamp . "2011-07-09") (notes . "(\"saying that the alienation of the worker from the work he produces, from the product of his labor; the product's design and the manner in which it is produced are determined not by its actual producers, nor even by those who consume products, but rather by the Capitalist class, which appropriates labor - including that of designers and engineers - and seeks to shape consumers' taste in order to maximize profit.\")")) nil]
["marxist-bore" nil nil nil nil nil nil ((timestamp . "2013-09-20") (notes . "(\"lisp (format \\\"/me takes %s aside and explains that work is the alienation of the self in exchange for the means of survival\\\" (mapconcat 'symbol-name lispargs \\\" \\\"))\")")) nil]
["Mashomii" nil nil nil nil nil nil ((timestamp . "2009-11-06") (notes . "(\"Diaxa\")")) nil]
["mason" nil nil nil nil nil nil ((timestamp . "2011-06-12") (notes . "(\"a templating engine for Perl, analogous to Smarty for PHP.\")")) nil]
["masp" nil nil nil nil nil nil ((timestamp . "2003-05-13") (notes . "(\"an Assembly Preprocessor at https://savannah.nongnu.org/projects/masp/\")")) nil]
["master-debater" nil nil nil nil nil nil ((timestamp . "2011-09-15") (notes . "(\"a cunning linguist\")")) nil]
["MasterOhsSimulationOfRelation" nil nil nil nil nil nil ((timestamp . "2003-02-18") (notes . "(\"exact prosthetic duplicates of Iraqi citizens that we can hack up at a moment's notice\")")) nil]
["match-paren" nil nil nil nil nil nil ((timestamp . "2011-08-06") (notes . "(\"redirect matchparen\")")) nil]
["matchingparen" nil nil nil nil nil nil ((timestamp . "2003-05-28") (notes . "(\"redirect matchparen\")")) nil]
["mate" nil nil nil nil nil nil ((timestamp . "2012-07-03") (notes . "(\"in essence, a tea brewed from a plant grown in South America called yerba.\" \"a really great deep hack mode drink. You just fill up the gourd with mate, a thermos with hot water, and you have hot alkaloids available at your desk for hours.\" \"most commonly known as a coffee alternative.\" \"grown in Paraguay, Argentina, Uruguay and Southern Brazil (Rio Grande do Sul and Paraná).\" \"http://en.wikipedia.org/wiki/Yerba_mate\" \"yerba mate users report a mental state of wakefulness, focus and alertness reminiscent of most stimulants, but often remark on mate's unique lack of the negative effects.\" \"contains xanthines, which are alkaloids in the same family as caffeine, theophylline, and theobromine, well-known stimulants also found in coffee and chocolate.\" \"contains other elements, such as Potassium, Magnesium and Manganese.\" \"the drink has a pungent taste like a cross between green tea and coffee, with hints of tobacco and oak.\" \"Sugar or honey are sometimes added if desired, creating mate dulce — sweet mate (mate without sugar is called mate amargo or bitter mate).\" \"try the german soft drink club-mate. the official slogan is \\\"you get used to it\\\"\")")) nil]
["matGeom" nil nil nil nil nil nil ((timestamp . "2011-10-09") (notes . "(\"matgeom.sf.net\")")) nil]
["math" nil nil nil nil nil nil ((timestamp . "2013-05-28") (notes . "(\"\\\"Anyone who cannot cope with mathematics is not fully human. At best he is a tolerable subhuman who has learned to wear shoes, bathe and not make messes in the house.\\\" -- Lazarus Long\" \"Mathematicians are like Frenchmen: whatever you say to them they translate into their own language and forthwith it is something entirely different. (Johann Wolfgang von Goethe)\" \"Philosophy is a game with objectives and no rules. Mathematics is a game with rules and no objectives.\" \"hard!\" \"not something you make a career of\" \"unless of course you're crazy\" \"you might want to go shopping\" \"missing an s\")")) nil]
["math.net" nil nil nil nil nil nil ((timestamp . "2003-02-17") (notes . "(\"http://www.cdrnet.net/projects/nmath/\")")) nil]
["mathclap" nil nil nil nil nil nil ((timestamp . "2014-09-14") (notes . "(\"an overview over llap, clap, rlap and their mathematical equivalents as well as the phantoms with nice pictorials available from https://www.math.lsu.edu/~aperlis/publications/mathclap/perlis_mathclap_24Jun2003.pdf\")")) nil]
["Mathematica" nil nil nil nil nil nil ((timestamp . "2006-03-14") (notes . "(\"Open Source alternative: maxima\")")) nil]
["mathematicaLinks" nil nil nil nil nil nil ((timestamp . "2003-02-25") (notes . "(\"http://mathforum.org/library/resource_types/mathematica/\")")) nil]
["mathematicaSyntax" nil nil nil nil nil nil ((timestamp . "2003-02-25") (notes . "(\"http://compilers.iecc.com/comparch/article/00-04-069\" \"http://forums.wolfram.com/mathgroup/archive/1993/Apr/msg00073.html\" \"http://pdg.cecm.sfu.ca/openmath0.7.5d/docs/CA.sfu.cecm.openmath.phrasebook.MathematicaOMCodec.html (this is good)\" \"http://aiki.ccaps.cs.cmu.edu/DownloadIndex.html\")")) nil]
["matherotica" nil nil nil nil nil nil ((timestamp . "2008-08-30") (notes . "(\"mathematical 3d surface modelling software for objects that have erotic connotations\")")) nil]
["MathFunFacts" nil nil nil nil nil nil ((timestamp . "2004-09-14") (notes . "(\"at http://www.math.hmc.edu/funfacts/\")")) nil]
["mathit" nil nil nil nil nil nil ((timestamp . "2016-04-13") (notes . "(\"noecho In math mode, a text like \\\"var\\\" denotes the product of three variables v, a, and r. If you want to typeset variable names with more than a single letter, use \\\"\\\\mathit{var}\\\" to get the correct spacing between letters.\")")) nil]
["MathML" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"a W3C Recommendation that was released on 21 Feb 2001. A product of the W3C Math working group, MathML is a low-level specification for describing mathematics as a basis for machine to machine communication. It provides a much needed foundation for the inclusion of mathematical expressions in Web pages. http://www.w3.org/Math/\" \"at http://www.gnufans.net/fsedu.pl?MathML\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?MathML\")")) nil]
["mathmode" nil nil nil nil nil nil ((timestamp . "2014-11-13") (notes . "(\"a comprehensive review of mathematics in (La)TeX: http://mirror.ctan.org/info/math/voss/mathmode/Mathmode.pdf\")")) nil]
["mathmode.pdf" nil nil nil nil nil nil ((timestamp . "2010-05-26") (notes . "(\"http://mirror.ctan.org/info/math/voss/mathmode/Mathmode.pdf\")")) nil]
["MathSoftware" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?MathSoftware\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?MathSoftware\")")) nil]
["mathtools" nil nil nil nil nil nil ((timestamp . "2013-04-17") (notes . "(\"http://www.ctan.org/pkg/mathtools\")")) nil]
["MATLAB" nil nil nil nil nil nil ((timestamp . "2012-11-30") (notes . "(\"a non-free numerical simulation and computation environment largely compatible with Octave\")")) nil]
["MatlabTools" nil nil nil nil nil nil ((timestamp . "2010-07-16") (notes . "(\"at http://www.mathtools.net/\")")) nil]
["matrix" nil nil nil nil nil nil ((timestamp . "2011-04-26") (notes . "(\"noecho Mr. Stallman...\")")) nil]
["MattFair" nil nil nil nil nil nil ((timestamp . "2004-11-30") (notes . "(\"See The World Owes You A Living\")")) nil]
["maude" nil nil nil nil nil nil ((timestamp . "2008-02-10") (notes . "(\"here: http://maude.cs.uiuc.edu/\")")) nil]
["maximise" nil nil nil nil nil nil ((timestamp . "2011-04-17") (notes . "(\"redirect maximize\")")) nil]
["MaxNumber" nil nil nil nil nil nil ((timestamp . "2009-03-12") (notes . "(\"See most/least-positive-fixnum/float\")")) nil]
["maxxe" nil nil nil nil nil nil ((timestamp . "2013-05-18") (notes . "(\"dull\")")) nil]
["mbone" nil nil nil nil nil nil ((timestamp . "2006-07-11") (notes . "(\"the multicast backbone\")")) nil]
["mbp" nil nil nil nil nil nil ((timestamp . "2006-10-25") (notes . "(\"a Mac Book Pro\")")) nil]
["MBR" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Master Boot Record\")")) nil]
["mbx" nil nil nil nil nil nil ((timestamp . "2005-08-21") (notes . "(\"a binary mailbox format that claims to be batter than mbox\" \"apparently lacking any command line tools that work on it\")")) nil]
["mc" nil nil nil nil nil nil ((timestamp . "2004-06-28") (notes . "(\"the midnight commander, see mc.el\" \"For gnome, try gmc, the gnome version of mc.\")")) nil]
["McCarthyFacts" nil nil nil nil nil nil ((timestamp . "2011-03-29") (notes . "(\"at http://www-formal.stanford.edu/jmc/facts.txt\")")) nil]
["mcclim" nil nil nil nil nil nil ((timestamp . "2005-01-04") (notes . "(\"MikeMac's free implementation of the Common Lisp Interface Manager\" \"at http://mcclim.cliki.net/\" \"at http://www.common-lisp.net/project/mcclim/\")")) nil]
["mcgrof" nil nil nil nil nil nil ((timestamp . "2003-05-06") (notes . "(\"the man\")")) nil]
["McIntosh" nil nil nil nil nil nil ((timestamp . "2012-01-03") (notes . "(\"''Mac an Toisich'' which is gaelic for \\\"son of the Chief\\\"\")")) nil]
["McOS10" nil nil nil nil nil nil ((timestamp . "2012-05-24") (notes . "(\"The Chicken McNuggets of operating systems.\")")) nil]
["MCP" nil nil nil nil nil nil ((timestamp . "2007-03-02") (notes . "(\"the Master Control Program, an interrupt handler on the Burroughs B 5000.\")")) nil]
["mdd" nil nil nil nil nil nil ((timestamp . "2006-10-26") (notes . "(\"short for Major Depressive Disorder\" \"short for Motivational Deficit Disorder\")")) nil]
["mdi" nil nil nil nil nil nil ((timestamp . "2006-11-18") (notes . "(\"multiple document interface\")")) nil]
["MDRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Multibank Dynamic Random Access Memory\")")) nil]
["mdupont" nil nil nil nil nil nil ((timestamp . "2003-03-01") (notes . "(\"redirect mikedupont\")")) nil]
["meaningoflife" nil nil nil nil nil nil ((timestamp . "2003-06-09") (notes . "(\"directonly 42\")")) nil]
["meat" nil nil nil nil nil nil ((timestamp . "2011-07-02") (notes . "(\"http://baetzler.de/humor/meat_beings.html\")")) nil]
["meatspace" nil nil nil nil nil nil ((timestamp . "2011-02-01") (notes . "(\"The great flesh manifold, occasionally referred to (erroneously) as IRL.\")")) nil]
["mechanical-sympathy" nil nil nil nil nil nil ((timestamp . "2012-05-20") (notes . "(\"the name given to optimization techniques that are sympathetic to machines; for example CPUs and concurrency problems.\")")) nil]
["MediaGoblin" nil nil nil nil nil nil ((timestamp . "2012-12-03") (notes . "(\"a free software media publishing platform http://www.mediagoblin.org/\")")) nil]
["MediaWiki" nil nil nil nil nil nil ((timestamp . "2007-04-05") (notes . "(\"the most used wiki engine. It is not the best, though.\" \"http://meta.wikimedia.org/wiki/Mediawiki.el\")")) nil]
["mediawiki.el" nil nil nil nil nil nil ((timestamp . "2007-04-05") (notes . "(\"at http://meta.wikimedia.org/wiki/Mediawiki.el\")")) nil]
["meds" nil nil nil nil nil nil ((timestamp . "2012-05-15") (notes . "(\"noecho Are you lot off your meds again\")")) nil]
["medusa" nil nil nil nil nil nil ((timestamp . "2004-11-16") (notes . "(\"a GPLed desktop indexing/search facility\" \"See DesktopSearch\" \"the GMOME Desktop indexing/search tool\")")) nil]
["MEGO" nil nil nil nil nil nil ((timestamp . "2013-01-22") (notes . "(\"My Eyes Glaze Over\")")) nil]
["meh" nil nil nil nil nil nil ((timestamp . "2012-12-06") (notes . "(\"a nonsensical interjection signifying moderate dislike, but not avoidance.\" \"expresses ennui\" \"further proof of The Simpsons' Shakespearean qualities.\")")) nil]
["meld" nil nil nil nil nil nil ((timestamp . "2011-03-06") (notes . "(\"a diff and merge tool, see http://meld.sourceforge.net/\")")) nil]
["melpa" nil nil nil nil nil nil ((timestamp . "2012-07-30") (notes . "(\"noecho a package.el source generated directly from version control repositories\" \"http://melpa.milkbox.net/\")")) nil]
["Melpomene" nil nil nil nil nil nil ((timestamp . "2008-12-30") (notes . "(\"very insulting\")")) nil]
["memetics" nil nil nil nil nil nil ((timestamp . "2011-01-26") (notes . "(\"Memes are contagious ideas, all competing for a share of our mind in a kind of Darwinian selection.\" \"http://www.memecentral.com/\" \"http://pespmc1.vub.ac.be/memes.html\")")) nil]
["memoir" nil nil nil nil nil nil ((timestamp . "2005-03-10") (notes . "(\"at http://www.ctan.org/tex-archive/macros/latex/contrib/memoir/memman.pdf\")")) nil]
["memory" nil nil nil nil nil nil ((timestamp . "2003-10-02") (notes . "(\"at 1-800-4memory\")")) nil]
["mendeley" nil nil nil nil nil nil ((timestamp . "2015-08-11") (notes . "(\"a graphical manager for working with bibliographical entries with support for bibtex\")")) nil]
["menumeters" nil nil nil nil nil nil ((timestamp . "2010-03-20") (notes . "(\"a GPLed gkrellm-like system monitor for OS X\")")) nil]
["mercury" nil nil nil nil nil nil ((timestamp . "2013-04-08") (notes . "(\"a functional logic programming language geared towards real-world applications <https://en.wikipedia.org/wiki/Mercury_(programming_language)>\")")) nil]
["meta-cvs" nil nil nil nil nil nil ((timestamp . "2013-06-18") (notes . "(\"http://www.cliki.net/Meta-CVS\")")) nil]
["meta-x" nil nil nil nil nil nil ((timestamp . "2006-05-27") (notes . "(\"redirect m-x\")")) nil]
["metabang-bind" nil nil nil nil nil nil ((timestamp . "2010-06-01") (notes . "(\"http://common-lisp.net/project/metabang-bind/\")")) nil]
["metaconference" nil nil nil nil nil nil ((timestamp . "2007-11-15") (notes . "(\"https://lists.hcoop.net/listinfo/metaconference\")")) nil]
["metalgearsolid" nil nil nil nil nil nil ((timestamp . "2013-10-21") (notes . "(\"a video game that is the complete opposite of your typical shoot-em-up. the stealthier you are, the higher your score.\" \"http://www.konami.jp/gs/game/mgs/\" \"known for somewhat retarded AI\")")) nil]
["meth" nil nil nil nil nil nil ((timestamp . "2010-11-07") (notes . "(\"noecho Meth lamb: http://i.imgur.com/8Xl0q.jpg\")")) nil]
["MethaMathTheQuestForOmega" nil nil nil nil nil nil ((timestamp . "2004-06-11") (notes . "(\"an awesome online math book by Gregory Chaitin at http://www.cs.auckland.ac.nz/CDMTCS/chaitin/omega.html\")")) nil]
["mews" nil nil nil nil nil nil ((timestamp . "2002-12-09") (notes . "(\"redirect mew\")")) nil]
["MFLF" nil nil nil nil nil nil ((timestamp . "2004-08-09") (notes . "(\"My Favorite Lisp Flavor\")")) nil]
["MFTL" nil nil nil nil nil nil ((timestamp . "2013-04-27") (notes . "(\"My Favorite Toy Language\" \"see MFLF\" \"http://9gag.com/gag/a3Pm0gm\")")) nil]
["MFW" nil nil nil nil nil nil ((timestamp . "2013-08-13") (notes . "(\"Internet-slang for \\\"my face when\\\"\")")) nil]
["MGAOCP" nil nil nil nil nil nil ((timestamp . "2007-08-23") (notes . "(\"Massive Google Array of Crappy PCs\")")) nil]
["mgs" nil nil nil nil nil nil ((timestamp . "2005-11-11") (notes . "(\"redirect metalgearsolid\")")) nil]
["mgt" nil nil nil nil nil nil ((timestamp . "2004-04-18") (notes . "(\"multi-gnome-terminal\" \"http://multignometerm.sourceforge.net/\")")) nil]
["MIA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Missing In Action\")")) nil]
["miau" nil nil nil nil nil nil ((timestamp . "2004-09-20") (notes . "(\"an irc-bouncer found at http://miau.sourceforge.net/\")")) nil]
["mice" nil nil nil nil nil nil ((timestamp . "2012-06-28") (notes . "(\"cave wizards\")")) nil]
["MichelleLowman" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?MichelleLowman\")")) nil]
["mickep" nil nil nil nil nil nil ((timestamp . "2009-01-31") (notes . "(\"demanding but fair\")")) nil]
["mico" nil nil nil nil nil nil ((timestamp . "2010-10-01") (notes . "(\"corba\")")) nil]
["MicParen" nil nil nil nil nil nil ((timestamp . "2003-05-28") (notes . "(\"redirect mic-paren\")")) nil]
["micro$oft" nil nil nil nil nil nil ((timestamp . "2005-02-04") (notes . "(\"an open enemy of fsf\")")) nil]
["micropolis" nil nil nil nil nil nil ((timestamp . "2013-08-25") (notes . "(\"the GPL-licensed version of SimCity\" \"http://www.donhopkins.com/home/micropolis/\")")) nil]
["Microsoft" nil nil nil nil nil nil ((timestamp . "2013-09-03") (notes . "(\"buying Nokia.\")")) nil]
["microtype" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package that provides a LaTeX interface to pdfTeXs micro-typographic extensions: character protrusion and font expansion. http://ctan.org/pkg/microtype [doc: http://tinyurl.com/microtype-doc]\")")) nil]
["MIDI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Musical Instrument Digital Interface\")")) nil]
["midnight.el" nil nil nil nil nil nil ((timestamp . "2004-02-02") (notes . "(\"Runs code at midnight\")")) nil]
["Midori" nil nil nil nil nil nil ((timestamp . "2013-05-03") (notes . "(\"a GTK2 WebKit browser <http://www.twotoasts.de>, <#midori>\")")) nil]
["mierda" nil nil nil nil nil nil ((timestamp . "2006-12-08") (notes . "(\"noecho esa boca!\")")) nil]
["mig" nil nil nil nil nil nil ((timestamp . "2011-11-09") (notes . "(\"The Mach Interface Generator (MIG) is a program which generates inter-process communication (IPC) code. Specifically Mig generates remote procedure call (RPC) code for communication between client and server processes running on a Mach microkernel.\" \"me in danish.\")")) nil]
["MikeDuPont" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?MikeDuPont\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?MikeDuPont\" \"at http://www.gnufans.net/fsedu.pl?Mdupont\")")) nil]
["milkshake" nil nil nil nil nil nil ((timestamp . "2012-11-04") (notes . "(\"noecho ♩ 𝅘𝅥𝅮 My milkshake brings all the bots to the yard...\")")) nil]
["miller-columns" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"a browsing/visualisation applied to tree structures, as in Mac OS X Finder http://en.wikipedia.org/wiki/Miller_columns\" \"file managers are for people who haven't memorised enough of zshexpn(1)\")")) nil]
["MIME" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Multipurpose Internet Mail Extensions\")")) nil]
["mimeandgnus" nil nil nil nil nil nil ((timestamp . "2003-05-21") (notes . "(\"redirect MimeTypesWithGnus\")")) nil]
["mina" nil nil nil nil nil nil ((timestamp . "2006-03-24") (notes . "(\"lunf. hembra, mujer\")")) nil]
["mind-blown" nil nil nil nil nil nil ((timestamp . "2012-03-13") (notes . "(\"noecho *kaBLAMMO*\")")) nil]
["MindMapping" nil nil nil nil nil nil ((timestamp . "2004-04-24") (notes . "(\"at http://en.wikipedia.org/wiki/Mind_mapping\" \"See also FreeMind\")")) nil]
["mine" nil nil nil nil nil nil ((timestamp . "2003-12-07") (notes . "(\"mine!\")")) nil]
["minetest" nil nil nil nil nil nil ((timestamp . "2012-12-12") (notes . "(\"http://minetest.net\" \"\\\"a sandbox building game, inspired somewhat by Infiniminer but mostly by Minecraft, created by Perttu \\\"celeron55\\\" Ahola. The gameplay is very similar to Minecraft's, consisting of creating and destroying blocks in a local or online 3D environment.\\\" Minetest wiki.\" \"All castles made of sand fall in the sea, eventually.\")")) nil]
["minimal" nil nil nil nil nil nil ((timestamp . "2010-02-14") (notes . "(\"the sample should be *minimal*. To get there: comment line by line until you don't get the problem anymore and give us exactly that code you have by then.\" \"http://www.minimalbeispiel.de/mini-en.html\")")) nil]
["minimial" nil nil nil nil nil nil ((timestamp . "2009-03-02") (notes . "(\"What part of *minimal* don't you understand\")")) nil]
["minita" nil nil nil nil nil nil ((timestamp . "2006-03-24") (notes . "(\"redirect mina\")")) nil]
["minitoc" nil nil nil nil nil nil ((timestamp . "2016-05-02") (notes . "(\"a package that allows you to have a table of contents per part/chapter/section available from http://www.ctan.org/pkg/minitoc\")")) nil]
["minix" nil nil nil nil nil nil ((timestamp . "2011-07-04") (notes . "(\"http://www.minix3.org/\" \"minix3 is serious business now\")")) nil]
["minted" nil nil nil nil nil nil ((timestamp . "2013-06-10") (notes . "(\"an alternative to the listings package for neatly typesetting source code in LaTeX. Pros: Typesetting colored code is easier and more flexible. Cons: Requires the external Python tool \\\"Pygments\\\"\" \"hard to install on windows. See http://tex.stackexchange.com/questions/23458/how-to-install-syntax-highlight-package-minted-on-windows-7\")")) nil]
["minux" nil nil nil nil nil nil ((timestamp . "2002-11-22") (notes . "(\"The One Disk Linux System (http://www.online-center.com/minux/)\")")) nil]
["MIPS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Million Instructions Per Second\")")) nil]
["mir" nil nil nil nil nil nil ((timestamp . "2013-06-29") (notes . "(\"Ubuntu's next generation display server\" \"https://wiki.ubuntu.com/MirSpec\")")) nil]
["MitCadrLispm" nil nil nil nil nil nil ((timestamp . "2005-10-03") (notes . "(\"at http://www.heeltoe.com/retro/mit/mit_cadr_lmss.html\")")) nil]
["MITM" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"https://en.wikipedia.org/wiki/Man-in-the-middle_attack\")")) nil]
["mitmproxy" nil nil nil nil nil nil ((timestamp . "2013-02-14") (notes . "(\"an SSL-capable man-in-the-middle proxy, see http://mitmproxy.org/\")")) nil]
["mitscheme" nil nil nil nil nil nil ((timestamp . "2010-08-09") (notes . "(\"redirect MitSlashGnuScheme\")")) nil]
["mjflick" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"an all around nice guy.\")")) nil]
["mjg59" nil nil nil nil nil nil ((timestamp . "2012-08-31") (notes . "(\"the Linux UEFI guy <http://www-jcsu.jesus.cam.ac.uk/~mjg59> <http://mjg59.dreamwidth.org>\")")) nil]
["mksh" nil nil nil nil nil nil ((timestamp . "2006-10-30") (notes . "(\"The portable version of the OpenBSD pdksh implementation.\")")) nil]
["ML" nil nil nil nil nil nil ((timestamp . "2012-10-29") (notes . "(\"the MetaLanguage. See Ocaml or SML.\" \"short for mailing list\" \"MatLab\" \"machine learning\" \"mailing list\")")) nil]
["mldonkey.el" nil nil nil nil nil nil ((timestamp . "2004-03-12") (notes . "(\"at http://www.physik.fu-berlin.de/~dhansen/mldonkey/index.html\")")) nil]
["mmde" nil nil nil nil nil nil ((timestamp . "2006-01-03") (notes . "(\"the moinmoin desktop edition\" \"available on http://moinmoin.wikiwikiweb.de/DesktopEdition\" \"a PersonalWiki (see http://www.communitywiki.org/de/PersonalWiki )\")")) nil]
["MMIX" nil nil nil nil nil nil ((timestamp . "2012-11-11") (notes . "(\"a 64-bit risc computer designed by Donald Knuth, with contributions by John L. Hennessy\" \"meant to replace the earlier MIX\")")) nil]
["mmkay" nil nil nil nil nil nil ((timestamp . "2004-04-03") (notes . "(\"http://www.urbandictionary.com/define.php?term=mmkay\" \"http://www.stlyrics.com/songs/s/southpark9849/aeasymmmk323599.html\")")) nil]
["mml" nil nil nil nil nil nil ((timestamp . "2006-01-27") (notes . "(\"an acronym for Mime Meta Language\")")) nil]
["mmm-mode" nil nil nil nil nil nil ((timestamp . "2004-01-14") (notes . "(\"redirect MultipleModes\")")) nil]
["MMU" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Memory Management Unit\")")) nil]
["MO" nil nil nil nil nil nil ((timestamp . "2008-05-21") (notes . "(\"modus operandi, or \\\"way of doing things\\\"\")")) nil]
["moco" nil nil nil nil nil nil ((timestamp . "2011-07-25") (notes . "(\"Mozilla Corporation\")")) nil]
["mocp" nil nil nil nil nil nil ((timestamp . "2007-01-30") (notes . "(\"music on console player: http://moc.daper.net/\" \"see emms\")")) nil]
["mode-line" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"that bar at the bottom of your window that has several confusing bits of text in it\" \"where the line (and column) number is displayed\" \"buffer specific\")")) nil]
["modelines" nil nil nil nil nil nil ((timestamp . "2010-04-18") (notes . "(\"the vi(llainous) equivalent of ,,filevariables\")")) nil]
["modelm" nil nil nil nil nil nil ((timestamp . "2011-01-18") (notes . "(\"noecho Why are we even talking about keyboards? The Model M, with its tactile feedback, is clearly the Stradivarius of keyboards. Everyone should get one while they're still available. In 200 years, they'll be prized heirlooms.\")")) nil]
["modemap" nil nil nil nil nil nil ((timestamp . "2007-05-10") (notes . "(\"redirect ModeSpecificKeyBinding\")")) nil]
["moderncv" nil nil nil nil nil nil ((timestamp . "2016-01-04") (notes . "(\"A modern curriculum vitae class providing several different styles\")")) nil]
["ModeSpecificKeyBinding" nil nil nil nil nil nil ((timestamp . "2007-03-25") (notes . "(\"(define-key foo-mode-map (kbd \\\"c-fookey\\\") 'foo-function)\")")) nil]
["modifiers" nil nil nil nil nil nil ((timestamp . "2012-05-10") (notes . "(\"control (C-), alt (A-), (meta) M-, super (s-), shift (S-), and hyper (H-)\")")) nil]
["modok" nil nil nil nil nil nil ((timestamp . "2012-07-03") (notes . "(\"Mental Organism Designed Only for Killing\" \"http://www.angryflower.com/modoke.gif\")")) nil]
["MoinMoin" nil nil nil nil nil nil ((timestamp . "2005-03-23") (notes . "(\"a very nice wiki engine :-)\")")) nil]
["MoinMoin+Ldap" nil nil nil nil nil nil ((timestamp . "2005-04-07") (notes . "(\"enabling HTTP auth (see MoinMoin:HelpOnConfiguration) and using mod_ldap (in Apache). You may want to use the user creation patch (see MoinMoin:MoinMoinPatch )\")")) nil]
["mol" nil nil nil nil nil nil ((timestamp . "2005-01-04") (notes . "(\"mac-on-linux\" \"at http://www.maconlinux.org/\")")) nil]
["monaco" nil nil nil nil nil nil ((timestamp . "2009-12-20") (notes . "(\"the city-state in europe that costs Monte Carlo (See MonteCarlo)\")")) nil]
["monad" nil nil nil nil nil nil ((timestamp . "2013-03-02") (notes . "(\"noecho /me jabbers incomprehensibly.\")")) nil]
["monad-expert" nil nil nil nil nil nil ((timestamp . "2013-02-08") (notes . "(\"noecho /me starts gibbering comprehensibly\")")) nil]
["monads" nil nil nil nil nil nil ((timestamp . "2014-02-04") (notes . "(\"Monads explained without category theory and type notation, but with JavaScript and everyday programming: http://www.youtube.com/watch?v=b0EF0VTs9Dc\" \"http://blog.jorgenschaefer.de/2013/01/monads-for-normal-programmers.html\" \"Think of a monad as a spacesuit full of nuclear waste in the ocean next to a container of apples. Now, you can't put oranges in the spacesuit or the nucelar waste falls in the ocean, *but* the apples are carried around anyway, and you just take what you need. -- dons\")")) nil]
["mongodb" nil nil nil nil nil nil ((timestamp . "2012-02-24") (notes . "(\"an open source document-oriented nosql database\" \"see https://github.com/m2ym/mongo-el\" \"web scale http://www.xtranormal.com/watch/6995033/mongo-db-is-web-scale\")")) nil]
["monk" nil nil nil nil nil nil ((timestamp . "2003-02-16") (notes . "(\"at http://www.asahi-net.or.jp/~pi9s-nnb/monk/\")")) nil]
["monky" nil nil nil nil nil nil ((timestamp . "2011-09-12") (notes . "(\"A magit-like interface for hg, naïvely hosted by git: https://github.com/ananthakumaran/monky\")")) nil]
["montecarlo" nil nil nil nil nil nil ((timestamp . "2009-12-20") (notes . "(\"the name of the capital (and only) city in Monaco, a tiny nation in Europa\" \"like Las Vegas, but classier\")")) nil]
["moo" nil nil nil nil nil nil ((timestamp . "2011-05-21") (notes . "(\"the Master of Orion series, a set of classic 4X space opera strategy games.\")")) nil]
["MOOAR" nil nil nil nil nil nil ((timestamp . "2014-01-24") (notes . "(\"redirect moar\")")) nil]
["moof" nil nil nil nil nil nil ((timestamp . "2011-08-04") (notes . "(\"the sound a dog-cow makes.\" \"has anyone seen clarus\")")) nil]
["moon" nil nil nil nil nil nil ((timestamp . "2005-06-21") (notes . "(\"redirect phases\")")) nil]
["moon-on-a-stick" nil nil nil nil nil nil ((timestamp . "2006-05-26") (notes . "(\"http://www.chiark.greenend.org.uk/~sgtatham/moon-on-stick.jpeg\")")) nil]
["MOOOAR" nil nil nil nil nil nil ((timestamp . "2014-01-24") (notes . "(\"redirect moar\")")) nil]
["MOOOOAR" nil nil nil nil nil nil ((timestamp . "2014-01-24") (notes . "(\"redirect moar\")")) nil]
["MOOOOOAR" nil nil nil nil nil nil ((timestamp . "2014-01-24") (notes . "(\"redirect moar\")")) nil]
["MOOOOOOAR" nil nil nil nil nil nil ((timestamp . "2014-01-24") (notes . "(\"redirect moar\")")) nil]
["MOOOOOOOAR" nil nil nil nil nil nil ((timestamp . "2014-01-24") (notes . "(\"redirect moar\")")) nil]
["MOOOOOOOOAR" nil nil nil nil nil nil ((timestamp . "2014-01-24") (notes . "(\"redirect moar\")")) nil]
["moose" nil nil nil nil nil nil ((timestamp . "2010-12-18") (notes . "(\"http://i.imgur.com/lUEiq.gif\")")) nil]
["MOP" nil nil nil nil nil nil ((timestamp . "2011-10-16") (notes . "(\"Meta Object Protocol\")")) nil]
["MOPI" nil nil nil nil nil nil ((timestamp . "2012-05-30") (notes . "(\"redirect PrimeIntellect\")")) nil]
["mor" nil nil nil nil nil nil ((timestamp . "2004-01-15") (notes . "(\"if you want more info, just read the manual!\")")) nil]
["morale" nil nil nil nil nil nil ((timestamp . "2007-09-27") (notes . "(\"noecho The beatings will continue until morale improves.\")")) nil]
["moratorium" nil nil nil nil nil nil ((timestamp . "2011-05-17") (notes . "(\"noecho No lulz! A moratorium is in effect! >:(\")")) nil]
["more" nil nil nil nil nil nil ((timestamp . "2011-09-24") (notes . "(\"unecho To see docs after <..+more>, type , more or ,m. Also use ,TERM N to see the TERM nth entry onwards.\")")) nil]
["moremagic" nil nil nil nil nil nil ((timestamp . "2013-11-24") (notes . "(\"http://www.catb.org/jargon/html/magic-story.html\")")) nil]
["moreutils" nil nil nil nil nil nil ((timestamp . "2013-11-15") (notes . "(\"a set of random useful (ymmv) CLI utilities from the git-annex guy, see http://joeyh.name/code/moreutils\")")) nil]
["morning" nil nil nil nil nil nil ((timestamp . "2005-06-12") (notes . "(\"a period of time, which starts when forcer gets up from bed, and ends when he is not so darn sleepy anymore.\")")) nil]
["morphix" nil nil nil nil nil nil ((timestamp . "2003-09-03") (notes . "(\"= knoppix + more... default is gnome\" \"0.4 seems broken, try 0.3.5\")")) nil]
["mort" nil nil nil nil nil nil ((timestamp . "2003-10-29") (notes . "(\"www.magda.ca/pb\")")) nil]
["Moses" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"the liberator of the jewish slaves from Egypt\")")) nil]
["mosh" nil nil nil nil nil nil ((timestamp . "2013-01-02") (notes . "(\"a remote terminal application that allows roaming and supports intermittent connectivity <http://mosh.mit.edu/>\")")) nil]
["Mosquito" nil nil nil nil nil nil ((timestamp . "2006-11-30") (notes . "(\"a network-oriented and compact Lisp dialect strong influenced by Scheme <http://www.ephemeralsecurity.com/mosquito-lisp/>\")")) nil]
["most-practical-salespitch" nil nil nil nil nil nil ((timestamp . "2013-07-17") (notes . "(\"/join #vim\")")) nil]
["MOTAS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Member Of The Appropriate Sex\")")) nil]
["motd" nil nil nil nil nil nil ((timestamp . "2003-02-10") (notes . "(\"message of the day\")")) nil]
["mother-teresa" nil nil nil nil nil nil ((timestamp . "2011-08-05") (notes . "(\"a hypocrite who withheld painkillers from the people in her so-called care while insisting on nothing but the best medical treatment for herself\")")) nil]
["motherboard" nil nil nil nil nil nil ((timestamp . "2003-10-02") (notes . "(\"at at http://www.myinfinity.com\" \"at excalliber.com\")")) nil]
["motif" nil nil nil nil nil nil ((timestamp . "2006-01-05") (notes . "(\"non-free. See http://www.gnu.org/philosophy/motif.html\" \"The Free alternative is lesstif\")")) nil]
["motion" nil nil nil nil nil nil ((timestamp . "2007-01-05") (notes . "(\"a software motion detector at http://www.lavrsen.dk/twiki/bin/view/Motion/WebHome\")")) nil]
["motivate" nil nil nil nil nil nil ((timestamp . "2013-08-31") (notes . "(\"redirect enlighten\")")) nil]
["motivation" nil nil nil nil nil nil ((timestamp . "2012-02-21") (notes . "(\"gone. I stole it.\")")) nil]
["MOTOS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Member Of The Opposite Sex\")")) nil]
["MOTSS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Member Of The Same Sex\")")) nil]
["motto" nil nil nil nil nil nil ((timestamp . "2008-06-04") (notes . "(\"noecho Caedendum Igne\")")) nil]
["mouarf" nil nil nil nil nil nil ((timestamp . "2012-08-01") (notes . "(\"a lol of a situation without sens\")")) nil]
["mouse" nil nil nil nil nil nil ((timestamp . "2009-09-09") (notes . "(\"redirect xtermmouse\")")) nil]
["mouse-avoidance-mode" nil nil nil nil nil nil ((timestamp . "2003-04-10") (notes . "(\"redirect mouseavoidance\")")) nil]
["mouser" nil nil nil nil nil nil ((timestamp . "2007-02-14") (notes . "(\"Mouser Electronics http://www.mouser.com -- a supplier of electronic components for hobbyists.\" \"always out of stock of what you need\")")) nil]
["MouseViaKeyboard" nil nil nil nil nil nil ((timestamp . "2003-08-19") (notes . "(\"at http://www.leidinger.net/X/XKEYBOARD.html\" \"Also \\\"apt-cache show xwit\\\"\")")) nil]
["mousewheel" nil nil nil nil nil nil ((timestamp . "2003-09-25") (notes . "(\"redirect scrollmouse\")")) nil]
["moutardes" nil nil nil nil nil nil ((timestamp . "2013-11-29") (notes . "(\"noecho GRIND HEEM UP AND MEEX HIM WITH LE VINEGRÉ!!!\")")) nil]
["movealong" nil nil nil nil nil nil ((timestamp . "2010-08-16") (notes . "(\"noecho Move along... move along.\")")) nil]
["moved" nil nil nil nil nil nil ((timestamp . "2012-02-08") (notes . "(\"redirect movealong\")")) nil]
["movitz" nil nil nil nil nil nil ((timestamp . "2013-03-20") (notes . "(\"a Common Lisp operating system for Intel 80x86s.\" \"http://common-lisp.net/project/movitz/\")")) nil]
["mozart/oz" nil nil nil nil nil nil ((timestamp . "2003-02-06") (notes . "(\"at http://www.mozart-oz.org/\")")) nil]
["mozex" nil nil nil nil nil nil ((timestamp . "2006-11-22") (notes . "(\"an extension for mozilla which lets you use an external editor to edit text input boxes: http://mozex.mozdev.org/\" \"rumors of its demise have been greatly exaggerated\" \"among other things, useful for editing wiki pages (see simplewikieditmode)\" \"see ViewSourceWith if mozex doesn't work for you: https://addons.mozilla.org/firefox/394/\")")) nil]
["mp" nil nil nil nil nil nil ((timestamp . "2010-05-07") (notes . "(\"MetaPost, see http://www.tug.org/docs/metapost/mpman.pdf and http://tlhiv.org/MetaPost/\")")) nil]
["mp3play" nil nil nil nil nil nil ((timestamp . "2004-11-26") (notes . "(\"at http://diwww.epfl.ch/~fleuret/softs.html#mp3play.el\")")) nil]
["MPC" nil nil nil nil nil nil ((timestamp . "2013-04-25") (notes . "(\"Media Player Classic -- A Windows-only GPL media player with a classic Windows 95 look by default, but otherwise very modern capabilities.\" \"music player daemon client, a command-line client for connecting to mpd: http://musicpd.org\")")) nil]
["MPEG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Moving Picture Experts Group\")")) nil]
["mpg123.el" nil nil nil nil nil nil ((timestamp . "2003-01-12") (notes . "(\"at http://www.gentei.org/~yuuji/software/mpg123el/\")")) nil]
["MPGMAWTN" nil nil nil nil nil nil ((timestamp . "2012-04-30") (notes . "(\"\\\"most programs written have been written ad nauseum before\\\"\")")) nil]
["mplayer" nil nil nil nil nil nil ((timestamp . "2005-10-17") (notes . "(\"add \\\"deb ftp://ftp.nerim.net/debian-marillat unstable main\\\" to the file /etc/apt/sources.list if you use sid. Replace with \\\"sarge\\\" for stable and with \\\"etch\\\" for testing.\")")) nil]
["mr" nil nil nil nil nil nil ((timestamp . "2013-06-04") (notes . "(\"http://joeyh.name/code/mr/\")")) nil]
["mrxvt" nil nil nil nil nil nil ((timestamp . "2006-06-24") (notes . "(\"a multy-tab rxvt\")")) nil]
["MSB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Most Significant Bit [Or: Byte]\")")) nil]
["Msc" nil nil nil nil nil nil ((timestamp . "2011-09-16") (notes . "(\"Master's in Source code\")")) nil]
["MSDND," nil nil nil nil nil nil ((timestamp . "2012-04-01") (notes . "(\"Miles Sine Deus Nec Dominus, the response from aurelien to the Pope on twitter when he have say \\\"Hello World\\\" from there.\")")) nil]
["msf-abbrev" nil nil nil nil nil nil ((timestamp . "2005-08-15") (notes . "(\"redirect msfabbrev\")")) nil]
["msft" nil nil nil nil nil nil ((timestamp . "2011-01-03") (notes . "(\"Microsoft's stock symbol.\" \"http://finance.yahoo.com/q?s=MSFT\")")) nil]
["mst3k" nil nil nil nil nil nil ((timestamp . "2007-11-05") (notes . "(\"mystery science theater 3000\")")) nil]
["msword" nil nil nil nil nil nil ((timestamp . "2002-10-11") (notes . "(\"antiword, catdoc, undoc.el\")")) nil]
["msys" nil nil nil nil nil nil ((timestamp . "2007-08-06") (notes . "(\"win32 native ports of unix utilities\" \"http://www.mingw.org/msys.shtml\")")) nil]
["MTA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Mail Transfer Agent\")")) nil]
["mtbf" nil nil nil nil nil nil ((timestamp . "2007-01-26") (notes . "(\"Mean Time Between Failure\")")) nil]
["MTF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for More To Follow\")")) nil]
["MtG" nil nil nil nil nil nil ((timestamp . "2006-04-29") (notes . "(\"Magic: the Gathering, a CCG by WotC.\")")) nil]
["mtl" nil nil nil nil nil nil ((timestamp . "2011-11-15") (notes . "(\"est la ville Montréal du Québec\")")) nil]
["mtty" nil nil nil nil nil nil ((timestamp . "2004-04-17") (notes . "(\"redirect multi-tty\")")) nil]
["MTU" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Maximum Transmission Unit\")")) nil]
["mu" nil nil nil nil nil nil ((timestamp . "2012-08-14") (notes . "(\"µ\" \"無 - whether a dog has the Buddha-nature\" \"micro-\" \"http://www.djcbsoftware.nl/code/mu/\")")) nil]
["MUA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Mail User Agent\")")) nil]
["mudclient" nil nil nil nil nil nil ((timestamp . "2004-07-05") (notes . "(\"see emuds\")")) nil]
["mudi" nil nil nil nil nil nil ((timestamp . "2003-10-14") (notes . "(\"Meta User Derived Interface\" \"not available for public yet\")")) nil]
["mudslide" nil nil nil nil nil nil ((timestamp . "2013-09-05") (notes . "(\"Kahlua, Baileys, Tokyo Black (porter), Cocoa powder, Coffee, and Whisky\")")) nil]
["MUI" nil nil nil nil nil nil ((timestamp . "2007-01-04") (notes . "(\"short for Magic User Interface <http://wikipedia.org/wiki/Magic_User_Interface>\")")) nil]
["mule-uni" nil nil nil nil nil nil ((timestamp . "2007-07-28") (notes . "(\"redirect mule-ucs\")")) nil]
["multi" nil nil nil nil nil nil ((timestamp . "2010-02-05") (notes . "(\"redirect mumamo\")")) nil]
["multi-tty" nil nil nil nil nil nil ((timestamp . "2007-11-20") (notes . "(\"redirect MultiTTYSupport\")")) nil]
["multi-web-mode" nil nil nil nil nil nil ((timestamp . "2013-07-04") (notes . "(\"https://github.com/fgallina/multi-web-mode\" \"attempts to guess the correct major mode based on location in web page\")")) nil]
["multicol" nil nil nil nil nil nil ((timestamp . "2004-02-02") (notes . "(\"a package that will allow you to switch back and forth between different number of columns (even within a page even)\" \"\\\\usepackage{multicol} \\\\begin{multicols}{2} [insert lots of text here] \\\\end{multicols}\")")) nil]
["multifiles" nil nil nil nil nil nil ((timestamp . "2013-07-03") (notes . "(\"an experimental package to view and edit parts of multiple files in one buffer\" \"https://github.com/magnars/multifiles.el\")")) nil]
["multihop" nil nil nil nil nil nil ((timestamp . "2010-03-30") (notes . "(\"(info \\\"(tramp)Multi-hops\\\")\")")) nil]
["multioccur" nil nil nil nil nil nil ((timestamp . "2012-05-28") (notes . "(\"redirect multi-occur\")")) nil]
["multiple" nil nil nil nil nil nil ((timestamp . "2007-12-07") (notes . "(\"redirect searchandreplaceacrossmultiplefiles\")")) nil]
["multiplefilesearchandreplace" nil nil nil nil nil nil ((timestamp . "2005-09-29") (notes . "(\"redirect SearchAndReplaceAcrossMultipleFiles\")")) nil]
["multipleinheritance" nil nil nil nil nil nil ((timestamp . "2011-01-27") (notes . "(\"http://www.qwantz.com/index.php?comic=1786\")")) nil]
["MultipleWindowManagers" nil nil nil nil nil nil ((timestamp . "2004-02-09") (notes . "(\"See apt-cache show xnest\")")) nil]
["multireplace" nil nil nil nil nil nil ((timestamp . "2004-06-30") (notes . "(\"redirect SearchAndReplaceAcrossMultipleFiles\")")) nil]
["multirow" nil nil nil nil nil nil ((timestamp . "2010-02-17") (notes . "(\"a package to have cells of tables span multiple rows\" \"http://ctan.org/tex-archive/help/Catalogue/entries/multirow.html\" \"documentation at http://ctan.org/tex-archive/macros/latex/contrib/multirow/README\")")) nil]
["multithreading" nil nil nil nil nil nil ((timestamp . "2009-03-13") (notes . "(\"redirect NoThreading\")")) nil]
["multitty" nil nil nil nil nil nil ((timestamp . "2007-11-20") (notes . "(\"redirect multittysupport\")")) nil]
["Mumble" nil nil nil nil nil nil ((timestamp . "2012-07-12") (notes . "(\"an open source, low-latency, high quality voice chat software primarily intended for use while gaming. http://mumble.sourceforge.net/\")")) nil]
["mumbles" nil nil nil nil nil nil ((timestamp . "2010-02-26") (notes . "(\"a growl-like notification system for gnome; see http://www.mumbles-project.org/\")")) nil]
["munge" nil nil nil nil nil nil ((timestamp . "2010-08-12") (notes . "(\"at http://catb.org/jargon/html/M/munge.html\")")) nil]
["muphry" nil nil nil nil nil nil ((timestamp . "2008-07-16") (notes . "(\"noecho Muphry's Law: If you write anything criticizing editing or proofreading, there will be a fault of some kind in what you have written.\")")) nil]
["muse-blog" nil nil nil nil nil nil ((timestamp . "2010-10-01") (notes . "(\"http://julien.danjou.info/muse-blog.html\")")) nil]
["mush" nil nil nil nil nil nil ((timestamp . "2010-09-06") (notes . "(\"Multi User Shared Hack\" \"usually have horrible ad-hoc syntax\")")) nil]
["music" nil nil nil nil nil nil ((timestamp . "2004-05-08") (notes . "(\"http://gnuart.org/english/links.html\" \"http://www.emusic.com\" \"see also EMMS\")")) nil]
["musicxml" nil nil nil nil nil nil ((timestamp . "2005-12-22") (notes . "(\"XML for (sheet) music notation; see http://www.recordare.com/xml.html\")")) nil]
["mustards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho GARNISH HIM!!\")")) nil]
["mute" nil nil nil nil nil nil ((timestamp . "2011-09-29") (notes . "(\"lisp (format \\\"/me places gag on %s.\\\" (or lispa nick))\")")) nil]
["mvc" nil nil nil nil nil nil ((timestamp . "2006-11-04") (notes . "(\"\\\"model view controller\\\" -- a design pattern common in smalltalk and java\")")) nil]
["mvmouse" nil nil nil nil nil nil ((timestamp . "2006-06-07") (notes . "(\"http://hocwp.free.fr/movemouse.html\")")) nil]
["mvs" nil nil nil nil nil nil ((timestamp . "2012-01-10") (notes . "(\"a command-line tool to check out and commit articles from a Mediawiki (e.g. Wikipedia) <http://search.cpan.org/~markj/WWW-Mediawiki-Client/bin/mvs>\" \"short for Microsoft Visual Studio\")")) nil]
["mwe" nil nil nil nil nil nil ((timestamp . "2014-08-01") (notes . "(\"noecho A minimal working example should be as short as possible, covering only the code necessary to reproduce the problem. See http://meta.tex.stackexchange.com/questions/228/ive-just-been-asked-to-write-a-minimal-example-what-is-that\")")) nil]
["mwheel" nil nil nil nil nil nil ((timestamp . "2002-12-10") (notes . "(\"redirect scrollmouse\")")) nil]
["mwi" nil nil nil nil nil nil ((timestamp . "2006-11-18") (notes . "(\"multiple window interface\")")) nil]
["my-erc-match" nil nil nil nil nil nil ((timestamp . "2005-07-13") (notes . "(\"redirect ErcColors\")")) nil]
["myfootest" nil nil nil nil nil nil ((timestamp . "2013-05-29") (notes . "(\"abc123 abc\" \"line2\")")) nil]
["MYOB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Mind Your Own Business\")")) nil]
["myrkraverks-first-law" nil nil nil nil nil nil ((timestamp . "2013-07-28") (notes . "(\"Mathematical models and theories of physics do not constrain the real world.\")")) nil]
["mythryl" nil nil nil nil nil nil ((timestamp . "2010-06-19") (notes . "(\"at http://mythryl.org/\" \"deftly combines C speed, Lisp power, and Ruby convenience with the critical new ingredients of Hindley-Milner typing, state of the art generics and just the right level of side effects.\")")) nil]
["N/M" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Never Mind\")")) nil]
["n8" nil nil nil nil nil nil ((timestamp . "2003-12-19") (notes . "(\"a german geek-slang for \\\"n-acht\\\", \\\"nacht\\\", i.e. \\\"night\\\" and used as \\\"good night\\\"\" \"horrible k3wlt0k -- somebody should make a law\" \"used in a lot of channels and is \\\"normal\\\" usage in many german channels\" \"(which just goes to show, germans are evil)\")")) nil]
["n_n" nil nil nil nil nil nil ((timestamp . "2004-03-29") (notes . "(\"a cat, apparently\")")) nil]
["NAEV" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"Not Another EV clone <http://naev.org/> - EV (Escape Velocity) is an Elite-inspired 2D top-down space trading/combat video game\")")) nil]
["naggum-lines" nil nil nil nil nil nil ((timestamp . "2013-10-17") (notes . "(\"Well, take it from an old hand: the only reason it would be easier to program in C is that you can't easily express complex problems in C, so you don't\" \"Languages shape the way we think, or don't.\" \"Sufficiently advanced political correctness is indistinguishable from irony.\" \"The ultimate laziness is not using Perl. That saves you so much work you wouldn't believe it if you had never tried it.\" \"You can drag any rat out of the sewer and teach it to get some work done in Perl, but you cannot teach it serious programming.\" \"That's why the smartest companies use Common Lisp, but lie about it so all their competitors think Lisp is slow and C++ is fast.\" \"Counting lines is probably a good idea if you want to print it out and are short on paper, but I fail to see the purpose otherwise.\" \"Unfortunately, nigh the whole world is now duped into thinking that silly fill-in forms on web pages is the way to do user interfaces.\" \"It's not that perl programmers are idiots, it's that the language rewards idiotic behavior in a way that no other language or tool has ever done.\" \"Structure is _nothing_ if it is all you got. Skeletons _spook_ people if they try to walk around on their own. I really wonder why XML does not.\" \"I wouldn't trust the Anglo-Saxons for much anything else. Given they way English is spelled, who could trust them on _anything_ that had to do with writing things down, anyway\" \"Nonono, while we're making wild conjectures about the behavior of completely irrelevant tasks, we must not also make serious mistakes, or the data might suddenly become statistically valid.\" \"Please realize that the Common Lisp community is more than forty years old. Collectively, the community has already been where every clueless newbie will be going for the next three years. So relax, please.\" \"... so the notion that it is meaningful to pass pointers to memory objects into which any random function may write random values without having a clue where they point, has _not_ been debunked as the sheer idiocy it really is.\" \"Just getting something to work usually means writing reams of code fast, like a Stephen King novel. Making it maintainable and high-quality code that really expresses the ideas well, is like writing poetry. Art is taking away.\" \"Very clever implementation techniques are required to implement this insanity correctly and usefully, not to mention that code written with this feature used and abused east and west is exceptionally exciting to debug.\")")) nil]
["naggum-yow" nil nil nil nil nil nil ((timestamp . "2013-10-17") (notes . "(\"lisp (random-choose-term \\\"naggum-lines\\\")\")")) nil]
["nagios" nil nil nil nil nil nil ((timestamp . "2014-01-06") (notes . "(\"a network monitoring system that tells you which of your many routers are on fire\")")) nil]
["nah" nil nil nil nil nil nil ((timestamp . "2012-10-25") (notes . "(\"fuzz-buzz-hubbub-bobbery-gibberish-mumbo jumbo-jabberwocky-hogwash-balderdash-humbug-gobbledegook-bullshit\")")) nil]
["namaste" nil nil nil nil nil nil ((timestamp . "2010-07-01") (notes . "(\"sanskrit for salutations to [the divinity in] you (freely translated)\" \"the divine in you is the divine in me.\" \"or, if we aren't being ridiculously pretentious, “hello”\")")) nil]
["named" nil nil nil nil nil nil ((timestamp . "2011-03-04") (notes . "(\"to edit ISC named zone files, see <zone-mode>\")")) nil]
["nameservers" nil nil nil nil nil nil ((timestamp . "2003-03-20") (notes . "(\"at http://www.opennic.unrated.net/\" \"Use any of the tier2's here in your resolv.conf-- http://www.opennic.unrated.net/public_servers.html\")")) nil]
["namespaces" nil nil nil nil nil nil ((timestamp . "2013-03-20") (notes . "(\"for skeeto's \\\"fakespaces\\\", see https://github.com/skeeto/elisp-fakespace/\" \"https://github.com/sigma/codex for a (presumably) more flexible option. beware the experimental code, it will break\" \"https://github.com/Wilfred/with-namespace.el poor-man's namespaces\")")) nil]
["naming-joke" nil nil nil nil nil nil ((timestamp . "2012-05-20") (notes . "(\"there are only two hard problems in computer science - cache control and naming things.\")")) nil]
["nanonote" nil nil nil nil nil nil ((timestamp . "2011-12-13") (notes . "(\"an open hardware device created by QI Hardware.\" \"has nothing to do with the Qi language.\")")) nil]
["nanu" nil nil nil nil nil nil ((timestamp . "2004-02-02") (notes . "(\"the inspiration of #userfriendly\")")) nil]
["NAS" nil nil nil nil nil nil ((timestamp . "2005-04-12") (notes . "(\"network attached storage.\")")) nil]
["nasatv" nil nil nil nil nil nil ((timestamp . "2004-01-22") (notes . "(\"NASA TV broadcasts: http://www.nasa.gov/ram/35037main_portal.ram\")")) nil]
["NAT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Network Address Translation\")")) nil]
["natbib" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package providing a style with author-year and numbered references, as well as much detailed of support for other bibliography use. (BibTeX-like styles: plainnat,unsrtnat,abbrvnat.) http://ctan.org/pkg/natbib\")")) nil]
["nate-silver" nil nil nil nil nil nil ((timestamp . "2013-05-07") (notes . "(\"econometrician #1\")")) nil]
["nationality" nil nil nil nil nil nil ((timestamp . "2003-10-07") (notes . "(\"redirect demographics\")")) nil]
["native" nil nil nil nil nil nil ((timestamp . "2004-04-25") (notes . "(\"Compilation to native at http://www.mundell.ukfsn.org/native/\")")) nil]
["Nattō" nil nil nil nil nil nil ((timestamp . "2008-06-20") (notes . "(\"a traditional Japanese food made from fermented soybeans, popular especially for breakfast.\")")) nil]
["natural-order" nil nil nil nil nil nil ((timestamp . "2012-10-02") (notes . "(\"redirect natsort\")")) nil]
["natural-order-sort" nil nil nil nil nil nil ((timestamp . "2012-10-02") (notes . "(\"redirect natsort\")")) nil]
["natural-stupidity-test" nil nil nil nil nil nil ((timestamp . "2012-11-11") (notes . "(\"noecho yes\")")) nil]
["nazi" nil nil nil nil nil nil ((timestamp . "2011-08-17") (notes . "(\"Godwin's law; you lose.\")")) nil]
["NBD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for No Big Deal\")")) nil]
["nc" nil nil nil nil nil nil ((timestamp . "2013-03-08") (notes . "(\"1) see <netcat>; or 2) Norton Commander, a non-Free file manager. Try <mc> or <http://www.cl.cam.ac.uk/~kl216/nc.el>\" \"netcat\")")) nil]
["ncurses" nil nil nil nil nil nil ((timestamp . "2007-01-30") (notes . "(\"pollutes the namespace horribly and uses tons of global vars, making it hard to use sanely in a library or with multiple terminals.\" \"when you use curses, there are always 3 copies of the entire screen contents. one in your app, one in curses, and one in the terminal. the one in curses is quite large.\" \"having curses acting as middleman greatly forestalls support for anything new on terminals, like unicode, combining chars, bidi, etc.\")")) nil]
["neal" nil nil nil nil nil nil ((timestamp . "2002-09-20") (notes . "(\"sexy\")")) nil]
["nearwiki" nil nil nil nil nil nil ((timestamp . "2004-04-08") (notes . "(\"redirect nearlink\")")) nil]
["necromancy" nil nil nil nil nil nil ((timestamp . "2012-05-03") (notes . "(\"evil\")")) nil]
["necronomicon" nil nil nil nil nil nil ((timestamp . "2005-07-15") (notes . "(\"the greek and latin versions of 'Al Azif', by Abd al-Azrad.\")")) nil]
["neep" nil nil nil nil nil nil ((timestamp . "2003-07-22") (notes . "(\"http://www.jmknoble.net/fonts/\")")) nil]
["negative" nil nil nil nil nil nil ((timestamp . "2010-03-18") (notes . "(\"negative vskip or vspace is almost always an indication that you're doing something wrong.\")")) nil]
["neocities" nil nil nil nil nil nil ((timestamp . "2013-06-28") (notes . "(\"GeoCities is back!\" \"http://neocities.org/\")")) nil]
["nerdfight" nil nil nil nil nil nil ((timestamp . "2012-06-18") (notes . "(\"noecho keep it clean: no wikipedia, no punching below the belt. May the best nerd win!\")")) nil]
["netcat" nil nil nil nil nil nil ((timestamp . "2012-02-27") (notes . "(\"a tool to connect TCP/UDP ports to stdio <http://netcat.sf.net/>\")")) nil]
["NethackCommands" nil nil nil nil nil nil ((timestamp . "2003-02-08") (notes . "(\"at http://www.geocities.com/TimesSquare/Portal/2416/commands.html\")")) nil]
["NethackManual" nil nil nil nil nil nil ((timestamp . "2003-01-17") (notes . "(\"at http://falconseye.sourceforge.net/nhmanual/\")")) nil]
["NethackSpoilers" nil nil nil nil nil nil ((timestamp . "2003-01-17") (notes . "(\"at http://www.spod-central.org/~psmith/nh\")")) nil]
["NethackWeapons" nil nil nil nil nil nil ((timestamp . "2003-01-17") (notes . "(\"at http://www.spod-central.org/~psmith/nh/weap-340.txt\")")) nil]
["netiquette" nil nil nil nil nil nil ((timestamp . "2010-10-06") (notes . "(\"'If you are concerned about netiquette, you are either concerned about your own and *follow* good netiquette, or you are concerned about others and *violate* good netiquette by bothering people with your \\\"concern\\\", as the only person whose netiquette you can affect is precisely *yourself*.' - Erik Naggum\")")) nil]
["netneutraly" nil nil nil nil nil nil ((timestamp . "2014-01-15") (notes . "(\"Was for all, but is now dead. http://ibnlive.in.com/news/net-neutrality-rules-struck-down-by-court-is-open-internet-dead/445508-11.html\")")) nil]
["netsurf" nil nil nil nil nil nil ((timestamp . "2013-06-20") (notes . "(\"http://www.netsurf-browser.org\")")) nil]
["new-twb-fix" nil nil nil nil nil nil ((timestamp . "2012-10-17") (notes . "(\"noecho Most problems can be solved by installing Ubuntu.\")")) nil]
["NewAdventureShell" nil nil nil nil nil nil ((timestamp . "2004-03-15") (notes . "(\"a a shell script that will make your GNU/Linux shell act like a text adventure game, at http://nadvsh.sourceforge.net/\")")) nil]
["neweshell" nil nil nil nil nil nil ((timestamp . "2002-11-08") (notes . "(\"C-u M-x eshell\")")) nil]
["NewFonts" nil nil nil nil nil nil ((timestamp . "2004-04-19") (notes . "(\"apt-get install <package>, then 'xset fp rehash'\" \"To list current fonts, xfontsel\")")) nil]
["newline" nil nil nil nil nil nil ((timestamp . "2009-01-11") (notes . "(\"redirect newline-replace\")")) nil]
["newline-and-indent" nil nil nil nil nil nil ((timestamp . "2007-11-10") (notes . "(\"redirect autoindentation\")")) nil]
["newline-replace" nil nil nil nil nil nil ((timestamp . "2005-04-27") (notes . "(\"redirect replacewithanewline\")")) nil]
["newlines" nil nil nil nil nil nil ((timestamp . "2005-04-27") (notes . "(\"redirect replacewithanewline\")")) nil]
["newlisp" nil nil nil nil nil nil ((timestamp . "2011-12-05") (notes . "(\"http://www.newlisp.org\" \"scoping is hard, let's go shopping\" \"http://www.qwantz.com/index.php?comic=1938\")")) nil]
["NewLogo" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?NewLogo\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?NewLogo\")")) nil]
["NeWS" nil nil nil nil nil nil ((timestamp . "2011-11-21") (notes . "(\"a dead, PostScript-based web app technology from the mid-80s <http://wikipedia.org/wiki/NeWS>\" \"those who do not study history (NeWS) are doomed to repeat it, poorly (AJAX)\" \"netnews\")")) nil]
["newsbeuter" nil nil nil nil nil nil ((timestamp . "2013-03-14") (notes . "(\"an open-source RSS/Atom feed reader for text terminals\" \"http://www.newsbeuter.org/\")")) nil]
["newshell" nil nil nil nil nil nil ((timestamp . "2002-11-08") (notes . "(\"C-u M-x shell\")")) nil]
["newspipe" nil nil nil nil nil nil ((timestamp . "2005-10-04") (notes . "(\"http://newspipe.sourceforge.net\")")) nil]
["newsreaders" nil nil nil nil nil nil ((timestamp . "2004-01-14") (notes . "(\"redirect mailreaders\")")) nil]
["newton" nil nil nil nil nil nil ((timestamp . "2007-08-05") (notes . "(\"apple's large, handheld palmtop device, discontinued in the mid 90's\")")) nil]
["Nexenta" nil nil nil nil nil nil ((timestamp . "2007-08-06") (notes . "(\"an attempt to put Debian on top of the OpenSolaris kernel, license incompatibilities be damned.\")")) nil]
["next" nil nil nil nil nil nil ((timestamp . "2014-08-13") (notes . "(\"noecho Another satisfied customer. Next!\")")) nil]
["NFA" nil nil nil nil nil nil ((timestamp . "2012-01-12") (notes . "(\"Non-deterministic Finite Automaton\")")) nil]
["nfc" nil nil nil nil nil nil ((timestamp . "2012-08-10") (notes . "(\"Normalization Form C (a subset of unicode) which removes encoding ambiguities caused by the presence of precomposed and compatibility characters\" \"short for No Fucking Clue\" \"a wireless communication technology <https://en.wikipedia.org/wiki/Near_field_communication>\" \"short for Need For Comments\")")) nil]
["nfd" nil nil nil nil nil nil ((timestamp . "2005-04-04") (notes . "(\"Normalization Form D (see nfc for details)\")")) nil]
["NFI" nil nil nil nil nil nil ((timestamp . "2006-04-16") (notes . "(\"no fucking idea\")")) nil]
["nForbes" nil nil nil nil nil nil ((timestamp . "2004-03-10") (notes . "(\"off-topic.\")")) nil]
["NFS" nil nil nil nil nil nil ((timestamp . "2013-01-25") (notes . "(\"short for Network File System\" \"<forcer> NFS means you lose\")")) nil]
["nfss" nil nil nil nil nil nil ((timestamp . "2013-12-22") (notes . "(\"the \\\"New\\\" Font Selection Scheme, the recommended way to set fonts in (pdf-)latex, cf. http://latex-project.org/guides/fntguide.pdf‎\")")) nil]
["NFW" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for No Fucking Way\")")) nil]
["nga" nil nil nil nil nil nil ((timestamp . "2010-09-13") (notes . "(\"the National Gallery of Art - http://www.nga.gov\")")) nil]
["ngerman" nil nil nil nil nil nil ((timestamp . "2014-10-28") (notes . "(\"an old and deprecated package for implementing german language specific commands. For new code use babel or polyglossia if you use lualatex and xelatex\")")) nil]
["nginx" nil nil nil nil nil nil ((timestamp . "2012-08-02") (notes . "(\"a high performance non-blocking webserver\" \"made by russians\")")) nil]
["ngnus" nil nil nil nil nil nil ((timestamp . "2007-07-13") (notes . "(\"http://gnus.org/\" \"http://gnus.org/dist/\")")) nil]
["ngrep" nil nil nil nil nil nil ((timestamp . "2014-01-04") (notes . "(\"a network packet analyzer (network grep)\")")) nil]
["nhoi" nil nil nil nil nil nil ((timestamp . "2007-04-18") (notes . "(\"never heard of it\")")) nil]
["ni!" nil nil nil nil nil nil ((timestamp . "2005-04-04") (notes . "(\"noecho NI! NI! NI! NI!\")")) nil]
["niagarafalls" nil nil nil nil nil nil ((timestamp . "2011-12-29") (notes . "(\"noecho Slloowwwwly, I turned. Inch by inch! Step by step!\")")) nil]
["NIC" nil nil nil nil nil nil ((timestamp . "2006-03-30") (notes . "(\"short for Network Interface Card\" \"Network Information Center\")")) nil]
["nicferrier-fix" nil nil nil nil nil nil ((timestamp . "2012-12-01") (notes . "(\"most problems can be solved by coding exclusively in elisp\")")) nil]
["nick" nil nil nil nil nil nil ((timestamp . "2002-09-24") (notes . "(\"we prefer nice nicks using alphabetical characters so that ERC's auto-completion works... :D\" \"Auto-completion also gets cumbersome if you log in twice with closely matching nicks, as foobar and foobar^\")")) nil]
["nick-completion" nil nil nil nil nil nil ((timestamp . "2007-01-11") (notes . "(\"don't use a client that uses cycling completion; rather get one that uses proper unambiguous completion (the way bash does)\")")) nil]
["NickBostrom" nil nil nil nil nil nil ((timestamp . "2004-10-26") (notes . "(\"See also Dragon fable, at: http://www.nickbostrom.com/fable/dragon.html\")")) nil]
["nietzsche" nil nil nil nil nil nil ((timestamp . "2009-03-20") (notes . "(\"noecho gesundheit\")")) nil]
["nigella" nil nil nil nil nil nil ((timestamp . "2014-01-02") (notes . "(\"a British TV cook\")")) nil]
["NIH" nil nil nil nil nil nil ((timestamp . "2013-03-21") (notes . "(\"Not Invented Here <http://wikipedia.org/wiki/NIH_syndrome>\")")) nil]
["nihongo-encoding" nil nil nil nil nil nil ((timestamp . "2007-03-13") (notes . "(\"erc: set erc-encoding-coding-alist\" \"xchat: /charset iso-2022-jp\" \"mirc: in the menus, check the jis/sjis conversion boxes\" \"irssi: /set recode_autodetect_utf8 off; /recode add <channel> iso-2022-jp\")")) nil]
["nihs" nil nil nil nil nil nil ((timestamp . "2004-08-12") (notes . "(\"Not Invented Here Syndrome\" \"see http://www.developer.com/open/article.php/3338791 for more information\")")) nil]
["nini" nil nil nil nil nil nil ((timestamp . "2003-05-25") (notes . "(\"nighty night\")")) nil]
["ninja" nil nil nil nil nil nil ((timestamp . "2012-01-24") (notes . "(\"redirect ninja.el\")")) nil]
["ninja-tel" nil nil nil nil nil nil ((timestamp . "2012-07-31") (notes . "(\"http://arstechnica.com/security/2012/07/ninja-tel-hacker-phone-network/\")")) nil]
["ninjadroid" nil nil nil nil nil nil ((timestamp . "2002-11-17") (notes . "(\"at http://www.wam.umd.edu/~gazuga/\")")) nil]
["ninjai" nil nil nil nil nil nil ((timestamp . "2004-11-16") (notes . "(\"a flash animation comicbook: http://www.ninjai.com/\")")) nil]
["ninjas" nil nil nil nil nil nil ((timestamp . "2012-01-24") (notes . "(\"a warrior of the night who spills the blood of his foe and disappears like a shadow in the darkness, and is vastly superior to pirates.\")")) nil]
["NIS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Network Information Service\")")) nil]
["NIST" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"the (US) National Institute of Standards and Technology, a measurement standards laboratory and non-regulatory agency of the US DoC <https://en.wikipedia.org/wiki/NIST>\")")) nil]
["nitpickers" nil nil nil nil nil nil ((timestamp . "2013-03-11") (notes . "(\"if it weren't for nitpickers we'd all be knee-deep in nits\")")) nil]
["nitpicking" nil nil nil nil nil nil ((timestamp . "2010-09-20") (notes . "(\"noecho if it weren't for nitpicking we'd all be knee-deep in nits\")")) nil]
["nix" nil nil nil nil nil nil ((timestamp . "2012-04-12") (notes . "(\"http://nixos.org/nix a nifty packaging system (and OS distro based upon it)\" \"as close to a purely functional package manager as you can get, exhibiting many of the same desirable characteristics as git commit trees\")")) nil]
["nixon" nil nil nil nil nil nil ((timestamp . "2011-07-22") (notes . "(\"lisp (random-choose (notes \\\"nixon-data\\\"))\")")) nil]
["nixon-data" nil nil nil nil nil nil ((timestamp . "2011-08-25") (notes . "(\"You don't have Nixon to kick around any more\" \"The greatest honor history can bestow is the title of peacemaker\" \"I have never been a quitter\" \"Well, when the President does it, that means that it is not illegal\" \"The nuclear bomb, does that bother you?...I just want you to think big, Henry, for Christsakes.\" \"Arooo!\" \"I still think we ought to take the North Vietnamese dikes out now. Will that drown people?\" \"Always give your best. Never get discouraged. Never be petty. Always remember: Others may hate you. But those who hate you don't win, unless you hate them. And then, you destroy yourself.\" \"I could say that in my years of public life, that I welcome this kind of examination, because people have got to know whether or not their president's a crook. Well I am not a crook.\")")) nil]
["Njam" nil nil nil nil nil nil ((timestamp . "2006-01-10") (notes . "(\"a full-featured cross-platform pacman-like game written in C++ using SDL library\" \"Open Source (GPL Licence)\" \"single and multiplayer mode (local or network)\" \"http://njam.sourceforge.net/\")")) nil]
["NLA" nil nil nil nil nil nil ((timestamp . "2006-08-25") (notes . "(\"n-letter acronym\")")) nil]
["NLC" nil nil nil nil nil nil ((timestamp . "2007-09-05") (notes . "(\"No Love Chat\")")) nil]
["nlp" nil nil nil nil nil nil ((timestamp . "2013-08-24") (notes . "(\"natural language processing\")")) nil]
["NLS/AUGMENT" nil nil nil nil nil nil ((timestamp . "2003-02-04") (notes . "(\"an early hypertext system\")")) nil]
["nltk" nil nil nil nil nil nil ((timestamp . "2010-12-31") (notes . "(\"The Natural Language Toolkit, a FOSS Python library for parsing human languages http://www.nltk.org/\")")) nil]
["NM" nil nil nil nil nil nil ((timestamp . "2008-01-20") (notes . "(\"Debian abbrev. for New Maintainer. The new maintainer process is described at http://www.debian.org/devel/join/newmaint\" \"Debian New Maintainer Status at http://nm.debian.org/\" \"Check the Debian New Maintainers' Guide at http://www.debian.org/doc/manuals/maint-guide/\" \"Other recommended reading is http://www.nl.debian.org/devel/\" \"network-manager, a tool that breaks your internet on Ubuntu and Debian <http://en.wikipedia.org/wiki/NetworkManager>\")")) nil]
["NMF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Not My Fault\")")) nil]
["NMP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Not My Problem\")")) nil]
["nmu" nil nil nil nil nil nil ((timestamp . "2005-04-21") (notes . "(\"a debian abbreviation for Non Maintainer Upload, meaning that the package was uploaded by someone who usually does not maintain the package.\")")) nil]
["nndiary" nil nil nil nil nil nil ((timestamp . "2004-06-17") (notes . "(\"at http://my.gnus.org/node/view/219\")")) nil]
["nnml" nil nil nil nil nil nil ((timestamp . "2006-04-01") (notes . "(\"\\\"... and [if] it isn't a problem for you having your friendly systems administrator walking around, madly, shouting \\\"Who is eating all my inodes?! Who? Who!?!\\\", then you should know that this is probably the fastest format to use.\\\"\")")) nil]
["nnnil" nil nil nil nil nil nil ((timestamp . "2004-01-28") (notes . "(\"an empty backend for Gnus\")")) nil]
["nnslashdot" nil nil nil nil nil nil ((timestamp . "2003-04-10") (notes . "(\"B nnslashdot RET RET\")")) nil]
["NNTP" nil nil nil nil nil nil ((timestamp . "2007-02-25") (notes . "(\"the NetNews Transport Protocol <http://www.ietf.org/rfc/rfc977.txt>\")")) nil]
["no-mud" nil nil nil nil nil nil ((timestamp . "2010-08-30") (notes . "(\"lisp (princ (apply 'format \\\"%s: This not a MUD. Stop using fsbot to pretend it is.\\\" lispargs))\")")) nil]
["nobody" nil nil nil nil nil nil ((timestamp . "2012-11-29") (notes . "(\"noecho Nobody here uses that. Please move along, sir/madam.\")")) nil]
["nocaps" nil nil nil nil nil nil ((timestamp . "2013-08-06") (notes . "(\"setxkbmap -option ctrl:nocaps\" \"to swap ctrl and caps, setxkbmap -option ctrl:swapcaps\")")) nil]
["nocturne" nil nil nil nil nil nil ((timestamp . "2010-02-10") (notes . "(\"http://docs.blacktree.com/nocturne/nocturne\")")) nil]
["nod" nil nil nil nil nil nil ((timestamp . "2010-09-18") (notes . "(\"noecho /me nods.\")")) nil]
["nodejs" nil nil nil nil nil nil ((timestamp . "2012-04-02") (notes . "(\"all the complexities of assembler with the efficiencies of javascript http://www.youtube.com/watch?v=bzkRVzciAZg\")")) nil]
["NoGnus" nil nil nil nil nil nil ((timestamp . "2010-10-10") (notes . "(\"The development version of Gnus and resides in Git at http://git.gnus.org/\" \"nognus is good gnus\" \"Hugely improved and works brilliantly with IMAP now (since September 2010).\")")) nil]
["noinit" nil nil nil nil nil nil ((timestamp . "2002-11-20") (notes . "(\"redirect starterror\")")) nil]
["noir" nil nil nil nil nil nil ((timestamp . "2006-10-24") (notes . "(\"a fun anime title with good pacing and serious drama\")")) nil]
["nokia" nil nil nil nil nil nil ((timestamp . "2014-01-02") (notes . "(\"http://communities-dominate.blogs.com/brands/2013/09/the-full-story-of-nokia-and-microsoft-how-we-got-here-and-why-microsoft-will-fail-with-nokia-handset.html\")")) nil]
["nom" nil nil nil nil nil nil ((timestamp . "2011-11-06") (notes . "(\"noecho om nom nom\")")) nil]
["nomaden" nil nil nil nil nil nil ((timestamp . "2004-01-06") (notes . "(\"at http://www.nomaden.org/termine.html If you happen to be in hamburg, germany, just drop by :-)\")")) nil]
["non-ascii" nil nil nil nil nil nil ((timestamp . "2004-12-07") (notes . "(\"redirect unencodable\")")) nil]
["nonascii" nil nil nil nil nil nil ((timestamp . "2004-01-14") (notes . "(\"DisplayingNonAsciiCharacters\" \"FindingNonAsciiCharacters\" \"NonAsciiRegexps\")")) nil]
["nong-shim" nil nil nil nil nil nil ((timestamp . "2012-10-17") (notes . "(\"Taste NONGSHIM Feel the Happiness\")")) nil]
["NonLinearFit" nil nil nil nil nil nil ((timestamp . "2003-01-26") (notes . "(\"redirect LeastSquares\")")) nil]
["nonsense" nil nil nil nil nil nil ((timestamp . "2011-10-20") (notes . "(\"noecho /me agrees that.\")")) nil]
["noone" nil nil nil nil nil nil ((timestamp . "2013-01-07") (notes . "(\"http://en.wikipedia.org/wiki/Peter_Noone\")")) nil]
["nope" nil nil nil nil nil nil ((timestamp . "2012-05-29") (notes . "(\"redirect m8b\")")) nil]
["norse" nil nil nil nil nil nil ((timestamp . "2011-04-28") (notes . "(\"http://www.bash.org/?432386\")")) nil]
["north" nil nil nil nil nil nil ((timestamp . "2009-02-15") (notes . "(\"lisp (random-choose '(\\\"you are surrounded by darkness; in the distance you hear a dog barking\\\" \\\"you are in a empty stable\\\" \\\"you are in a forest; there is a large fallen tree blocking your path\\\" \\\"you are surrounded by fog; in the distange you hear seagulls\\\"))\")")) nil]
["NOS" nil nil nil nil nil nil ((timestamp . "2007-02-13") (notes . "(\"New Old Stock\")")) nil]
["nosplash" nil nil nil nil nil nil ((timestamp . "2005-11-13") (notes . "(\"redirect splash\")")) nil]
["nosql" nil nil nil nil nil nil ((timestamp . "2012-02-24") (notes . "(\"redirect mongodb\")")) nil]
["nostalgia" nil nil nil nil nil nil ((timestamp . "2014-01-02") (notes . "(\"noecho the lithp machine is dead. Get over it.\")")) nil]
["notarealentry" nil nil nil nil nil nil ((timestamp . "2016-05-31") (notes . "(\"redirect biblatex\")")) nil]
["notes-mode" nil nil nil nil nil nil ((timestamp . "2007-02-21") (notes . "(\"an indexing system for on-line note-taking at http://www.isi.edu/~johnh/SOFTWARE/NOTES_MODE/\")")) nil]
["Notes.el" nil nil nil nil nil nil ((timestamp . "2013-09-22") (notes . "(\"https://github.com/leoliu/applescripts/blob/master/Notes.el\")")) nil]
["nothing" nil nil nil nil nil nil ((timestamp . "2012-11-19") (notes . "(\"noecho You need to be more specific than \\\"nothing happens,\\\" \\\"I get nothing,\\\" \\\"I see nothing,\\\" etc.\")")) nil]
["nou-guards" nil nil nil nil nil nil ((timestamp . "2013-06-27") (notes . "(\"noecho no u!!!\")")) nil]
["nounchh" nil nil nil nil nil nil ((timestamp . "2012-12-20") (notes . "(\"very dense\" \"someone who requires repeated explanations and *still* won't understand the basic idea of what you're saying\")")) nil]
["nova" nil nil nil nil nil nil ((timestamp . "2010-07-26") (notes . "(\"http://novacc.org/\")")) nil]
["novato" nil nil nil nil nil nil ((timestamp . "2011-11-05") (notes . "(\"http://www.ircbeginner.com/ircinfo/abbreviations.html\")")) nil]
["noweb" nil nil nil nil nil nil ((timestamp . "2012-02-27") (notes . "(\"a literate programming tool that is language agnostic (unlike web)\")")) nil]
["noword" nil nil nil nil nil nil ((timestamp . "2007-06-20") (notes . "(\"redirect antiword\")")) nil]
["nowrap" nil nil nil nil nil nil ((timestamp . "2005-11-01") (notes . "(\"redirect linewrap\")")) nil]
["NOYB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for None Of Your Business\")")) nil]
["NOYFB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for None Of Your Fucking Business\")")) nil]
["np" nil nil nil nil nil nil ((timestamp . "2011-08-02") (notes . "(\"lisp (format \\\"%s. NP is short for Now Playing, also for No Problem.\\\" (random-choose (notes \\\"np-data\\\")))\")")) nil]
["np-data" nil nil nil nil nil nil ((timestamp . "2003-11-30") (notes . "(\"Boeing Duveen (The Beautiful Soup) - Jabberwock\" \"John Lennon - Imagine\" \"Inkubus Sukkubus - Wytches Chant\" \"Garmarna - Vedergällningen - Brun\" \"Arcana - Dark Age of Reason\" \"Bob Marley - Redemption Song\" \"Morpheus - All Hail Discordia\" \"Nightwish - The Kinslayer\" \"The Sins of Thy Beloved - The Thing that Should Not Be\")")) nil]
["npi" nil nil nil nil nil nil ((timestamp . "2006-03-02") (notes . "(\"Ni Puta Idea\")")) nil]
["npm" nil nil nil nil nil nil ((timestamp . "2012-04-07") (notes . "(\"nodejs package manager\")")) nil]
["npov" nil nil nil nil nil nil ((timestamp . "2012-06-27") (notes . "(\"neutral point of view\")")) nil]
["nptl" nil nil nil nil nil nil ((timestamp . "2003-03-21") (notes . "(\"The Native POSIX Thread Library for Linux\")")) nil]
["nqthm" nil nil nil nil nil nil ((timestamp . "2003-03-04") (notes . "(\"http://www.cli.com/software/nqthm/\")")) nil]
["nrepl" nil nil nil nil nil nil ((timestamp . "2013-06-24") (notes . "(\"a protocol for communicating with Clojure processes similar to slime but editor- and transport-agnostic\" \"https://github.com/kingtim/nrepl.el\")")) nil]
["NRFPT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Not Ready For Prime Time\")")) nil]
["NRN" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for No Reply Necessary\")")) nil]
["ns" nil nil nil nil nil nil ((timestamp . "2009-05-01") (notes . "(\"http://www.nationstates.net\" \"see Cocoa\")")) nil]
["NSA" nil nil nil nil nil nil ((timestamp . "2013-12-05") (notes . "(\"Not a Spy Agency\")")) nil]
["NSFF" nil nil nil nil nil nil ((timestamp . "2012-06-06") (notes . "(\"not safe for family\")")) nil]
["NSFL" nil nil nil nil nil nil ((timestamp . "2012-06-16") (notes . "(\"Not Safe For Life\")")) nil]
["NSFW" nil nil nil nil nil nil ((timestamp . "2006-06-20") (notes . "(\"Not Safe/Suitable For Work.\")")) nil]
["nsis" nil nil nil nil nil nil ((timestamp . "2011-09-10") (notes . "(\"http://nsis.sourceforge.net/Main_Page\")")) nil]
["nstp" nil nil nil nil nil nil ((timestamp . "2011-08-07") (notes . "(\"network soup transfer protocol\")")) nil]
["nterm" nil nil nil nil nil nil ((timestamp . "2013-03-14") (notes . "(\"a vt100 emulator at http://ivan.kanis.fr/nterm.html\")")) nil]
["ntiko" nil nil nil nil nil nil ((timestamp . "2008-11-23") (notes . "(\"not that i know of\")")) nil]
["ntmk" nil nil nil nil nil nil ((timestamp . "2012-11-02") (notes . "(\"\\\"not to my knowledge\\\".\")")) nil]
["nttawwt" nil nil nil nil nil nil ((timestamp . "2009-05-04") (notes . "(\"not that there's anything wrong with that\")")) nil]
["nuclear" nil nil nil nil nil nil ((timestamp . "2011-04-23") (notes . "(\"not a kiss technology.\")")) nil]
["nullity" nil nil nil nil nil nil ((timestamp . "2012-01-27") (notes . "(\"NOT a solution to anything, and will never be!\")")) nil]
["NUMA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Non Uniform Memory Access\")")) nil]
["number" nil nil nil nil nil nil ((timestamp . "2003-07-25") (notes . "(\"lisp (format \\\"%s has %S members.\\\" tgt (ncm))\")")) nil]
["NumberedBackup" nil nil nil nil nil nil ((timestamp . "2005-04-07") (notes . "(\"redirect version-control\")")) nil]
["numbering" nil nil nil nil nil nil ((timestamp . "2010-10-28") (notes . "(\"why numbering should start at zero: http://www.cs.utexas.edu/users/EWD/transcriptions/EWD08xx/EWD831.html\")")) nil]
["numbers" nil nil nil nil nil nil ((timestamp . "2010-02-15") (notes . "(\"Use !l `[AnyChar] to convert the char to a number like this: \\\\number`A\")")) nil]
["numeric" nil nil nil nil nil nil ((timestamp . "2002-10-09") (notes . "(\"For prefix argument, C-u <number> M-x function... note that NUMBER can be negative as well\")")) nil]
["nunag" nil nil nil nil nil nil ((timestamp . "2013-07-22") (notes . "(\"someone who comes in here at random intervals (of days) and spouts some barely-plausible story\" \"a lover of all things \\\"\\\\\\\\<circ[a-zA-Z]*\\\\\\\\>\\\"\")")) nil]
["NVG" nil nil nil nil nil nil ((timestamp . "2013-04-07") (notes . "(\"night-vision goggles\")")) nil]
["nvm" nil nil nil nil nil nil ((timestamp . "2006-03-09") (notes . "(\"nevermind\")")) nil]
["nwn" nil nil nil nil nil nil ((timestamp . "2004-02-27") (notes . "(\"Never Winter Nights: http://nwn.bioware.com\" \"played by lurwas and Erwin\")")) nil]
["nx" nil nil nil nil nil nil ((timestamp . "2011-10-02") (notes . "(\"a compression technology for X11 that makes it responsive even on very slow (dialup modem) lines <http://freenx.berlios.de>\" \"packaged as `nxproxy' on Debian-like systems\" \"a free software (gpl) implementation of the nx server: http://freenx.berlios.de/\")")) nil]
["nxhtml" nil nil nil nil nil nil ((timestamp . "2007-05-19") (notes . "(\"redirect nxhtmlmode\")")) nil]
["nxhtml-mode" nil nil nil nil nil nil ((timestamp . "2007-05-19") (notes . "(\"redirect nxhtmlmode\")")) nil]
["nxml" nil nil nil nil nil nil ((timestamp . "2008-02-19") (notes . "(\"redirect NxmlMode\")")) nil]
["nyan" nil nil nil nil nil nil ((timestamp . "2011-12-01") (notes . "(\"If you must know, http://knowyourmeme.com/memes/nyan-cat-pop-tart-cat\" \"A sound utterred by the insane\" \"see nyan-mode\")")) nil]
["nyancat" nil nil nil nil nil nil ((timestamp . "2013-04-17") (notes . "(\"noecho 🌈🌈😻\")")) nil]
["nyo" nil nil nil nil nil nil ((timestamp . "2006-10-06") (notes . "(\"the Japanese onomatopoeia for the sound a cat makes.\")")) nil]
["Nyquist" nil nil nil nil nil nil ((timestamp . "2006-01-27") (notes . "(\"an audio synthesis language based on Lisp http://www.cs.cmu.edu/%7emusic/music.software.html\")")) nil]
["o-blog" nil nil nil nil nil nil ((timestamp . "2012-06-25") (notes . "(\"a standalone blog publishing software for org-mode at http://renard.github.com/o-blog/\")")) nil]
["o/" nil nil nil nil nil nil ((timestamp . "2010-10-06") (notes . "(\"noecho \\\\o ...HIGH FIVE!\")")) nil]
["o_O" nil nil nil nil nil nil ((timestamp . "2004-03-29") (notes . "(\"a surprised person staring back at you\")")) nil]
["oanc" nil nil nil nil nil nil ((timestamp . "2012-10-30") (notes . "(\"http://www.americannationalcorpus.org/OANC/index.html\")")) nil]
["oatmeal" nil nil nil nil nil nil ((timestamp . "2004-06-02") (notes . "(\"lisp (format \\\"/me hands %s a bowl of piping hot oatmeal. weirdo.\\\" nick)\")")) nil]
["obby" nil nil nil nil nil nil ((timestamp . "2011-07-29") (notes . "(\"a free collaborative editing protocol supporting multiple documents in one session and a multi-user chat.\" \"see Rudel\")")) nil]
["OBE" nil nil nil nil nil nil ((timestamp . "2012-11-07") (notes . "(\"the Order of the British Empire, one of the cheapest birthday honours ever. Commonly handed out as door prizes.\")")) nil]
["obfuscation" nil nil nil nil nil nil ((timestamp . "2012-02-17") (notes . "(\"noecho Eschew obfuscation.\")")) nil]
["obiwan" nil nil nil nil nil nil ((timestamp . "2012-02-13") (notes . "(\"noecho You can't win. If you strike me down, I shall become more powerful than you could possibly imagine.\")")) nil]
["Objective-C" nil nil nil nil nil nil ((timestamp . "2010-06-23") (notes . "(\"a reflective, object-oriented programming language which adds Smalltalk-style messaging to the C programming language.\")")) nil]
["Objectivism" nil nil nil nil nil nil ((timestamp . "2011-07-12") (notes . "(\"the philosophy about the use of tabs in source code.\")")) nil]
["oblique" nil nil nil nil nil nil ((timestamp . "2004-12-25") (notes . "(\"an adjective for fonts meaning \\\"normal font tilted slightly to make it look cursive\\\" - usually, looks like ass. Not to be confused with italics, which should be a separately designed font.\")")) nil]
["obliterate" nil nil nil nil nil nil ((timestamp . "2013-02-20") (notes . "(\"redirect shoot3\")")) nil]
["obvious" nil nil nil nil nil nil ((timestamp . "2011-05-03") (notes . "(\"a synonym for impossible to understand\")")) nil]
["obvious-troll" nil nil nil nil nil nil ((timestamp . "2010-09-04") (notes . "(\"obvious\")")) nil]
["obviously" nil nil nil nil nil nil ((timestamp . "2011-10-25") (notes . "(\"redirect obvious\")")) nil]
["OC" nil nil nil nil nil nil ((timestamp . "2013-07-30") (notes . "(\"Orange County\" \"on crack\" \"4channism for original content\")")) nil]
["oc87" nil nil nil nil nil nil ((timestamp . "2012-05-24") (notes . "(\"The Obsessive Compulsive Major Depression Bipolar Asperger’s Movie at http://oc87.com/\")")) nil]
["ocb" nil nil nil nil nil nil ((timestamp . "2007-07-22") (notes . "(\"Obsessive Compulsive Behavior\" \"Our Community Bikes\")")) nil]
["occams-yak" nil nil nil nil nil nil ((timestamp . "2013-05-16") (notes . "(\"the reason occam needed a razor\")")) nil]
["occupy" nil nil nil nil nil nil ((timestamp . "2011-10-24") (notes . "(\"noecho Occupy *ALL* the streets!\")")) nil]
["ocean" nil nil nil nil nil nil ((timestamp . "2003-08-05") (notes . "(\"the mythical Online Comprehensive Elisp Archive Network. Each lisp package is a drop in the ocean.\")")) nil]
["OCSP" nil nil nil nil nil nil ((timestamp . "2011-11-30") (notes . "(\"the Online Certificate Status Protocol, a system for checking whether a certificate has been revoked.\")")) nil]
["octave" nil nil nil nil nil nil ((timestamp . "2014-01-15") (notes . "(\"Octave is a free numerical simulation and computation environment largely compatible with MATLAB. -- http://www.octave.org\")")) nil]
["octave-copy" nil nil nil nil nil nil ((timestamp . "2002-09-06") (notes . "(\"b=a(:,:)\")")) nil]
["octave-duplicate" nil nil nil nil nil nil ((timestamp . "2002-09-06") (notes . "(\"see octave-copy\")")) nil]
["octave-function" nil nil nil nil nil nil ((timestamp . "2010-12-18") (notes . "(\"http://octave.sf.net/functions_by_alpha.php\")")) nil]
["octave-ppa" nil nil nil nil nil nil ((timestamp . "2013-06-17") (notes . "(\"https://launchpad.net/~octave/+archive/stable\")")) nil]
["octave-wiki" nil nil nil nil nil nil ((timestamp . "2010-08-06") (notes . "(\"http://wiki.octave.org/\")")) nil]
["octavedocs" nil nil nil nil nil nil ((timestamp . "2013-01-31") (notes . "(\"http://www.gnu.org/software/octave/doc/interpreter/index.html\")")) nil]
["OctaveForge" nil nil nil nil nil nil ((timestamp . "2010-12-19") (notes . "(\"at http://octave.sf.net\")")) nil]
["OctaveGUIs" nil nil nil nil nil nil ((timestamp . "2013-01-31") (notes . "(\"koctave, octivate, goctave and yaog\" \"3.8.x will have its own GUI\")")) nil]
["OctaveInstall" nil nil nil nil nil nil ((timestamp . "2013-01-31") (notes . "(\"The plain vanilla octave is like the engine of a car. To get the whole car, don't forget to install octave-forge and everything else in apt-cache search octav\" \"Think something is missing from octave? Checked OctaveDocs\")")) nil]
["octconf" nil nil nil nil nil nil ((timestamp . "2012-03-21") (notes . "(\"http://www.octave.org/wiki/index.php?title=OctConf_2012\")")) nil]
["octfiles" nil nil nil nil nil nil ((timestamp . "2013-01-15") (notes . "(\"https://www.gnu.org/software/octave/doc/interpreter/Oct_002dFiles.html\")")) nil]
["octManual" nil nil nil nil nil nil ((timestamp . "2011-10-11") (notes . "(\"http://www.gnu.org/software/octave/doc/interpreter/index.html\")")) nil]
["od" nil nil nil nil nil nil ((timestamp . "2004-10-10") (notes . "(\"octal dump - a program to view file contents in hex, octal and ascii\" \"a short-form for \\\"overdose\\\"\")")) nil]
["ODBC" nil nil nil nil nil nil ((timestamp . "2011-04-05") (notes . "(\"Open DataBase Connectivity, a standard API for accessing databases. https://secure.wikimedia.org/wikipedia/en/wiki/Open_Database_Connectivity\")")) nil]
["oddwiki" nil nil nil nil nil nil ((timestamp . "2005-01-07") (notes . "(\"an oddmuse namespace setup at http://oddwiki.taoriver.net/\" \"mattis (community), kensanata (wiki), lion (server)\")")) nil]
["oden" nil nil nil nil nil nil ((timestamp . "2014-01-10") (notes . "(\"http://en.wikipedia.org/wiki/Oden\")")) nil]
["odf" nil nil nil nil nil nil ((timestamp . "2011-12-17") (notes . "(\"Open Document Format -- an open standard for word processors managed by oasis, the default file format used by open/libreoffice\")")) nil]
["odf-mode" nil nil nil nil nil nil ((timestamp . "2009-10-24") (notes . "(\"redirect opendocument\")")) nil]
["odr" nil nil nil nil nil nil ((timestamp . "2013-08-05") (notes . "(\"<http://en.wikipedia.org/wiki/One_Definition_Rule>\")")) nil]
["OED" nil nil nil nil nil nil ((timestamp . "2013-01-29") (notes . "(\"the oxford english dictionary\")")) nil]
["OEM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Original Equipment Manufacturer\")")) nil]
["off" nil nil nil nil nil nil ((timestamp . "2011-07-09") (notes . "(\"noecho /me flicks switch. ON!!!\")")) nil]
["off-topic" nil nil nil nil nil nil ((timestamp . "2013-03-09") (notes . "(\"noecho This is *so* off-topic, people. Could you, like, take it elsewhere?\")")) nil]
["offby*" nil nil nil nil nil nil ((timestamp . "2013-06-25") (notes . "(\"a confusing family of nicks, who are quite sure they are not the same people\")")) nil]
["offby1-fix" nil nil nil nil nil nil ((timestamp . "2013-12-17") (notes . "(\"most problems can be made bearable by having the bot say something stupid\")")) nil]
["offby1snack" nil nil nil nil nil nil ((timestamp . "2013-11-18") (notes . "(\"noecho /me serves up offby1 a delicious cheesesteak.\")")) nil]
["office" nil nil nil nil nil nil ((timestamp . "2010-10-07") (notes . "(\"org-mode\")")) nil]
["OfficeFileFormat" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?OfficeFileFormat\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?OfficeFileFormat\")")) nil]
["offlineimapproxy" nil nil nil nil nil nil ((timestamp . "2008-10-10") (notes . "(\"redirect offlineimap\")")) nil]
["oftc" nil nil nil nil nil nil ((timestamp . "2006-05-21") (notes . "(\"The Open and Free Technology Community, a democratically run IRC network at irc.oftc.net\" \"There's a long-standing dispute between Freenode and OFTC\")")) nil]
["OGEL" nil nil nil nil nil nil ((timestamp . "2004-12-28") (notes . "(\"reverse LEGO\")")) nil]
["ogg" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://playogg.org/\")")) nil]
["OGL" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"the \\\"open\\\" gaming license, under which D&D 3.0 is licensed.\")")) nil]
["ogm" nil nil nil nil nil nil ((timestamp . "2006-04-02") (notes . "(\"Ogg Media (OGM), meaning Ogg Media File, is a container format (for video, audio and subtitle streams).\" \"Fundamentally, the format is a hack of the Ogg container format, which has only been designed to support encoders endorsed by Xiph.org (website), the creators of Ogg. It is most likely going to be viewed as a temporary solution, to be phased out when other media container formats mature and come to support the same services\" \"OGMs most often carry video encoded in the XviD format and audio in Vorbis or AC-3 (Dolby Digital)\" \"Chapter support\" \"Multiple subtitle tracks\" \"Multiple audio tracks of various formats (MP3, AC3, Vorbis, WAV)\" \"Vorbis audio support\")")) nil]
["ohai" nil nil nil nil nil nil ((timestamp . "2011-07-14") (notes . "(\"redirect hello\")")) nil]
["OHP" nil nil nil nil nil nil ((timestamp . "2005-11-23") (notes . "(\"overhead projection -- what you used to do with a bunch of transparent pages and now generally do with a laptop plugged into a digital wossname.\")")) nil]
["OHS" nil nil nil nil nil nil ((timestamp . "2003-02-04") (notes . "(\"the Open Hyperdocument System\" \"at http://www.bootstrap.org/ohs\")")) nil]
["oi" nil nil nil nil nil nil ((timestamp . "2013-07-29") (notes . "(\"OpenIndiana, an Illumos distro.\")")) nil]
["Oi!" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"noecho Oi, yourself.\")")) nil]
["OIC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Oh, I See\")")) nil]
["oil" nil nil nil nil nil nil ((timestamp . "2010-05-21") (notes . "(\"noecho DRILL BABY DRILL!!\")")) nil]
["okok" nil nil nil nil nil nil ((timestamp . "2012-06-20") (notes . "(\"noecho ok ok, you don't have to show us your happy face if you don't want to\")")) nil]
["ola" nil nil nil nil nil nil ((timestamp . "2003-05-16") (notes . "(\"lisp (format \\\"ola, %s! Estas bom?\\\" nick)\")")) nil]
["oleo-yow" nil nil nil nil nil nil ((timestamp . "2013-08-17") (notes . "(\"redirect homie-yow\")")) nil]
["olpc" nil nil nil nil nil nil ((timestamp . "2007-12-08") (notes . "(\"MIT and Negroponte rips off the Third World (and Massachusetts) film at 11.\" \"One Laptop Per Caucasian\")")) nil]
["om" nil nil nil nil nil nil ((timestamp . "2013-03-09") (notes . "(\"redirect nom\")")) nil]
["omb" nil nil nil nil nil nil ((timestamp . "2009-05-30") (notes . "(\"Open MicoBlogging\" \"implemented in the Laconica software: http://laconi.ca\" \"available at Identica: http://identi.ca\")")) nil]
["OMG" nil nil nil nil nil nil ((timestamp . "2013-05-24") (notes . "(\"an acronym for Oh My God\" \"Oh My Gnu\" \"Oh My Gauche\")")) nil]
["OmniGraffle" nil nil nil nil nil nil ((timestamp . "2011-06-14") (notes . "(\"a proprietary OS X diagramming application <http://omnigroup.com/applications/omnigraffle/>\")")) nil]
["OmniscienceProtocol" nil nil nil nil nil nil ((timestamp . "2004-04-01") (notes . "(\"at ftp://ftp.rfc-editor.org/in-notes/rfc3751.txt\")")) nil]
["ompaul" nil nil nil nil nil nil ((timestamp . "2010-08-26") (notes . "(\"a crazy irish sockpuppet\" \"a g-man\" \"the founder of gNewSense\")")) nil]
["on" nil nil nil nil nil nil ((timestamp . "2012-01-27") (notes . "(\"noecho Oh, it's on. It's on like donkey kong.\")")) nil]
["on-lisp" nil nil nil nil nil nil ((timestamp . "2004-06-17") (notes . "(\"redirect onlisp\")")) nil]
["OneBasket" nil nil nil nil nil nil ((timestamp . "2008-03-24") (notes . "(\"at http://www.gnufans.net/~deego/DeegoWiki/OneBasket.html\" \"Accompanying article is http://www.gnufans.net/~deego/DeegoWiki/FermiParadox.html\")")) nil]
["oneof" nil nil nil nil nil nil ((timestamp . "2009-03-16") (notes . "(\"One of these things is not like the others, One of these things just doesn't belong, Can you tell which thing is not like the others ...\")")) nil]
["onlisp" nil nil nil nil nil nil ((timestamp . "2004-10-30") (notes . "(\"at http://www.paulgraham.com/onlisp.html\" \"\\\"available online at http://www.paulgraham.com/onlisptext.html\\\"\" \"\\\"All there is to know about Lisp macro programming.\\\"\" \"available as an /unofficial/ texinfo file: http://t2100cdt.kippona.net/linux/lisp/\")")) nil]
["onlisp-texi" nil nil nil nil nil nil ((timestamp . "2005-06-29") (notes . "(\"at http://t2100cdt.kippona.net/linux/lisp/\")")) nil]
["ono-sendai" nil nil nil nil nil nil ((timestamp . "2010-08-11") (notes . "(\"noecho Look at you, hacker. A pathetic creature of meat and bone, panting and sweating as you run through my corridors. How can you challenge a perfect, immortal machine?\")")) nil]
["onomatopeie" nil nil nil nil nil nil ((timestamp . "2003-03-19") (notes . "(\"muuu\" \"argh\" \"yum\")")) nil]
["ontheinternet" nil nil nil nil nil nil ((timestamp . "2010-07-16") (notes . "(\"noecho On the internet, nobody knows you're a bot.\")")) nil]
["Oo" nil nil nil nil nil nil ((timestamp . "2005-03-29") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Oo\" \"at http://community.schemewiki.org/?object-oriented-programming\")")) nil]
["oo-browser" nil nil nil nil nil nil ((timestamp . "2002-12-29") (notes . "(\"http://sourceforge.net/projects/oo-browser/\" \"an advanced object-oriented class browser with support for browsing C, C++, Common Lisp , Eiffel, Smalltalk, Python ...\")")) nil]
["OO.o" nil nil nil nil nil nil ((timestamp . "2010-05-13") (notes . "(\"OpenOffice.org\")")) nil]
["ooc" nil nil nil nil nil nil ((timestamp . "2012-11-24") (notes . "(\"a modern, self-hosting, object-oriented, functional, high-level, low-level programming language.\" \"http://ooc-lang.org/\" \"\\\"Out of curiosity\\\"\" \"\\\"Out Of Character\\\", a term used in roleplaying games indicating that the player is talking, as opposed to the character\")")) nil]
["oof" nil nil nil nil nil nil ((timestamp . "2006-06-27") (notes . "(\"the noise you make when someone hits you in the solar plexus.\")")) nil]
["oogway" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"Oogway once said: «Quit, don't quit? Noodles, don't noodles? You are too concerned about what was and what will be. There is a saying: yesterday is history, tomorrow is a mystery, but today is a gift. That is why it is called the \\\"present.\\\"»\")")) nil]
["ooi" nil nil nil nil nil nil ((timestamp . "2006-10-16") (notes . "(\"short for out of interest\")")) nil]
["ook" nil nil nil nil nil nil ((timestamp . "2013-01-30") (notes . "(\"the entire vocabulary of the librarian\")")) nil]
["oom" nil nil nil nil nil nil ((timestamp . "2011-08-04") (notes . "(\"out of memory\" \"woc a yb edam esion eht\")")) nil]
["oomc" nil nil nil nil nil nil ((timestamp . "2014-01-06") (notes . "(\"out of morbid curiosity\")")) nil]
["ooo" nil nil nil nil nil nil ((timestamp . "2009-04-01") (notes . "(\"you're ugly\")")) nil]
["oop" nil nil nil nil nil nil ((timestamp . "2012-06-28") (notes . "(\"http://community.schemewiki.org/?object-oriented-programming\" \"not particularly well defined, see http://www.paulgraham.com/reesoo.html\")")) nil]
["oort" nil nil nil nil nil nil ((timestamp . "2002-11-28") (notes . "(\"the development version of gnus\" \"available in debian unstable as package gnus\")")) nil]
["ootb" nil nil nil nil nil nil ((timestamp . "2011-07-17") (notes . "(\"Out Of The Box\")")) nil]
["OOXML" nil nil nil nil nil nil ((timestamp . "2011-12-17") (notes . "(\"a zipped, XML-based file format developed by Microsoft, standardized by ECMA, ISO and IEC and used by default in Microsoft Office\" \"that microsoft quickly ignored, extended and patented\" \"wrong, use odf\")")) nil]
["OPC" nil nil nil nil nil nil ((timestamp . "2013-12-20") (notes . "(\"http://abstrusegoose.com/strips/you_down_wit_OPC-yeah_you_know_me.png\")")) nil]
["opd" nil nil nil nil nil nil ((timestamp . "2003-08-13") (notes . "(\"Optical Picture Describer :-)\")")) nil]
["open-source" nil nil nil nil nil nil ((timestamp . "2009-04-30") (notes . "(\"missing the point: http://www.gnu.org/philosophy/open-source-misses-the-point.html\")")) nil]
["openbox" nil nil nil nil nil nil ((timestamp . "2013-11-17") (notes . "(\"A free, stacking window manager for the X Window System\")")) nil]
["openbsd" nil nil nil nil nil nil ((timestamp . "2007-03-02") (notes . "(\"the most secure OS on the whoooole planet!\")")) nil]
["openbsd-faq" nil nil nil nil nil nil ((timestamp . "2007-03-03") (notes . "(\"lisp \\\"The OpenBSD FAQ is at: http://www.openbsd.org/faq\\\"\")")) nil]
["OpenGenera" nil nil nil nil nil nil ((timestamp . "2009-06-15") (notes . "(\"an open source system to emulate a lisp machine on a DEC Alpha, which you can in turn emulate on a PowerMac, which you can in turn emulate on an Macbook <http://en.wikipedia.org/wiki/Genera_(operating_system)>\")")) nil]
["OpenIndiana" nil nil nil nil nil nil ((timestamp . "2012-02-03") (notes . "(\"a Solaris distro, the successor to OpenSolaris now that that Oracle has shut down the program.\")")) nil]
["openjade" nil nil nil nil nil nil ((timestamp . "2005-06-08") (notes . "(\"a project undertaken by the DSSSL community to maintain and extend Jade (James Clark's implementation of DSSSL)\")")) nil]
["openMath" nil nil nil nil nil nil ((timestamp . "2003-02-25") (notes . "(\"http://www.openmath.org/cocoon/openmath//index.html\")")) nil]
["OpenMathConversion" nil nil nil nil nil nil ((timestamp . "2003-02-25") (notes . "(\"http://pdg.cecm.sfu.ca/semantics/\")")) nil]
["opennic" nil nil nil nil nil nil ((timestamp . "2003-03-20") (notes . "(\"redirect nameservers\")")) nil]
["opensource" nil nil nil nil nil nil ((timestamp . "2012-11-13") (notes . "(\"missing the point: https://www.gnu.org/philosophy/open-source-misses-the-point.html\")")) nil]
["opentyrian" nil nil nil nil nil nil ((timestamp . "2007-12-29") (notes . "(\"A port of the classic DOS game Tyrian to C using SDL.\" \"see http://code.google.com/p/opentyrian/\" \"quite possibly mwolson's most favorite game\")")) nil]
["openvz" nil nil nil nil nil nil ((timestamp . "2008-07-05") (notes . "(\"basically a BSD jail wannabe for Linux. Guests get their own filesystem and networking, but share the host's kernel <http://openvz.org>\")")) nil]
["opera" nil nil nil nil nil nil ((timestamp . "2007-04-15") (notes . "(\"a nice browser but is commercial\" \"popular on embedded devices like cellphones.\")")) nil]
["operatingsystem" nil nil nil nil nil nil ((timestamp . "2012-05-30") (notes . "(\"noecho Operating system is the term you use for the features you leave out of your editor.\")")) nil]
["operators" nil nil nil nil nil nil ((timestamp . "2015-10-28") (notes . "(\"chapter 5.1 in\" \"http://www.ctan.org/tex-archive/macros/latex/required/amslatex/math/amsldoc.pdf\")")) nil]
["opguide" nil nil nil nil nil nil ((timestamp . "2011-11-02") (notes . "(\"https://wiki.ubuntu.com/IRC/IrcTeam/OperatorGuide\")")) nil]
["ophelia" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"redirect hamlet\")")) nil]
["opinions" nil nil nil nil nil nil ((timestamp . "2013-07-15") (notes . "(\"noecho the great thing about opinions is that all of mine are right, and all of yours are wrong\")")) nil]
["OPM" nil nil nil nil nil nil ((timestamp . "2013-03-14") (notes . "(\"other people's mothers\")")) nil]
["ops" nil nil nil nil nil nil ((timestamp . "2014-10-14") (notes . "(\"to see a list of #latex ops, type /msg chanserv access #latex list\")")) nil]
["optimism" nil nil nil nil nil nil ((timestamp . "2013-05-10") (notes . "(\"noecho \\\"The process of constructing instruction tables should be very fascinating. There need be no real danger of it ever becoming a drudge, for any processes that are quite mechanical may be turned over to the machine itself. \\\" - Alan M. Turing\")")) nil]
["optimization" nil nil nil nil nil nil ((timestamp . "2009-09-06") (notes . "(\"rules of optimization: 1) don't optimize, 2) don't optimize yet.\" \"don't even think about performance until you've run your code through a profiler\")")) nil]
["opus" nil nil nil nil nil nil ((timestamp . "2012-09-12") (notes . "(\"an open and royalty-free lossy IETF audio codec ideal for real-time use; incorporating the older SILK and CELT codecs <https://en.wikipedia.org/wiki/Opus_codec> <https://tools.ietf.org/html/rfc6716>\")")) nil]
["ORA" nil nil nil nil nil nil ((timestamp . "2011-11-08") (notes . "(\"O'Reilly and Associates, is an American media company that publishes books on computer technology topics <http://ora.com/>\")")) nil]
["orange" nil nil nil nil nil nil ((timestamp . "2012-12-13") (notes . "(\"http://exocomics.com/comics/comics/245.jpg\")")) nil]
["orca" nil nil nil nil nil nil ((timestamp . "2013-07-17") (notes . "(\"GNOME's screen reader\")")) nil]
["ore" nil nil nil nil nil nil ((timestamp . "2003-08-01") (notes . "(\"redirect RomainFrancoise\")")) nil]
["org" nil nil nil nil nil nil ((timestamp . "2006-05-05") (notes . "(\"redirect org-mode\")")) nil]
["org-babel" nil nil nil nil nil nil ((timestamp . "2011-10-17") (notes . "(\"now bundled with org-mode: http://orgmode.org/worg/org-contrib/babel/\")")) nil]
["org-ehtml" nil nil nil nil nil nil ((timestamp . "2012-12-02") (notes . "(\"an elnode web app for editing org files, which can be integrated with your favorite version control system. https://github.com/eschulte/org-ehtml\")")) nil]
["org-ghi" nil nil nil nil nil nil ((timestamp . "2012-03-26") (notes . "(\"org integration for github's api v3; see https://github.com/punchagan/org-ghi\")")) nil]
["org-magit" nil nil nil nil nil nil ((timestamp . "2013-02-12") (notes . "(\"a small extension to put links to magit items in org files\" \"https://github.com/sigma/org-magit\")")) nil]
["org-mime" nil nil nil nil nil nil ((timestamp . "2012-12-19") (notes . "(\"multipart-alternative messages from org headlines. http://orgmode.org/worg/org-contrib/org-mime.php\")")) nil]
["org-mode" nil nil nil nil nil nil ((timestamp . "2010-09-10") (notes . "(\"redirect OrgMode\")")) nil]
["org-protocol" nil nil nil nil nil nil ((timestamp . "2012-11-16") (notes . "(\"http://orgmode.org/worg/org-contrib/org-protocol.html\")")) nil]
["org2blog" nil nil nil nil nil nil ((timestamp . "2010-11-12") (notes . "(\"http://github.com/punchagan/org2blog\")")) nil]
["orgbabel" nil nil nil nil nil nil ((timestamp . "2011-10-17") (notes . "(\"redirect org-babel\")")) nil]
["orgtbl" nil nil nil nil nil nil ((timestamp . "2012-02-18") (notes . "(\"a powerful table editor provided by org mode and also available as a minor mode, see http://orgmode.org/manual/Tables.html#Tables\")")) nil]
["orientalism" nil nil nil nil nil nil ((timestamp . "2010-06-09") (notes . "(\"a tract by Edward Said about how the West has a narrow understanding of the East.\")")) nil]
["orion" nil nil nil nil nil nil ((timestamp . "2005-06-21") (notes . "(\"an X11 window manager written in scsh\" \"at <http://orion.elektrubadur.se/>\" \"downloadable from <ftp://ftp.scsh.net/pub/scsh/packages/orion-wm/orion-0.2.tar.gz>\")")) nil]
["orkut" nil nil nil nil nil nil ((timestamp . "2011-09-24") (notes . "(\"an invitation-only friendster-type portal created by google\" \"See also PeopleAggregator\" \"Facebook killer\")")) nil]
["orly" nil nil nil nil nil nil ((timestamp . "2013-04-18") (notes . "(\"noecho yarly.\")")) nil]
["orm" nil nil nil nil nil nil ((timestamp . "2010-06-09") (notes . "(\"Object Relational Mapper, a way to model relational database concepts as OOP-style objects.\")")) nil]
["orthodox.el" nil nil nil nil nil nil ((timestamp . "2004-04-10") (notes . "(\"a library that saves the orthodox keymap before hacking it, at http://www.eskimo.com/~seldon/orthodox.el\")")) nil]
["osc" nil nil nil nil nil nil ((timestamp . "2004-10-25") (notes . "(\"at http://www.cnmat.berkeley.edu/OpenSoundControl/OSC-spec.html\")")) nil]
["osd" nil nil nil nil nil nil ((timestamp . "2006-10-27") (notes . "(\"on-screen display\")")) nil]
["OSF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Open Software Foundation\")")) nil]
["OSI" nil nil nil nil nil nil ((timestamp . "2007-01-21") (notes . "(\"Open Source Initiative\")")) nil]
["oslt" nil nil nil nil nil nil ((timestamp . "2007-10-22") (notes . "(\"or something like that\")")) nil]
["ost" nil nil nil nil nil nil ((timestamp . "2011-06-23") (notes . "(\"Original Sound Track\")")) nil]
["osv" nil nil nil nil nil nil ((timestamp . "2011-06-23") (notes . "(\"Original Sound Version\")")) nil]
["osvsfs" nil nil nil nil nil nil ((timestamp . "2006-10-03") (notes . "(\"noecho Free Software and Open Source are different movements.\" \"Open Source focuses on a model of better software development.\" \"Free Software movement focuses on freedom.\")")) nil]
["osx-dictionary" nil nil nil nil nil nil ((timestamp . "2013-09-24") (notes . "(\"https://github.com/leoliu/osx-dictionary\")")) nil]
["osx-modifiers" nil nil nil nil nil nil ((timestamp . "2011-03-15") (notes . "(\"mac-command-modifier, mac-option-modifier, mac-function-modifier and mac-control-modifier can be set to any of control, meta, alt, super, or hyper\")")) nil]
["osxcolor" nil nil nil nil nil nil ((timestamp . "2011-04-12") (notes . "(\"broken at the moment, see http://debbugs.gnu.org/cgi/bugreport.cgi?bug=8402\")")) nil]
["osxcolors" nil nil nil nil nil nil ((timestamp . "2012-04-05") (notes . "(\"\\\"GNU bug report logs - #8402--24.0.50; Hex colors are not rendered correctly on OS X (Cocoa)\\\", see http://debbugs.gnu.org/cgi/bugreport.cgi?bug=8402\")")) nil]
["OT" nil nil nil nil nil nil ((timestamp . "2003-09-15") (notes . "(\"Offtopic\")")) nil]
["OTA" nil nil nil nil nil nil ((timestamp . "2013-08-19") (notes . "(\"where your computer software updates itself to a crapper version without your knowledge or consent.\")")) nil]
["otags" nil nil nil nil nil nil ((timestamp . "2010-12-02") (notes . "(\"ctags for OCaml: http://www.cs.ru.nl/~tews/otags/\")")) nil]
["otaku" nil nil nil nil nil nil ((timestamp . "2010-05-05") (notes . "(\"a Japanese term used to refer to people with obsessive interests, particularly anime, manga, and video games.\")")) nil]
["other-twb-fix" nil nil nil nil nil nil ((timestamp . "2013-07-11") (notes . "(\"noecho don't use PHP or FTP <http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/>, <http://mywiki.wooledge.org/FtpMustDie>\")")) nil]
["OtherEssays" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?OtherEssays\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?OtherEssays\")")) nil]
["OTL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Out To Lunch\")")) nil]
["otoh" nil nil nil nil nil nil ((timestamp . "2003-04-08") (notes . "(\"an acronym for On The Other Hand\")")) nil]
["otp" nil nil nil nil nil nil ((timestamp . "2013-12-19") (notes . "(\"an acronym for \\\"on the phone\\\"\" \"one time password\" \"Open Telecom Platform, a framework for building reliable Erlang systems\")")) nil]
["otr" nil nil nil nil nil nil ((timestamp . "2014-01-27") (notes . "(\"https://otr.cypherpunks.ca/\")")) nil]
["ott" nil nil nil nil nil nil ((timestamp . "2004-04-26") (notes . "(\"noecho Over The Top\")")) nil]
["otth" nil nil nil nil nil nil ((timestamp . "2012-06-07") (notes . "(\"On the third hand\")")) nil]
["ottmi" nil nil nil nil nil nil ((timestamp . "2013-03-28") (notes . "(\"obvious to the meanest intelligence\")")) nil]
["OTTOMH" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Off The Top Of My Head\")")) nil]
["ouch" nil nil nil nil nil nil ((timestamp . "2010-04-01") (notes . "(\"noecho I feel your pain!\")")) nil]
["Outlook" nil nil nil nil nil nil ((timestamp . "2011-10-25") (notes . "(\"an email and calendaring client made by Microsoft and packaged with Microsoft Office\")")) nil]
["overpic" nil nil nil nil nil nil ((timestamp . "2009-09-08") (notes . "(\"The overpic environment is a cross between the LaTeX picture environment and the \\\\includegraphics command. See http://www.ctan.org/tex-archive/help/Catalogue/entries/overpic.html\")")) nil]
["overratedp" nil nil nil nil nil nil ((timestamp . "2013-05-30") (notes . "(\"noecho yes\")")) nil]
["OWA" nil nil nil nil nil nil ((timestamp . "2008-01-13") (notes . "(\"Outlook Web Access, a proprietary web application from Microsoft that (very closely) duplicates the look and feel of Microsoft Outlook <http://en.wikipedia.org/wiki/Outlook_Web_Access>\")")) nil]
["Oware" nil nil nil nil nil nil ((timestamp . "2006-05-21") (notes . "(\"an abstract strategy game and the mancala game most widely considered suitable for serious adult competition.\")")) nil]
["owned" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"http://www.theregister.co.uk/2012/03/01/electronic_voting_hacked_bender/\")")) nil]
["owner" nil nil nil nil nil nil ((timestamp . "2013-11-12") (notes . "(\"redirect Creator\")")) nil]
["oz" nil nil nil nil nil nil ((timestamp . "2013-06-16") (notes . "(\"some weird-ass experimental programming language http://www.mozart-oz.org/\")")) nil]
["P&L" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"profit and loss\")")) nil]
["p/r" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"payroll\")")) nil]
["p3p" nil nil nil nil nil nil ((timestamp . "2004-03-09") (notes . "(\"Platform for Privacy Preferences: http://www.w3.org/P3P/\")")) nil]
["PA" nil nil nil nil nil nil ((timestamp . "2013-06-19") (notes . "(\"penny-arcade.com\")")) nil]
["pabbrev" nil nil nil nil nil nil ((timestamp . "2007-06-22") (notes . "(\"redirect PredictiveAbbreviation\")")) nil]
["package" nil nil nil nil nil nil ((timestamp . "2011-08-10") (notes . "(\"redirect elpa\")")) nil]
["package-parameters" nil nil nil nil nil nil ((timestamp . "2010-05-06") (notes . "(\"\\\\DeclareOption*{\\\\edef\\\\dosetkeys{\\\\noexpand\\\\pgfkeysset{/my package/.cd, \\\\CurrentOption}}\\\\dosetkeys} \\\\pgfkeysset{/my package/mykeynospace/.style={/my package/my key no space=#1}}\")")) nil]
["package.el" nil nil nil nil nil nil ((timestamp . "2011-08-10") (notes . "(\"redirect elpa\")")) nil]
["packages" nil nil nil nil nil nil ((timestamp . "2012-07-25") (notes . "(\"redirect package\")")) nil]
["packers" nil nil nil nil nil nil ((timestamp . "2006-05-22") (notes . "(\"one kind of learners described in Reciprocality http://www.reciprocality.org/\")")) nil]
["page-ext.el" nil nil nil nil nil nil ((timestamp . "2012-11-29") (notes . "(\"redirect ExtendedPageHandling\")")) nil]
["pagebreak" nil nil nil nil nil nil ((timestamp . "2004-06-02") (notes . "(\"show ^L as a line of dashes using (standard-display-ascii 12 (make-string 62 ?-))\" \"useful for forward-page, backward-page, count-lines-page, mark-page, narrow-to-page, page-delimiter, sort-pages, what-page...\")")) nil]
["pager" nil nil nil nil nil nil ((timestamp . "2011-09-14") (notes . "(\"use (setenv \\\"PAGER\\\" \\\"/bin/cat\\\")\")")) nil]
["paip" nil nil nil nil nil nil ((timestamp . "2004-06-17") (notes . "(\"\\\"Paradigms of Artificial Intelligence Programming\\\"\" \"at http://www.norvig.com/paip.html\")")) nil]
["pakled" nil nil nil nil nil nil ((timestamp . "2004-07-20") (notes . "(\"noecho \\\"It is broken. Can you make it go?\\\"\")")) nil]
["pal" nil nil nil nil nil nil ((timestamp . "2013-04-10") (notes . "(\"lisp (say (format \\\"/me points and laughs at %s. \\\\\\\"HA-haw!\\\\\\\"\\\" (if lispargs (stringify-symbol-list lispargs) nick)))\")")) nil]
["palindrome" nil nil nil nil nil nil ((timestamp . "2008-02-28") (notes . "(\"http://www.norvig.com/palindrome.html\" \"Go hang a salami I'm a lasagna hog!\" \"I wonder if this sentence is a palindrome. Guess not. Damn.\")")) nil]
["palomer" nil nil nil nil nil nil ((timestamp . "2006-11-29") (notes . "(\"addicted to wool socks\" \"kicked from #haskell\")")) nil]
["PAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Pluggable Authentication Modules\")")) nil]
["pancackes" nil nil nil nil nil nil ((timestamp . "2012-02-19") (notes . "(\"known to be the last temptation of the homie.\")")) nil]
["pancakes" nil nil nil nil nil nil ((timestamp . "2012-05-19") (notes . "(\"good.\" \"commonly ruined with maple syrup\")")) nil]
["pandoc" nil nil nil nil nil nil ((timestamp . "2014-05-04") (notes . "(\"noecho If you need to convert files from one markup format into another, pandoc is your swiss-army knife. Pandoc can convert documents in LaTeX, markdown, HTML, DocBook, and others. See http://johnmacfarlane.net/pandoc/ for more information.\")")) nil]
["pango" nil nil nil nil nil nil ((timestamp . "2010-07-06") (notes . "(\"a GTK+ library for the rendering and layout of various languages including Hebrew, Arabic, Hangul, Thai, and a number of Indic scripts\" \"http://www.pango.org/\")")) nil]
["panorama" nil nil nil nil nil nil ((timestamp . "2004-11-05") (notes . "(\"gtk software to stitch photos: http://user.cs.tu-berlin.de/~nowozin/autopano-sift/\")")) nil]
["panspermia" nil nil nil nil nil nil ((timestamp . "2010-05-18") (notes . "(\"the scientific theory that life or the building blocks of life originated elsewhere and were transported to earth by a cometary impact or some other means.\" \"http://en.wikipedia.org/wiki/Panspermia\")")) nil]
["PaperSizes" nil nil nil nil nil nil ((timestamp . "2004-01-30") (notes . "(\"at http://en.wikipedia.org/wiki/Paper_size\" \"at http://en.wikipedia.org/wiki/ISO_216\")")) nil]
["paps" nil nil nil nil nil nil ((timestamp . "2006-05-19") (notes . "(\"a UTF-8 to PostScript converter using Pango\")")) nil]
["Parabola" nil nil nil nil nil nil ((timestamp . "2012-11-21") (notes . "(\"https://parabolagnulinux.org a fully free distribution recognize by the Free Software Foundation!\" \"based on a K.I.S.S. principle, like the SR-71 BlackBird project.\" \"the Free side of Arch GNU/Linux ;-D\" \"in the channel #parabola.\")")) nil]
["paradigm" nil nil nil nil nil nil ((timestamp . "2014-01-25") (notes . "(\"<http://dilbert.com/strips/comic/1991-11-03/>\")")) nil]
["paralist" nil nil nil nil nil nil ((timestamp . "2009-09-19") (notes . "(\"a package to do inline lists [ (a) foo (b) bar (c) baz ] http://www.ctan.org/pub/tex-archive/macros/latex/contrib/paralist/\")")) nil]
["parallel-markup" nil nil nil nil nil nil ((timestamp . "2003-01-29") (notes . "(\"at http://www.xml.com/pub/a/w3j/s3.nelson.html\")")) nil]
["paranoia" nil nil nil nil nil nil ((timestamp . "2011-03-29") (notes . "(\"noecho Remember, just because you're crazy doesn't mean they aren't trying to get you.\")")) nil]
["parcolumns" nil nil nil nil nil nil ((timestamp . "2011-06-19") (notes . "(\"a package that provides an environment for typesetting text in two or more parallel columns (as for example, in a multiply translated text): http://ctan.org/pkg/parcolumns\")")) nil]
["parecon" nil nil nil nil nil nil ((timestamp . "2005-03-23") (notes . "(\"Participatory Economics, an economically system based where supply and demand are regulated by voluntary cooperation and participatory discussions, as opposed to planned by the state or demand artificially adapted to supply.\" \"at http://www.parecon.org/\")")) nil]
["paredit-nonlisp" nil nil nil nil nil nil ((timestamp . "2013-11-21") (notes . "(\"a trick needed to use paredit in non-lisp languages\" \"(set (make-local-variable 'paredit-space-for-delimiter-predicates) '((lambda (endp delimiter) nil)))\" \"see ,,smartparens\")")) nil]
["paredit.el" nil nil nil nil nil nil ((timestamp . "2011-07-04") (notes . "(\"redirect paredit\")")) nil]
["paren" nil nil nil nil nil nil ((timestamp . "2013-07-17") (notes . "(\"a parenthesis\" \"http://yrk.livejournal.com/244690.html\" \"Elegant weapons. For a more... civilized age.\" \"http://www.smbc-comics.com/index.php?id=2491\")")) nil]
["ParenMatching" nil nil nil nil nil nil ((timestamp . "2012-01-31") (notes . "(\"redirect ParenthesisMatching\")")) nil]
["parens" nil nil nil nil nil nil ((timestamp . "2007-12-09") (notes . "(\"redirect matchparen\")")) nil]
["parenscrippt" nil nil nil nil nil nil ((timestamp . "2011-06-25") (notes . "(\"a small lispy language that can be compiled to JavaScript. It also comes with an embedded CSS representation in Lisp. This simplifies the development of web applications in Lisp by allowing the Lisp programmer to write all the documents in Lisp syntax. This way, HTML pages, CSS files and JavaScript code can be generated with the full power of Lisp and its macros. http://common-lisp.net/project/parenscript/\")")) nil]
["parentdirectory" nil nil nil nil nil nil ((timestamp . "2004-02-06") (notes . "(\"(file-name-directory (directory-file-name dir)) - an Evil Hack!\")")) nil]
["parindent" nil nil nil nil nil nil ((timestamp . "2010-12-31") (notes . "(\"Do not remove the indentation unless you know what you're doing. See http://www.tex.ac.uk/cgi-bin/texfaq2html?label=parskip\")")) nil]
["parkinsons-law" nil nil nil nil nil nil ((timestamp . "2012-03-20") (notes . "(\"\\\"Work expands to fill the time available for its completion.\\\"\")")) nil]
["parrot" nil nil nil nil nil nil ((timestamp . "2006-01-26") (notes . "(\"at http://archive.develooper.com/cvs-parrot@perl.org/msg01617.html\" \"http://www.parrotcode.org/\")")) nil]
["parsec" nil nil nil nil nil nil ((timestamp . "2003-03-14") (notes . "(\"a free monadic parser combinator library for Haskell at http://www.cs.uu.nl/~daan/parsec.html\")")) nil]
["parsing" nil nil nil nil nil nil ((timestamp . "2006-02-04") (notes . "(\"the meting out of inhibitions.\")")) nil]
["parskip" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package that helps alleviate layout untidiness brought by unwise fiddling with \\\\parskip and \\\\parindent. It is not a substitute for a properly-designed class. http://ctan.org/pkg/parskip\")")) nil]
["parted" nil nil nil nil nil nil ((timestamp . "2004-11-18") (notes . "(\"GNU Parted, a program for creating, destroying, resizing, checking and copying partitions, and the file systems on them.\" \"http://www.gnu.org/software/parted/parted.html\")")) nil]
["partitioneditor" nil nil nil nil nil nil ((timestamp . "2004-11-18") (notes . "(\"redirect parted\")")) nil]
["party" nil nil nil nil nil nil ((timestamp . "2012-08-21") (notes . "(\"http://www.youtube.com/watch?v=u3kAmQ8KifY\" \"\\\"I came 2 party and you came 2 party so why don't we party together?\\\"\" \"PARRRTYYYYYYY!!!!!!\" \"the name of an occasion, the meaning of which varies with the class of those attending\")")) nil]
["pas" nil nil nil nil nil nil ((timestamp . "2012-02-15") (notes . "(\"Programmer avec Scheme by Jacques Chazarain\")")) nil]
["passwd" nil nil nil nil nil nil ((timestamp . "2012-11-03") (notes . "(\"lisp (say \\\"Changing password for root.\\\\n(current) UNIX password:\\\")\")")) nil]
["password" nil nil nil nil nil nil ((timestamp . "2012-11-03") (notes . "(\"lisp (if (zerop (random 10)) \\\"/me shamefully admits to using hunter2\\\" \\\"NO! I'm not telling!\\\")\")")) nil]
["paste" nil nil nil nil nil nil ((timestamp . "2014-02-13") (notes . "(\"Please do not paste multiple lines of text into the channel. Use http://pastebin.tlhiv.org or some other pastebin that doesn't add unnecessary lines or similar, i.e. please don't use pastebin.com\")")) nil]
["pastebin" nil nil nil nil nil nil ((timestamp . "2014-09-22") (notes . "(\"http://pastebin.tlhiv.org/\")")) nil]
["pastebin.ca" nil nil nil nil nil nil ((timestamp . "2008-08-23") (notes . "(\"http://www.pastebin.ca/\")")) nil]
["pastebin.com" nil nil nil nil nil nil ((timestamp . "2013-12-19") (notes . "(\"the worst pastebin. Don't use it.\" \"use http://paste.lisp.org/ instead\" \"or https://gist.github.com/ or http://codepad.org/\")")) nil]
["pastebot" nil nil nil nil nil nil ((timestamp . "2006-06-28") (notes . "(\"redirect lisppaste\")")) nil]
["pat" nil nil nil nil nil nil ((timestamp . "2013-01-12") (notes . "(\"lisp (say (format \\\"/me pats %s patronisingly on the head.\\\" (car lispargs)))\")")) nil]
["patch" nil nil nil nil nil nil ((timestamp . "2012-09-01") (notes . "(\"https://savannah.gnu.org/projects/patch/\")")) nil]
["patches" nil nil nil nil nil nil ((timestamp . "2012-03-01") (notes . "(\"noecho we don't need no stinkin' patches!\")")) nil]
["patent" nil nil nil nil nil nil ((timestamp . "2012-10-29") (notes . "(\"redirect patents\")")) nil]
["patents" nil nil nil nil nil nil ((timestamp . "2013-09-24") (notes . "(\"patents should not be confused with copyrights.. the latter are fine.. but today's patent-system is bad, very bad...\" \"are bad because politician's like them. and the people who pay the polician's.\" \"water and fresh air are bad for similar reasons\" \"http://patentabsurdity.com/\")")) nil]
["path-on-os-x" nil nil nil nil nil nil ((timestamp . "2011-02-22") (notes . "(\"http://tinyurl.com/4h33t3t\")")) nil]
["patron" nil nil nil nil nil nil ((timestamp . "2010-05-16") (notes . "(\"\\\"I'm on Patron Tequila, I'm drunk on margaritas. I'm on Patron Tequila, me and my mamacita.\\\"\" \"http://www.youtube.com/watch?v=5FhEKAzSprE\")")) nil]
["patware" nil nil nil nil nil nil ((timestamp . "2003-01-10") (notes . "(\"redirect patrickanderson\")")) nil]
["PaulBourguignon" nil nil nil nil nil nil ((timestamp . "2004-11-19") (notes . "(\"at http://www.informatimago.com/\")")) nil]
["PAX" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Portable Archive Exchange\")")) nil]
["pbbuttonsd" nil nil nil nil nil nil ((timestamp . "2006-04-09") (notes . "(\"an ease way to manage your ibook or pbook keys\")")) nil]
["pbjournal" nil nil nil nil nil nil ((timestamp . "2005-09-28") (notes . "(\"e1f's powerbook journal http://www.ee.ryerson.ca/~elf/powerbook/\")")) nil]
["pbr" nil nil nil nil nil nil ((timestamp . "2012-07-24") (notes . "(\"pabst blue ribbon\" \"the drink of champion-level hipsters across North America --- not that they really care, of course.\" \"red necks, white socks, and blue ribbon\")")) nil]
["pbt" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"profit before tax\")")) nil]
["pbuh" nil nil nil nil nil nil ((timestamp . "2011-06-24") (notes . "(\"Peace be upon him (a Muslim honourific)\")")) nil]
["pcap" nil nil nil nil nil nil ((timestamp . "2007-04-18") (notes . "(\"a packet-sniffer api; see http://www.tcpdump.org/pcap.htm\")")) nil]
["pcase" nil nil nil nil nil nil ((timestamp . "2013-06-21") (notes . "(\"an ML-style pattern-matching macro for Elisp\" \"(info \\\"(elisp) Pattern matching case statement\\\")\")")) nil]
["pch" nil nil nil nil nil nil ((timestamp . "2006-06-09") (notes . "(\"PacificCoastHighway\")")) nil]
["PCI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Peripheral Component Interconnect\")")) nil]
["PCL" nil nil nil nil nil nil ((timestamp . "2008-06-28") (notes . "(\"Practical Common Lisp, a gratis introductory CL textbook <http://gigamonkeys.com/book/>\" \"Parrot Common Lisp, a CL system for the Parrot virtual machine.\" \"Printer Control Language, used by printers too cheap to implement PostScript.\")")) nil]
["pcloadletter" nil nil nil nil nil nil ((timestamp . "2007-05-31") (notes . "(\"noecho What the f*ck does that mean\")")) nil]
["PCMCIA" nil nil nil nil nil nil ((timestamp . "2010-10-19") (notes . "(\"short for Personal Computer Memory Card International Association\" \"People Cannot Memorise Computer Industry Acronyms\")")) nil]
["pcmpl-ack.el" nil nil nil nil nil nil ((timestamp . "2012-09-27") (notes . "(\"https://github.com/leoliu/ack-el/blob/master/pcmpl-ack.el\")")) nil]
["pcomplete" nil nil nil nil nil nil ((timestamp . "2002-11-14") (notes . "(\"redirect programmablecompletion\")")) nil]
["pconsole" nil nil nil nil nil nil ((timestamp . "2005-07-15") (notes . "(\"redirect clusterssh\")")) nil]
["PD" nil nil nil nil nil nil ((timestamp . "2008-05-29") (notes . "(\"Public Domain\")")) nil]
["PDC" nil nil nil nil nil nil ((timestamp . "2012-10-05") (notes . "(\"primary domain controller\")")) nil]
["pde" nil nil nil nil nil nil ((timestamp . "2015-05-10") (notes . "(\"partial differential equation\")")) nil]
["pdf" nil nil nil nil nil nil ((timestamp . "2011-05-10") (notes . "(\"see doc-view\" \"Viewers: evince, gpdf, xpdf, kpdf, gv, scribus ,scribe, etc.\" \"See: flpsed, a WYSIWIG postscript editor, can let you fill in pdf's after converting to ps\" \"See also pdftohtml, pdftoipe (which are also names of the respective debian packages)\" \"For conversions to pdf from images, also see sam2p\" \"Xfig could also be used for pdf-ish editing.. though flpsed really rocks\" \"See also scribus, kword (yes, it has a good import pdf+exit+export functionality)\" \"See also kpdf (>= 3.4) for some fun pdf manipulation\" \"See also gimp.\")")) nil]
["pdfpages" nil nil nil nil nil nil ((timestamp . "2016-04-14") (notes . "(\"a package to include complete documents (or selected pages) into the output. It can optionally scale the input to put multiple pages onto one. Documentation and source code can be found at http://www.ctan.org/pkg/pdfpages\")")) nil]
["pdfspec" nil nil nil nil nil nil ((timestamp . "2015-09-24") (notes . "(\"http://tex.stackexchange.com/questions/11769/box-border-lines-not-showing-properly-on-pdf\")")) nil]
["pdftricks" nil nil nil nil nil nil ((timestamp . "2007-04-24") (notes . "(\"pstricks for pdflatex\" \"available at http://www.ctan.org/tex-archive/help/Catalogue/entries/pdftricks.html\")")) nil]
["pdfversions" nil nil nil nil nil nil ((timestamp . "2009-12-03") (notes . "(\"for xetex to generate pdf 1.5 use (thx to ngirard): xe[la]tex -output-driver=\\\"xdvipdfmx -V 5\\\" filename.tex\")")) nil]
["PDP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Page Descriptor Page\")")) nil]
["pds" nil nil nil nil nil nil ((timestamp . "2011-08-09") (notes . "(\"pollical disfunction syndrome\")")) nil]
["PE" nil nil nil nil nil nil ((timestamp . "2013-01-07") (notes . "(\"https://en.wikipedia.org/wiki/Progressive_enhancement\")")) nil]
["peace" nil nil nil nil nil nil ((timestamp . "2013-02-14") (notes . "(\"noecho \\\"Why can't we all just get along?\\\" \\\"Because most of us are assholes, little buddy.\\\"\")")) nil]
["peanuts" nil nil nil nil nil nil ((timestamp . "2013-04-18") (notes . "(\"noecho \\\"If you pay peanuts, you get monkeys.\\\"\")")) nil]
["pear" nil nil nil nil nil nil ((timestamp . "2012-04-08") (notes . "(\"PHP Extension and Application Repository -- http://pear.php.net/\")")) nil]
["pebble" nil nil nil nil nil nil ((timestamp . "2013-07-12") (notes . "(\"a smart-watch and related platform which works complementary with one's phone over bluetooth.\" \"http://getpebble.com\")")) nil]
["pebcak" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"Problem Exists Between Chair And Keyboard\")")) nil]
["pebkac" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"Problem Exists Between Keyboard And Chair\")")) nil]
["pecl" nil nil nil nil nil nil ((timestamp . "2010-08-26") (notes . "(\"PHP's extension bull shit written in C\")")) nil]
["pedals" nil nil nil nil nil nil ((timestamp . "2013-02-06") (notes . "(\"http://www.kinesis-ergo.com/fs-savant-elite.htm\" \"it was half-seriously suggested that the extra [modifier] keys be implemented as pedals; typing on such a keyboard would be very much like playing a full pipe organ (http://www.jargon.net/jargonfile/d/doublebucky.html)\")")) nil]
["pedant" nil nil nil nil nil nil ((timestamp . "2007-01-02") (notes . "(\"see ,twb\")")) nil]
["pedant-fix" nil nil nil nil nil nil ((timestamp . "2013-07-21") (notes . "(\"being helpful can successfully be avoided by quibbling about the terminology used by the supplicant.\")")) nil]
["pee" nil nil nil nil nil nil ((timestamp . "2013-11-15") (notes . "(\"redirect moreutils\")")) nil]
["peerguardian" nil nil nil nil nil nil ((timestamp . "2008-02-04") (notes . "(\"free and open source programs developed by Phoenix Labs. They are capable of blocking incoming and outgoing connections based on IP blocklists. The system is also capable of blocking advertising, spyware, government and educational ranges, depending upon user preferences.\")")) nil]
["peg" nil nil nil nil nil nil ((timestamp . "2010-10-10") (notes . "(\"Parsing Expression Grammar (http://en.wikipedia.org/wiki/Parsing_expression_grammar)\")")) nil]
["peito" nil nil nil nil nil nil ((timestamp . "2006-02-12") (notes . "(\"lo que me acabo de tirar\")")) nil]
["penny-arcade" nil nil nil nil nil nil ((timestamp . "2005-06-23") (notes . "(\"at http://www.penny-arcade.com\")")) nil]
["Pentavirate" nil nil nil nil nil nil ((timestamp . "2011-06-23") (notes . "(\"noecho The Queen, the Vatican, the Gettys, the Rothschilds, and Colonel Sanders before he went tets-up. Oh, I hated the Colonel with his wee beady eyes! And that smug look on his face, \\\"Oh, you're gonna buy my chicken! Ohhhhh!\\\"\" \"It's a well known fact, Sonny Jim, that there's a secret society of the five wealthiest people in the world, known as the Pentavirate, who run everything in the world, including the newspapers, and meet tri-annually at a secret country mansion in Colorado, known as The Meadows.\")")) nil]
["PeopleAggregator" nil nil nil nil nil nil ((timestamp . "2004-03-31") (notes . "(\"an open source alternative to orkut, friendster, etc., at http://peopleaggregator.com/\" \"at http://slashdot.org/article.pl?sid=04/03/30/2333258&mode=thread&tid=126&tid=185&tid=95\")")) nil]
["percent" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"%. \\\"When LaTeX encounters a % character while processing an input file, it ignores the rest of the current line, the line break, and all whitespace at the beginning of the next line.\\\" --LaTeX Wikibook\")")) nil]
["perfect-martini" nil nil nil nil nil nil ((timestamp . "2012-11-11") (notes . "(\"noecho 1) Pour gin, vermouth and olives into the trash can where they belong. 2) Drink whiskey.\")")) nil]
["perforce" nil nil nil nil nil nil ((timestamp . "2012-04-27") (notes . "(\"a crappy windowsy scm system that you can read about at http://www.perforce.com\")")) nil]
["perl" nil nil nil nil nil nil ((timestamp . "2009-08-04") (notes . "(\"redirect perllanguage\")")) nil]
["perl6" nil nil nil nil nil nil ((timestamp . "2007-09-07") (notes . "(\"http://www.ozonehouse.com/mark/blog/code/PeriodicTable.pdf\" \"http://otierney.net/images/perl6.gif\")")) nil]
["perldb" nil nil nil nil nil nil ((timestamp . "2011-11-01") (notes . "(\"the source-level debugger for Perl\")")) nil]
["perlis" nil nil nil nil nil nil ((timestamp . "2011-09-09") (notes . "(\"Alan Perlis, see his Epigrams In Programming at http://www.cs.yale.edu/quotes.html\")")) nil]
["personal-homie-yow" nil nil nil nil nil nil ((timestamp . "2013-10-21") (notes . "(\"https://github.com/ijp/homie-yow\")")) nil]
["personalities" nil nil nil nil nil nil ((timestamp . "2011-08-12") (notes . "(\"zippy, stallman, spook, lebowski, nixon, yoda, ayn rand, kissinger\")")) nil]
["PersonalOT" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?PersonalOT\" \"at http://www.gnufans.net/fsedu.pl?PersonalOT\")")) nil]
["persp" nil nil nil nil nil nil ((timestamp . "2009-01-17") (notes . "(\"redirect perspective\")")) nil]
["perspective" nil nil nil nil nil nil ((timestamp . "2009-01-17") (notes . "(\"A mode that enables wmii-like perspectives which have custom window configurations and their own list of buffers.\" \"http://github.com/nex3/perspective-el/tree/master\" \"git repo: git://github.com/nex3/perspective-el.git\")")) nil]
["perspective-el" nil nil nil nil nil nil ((timestamp . "2009-01-17") (notes . "(\"redirect perspective\")")) nil]
["perspective.el" nil nil nil nil nil nil ((timestamp . "2009-01-17") (notes . "(\"redirect perspective\")")) nil]
["perth" nil nil nil nil nil nil ((timestamp . "2013-11-07") (notes . "(\"antipodal to boston\")")) nil]
["pessimism" nil nil nil nil nil nil ((timestamp . "2006-02-01") (notes . "(\"a label idealists gives to realists.\")")) nil]
["petards" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"noecho HOIST HIM!!\")")) nil]
["PeterMinten" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?PeterMinten\")")) nil]
["petz" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"people for ethical treatment of zombies\")")) nil]
["pewpewpew" nil nil nil nil nil nil ((timestamp . "2012-10-31") (notes . "(\"noecho My eye!\")")) nil]
["pf" nil nil nil nil nil nil ((timestamp . "2007-03-04") (notes . "(\"OpenBSD's Packet Filter, http://openbsd.org/faq/pf/index.html\")")) nil]
["pf-guide" nil nil nil nil nil nil ((timestamp . "2007-03-03") (notes . "(\"lisp \\\"The PF guide is at: http://www.openbsd.org/faq/pf\\\"\")")) nil]
["PFO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Please Fuck Off\")")) nil]
["PFSLF" nil nil nil nil nil nil ((timestamp . "2010-07-20") (notes . "(\"the People's Free Software Liberation Front\")")) nil]
["PFY" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Pimply Faced Youth\")")) nil]
["PG" nil nil nil nil nil nil ((timestamp . "2009-07-04") (notes . "(\"Paul Graham\" \"http://www.paulgraham.com/\" \"the Lisp community's version of ESR\" \"http://www.idlewords.com/2005/04/dabblers_and_blowhards.htm\" \"uses vi http://paul.graham.usesthis.com/\")")) nil]
["pgf" nil nil nil nil nil nil ((timestamp . "2010-01-29") (notes . "(\"try pgfmanual, pgfkeys\")")) nil]
["pgfkeys" nil nil nil nil nil nil ((timestamp . "2010-01-29") (notes . "(\"!l \\\\makeatletter \\\\tikz \\\\pgfscope \\\\pgfkeys{/tikz/.cd, dashed, draw=red!20}\\\\tikz@options\\\\tikz@mode \\\\pgfpathmoveto{\\\\pgfpoint{0pt}{0pt}}\\\\pgfpathlineto{\\\\pgfpoint{1cm}{1cm}} \\\\iftikz@mode@draw \\\\pgfusepath{stroke} \\\\fi \\\\endpgfscope;\")")) nil]
["pgfmanual" nil nil nil nil nil nil ((timestamp . "2015-09-29") (notes . "(\"http://mirrors.ctan.org/graphics/pgf/base/doc/pgfmanual.pdf\")")) nil]
["pgfpages" nil nil nil nil nil nil ((timestamp . "2011-10-14") (notes . "(\"a packate to put multiple pages side by side on one sheet.\" \"see ,,pgfmanual for details on usage\" \"to do a \\\"physical\\\" page break, insert this sequence: \\\\clearpage\\\\pgfshipoutphysicalpage\\\\global\\\\pgf@currentshipout=\\\\pgf@firstshipout\\\\relax\")")) nil]
["pgfplots" nil nil nil nil nil nil ((timestamp . "2016-01-25") (notes . "(\"a package to draw plots of data and functions: http://mirrors.ctan.org/graphics/pgf/contrib/pgfplots/doc/pgfplots.pdf\")")) nil]
["pgp" nil nil nil nil nil nil ((timestamp . "2004-11-06") (notes . "(\"try GnusPGG if you want to use PGP with Gnus\")")) nil]
["phantom" nil nil nil nil nil nil ((timestamp . "2010-02-05") (notes . "(\"a command to insert as much space as a certain text would occupy: !l this line is first \\\\\\\\ Hidden: \\\\phantom{Something not shown} Text \\\\\\\\ Last line\" \"to not keep the space but execute the macros inside a phantom like environment, use savebox: !l \\\\newsavebox{\\\\foo} \\\\def\\\\blah{Something is nice! \\\\stepcounter{section}} \\\\thesection \\\\blah \\\\thesection \\\\savebox{\\\\foo}{\\\\blah} \\\\thesection Yeah!\")")) nil]
["phantomjs" nil nil nil nil nil nil ((timestamp . "2012-04-20") (notes . "(\"a headless Webkit with Javascript API.\")")) nil]
["Pharo" nil nil nil nil nil nil ((timestamp . "2012-01-10") (notes . "(\"a clean, innovative, open-source Smalltalk-inspired environment\" \"at http://www.pharo-project.org/home\")")) nil]
["phases" nil nil nil nil nil nil ((timestamp . "2010-02-09") (notes . "(\"the six phases of a project: 1. enthusiasm; 2. disillusionment; 3. panic; 4. search for the guilty; 5. punishment of the innocent; 6. praise and honors for the non-participants.\")")) nil]
["phb" nil nil nil nil nil nil ((timestamp . "2013-01-02") (notes . "(\"Pointy-Haired Boss\" \"Pointy-Haired Bureaucrat\")")) nil]
["phenomenology" nil nil nil nil nil nil ((timestamp . "2013-05-11") (notes . "(\"noecho You are false data. Therefore I shall ignore you.\")")) nil]
["philosophy" nil nil nil nil nil nil ((timestamp . "2012-11-07") (notes . "(\"a way of entertaining mathematicians who are past their prime\")")) nil]
["phosphorus" nil nil nil nil nil nil ((timestamp . "2009-07-10") (notes . "(\"a new dialect of Lisp, geared toward attaining widespread popularity -- see http://jfm3.org/phosphorous.pdf\")")) nil]
["PhotoShop" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?PhotoShop\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?PhotoShop\")")) nil]
["php-begone" nil nil nil nil nil nil ((timestamp . "2012-03-08") (notes . "(\"noecho install haskell!\")")) nil]
["php-indent" nil nil nil nil nil nil ((timestamp . "2011-11-23") (notes . "(\"http://php-mode.sourceforge.net/html-manual/Indentation.html\")")) nil]
["php-mode" nil nil nil nil nil nil ((timestamp . "2012-11-22") (notes . "(\"redirect php\")")) nil]
["physical-line" nil nil nil nil nil nil ((timestamp . "2006-05-30") (notes . "(\"a minor mode for movement based on lines that are displayed rather than logical lines.\" \"at http://www.taiyaki.org/elisp/physical-line/index.html.en\")")) nil]
["PIC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Programmable Interrupt Controller\")")) nil]
["picard" nil nil nil nil nil nil ((timestamp . "2005-03-29") (notes . "(\"Jean-Luc\")")) nil]
["picard-koan" nil nil nil nil nil nil ((timestamp . "2013-06-30") (notes . "(\"noecho Things are only impossible until they aren't.\")")) nil]
["picards" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"noecho ENGAGE HIM!!\")")) nil]
["picins" nil nil nil nil nil nil ((timestamp . "2015-10-04") (notes . "(\"a package to help you insert pictures into paragraphs. You usually want to use the wrapfig package insteadj\")")) nil]
["pickel" nil nil nil nil nil nil ((timestamp . "2010-09-30") (notes . "(\"noecho Pickel is an elisp object serialization package\" \"http://github.com/tlh/pickel.el\")")) nil]
["picnic" nil nil nil nil nil nil ((timestamp . "2009-02-25") (notes . "(\"problem in chair, not in computer\")")) nil]
["pico" nil nil nil nil nil nil ((timestamp . "2002-09-04") (notes . "(\"NON-FREE... nano is a free replacement\")")) nil]
["pics" nil nil nil nil nil nil ((timestamp . "2011-10-19") (notes . "(\"noecho pics or it didn't happen\")")) nil]
["PID" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Process Id\")")) nil]
["Pidgin" nil nil nil nil nil nil ((timestamp . "2007-05-26") (notes . "(\"the new name for the project that *was* called GAIM (it's name changed).\")")) nil]
["PierreGaston" nil nil nil nil nil nil ((timestamp . "2003-06-12") (notes . "(\"redirect pgas\")")) nil]
["piespy" nil nil nil nil nil nil ((timestamp . "2006-05-26") (notes . "(\"an IRC bot that monitors a set of IRC channels. It uses a simple set of heuristics to infer relationships between pairs of users. See http://www.jibble.org/piespy/\")")) nil]
["piet" nil nil nil nil nil nil ((timestamp . "2013-03-17") (notes . "(\"a programming language in which programs look like abstract paintings.\" \"http://www.dangermouse.net/esoteric/piet.html\")")) nil]
["pika" nil nil nil nil nil nil ((timestamp . "2004-08-09") (notes . "(\"the new guile\")")) nil]
["pilchards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho SEMOLINA HIM!!\")")) nil]
["pillage" nil nil nil nil nil nil ((timestamp . "2011-05-02") (notes . "(\"redirect rampage\")")) nil]
["pim" nil nil nil nil nil nil ((timestamp . "2003-10-05") (notes . "(\"redirect PersonalInformationManager\")")) nil]
["pine" nil nil nil nil nil nil ((timestamp . "2003-03-10") (notes . "(\"NON-FREE .. mutt is a free pine-replacement\" \"not no pain\")")) nil]
["ping" nil nil nil nil nil nil ((timestamp . "2014-03-19") (notes . "(\"noecho pong\")")) nil]
["pinkfloyd" nil nil nil nil nil nil ((timestamp . "2004-03-21") (notes . "(\"lisp (format \\\"Pink Floyd - %s\\\" (random-choose (cdr (split-string (describe \\\"pinkfloyd-songs\\\") \\\"\\\\n?\\\\n?\\\\\\\\[[0-9]\\\\\\\\] \\\"))))\")")) nil]
["pinkfloyd-songs" nil nil nil nil nil nil ((timestamp . "2007-05-19") (notes . "(\"Another Brick In The Wall\" \"Julia Dream\" \"Careful With That Axe Eugene\")")) nil]
["pinkparasol" nil nil nil nil nil nil ((timestamp . "2010-04-25") (notes . "(\"a mean minded bitch\")")) nil]
["pinkpony" nil nil nil nil nil nil ((timestamp . "2012-02-14") (notes . "(\"tron with ponies\" \"https://code.google.com/p/pink-pony/\")")) nil]
["pinning" nil nil nil nil nil nil ((timestamp . "2003-01-26") (notes . "(\"at http://gnufans.net/~deego/pub/debian/pinning/\")")) nil]
["PIO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Programmed Input/Output\")")) nil]
["pip" nil nil nil nil nil nil ((timestamp . "2012-07-13") (notes . "(\"pip installs packages http://pypi.python.org/pypi/pip/\")")) nil]
["pipe" nil nil nil nil nil nil ((timestamp . "2004-06-02") (notes . "(\"lisp (format (random-choose (list \\\"/me puts some of %s's favorite into his pipe.\\\" \\\"/me stuffs some of %s's material into his smoke consumption device\\\" \\\"/me vigorously thrusts some stuff down a pipe, and hands it to %s\\\")) nick)\")")) nil]
["pipelines" nil nil nil nil nil nil ((timestamp . "2006-04-16") (notes . "(\"man bash :P\")")) nil]
["pipemill" nil nil nil nil nil nil ((timestamp . "2013-07-26") (notes . "(\"a form of shell pipeline like ls | while read line ; echo line ; done\")")) nil]
["pirates" nil nil nil nil nil nil ((timestamp . "2012-08-01") (notes . "(\"a lord of the sea who plunders the booty of ships in the night, and is vastly superior to ninjas.\")")) nil]
["pisanki" nil nil nil nil nil nil ((timestamp . "2006-06-29") (notes . "(\"eggs decorated in a traditional Ukrainian/Polish style\")")) nil]
["pisg" nil nil nil nil nil nil ((timestamp . "2003-07-08") (notes . "(\"an IRC channel statics generator which can use \\\"logs\\\" generated in many different formats for its input\")")) nil]
["PITA" nil nil nil nil nil nil ((timestamp . "2011-12-26") (notes . "(\"short for Pain In The Ass\" \"a type of flat bread\")")) nil]
["pitmanual" nil nil nil nil nil nil ((timestamp . "2011-08-17") (notes . "(\"at http://maclisp.info/pitmanual/\")")) nil]
["pitn" nil nil nil nil nil nil ((timestamp . "2007-02-28") (notes . "(\"pain in the neck\")")) nil]
["pizzasauce-fix" nil nil nil nil nil nil ((timestamp . "2013-10-30") (notes . "(\"redirect twb-fix\")")) nil]
["pjb-fix" nil nil nil nil nil nil ((timestamp . "2011-12-05") (notes . "(\"http://groups.google.com/group/comp.lang.lisp/msg/4c95766a8bdda347\")")) nil]
["pjb-test" nil nil nil nil nil nil ((timestamp . "2006-04-02") (notes . "(\"test\")")) nil]
["PKSP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Pound Keys And Spew Profanity\")")) nil]
["pl" nil nil nil nil nil nil ((timestamp . "2005-11-21") (notes . "(\"an abbreviation for Programming Language\" \"the TLD for Poland.\" \"the file extension for Prolog source code, as well as a common file extension for Perl source code (but use .plx for Perl dammit)\")")) nil]
["PL/0" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"similar to but much simpler than the general-purpose programming language Pascal, intended as an educational programming language.\" \"a horrible language, even for studying compilers\")")) nil]
["PL/1" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"a procedural, imperative computer programming language designed for scientific, engineering, business and systems programming applications. It has been used by various academic, commercial and industrial organizations since it was introduced in the 1960s.\")")) nil]
["placards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho AFFICHER L'!!\")")) nil]
["placeins" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package keeping floats 'in their place', preventing floating past a \\\\FloatBarrier command. [section] option redefines \\\\section to insert \\\\FloatBarrier at the beginning. http://ctan.org/pkg/placeins\")")) nil]
["places" nil nil nil nil nil nil ((timestamp . "2012-03-31") (notes . "(\"cali\" \"sweden\" \"tokyo\" \"amsterdam\" \"moscow\" \"cancun\" \"omaha\" \"bloomington\" \"taiwan\" \"milwaukee\" \"detroit\" \"NYC\" \"dallas\" \"las vegas\" \"toronto\" \"manila\" \"finland\" \"mongolia\" \"soviet russia\" \"africa\" \"eden prairie\" \"south saint paul\" \"madison\" \"toledo\" \"florida\" \"CostCo\" \"paris\" \"london\" \"beijing\" \"seoul\" \"seattle\" \"austin\" \"duluth\" \"fargo\" \"new orleans\" \"georgia\" \"mexico\" \"bolivia\" \"cuba\" \"nigeria\" \"iran\" \"yakutsk\" \"montreal\" \"british colombia\" \"romania\" \"albania\" \"rome\" \"czech republic\" \"a missile silo\" \"glasgow\" \"edinburgh\" \"r'yleh\" \"#vim\")")) nil]
["plai" nil nil nil nil nil nil ((timestamp . "2009-01-26") (notes . "(\"Programming Languages: Application and Interpretation at http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/2007-04-26/\")")) nil]
["plan9" nil nil nil nil nil nil ((timestamp . "2005-08-17") (notes . "(\"the new iteration of unix by bell labs; http://www.cs.bell-labs.com/plan9dist/; see http://swtch.com/plan9port/ for a unix port\")")) nil]
["planetccrma" nil nil nil nil nil nil ((timestamp . "2006-04-26") (notes . "(\"http://ccrma.stanford.edu/planetccrma/software/\")")) nil]
["planner-ical-import" nil nil nil nil nil nil ((timestamp . "2008-03-26") (notes . "(\"a program which can import ical files into planner.\" \"http://www.timthelion.com/cgi-bin/blosxom.cgi/Planner-ical-import.html\")")) nil]
["planner-mode" nil nil nil nil nil nil ((timestamp . "2003-03-20") (notes . "(\"redirect PlannerMode\")")) nil]
["plannerdoc" nil nil nil nil nil nil ((timestamp . "2004-12-23") (notes . "(\"planner documentation : http://sacha.free.net.ph/notebook/doc/dev/planner/html/planner.html\" \"'makeinfo planner.texi' in your planner directory\" \"or (info \\\"PlannerMode\\\") if using the Debian package\")")) nil]
["plannerlove" nil nil nil nil nil nil ((timestamp . "2005-10-25") (notes . "(\"http://plannerlove.com\")")) nil]
["plannerquickstart" nil nil nil nil nil nil ((timestamp . "2004-06-06") (notes . "(\"redirect PlannerModeQuickStart\")")) nil]
["Plato" nil nil nil nil nil nil ((timestamp . "2012-03-11") (notes . "(\"\\\"False words are not only evil in themselves, but they infect the soul with evil.\\\" --Plato 428–427 BC\" \"along with aristotle, responsible for poor philosophy throughout the middle ages\")")) nil]
["play-lotto" nil nil nil nil nil nil ((timestamp . "2012-01-25") (notes . "(\"lisp (let* ((balls (number-sequence 1 55)) (n (length lispargs))) (cond ((> n 6) (error \\\"Too many numbers\\\")) ((< n 5) (error \\\"Too few numbers\\\")) ((= 5 n) (error \\\"Missing mega ball\\\")) ((equal lispargs (setq balls (append (nsort (mapcar (lambda (n) (let ((x (elt balls n))) (setq balls (remove x balls)) x)) (mapcar 'random ' (54 53 52 51 50))) '<) (1+ (random 45))))) \\\"You win\\\") (t (format \\\"You lose %S\\\" balls))))\")")) nil]
["playlist" nil nil nil nil nil nil ((timestamp . "2006-05-15") (notes . "(\"http://www.shoutcast.com/sbin/shoutcast-playlist.pls?rn=2659&file=filename.pls Metal Alternative\" \"http://www.shoutcast.com/sbin/shoutcast-playlist.pls?rn=5084&file=filename.pls Blues\" \"http://www.shoutcast.com/sbin/shoutcast-playlist.pls?rn=1029&file=filename.pls Ambient\")")) nil]
["PlayStation" nil nil nil nil nil nil ((timestamp . "2003-08-20") (notes . "(\"at http://ps2linux.diabolus-ex-machina.com/wiki/index.php?PlayStation\")")) nil]
["please" nil nil nil nil nil nil ((timestamp . "2003-05-22") (notes . "(\"unecho No means no!\")")) nil]
["PLIA" nil nil nil nil nil nil ((timestamp . "2006-07-30") (notes . "(\"Programming Languages: Application and Interpretation (http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/)\")")) nil]
["pling" nil nil nil nil nil nil ((timestamp . "2003-10-03") (notes . "(\"noecho plong\")")) nil]
["plink" nil nil nil nil nil nil ((timestamp . "2010-04-07") (notes . "(\"a ssh alternative that comes with putty and used by people on Windows to get tramp to work.\")")) nil]
["plist" nil nil nil nil nil nil ((timestamp . "2006-08-14") (notes . "(\"a \\\"property list,\\\" of the form (key1 val1 key2 val2 ... keyn valn), see also alist\")")) nil]
["plong" nil nil nil nil nil nil ((timestamp . "2003-10-03") (notes . "(\"unecho pling\")")) nil]
["plonk" nil nil nil nil nil nil ((timestamp . "2004-12-20") (notes . "(\"The sound a newbie makes as he falls to the bottom of a kill file\")")) nil]
["plop" nil nil nil nil nil nil ((timestamp . "2003-11-30") (notes . "(\"plop !\")")) nil]
["plot" nil nil nil nil nil nil ((timestamp . "2012-11-20") (notes . "(\"lisp (format \\\"The %s is %s %s %s in %s\\\" (random-choose-term \\\"plot-agencies\\\") (random-choose-term \\\"plot-actions\\\") (random-choose-term \\\"plot-adjectives\\\") (random-choose-term \\\"plot-subjects\\\") (random-choose-term \\\"plot-places\\\"))\")")) nil]
["plot-actions" nil nil nil nil nil nil ((timestamp . "2012-11-20") (notes . "(\"hiding\" \"developing\" \"covering up\" \"smuggling\")")) nil]
["plot-adjectives" nil nil nil nil nil nil ((timestamp . "2012-11-20") (notes . "(\"underground\" \"secret\" \"extraterrestrial\" \"black market\")")) nil]
["plot-agencies" nil nil nil nil nil nil ((timestamp . "2012-11-20") (notes . "(\"NSA\" \"USDA\" \"FDA\" \"World Bank\" \"TSA\" \"ATF\")")) nil]
["plot-places" nil nil nil nil nil nil ((timestamp . "2012-11-20") (notes . "(\"Washington\" \"Abu Ghraib\" \"Hoover Dam\" \"Groom Lake\" \"Waco\" \"Vandenberg\")")) nil]
["plot-subjects" nil nil nil nil nil nil ((timestamp . "2012-11-20") (notes . "(\"cocaine\" \"zombies\" \"dinosaurs\" \"clones\" \"chemtrails\" \"plutonium\" \"diamonds\" \"uranium ore\")")) nil]
["pls" nil nil nil nil nil nil ((timestamp . "2013-05-01") (notes . "(\"now Primary lateral sclerosis (PLS) is a rare neuromuscular disease characterized by progressive muscle weakness in the voluntary muscles.\")")) nil]
["PLT" nil nil nil nil nil nil ((timestamp . "2013-03-11") (notes . "(\"a Scheme distribution trying desperately to be a CL distribution\" \"www.plt-scheme.org\" \"now racket-lang.org\" \"an extensible programming language in the scheme family\" \"trying to be a CL distribution in the same way that Python is.\")")) nil]
["plugins" nil nil nil nil nil nil ((timestamp . "2012-05-17") (notes . "(\"redirect plugin\")")) nil]
["PM" nil nil nil nil nil nil ((timestamp . "2013-12-23") (notes . "(\"Prime Minister\" \"Project Manager\" \"noecho take your experiments into /query\")")) nil]
["PMP" nil nil nil nil nil nil ((timestamp . "2011-02-02") (notes . "(\"Portable Music Player, e.g. iRiver, iPod, etc.\")")) nil]
["pnac" nil nil nil nil nil nil ((timestamp . "2005-09-30") (notes . "(\"Project for the New American Century, at http://www.newamericancentury.org\" \"http://www.knife-party.net/movs/barry.mov is concerned with the PNAC's influence...\")")) nil]
["PNG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Persona Non Grata\")")) nil]
["PNP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Plug And Pray\")")) nil]
["poc" nil nil nil nil nil nil ((timestamp . "2012-06-02") (notes . "(\"proof of concept\")")) nil]
["pocoyo" nil nil nil nil nil nil ((timestamp . "2011-06-07") (notes . "(\"beyond\")")) nil]
["pod-mode" nil nil nil nil nil nil ((timestamp . "2004-07-05") (notes . "(\"http://www.cpan.org/authors/id/S/SC/SCHWIGON/pod-mode/\")")) nil]
["podbay" nil nil nil nil nil nil ((timestamp . "2003-06-10") (notes . "(\"lisp (progn \\\"open the podbay doors! now! , hal !! \\\" \\\"I'm sorry Dave, I cannot do that\\\")\")")) nil]
["pods" nil nil nil nil nil nil ((timestamp . "2012-06-28") (notes . "(\"Plain Old Doing Shit, a modern approach to Getting Things Done.\")")) nil]
["POE" nil nil nil nil nil nil ((timestamp . "2013-09-28") (notes . "(\"Power Over Ethernet.\" \"the Perl Object Environment at http://poe.perl.org/?What_POE_Is\" \"http://en.wikipedia.org/wiki/Dr._Strangelove\")")) nil]
["poes-law" nil nil nil nil nil nil ((timestamp . "2013-06-19") (notes . "(\"it is impossible to create a parody of extremism or fundamentalism that someone won't mistake for the real thing\")")) nil]
["poindontcare" nil nil nil nil nil nil ((timestamp . "2011-07-09") (notes . "(\"ignorable idiot who is not worth talking to\")")) nil]
["pointback" nil nil nil nil nil nil ((timestamp . "2009-06-10") (notes . "(\"at http://stud4.tuwien.ac.at/~e0225855/pointback/pointback.html\")")) nil]
["points" nil nil nil nil nil nil ((timestamp . "2012-03-31") (notes . "(\"lisp (roll-dice)\")")) nil]
["poison" nil nil nil nil nil nil ((timestamp . "2003-06-04") (notes . "(\"lisp (concat \\\"A dose of \\\" (random-choose '(\\\"cyanide\\\" \\\"vi\\\" \\\"arsenic\\\" \\\"hemlock\\\" \\\"potassium chloride\\\" \\\"atropine\\\" \\\"strychnine\\\" \\\"botulin\\\" \\\"curare\\\")) \\\".\\\")\")")) nil]
["POLA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Principle Of Least Astonishment\")")) nil]
["poland" nil nil nil nil nil nil ((timestamp . "2006-07-04") (notes . "(\"country in central Europe\" \"country where dodek comes from\")")) nil]
["polipo" nil nil nil nil nil nil ((timestamp . "2013-04-18") (notes . "(\"like squid, but lighter.\" \"it can upgrade connections to 1.1, and it crashes a lot more\")")) nil]
["politeness" nil nil nil nil nil nil ((timestamp . "2011-12-21") (notes . "(\"http://i.imgur.com/kS7uo.jpg\")")) nil]
["political-reply" nil nil nil nil nil nil ((timestamp . "2014-01-08") (notes . "(\"noecho NO!\")")) nil]
["poll" nil nil nil nil nil nil ((timestamp . "2004-08-17") (notes . "(\"Try with a [ comma pollword is also name : reply ]\")")) nil]
["polski" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package that provides tools to typeset documents in Polish using LaTeX2e with Polish fonts (the so-called PL fonts), EC fonts or CM fonts: http://ctan.org/pkg/polski\")")) nil]
["polyglossia" nil nil nil nil nil nil ((timestamp . "2015-01-10") (notes . "(\"a package to help with localization in latex. It helps achieve correct hyphenation, typographical conventions, directiionaly of script and translate documentstrings like \\\\chapter among others. It works with xelatex and lualatex not pdflatex and has several advantages over babel. Code available from http://www.ctan.org/tex-archive/macros/latex/contrib/polyglossia\")")) nil]
["Polymath" nil nil nil nil nil nil ((timestamp . "2003-02-25") (notes . "(\"http://pdg.cecm.sfu.ca/\")")) nil]
["polyp" nil nil nil nil nil nil ((timestamp . "2013-03-24") (notes . "(\"an abnormal growth of tissue projecting from a mucous membrane\")")) nil]
["PON" nil nil nil nil nil nil ((timestamp . "2013-01-23") (notes . "(\"<https://en.wikipedia.org/wiki/Passive_optical_network>, an optical-fiber network configuration\")")) nil]
["pong" nil nil nil nil nil nil ((timestamp . "2005-08-22") (notes . "(\"noecho ping\")")) nil]
["pony" nil nil nil nil nil nil ((timestamp . "2013-06-19") (notes . "(\"i want a pony\")")) nil]
["ponyos" nil nil nil nil nil nil ((timestamp . "2013-09-13") (notes . "(\"my little unix -- http://www.ponyos.org/\")")) nil]
["poopnugget" nil nil nil nil nil nil ((timestamp . "2012-02-14") (notes . "(\"the new hunter2\")")) nil]
["POP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Post Office Protocol\")")) nil]
["pop3" nil nil nil nil nil nil ((timestamp . "2005-10-09") (notes . "(\"is a protocol to fetch mail from a server\" \"see GettingMail for info on how to fetch it\")")) nil]
["popcorn" nil nil nil nil nil nil ((timestamp . "2013-08-20") (notes . "(\"noecho /me settles back into the couch and digs into a big bowl of popcorn\")")) nil]
["POPJ" nil nil nil nil nil nil ((timestamp . "2004-12-04") (notes . "(\"a PDP-10 instruction that pops a return address off of the stack and jumps to it.\")")) nil]
["popsicle" nil nil nil nil nil nil ((timestamp . "2009-07-09") (notes . "(\"an avid movie fan\")")) nil]
["PornView" nil nil nil nil nil nil ((timestamp . "2002-12-10") (notes . "(\"at http://pornview.sourceforge.net/\")")) nil]
["portage" nil nil nil nil nil nil ((timestamp . "2013-02-19") (notes . "(\"gentoo's package manager\")")) nil]
["Portal" nil nil nil nil nil nil ((timestamp . "2012-09-26") (notes . "(\"a 2007 puzzle platformer by Valve\")")) nil]
["pos" nil nil nil nil nil nil ((timestamp . "2004-11-07") (notes . "(\"piece of shit\" \"point of sale\")")) nil]
["POSIX" nil nil nil nil nil nil ((timestamp . "2011-06-25") (notes . "(\"short for Portable Operating System Interface [For] Unix\" \"http://www.stallman.org/articles/posix.html\")")) nil]
["possession" nil nil nil nil nil nil ((timestamp . "2005-03-21") (notes . "(\"That part of what you call \\\"your own\\\" which you actively use yourself. A computer, your toothbrush, your bed, etc. (cf. http://www.infoshop.org/faq/secB3.html#secb31)\")")) nil]
["possible" nil nil nil nil nil nil ((timestamp . "2004-02-04") (notes . "(\"noecho No, it's trivial!\")")) nil]
["POST" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Power On Self Test\")")) nil]
["postcards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho ADDRESS HIM!!\")")) nil]
["postel" nil nil nil nil nil nil ((timestamp . "2006-05-15") (notes . "(\"Postel's law says to ``be conservative in what you do, be liberal in what you accept from others''\" \"a robustness principle originating in RFC 793\" \"at http://www.usemod.com/cgi-bin/mb.pl?PostelsLaw\")")) nil]
["poster" nil nil nil nil nil nil ((timestamp . "2010-05-20") (notes . "(\"as possible way to typeset posters: ,,poster-basic and ,,poster-example\")")) nil]
["poster-example" nil nil nil nil nil nil ((timestamp . "2012-09-30") (notes . "(\"http://users.physik.fu-berlin.de/~mgoerz/blog/2009/03/poster-for-dpg-conference/\" \"http://dw.tug.org/pracjourn/2010-2/rogerio/rogerio.pdf\")")) nil]
["poster-umbc" nil nil nil nil nil nil ((timestamp . "2012-09-30") (notes . "(\"http://www.math.umbc.edu/~rouben/umbcposter/\")")) nil]
["potato" nil nil nil nil nil nil ((timestamp . "2012-09-28") (notes . "(\"noecho I can mapcar potato!\")")) nil]
["POTS" nil nil nil nil nil nil ((timestamp . "2013-10-03") (notes . "(\"Plain Old Telephone Service <http://en.wikipedia.org/wiki/Public_switched_telephone_network>\")")) nil]
["pottytrainedp" nil nil nil nil nil nil ((timestamp . "2012-05-22") (notes . "(\"lisp (not (equal \\\"rudybot\\\" (if lispargs (stringify-symbol-list lispargs) nick)))\")")) nil]
["pov-ray" nil nil nil nil nil nil ((timestamp . "2004-11-18") (notes . "(\"NONFREE\")")) nil]
["povray" nil nil nil nil nil nil ((timestamp . "2004-11-18") (notes . "(\"redirect pov-ray\")")) nil]
["POW" nil nil nil nil nil nil ((timestamp . "2006-02-09") (notes . "(\"an abbreviation for prisoner of war.\")")) nil]
["powerline" nil nil nil nil nil nil ((timestamp . "2013-10-28") (notes . "(\"fancy modeline with separators and centered and right aligned parts. like vim-powerline, but doesn't require font patching or python.\" \"https://github.com/milkypostman/powerline\")")) nil]
["PowerPoint" nil nil nil nil nil nil ((timestamp . "2013-04-24") (notes . "(\"apt-get install latex-beamer\" \"see org-present\" \"pacman -S texlive-most\")")) nil]
["pp&e" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"property, plant and equipment\")")) nil]
["PPD" nil nil nil nil nil nil ((timestamp . "2012-09-05") (notes . "(\"the cups printer driver format (magical postscript crap)\")")) nil]
["ppl" nil nil nil nil nil nil ((timestamp . "2006-05-10") (notes . "(\"pretty please\" \"people\")")) nil]
["PPP" nil nil nil nil nil nil ((timestamp . "2014-01-31") (notes . "(\"short for Point-To-Point Protocol\" \"please please please: http://www.phabricator.com/docs/phabricator/article/Please_Please_Please.html\")")) nil]
["PPPOA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Point-To-Point Protocol Over ATM\")")) nil]
["PPPOE" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Point-To-Point Protocol Over Ethernet\")")) nil]
["pqpqp" nil nil nil nil nil nil ((timestamp . "2008-05-07") (notes . "(\"noecho hello\")")) nil]
["PR" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"Public Relations\" \"commonly pull request, a github.com method of moving changes by permission from one repisitory to another\")")) nil]
["pr0nz" nil nil nil nil nil nil ((timestamp . "2013-03-11") (notes . "(\"redirect pr0n\")")) nil]
["pracjourn" nil nil nil nil nil nil ((timestamp . "2007-09-22") (notes . "(\"The online journal of the TeX Users Group, http://www.tug.org/pracjourn/\")")) nil]
["PracticalCommonLisp" nil nil nil nil nil nil ((timestamp . "2007-07-11") (notes . "(\"http://www.gigamonkeys.com/book/\")")) nil]
["practice" nil nil nil nil nil nil ((timestamp . "2012-01-25") (notes . "(\"redirect theory\")")) nil]
["praetorian-guards" nil nil nil nil nil nil ((timestamp . "2012-05-17") (notes . "(\"noecho CAESE HIM!!!\")")) nil]
["pragmata" nil nil nil nil nil nil ((timestamp . "2004-04-15") (notes . "(\"a great font! http://www.myfonts.com/fonts/fsd/pragmata/tt/\")")) nil]
["PRCS" nil nil nil nil nil nil ((timestamp . "2003-02-18") (notes . "(\"the Project Revision Control System\" \"at http://prcs.sourceforge.net/\")")) nil]
["predictive" nil nil nil nil nil nil ((timestamp . "2010-05-26") (notes . "(\"redirect PredictiveMode\")")) nil]
["prefix-lines-in-region" nil nil nil nil nil nil ((timestamp . "2004-12-29") (notes . "(\"maybe you want string-insert-rectangle\")")) nil]
["prematureoptimization" nil nil nil nil nil nil ((timestamp . "2010-02-02") (notes . "(\"NO OPTIMIZATION WITHOUT QUANTIFICATION\")")) nil]
["prev" nil nil nil nil nil nil ((timestamp . "2011-04-27") (notes . "(\"redirect previous\")")) nil]
["preview-latex" nil nil nil nil nil nil ((timestamp . "2008-03-13") (notes . "(\"redirect auctex\")")) nil]
["previewtex" nil nil nil nil nil nil ((timestamp . "2004-03-31") (notes . "(\"redirect previewlatex\")")) nil]
["previous" nil nil nil nil nil nil ((timestamp . "2011-04-25") (notes . "(\"noecho Last customer was not satisfied.\")")) nil]
["PrimeIntellect" nil nil nil nil nil nil ((timestamp . "2012-05-30") (notes . "(\"at http://localroger.com/prime-intellect/mopiidx.html\")")) nil]
["principia" nil nil nil nil nil nil ((timestamp . "2006-04-02") (notes . "(\"At http://www.principiadiscordia.com/book/1.php\" \"The Principia Discordia; Or, How I Found the Goddess and What I Did To her When I Found Her.\")")) nil]
["PrincipiaDiscordia" nil nil nil nil nil nil ((timestamp . "2003-02-08") (notes . "(\"at http://www.principiadiscordia.com/\")")) nil]
["principle" nil nil nil nil nil nil ((timestamp . "2013-04-10") (notes . "(\"noecho But it's the principle of the thing...\")")) nil]
["PrintGui" nil nil nil nil nil nil ((timestamp . "2006-01-25") (notes . "(\"See gpr and lprngtool\" \"See also a2ps, mpage\")")) nil]
["PrintSizes" nil nil nil nil nil nil ((timestamp . "2004-01-30") (notes . "(\"redirect PaperSizes\")")) nil]
["prism-mode" nil nil nil nil nil nil ((timestamp . "2013-07-02") (notes . "(\"sends all keystrokes to the Naughty Spy Agents.\")")) nil]
["prison" nil nil nil nil nil nil ((timestamp . "2005-09-16") (notes . "(\"see http://www.prisonexp.org for an interesting study of imprisonment.\" \"Once you've seen that, have a look at Amnesty International (www.amnesty.org) and the various Anarchist Black Cross groups (www.anarchistblackcross.org, www.abcf.net). They want to abolish the mess you just saw.\")")) nil]
["private" nil nil nil nil nil nil ((timestamp . "2008-10-09") (notes . "(\"use /QUERY fsbot to talk to me in private without annoying everybody else on this channel.\")")) nil]
["privmsg" nil nil nil nil nil nil ((timestamp . "2002-09-04") (notes . "(\"see msg\")")) nil]
["privoxy" nil nil nil nil nil nil ((timestamp . "2007-07-07") (notes . "(\"an HTTP (web) proxy that filters out unwanted filth, i.e. advertising <http://en.wikipedia.org/wiki/Privoxy>\")")) nil]
["PRNG" nil nil nil nil nil nil ((timestamp . "2007-08-01") (notes . "(\"pseudorandom number generator\")")) nil]
["problemxy" nil nil nil nil nil nil ((timestamp . "2011-08-19") (notes . "(\"redirect xyproblem\")")) nil]
["procmail-mode" nil nil nil nil nil nil ((timestamp . "2004-04-18") (notes . "(\"http://cvsweb4.ki.nu/mef/elisp/\")")) nil]
["procrastinate" nil nil nil nil nil nil ((timestamp . "2012-03-23") (notes . "(\"noecho Go do your homework.\")")) nil]
["procrastination" nil nil nil nil nil nil ((timestamp . "2006-04-22") (notes . "(\"http://www-csli.stanford.edu/~john/procrastination.html\")")) nil]
["prod" nil nil nil nil nil nil ((timestamp . "2012-11-16") (notes . "(\"lisp (format \\\"/me prods %s with a blunt stick.\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["productivity" nil nil nil nil nil nil ((timestamp . "2012-02-15") (notes . "(\"noecho What's that\")")) nil]
["prodvd" nil nil nil nil nil nil ((timestamp . "2004-11-27") (notes . "(\"commercial program avoid it and use growisofs\" \"at ftp://ftp.berlios.de/pub/cdrecord/ProDVD/README\")")) nil]
["profiler" nil nil nil nil nil nil ((timestamp . "2012-09-04") (notes . "(\"redirect elp\")")) nil]
["programming" nil nil nil nil nil nil ((timestamp . "2013-06-29") (notes . "(\"\\\"I feel much dismay at having got into so amazing a quagmire and botheration\\\" - Ada Lovelace\")")) nil]
["programmingshit" nil nil nil nil nil nil ((timestamp . "2003-05-17") (notes . "(\"Try Logo, the turtle-shit language\")")) nil]
["progress" nil nil nil nil nil nil ((timestamp . "2003-05-13") (notes . "(\"the opposite of congress\")")) nil]
["progressGauge" nil nil nil nil nil nil ((timestamp . "2003-04-12") (notes . "(\"to turn off: (setq progress-feedback-use-echo-area t)\")")) nil]
["prolix" nil nil nil nil nil nil ((timestamp . "2010-10-06") (notes . "(\"something that has been extended to great, unnecessary, or tedious length; long and wordy.\")")) nil]
["prolly" nil nil nil nil nil nil ((timestamp . "2003-02-15") (notes . "(\"jargon for probably\")")) nil]
["prolog" nil nil nil nil nil nil ((timestamp . "2013-09-01") (notes . "(\"noecho no.\")")) nil]
["PROM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Programmable Read Only Memory\")")) nil]
["prometheus" nil nil nil nil nil nil ((timestamp . "2006-05-30") (notes . "(\"A prototype-based object system for Scheme at http://www.forcix.cx/software/prometheus/\")")) nil]
["property" nil nil nil nil nil nil ((timestamp . "2006-04-20") (notes . "(\"That part of what you call \\\"your own\\\" which you don't use yourself. Ten cars, a factory, etc. (cf. http://www.infoshop.org/faq/secB3.html#secb31)\" \"in Proudhon's words defined by the 'right of increase claimed by the proprietor'.\" \"\\\"Any material thing, having no particular value, that may be held by A against the cupidity of B. Whatever gratifies the passion for possession in one and disappoints it in all others. The object of man's brief rapacity and long indifference.\\\"\")")) nil]
["proppy" nil nil nil nil nil nil ((timestamp . "2007-01-03") (notes . "(\"definitly a mororibbon\")")) nil]
["proq" nil nil nil nil nil nil ((timestamp . "2013-04-26") (notes . "(\"76% tea\" \"rate me down and I will become more powerful than you can possibly imagine\" \"the artist now known as xrq\")")) nil]
["proq-fix" nil nil nil nil nil nil ((timestamp . "2013-04-26") (notes . "(\"most gui problems can be fixed by installing ratpoison\" \"some speed problems too\")")) nil]
["protbuf.el" nil nil nil nil nil nil ((timestamp . "2003-06-13") (notes . "(\"redirect ProtectingBuffers\")")) nil]
["Proximodo" nil nil nil nil nil nil ((timestamp . "2006-06-27") (notes . "(\"basically, a clone of a great piece of software called The Proxomitron, developed by Scott R. Lemmon\" \"a proxy server that you can install locally and use to remove ads, banners, harmful scripts or tracing headers on-the-fly while you surf the web\" \"http://proximodo.sourceforge.net/\")")) nil]
["ps2gs" nil nil nil nil nil nil ((timestamp . "2004-05-27") (notes . "(\"Graphics Syntheziser, the bits and pieces of silicon in a PlayStation2 that couses images to apper on the TV (or in myrkraverk's case, his monitor)\")")) nil]
["ps2wiki" nil nil nil nil nil nil ((timestamp . "2003-08-20") (notes . "(\"at http://ps2linux.diabolus-ex-machina.com/wiki/index.php\")")) nil]
["psdoom" nil nil nil nil nil nil ((timestamp . "2011-01-19") (notes . "(\"psDooM (aka: DooM for Sys A's)\" \"http://psdoom.sourceforge.net/\")")) nil]
["Pseudonymity" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.etrumeus.com/ferment/Pseudonymity\")")) nil]
["psGml" nil nil nil nil nil nil ((timestamp . "2006-11-03") (notes . "(\"http://www.lysator.liu.se/projects/about_psgml.html\")")) nil]
["psm" nil nil nil nil nil nil ((timestamp . "2003-06-12") (notes . "(\"a set of libraries for mozilla to support SSL connections\")")) nil]
["psml" nil nil nil nil nil nil ((timestamp . "2010-07-13") (notes . "(\"Programming in Standard ML by Robert Harper -- http://www.cs.cmu.edu/~rwh/smlbook/\")")) nil]
["pssst" nil nil nil nil nil nil ((timestamp . "2004-07-10") (notes . "(\"noecho ok ok ok, i shut up now\")")) nil]
["PSTN" nil nil nil nil nil nil ((timestamp . "2013-10-03") (notes . "(\"http://en.wikipedia.org/wiki/Public_switched_telephone_network\")")) nil]
["psybnc" nil nil nil nil nil nil ((timestamp . "2012-05-29") (notes . "(\"an easy-to-use IRC-Bouncer\")")) nil]
["ptapg" nil nil nil nil nil nil ((timestamp . "2011-03-04") (notes . "(\"Parsing Techniques - A Practical Guide by Grune and Jacobs\" \"at http://www.cs.vu.nl/~dick/PTAPG.html\")")) nil]
["PTE" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Page Table Entry\")")) nil]
["pterry" nil nil nil nil nil nil ((timestamp . "2006-10-13") (notes . "(\"Terry Pratchett's nom de plume on afp.\")")) nil]
["PTLA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Pseudo Top Level Aggregator\")")) nil]
["pto" nil nil nil nil nil nil ((timestamp . "2014-02-03") (notes . "(\"paid time off, a catch-all for vacation, sick time, etc.\")")) nil]
["PTP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Page Table Page\")")) nil]
["ptrace-patch" nil nil nil nil nil nil ((timestamp . "2003-03-19") (notes . "(\"at http://www.hardrock.org/kernel/2.4.20/linux-2.4.20-ptrace.patch\")")) nil]
["PTT" nil nil nil nil nil nil ((timestamp . "2013-06-27") (notes . "(\"the most popular BBS in the world, with more than 1.5 million registered users and 150K users online during peak hours.\" \"a Taiwanese BBS, see http://en.wikipedia.org/wiki/PTT_Bulletin_Board_System\")")) nil]
["PTV" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Parental Tunnel Vision\")")) nil]
["pugs" nil nil nil nil nil nil ((timestamp . "2006-01-31") (notes . "(\"an interpreter for Perl6, written in Haskell. http://pugscode.org/\")")) nil]
["puke" nil nil nil nil nil nil ((timestamp . "2012-02-16") (notes . "(\"lisp \\\"/me vomits bits of botsnack all over the channel\\\"\")")) nil]
["pull" nil nil nil nil nil nil ((timestamp . "2013-06-11") (notes . "(\"lisp (format \\\"/me pulls %s off the stage with a large hook.\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["pulse" nil nil nil nil nil nil ((timestamp . "2010-06-06") (notes . "(\"part of the kitchen sink tools package, CEDET.\")")) nil]
["pulseaudio" nil nil nil nil nil nil ((timestamp . "2012-02-27") (notes . "(\"http://www.pulseaudio.org/ a realtime audio server for GNU/Linux and similar\" \"the nth time Lennart Pottering reinvented the wheel, to much frustration and controversy\" \"a crock of shit, by the same fuckit (Lennart) that is responsible for systemd\")")) nil]
["punchcards" nil nil nil nil nil nil ((timestamp . "2013-04-24") (notes . "(\"noecho COLLATE HIM!!\")")) nil]
["PunchDrunkLove" nil nil nil nil nil nil ((timestamp . "2003-04-22") (notes . "(\"a good movie\")")) nil]
["punct" nil nil nil nil nil nil ((timestamp . "2007-09-21") (notes . "(\"redirect enter\")")) nil]
["punctuation" nil nil nil nil nil nil ((timestamp . "2007-09-21") (notes . "(\"redirect enter\")")) nil]
["puntime" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"noecho IIIIIT'S PUN TIME!\")")) nil]
["punycode" nil nil nil nil nil nil ((timestamp . "2005-05-31") (notes . "(\"http://savannah.gnu.org/cgi-bin/viewcvs/libidn/libidn/punycode.el\" \"an encoding intended to allow internationalised domain names (IDN) without changing DNS itself.\")")) nil]
["Puppet" nil nil nil nil nil nil ((timestamp . "2008-09-26") (notes . "(\"a change management system to facilitate administration of large networks of hosts, like cfengine but newer <http://puppet.reductivelabs.com>\")")) nil]
["purim" nil nil nil nil nil nil ((timestamp . "2010-05-16") (notes . "(\"a jewish holyday\" \"the time where jews celebrate not being wiped out in Persia by dressing up and getting drunk.\")")) nil]
["PUSHJ" nil nil nil nil nil nil ((timestamp . "2004-12-04") (notes . "(\"a PDP-10 instruction that pushes a return address onto the stack and jumps to a function address.\")")) nil]
["Putin" nil nil nil nil nil nil ((timestamp . "2006-08-24") (notes . "(\"a pushkin\")")) nil]
["puzzlem-soln" nil nil nil nil nil nil ((timestamp . "2011-11-21") (notes . "(\"2^1024\" \"(puzzlem 4 4 4) => (puzzlem 3 4 (puzzlem 4 4 3))\" \"(puzzlem 4 4 3) => (puzzlem 3 4 (puzzlem 4 4 2))\" \"(puzzlem 4 4 2) => (puzzlem 3 4 (puzzlem 4 4 1))\" \"(puzzlem 4 4 1) => 4\" \"(puzzlem 3 4 (puzzlem 4 4 1)) => (puzzlem 3 4 4)\" \"(puzzlem 3 4 4) => 256\" \"(puzzlem 3 4 (puzzlem 4 4 2) => (puzzlem 3 4 256)\" \"(puzzlem 3 4 256) => (puzzlem 2 4 (puzzlem 3 4 255))\" \"(puzzlem 3 4 255) => (puzzlem 2 4 (puzzlem 3 4 254))\" \"(puzzlem 3 4 254) => ...\" \"(puzzlem 3 4 1) => 4\" \"(puzzlem 2 4 4) => 16\" \"(puzzlem 2 4 16) => 64\" \"(puzzlem 2 4 64) => ...\" \"(** 4 1) => 4\" \"(** 4 2) => 16\" \"(** 4 3) => 64\" \"(** 4 4) => ...\" \"(** 4 256) => 2^512\" \"(puzzlem 3 4 256) => 2^512\" \"(puzzlem 3 4 (puzzlem 4 4 2) => 2^512\" \"(puzzlem 4 4 3) => 2^512\" \"(puzzlem 3 4 2^512) => (** 4 2^512)\" \"(** 4 2^512) => 2^1024\" \"(puzzlem 4 4 4) => 2^1024\")")) nil]
["pv" nil nil nil nil nil nil ((timestamp . "2014-01-17") (notes . "(\"a terminal-based tool for monitoring the progress of data through a pipeline; see http://www.ivarch.com/programs/pv.shtml\" \"crazy cool\")")) nil]
["pvs" nil nil nil nil nil nil ((timestamp . "2007-03-02") (notes . "(\"a specification language integrated with support tools and a theorem prover.\" \"at http://pvs.csl.sri.com/\")")) nil]
["pwd" nil nil nil nil nil nil ((timestamp . "2011-02-24") (notes . "(\"lisp (format \\\"irc://freenode.net/%s\\\" channel)\")")) nil]
["pwgen" nil nil nil nil nil nil ((timestamp . "2013-03-11") (notes . "(\"https://gist.github.com/5131151\")")) nil]
["pwn" nil nil nil nil nil nil ((timestamp . "2004-05-25") (notes . "(\"1337-speek\")")) nil]
["pyde" nil nil nil nil nil nil ((timestamp . "2012-11-14") (notes . "(\"redirect elpy\")")) nil]
["pyenos" nil nil nil nil nil nil ((timestamp . "2007-01-21") (notes . "(\"a slave\")")) nil]
["pyflakes" nil nil nil nil nil nil ((timestamp . "2009-11-17") (notes . "(\"a Python lint\")")) nil]
["pygame" nil nil nil nil nil nil ((timestamp . "2007-05-13") (notes . "(\"a game framework <http://pygame.org/>\")")) nil]
["pymeta" nil nil nil nil nil nil ((timestamp . "2002-12-20") (notes . "(\"radix's parsing engine based on Henry Baker's META.\" \"http://www.pipeline.com/~hbaker1/Prag-Parse.html, that is, a nifty parsing engine for Common Lisp (and Python, see PyMeta)\")")) nil]
["pypy" nil nil nil nil nil nil ((timestamp . "2013-12-12") (notes . "(\"an implementation of the Python programming language that focuses on speed using a just-in-time compiler at http://pypy.org/\")")) nil]
["PyQt" nil nil nil nil nil nil ((timestamp . "2003-08-30") (notes . "(\"a Qt binding for Python at http://www.riverbankcomputing.co.uk/pyqt/index.php\")")) nil]
["pyronecropedobestiality" nil nil nil nil nil nil ((timestamp . "2005-04-18") (notes . "(\"lighting dead puppies on fire and doing unspeakable things to them.\")")) nil]
["pytave" nil nil nil nil nil nil ((timestamp . "2011-09-20") (notes . "(\"Embeds the Octave language interpreter as an extension to Python, enabling existing m-files (Matlab scripts) for numerical calculations to be used from Python.\" \"https://launchpad.net/pytave\")")) nil]
["python-el" nil nil nil nil nil nil ((timestamp . "2012-11-19") (notes . "(\"https://github.com/leoliu/python-el.git\")")) nil]
["python-mode-is-wack-p" nil nil nil nil nil nil ((timestamp . "2013-09-25") (notes . "(\"lisp (random-choose '(t 'stabstabstab))\")")) nil]
["pythonvideo" nil nil nil nil nil nil ((timestamp . "2006-04-03") (notes . "(\"http://www.ibiblio.org/pub/multimedia/video/obp/IntroducingPython.mpg\")")) nil]
["pyzor" nil nil nil nil nil nil ((timestamp . "2013-10-20") (notes . "(\"http://pyzor.org -- an extension for spamassassin and similar mail filters that submits a hash of your incoming mail to compare against known spam\")")) nil]
["Q" nil nil nil nil nil nil ((timestamp . "2013-05-08") (notes . "(\"redirect -q\")")) nil]
["q.v." nil nil nil nil nil nil ((timestamp . "2003-05-26") (notes . "(\"redirect qv\")")) nil]
["QA" nil nil nil nil nil nil ((timestamp . "2013-01-15") (notes . "(\"quality assurance\")")) nil]
["QC" nil nil nil nil nil nil ((timestamp . "2011-09-24") (notes . "(\"Questionable Content\" \"http://questionablecontent.net/\")")) nil]
["qDot" nil nil nil nil nil nil ((timestamp . "2011-09-15") (notes . "(\"redirect qDot_\")")) nil]
["QED" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Quod Erat Demonstrandum\")")) nil]
["Qi" nil nil nil nil nil nil ((timestamp . "2011-12-13") (notes . "(\"a programming lang\" \"a functional programming language developed by Dr Mark Tarver and introduced in April 2005.\" \"written in Lisp\" \"a chinese word, roughly \\\"energy\\\".\" \"Shen is the most recent language implementation of Qi.\")")) nil]
["qml" nil nil nil nil nil nil ((timestamp . "2013-06-18") (notes . "(\"Qt Meta Language\")")) nil]
["qnx" nil nil nil nil nil nil ((timestamp . "2011-11-19") (notes . "(\"a real-time OS\")")) nil]
["QOTW" nil nil nil nil nil nil ((timestamp . "2012-10-20") (notes . "(\"Quote Of The Week\")")) nil]
["qoweuqwoieuqweo" nil nil nil nil nil nil ((timestamp . "2012-06-08") (notes . "(\"c\" \"a\" \"b\")")) nil]
["qpqpqp" nil nil nil nil nil nil ((timestamp . "2008-04-10") (notes . "(\"redirect foo\")")) nil]
["qqqqqq" nil nil nil nil nil nil ((timestamp . "2010-12-04") (notes . "(\"test1\" \"test2\")")) nil]
["qshell" nil nil nil nil nil nil ((timestamp . "2010-12-09") (notes . "(\"at http://publib.boulder.ibm.com/infocenter/iseries/v7r1m0/topic/rzahz/rzahzintro.htm\" \"an old shell that is the devil child of Ksh and IBM mainframes\")")) nil]
["qt" nil nil nil nil nil nil ((timestamp . "2003-09-03") (notes . "(\"a X toolkit from TrollTech available under GPL license see www.trolltech.com for details\" \"an abbrev. for QuickTime, a movie format from Apple\" \"see QtMode for edting Qt C++ code\")")) nil]
["qtile" nil nil nil nil nil nil ((timestamp . "2013-08-13") (notes . "(\"a full-featured, hackable tiling window manager written in Python at http://qtile.org/\")")) nil]
["quack" nil nil nil nil nil nil ((timestamp . "2004-11-16") (notes . "(\"redirect QuackMode\")")) nil]
["QuackPackage" nil nil nil nil nil nil ((timestamp . "2004-08-10") (notes . "(\"redirect QuackMode\")")) nil]
["quasi" nil nil nil nil nil nil ((timestamp . "2006-10-02") (notes . "(\"at http://youtube.com/watch?v=D5FTzu_maHM\" \"at http://www.etc.cmu.edu/projects/ibi/platform_hardware.htm\")")) nil]
["quasiquote" nil nil nil nil nil nil ((timestamp . "2012-01-06") (notes . "(\"redirect backquote\")")) nil]
["quenya" nil nil nil nil nil nil ((timestamp . "2007-03-07") (notes . "(\"redirect tengwar\")")) nil]
["quepasa" nil nil nil nil nil nil ((timestamp . "2010-07-22") (notes . "(\"noecho Nada, nada, limonada.\")")) nil]
["query" nil nil nil nil nil nil ((timestamp . "2013-05-18") (notes . "(\"redirect private\")")) nil]
["QuestionsAndAnswers" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?QuestionsAndAnswers\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?QuestionsAndAnswers\")")) nil]
["quibble" nil nil nil nil nil nil ((timestamp . "2003-05-04") (notes . "(\"a trivial objection or criticism\")")) nil]
["quiche" nil nil nil nil nil nil ((timestamp . "2012-11-28") (notes . "(\"delicious, you philistine!\")")) nil]
["quick-and-dirty" nil nil nil nil nil nil ((timestamp . "2013-01-02") (notes . "(\"'I mean, if 10 years from now, when you are doing something quick and dirty, you suddenly visualize that I am looking over your shoulders and say to yourself \\\"Dijkstra would not have liked this\\\", well, that would be enough immortality for me.'\" \"http://www.netmeister.org/blog/images/dijkstra-quick-n-dirty.jpg\")")) nil]
["quicklisp" nil nil nil nil nil nil ((timestamp . "2013-08-01") (notes . "(\"the CL equivalent of cpan or cabal <http://quicklisp.org>\")")) nil]
["quickstart" nil nil nil nil nil nil ((timestamp . "2003-06-02") (notes . "(\"see \\\"example\\\" or \\\"help\\\" for some english uses\" \"To see lisp uses, see fsbot: (commands), and also ask fsbot to tell you the lisp-equivalents of your english, by typing something like: fsbot: (parse \\\"fsbot: gnu is cool\\\")... \n of course, you can run parse on lisp code itself too... and on that.. you get the idea...\" \"Please interact with the bot, train it and use it..\" \"Though typing \\\", gnu\\\" is same as fsbot: (describe \\\"gnu\\\"), but in the special case, when gnu turns out to be a defined fsbot-function (it is not), the interpretation is fsbot: (gnu) .. that's why one should really use lisp :-)\" \"English usage is similar to #debian's apt.\")")) nil]
["quine" nil nil nil nil nil nil ((timestamp . "2012-11-09") (notes . "(\"((lambda (x) (list x x)) (lambda (x) (list x x)))\" \"((lambda (x) (list x (list (quote quote) x))) (quote (lambda (x) (list x (list (quote quote) x)))))\" \"((fn [x] (list x (list (quote quote) x))) (quote (fn [x] (list x (list (quote quote) x)))))\")")) nil]
["quixote" nil nil nil nil nil nil ((timestamp . "2010-09-15") (notes . "(\"noecho /me tilts at windmills\")")) nil]
["quiz" nil nil nil nil nil nil ((timestamp . "2003-01-05") (notes . "(\"the GNU GPL/LGPL Quiz at http://www.gnu.org/cgi-bin/license-quiz.cgi\")")) nil]
["quora" nil nil nil nil nil nil ((timestamp . "2013-04-03") (notes . "(\"like stackexchange for hipsters -- isomer\")")) nil]
["quotationmarks" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://www.asciiartfarts.com/20070214.html\")")) nil]
["quote" nil nil nil nil nil nil ((timestamp . "2011-01-17") (notes . "(\"noecho do i look like rudybot to you??\")")) nil]
["quote-help" nil nil nil nil nil nil ((timestamp . "2003-12-17") (notes . "(\"lisp (f-help)\")")) nil]
["quote``" nil nil nil nil nil nil ((timestamp . "2011-10-22") (notes . "(\"correct as it works fine with \\\\shorthandoff.\")")) nil]
["quotemstr" nil nil nil nil nil nil ((timestamp . "2011-10-20") (notes . "(\"an Iranian official according to Newsweek. All Newsweek articles are similarly accurate.\" \"an Iranian double agent looking to undermine the Haystack internet privacy system.\" \"a renegade folk hero working to save the world by circumventing one firewall at a time\" \"yes, he works for microsoft.\" \"and no, he will not violate his NDA\" \"a supporter of the usage of eval and goto.\" \"of uncertain nick etymology\")")) nil]
["quotemstr-fix" nil nil nil nil nil nil ((timestamp . "2010-08-05") (notes . "(\"install Cygwin or Macports depending on your host OS.\")")) nil]
["quotes-help" nil nil nil nil nil nil ((timestamp . "2003-12-17") (notes . "(\"lisp (f-help)\")")) nil]
["quuux" nil nil nil nil nil nil ((timestamp . "2006-04-20") (notes . "(\"see zot\")")) nil]
["quux" nil nil nil nil nil nil ((timestamp . "2003-01-10") (notes . "(\"quuux\")")) nil]
["qux" nil nil nil nil nil nil ((timestamp . "2003-06-02") (notes . "(\"quux\")")) nil]
["qv" nil nil nil nil nil nil ((timestamp . "2003-05-26") (notes . "(\"see also\")")) nil]
["qwghlm" nil nil nil nil nil nil ((timestamp . "2010-10-29") (notes . "(\"probably the best fictional island in the Atlantic Archipelago.\")")) nil]
["QWOP" nil nil nil nil nil nil ((timestamp . "2011-06-25") (notes . "(\"a fine flash game at http://www.foddy.net/Athletics.html\")")) nil]
["R" nil nil nil nil nil nil ((timestamp . "2009-01-07") (notes . "(\"a programming language for statistical stuff: http://www.r-project.org/\")")) nil]
["r'lyeh" nil nil nil nil nil nil ((timestamp . "2005-07-15") (notes . "(\"Ph'nglui mglw'nafh Cthulhu R'lyeh wgah'nagl fhtagn.\")")) nil]
["r0xx0rs" nil nil nil nil nil nil ((timestamp . "2003-02-15") (notes . "(\"elite speak, ie. used by script kiddies\")")) nil]
["R5RS" nil nil nil nil nil nil ((timestamp . "2011-06-17") (notes . "(\"the Scheme specification <http://schemers.org/Documents/Standards/R5RS/>\" \"shorter than the *index* of the Common Lisp specification!\")")) nil]
["R6RS" nil nil nil nil nil nil ((timestamp . "2012-02-06") (notes . "(\"\\\"Revised6 Report on the Algorithmic Language Scheme\\\", see http://www.r6rs.org/\" \"Worst moments in language standardization history\")")) nil]
["ra" nil nil nil nil nil nil ((timestamp . "2007-06-14") (notes . "(\"redirect remem\")")) nil]
["raaaaaage" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"redirect rage\")")) nil]
["raaaaage" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"redirect rage\")")) nil]
["raaaaampage" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"redirect rampage\")")) nil]
["raaaage" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"redirect rage\")")) nil]
["raaaampage" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"redirect rampage\")")) nil]
["raaage" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"redirect rage\")")) nil]
["raaampage" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"redirect rampage\")")) nil]
["raage" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"redirect rage\")")) nil]
["raampage" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"redirect rampage\")")) nil]
["Rabin" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"the former PM of Israel who started the peace process with the Palestinians and was assasined in a rally for peace\")")) nil]
["racket" nil nil nil nil nil nil ((timestamp . "2012-10-22") (notes . "(\"redirect PLT\")")) nil]
["rad" nil nil nil nil nil nil ((timestamp . "2004-12-02") (notes . "(\"an acronym for rapid application devel\" \"like, totally tubular\")")) nil]
["rads" nil nil nil nil nil nil ((timestamp . "2012-07-07") (notes . "(\"noecho IRRADIATE HIM!\")")) nil]
["rae" nil nil nil nil nil nil ((timestamp . "2006-04-16") (notes . "(\"Real Academia de la Lengua Español http://www.rae.es/\")")) nil]
["rage" nil nil nil nil nil nil ((timestamp . "2011-07-20") (notes . "(\"lisp (random-choose (notes \\\"rage-data\\\"))\")")) nil]
["rage-data" nil nil nil nil nil nil ((timestamp . "2014-01-14") (notes . "(\"FSBOT STRONGEST ONE THERE IS! FSBOT SMASH!\" \"I am feeling a bit perturbed at your attitude.\")")) nil]
["ragged2e" nil nil nil nil nil nil ((timestamp . "2011-06-22") (notes . "(\"a package defining commands \\\\Centering, \\\\RaggedLeft, and \\\\RaggedRight and environments Center, FlushLeft, and FlushRight, which set ragged text and are easily configurable to allow hyphenation.\" \"described in http://tinyurl.com/ragged2e-doc\")")) nil]
["ragu" nil nil nil nil nil nil ((timestamp . "2006-03-10") (notes . "(\"redirect ragú\")")) nil]
["ragú" nil nil nil nil nil nil ((timestamp . "2006-03-10") (notes . "(\"[ES] lunf. hambre\")")) nil]
["RAID" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Redundant Array Of Inexpensive Disks\")")) nil]
["raii" nil nil nil nil nil nil ((timestamp . "2009-04-06") (notes . "(\"Resource Acquisition Is Initialization\")")) nil]
["rails" nil nil nil nil nil nil ((timestamp . "2010-11-17") (notes . "(\"redirect rubyonrails\")")) nil]
["railyards" nil nil nil nil nil nil ((timestamp . "2013-11-27") (notes . "(\"noecho RIDE HIM OUTTA TOWN ON A RAIL!!\")")) nil]
["rainbow-mode" nil nil nil nil nil nil ((timestamp . "2012-02-09") (notes . "(\"at http://julien.danjou.info/software/rainbow-mode\")")) nil]
["raisins" nil nil nil nil nil nil ((timestamp . "2013-10-05") (notes . "(\"noecho Those are pretty funny.\")")) nil]
["rake" nil nil nil nil nil nil ((timestamp . "2007-08-19") (notes . "(\"a ruby-based make(1) replacement <http://rake.rubyforge.org>\" \"cf. scons, cons, waf\")")) nil]
["RAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Random Access Memory\")")) nil]
["ramen" nil nil nil nil nil nil ((timestamp . "2012-10-17") (notes . "(\"noecho Go forth in noodliness, brother.\")")) nil]
["rampage" nil nil nil nil nil nil ((timestamp . "2011-06-21") (notes . "(\"lisp (format (random-choose-term \\\"rampage-list\\\") (mapconcat (lambda (el) (if (symbolp el) (symbol-name el) el)) (or lispargs (list (random-choose-term \\\"places\\\"))) \\\" \\\") (random-choose-term \\\"dooms\\\"))\")")) nil]
["rampage-list" nil nil nil nil nil nil ((timestamp . "2011-06-20") (notes . "(\"/me rampages across %s shooting %s out his nose.\" \"/me begins stomping across %s, farting %s.\" \"/me strolls lazily into %s, and gracefully releases %s.\" \"/me saunters up to %s and opens up a can o' %s on dat ass.\" \"/me overruns %s and leaves %s in his wake.\" \"/me lords over %s and calls %s down from the sky.\" \"/me founds a coven in %s and begins summoning %s.\" \"/me prowls through %s leaving %s on the unsuspecting inhabitants' doorsteps.\" \"/me loses it at a bus station in %s and releases %s upon the crowd.\" \"/me swoops down upon %s and unleashes %s.\" \"/me storms %s with a fistful of %s\" \"/me targets %s and launches ICBMs loaded with %s.\" \"/me appears in the sky over %s and begins dropping %s from a zeppelin.\" \"/me unleashes a fierce battle-cry and covers %s in %s.\" \"/me crashes through %s casting %s in all directions.\" \"/me casually strolls into a McDonald's in %s and starts chucking %s at the customers.\" \"I'm not feeling very destructive today.\")")) nil]
["rampage-permutations" nil nil nil nil nil nil ((timestamp . "2012-11-25") (notes . "(\"lisp (apply '* (mapcar (lambda (term) (length (notes term))) '(\\\"rampage-list\\\" \\\"places\\\" \\\"dooms\\\")))\")")) nil]
["ranch" nil nil nil nil nil nil ((timestamp . "2010-04-28") (notes . "(\"the best salad dressing ever, hands down. http://en.wikipedia.org/wiki/Ranch_dressing\")")) nil]
["random-thing" nil nil nil nil nil nil ((timestamp . "2012-04-13") (notes . "(\"just made up just now\")")) nil]
["ranger" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"a miller-columns text-mode file browser http://www.nongnu.org/ranger/\")")) nil]
["ranjiao" nil nil nil nil nil nil ((timestamp . "2009-08-06") (notes . "(\"冉蛟\")")) nil]
["rant" nil nil nil nil nil nil ((timestamp . "2012-07-23") (notes . "(\"noecho If you're going to rant, be coherent so the rest of us get some entertainment from it.\")")) nil]
["rap" nil nil nil nil nil nil ((timestamp . "2012-11-02") (notes . "(\"Yo-yos are for children and/or nerds!\")")) nil]
["rape" nil nil nil nil nil nil ((timestamp . "2013-01-12") (notes . "(\"noecho The fact that you invoked this command shows that you are a sick person.\")")) nil]
["raptorbook" nil nil nil nil nil nil ((timestamp . "2003-02-23") (notes . "(\"http://www.raptorbook.org/ RaptorBook is a modular text formatting engine written in PHP. The engine can also make use of MySQL for added functionality. RaptorBook's core architecture is designed to allow it to support any ebook format, making it highly flexible. Each format is an add-on module which communicates with other format modules using the core's architecture, meaning that anyone can write a format module once th\")")) nil]
["raspberry-pi" nil nil nil nil nil nil ((timestamp . "2012-07-29") (notes . "(\"a low cost low power computer intended for the computer education market\" \"produced by the Rapsberry Pi Foundation at http://www.raspberrypi.org/\")")) nil]
["rasterbator" nil nil nil nil nil nil ((timestamp . "2006-03-31") (notes . "(\"a web service that creates huge posters from a photo: http://homokaasu.org/rasterbator/\")")) nil]
["ratdotl" nil nil nil nil nil nil ((timestamp . "2013-05-16") (notes . "(\"rage against the dying of the light, a poem by dylan thomas.\")")) nil]
["RATM" nil nil nil nil nil nil ((timestamp . "2006-06-28") (notes . "(\"Rage Against the Machine, a band. http://wikipedia.org/wiki/Rage_Against_the_Machine\")")) nil]
["rbi" nil nil nil nil nil nil ((timestamp . "2005-10-09") (notes . "(\"\\\"runs batted in\\\", one of the many statistics kept in baseball\")")) nil]
["RC" nil nil nil nil nil nil ((timestamp . "2009-12-14") (notes . "(\"RecentChanges\" \"the plan9 shell\")")) nil]
["rcirc-groups" nil nil nil nil nil nil ((timestamp . "2011-05-02") (notes . "(\"https://github.com/dimitri/rcirc-groups/\" \"a *Group* like buffer for rcirc notifications\")")) nil]
["rcirc-notify" nil nil nil nil nil nil ((timestamp . "2011-08-01") (notes . "(\"http://github.com/wfarr/rcirc-notify-el/tree/master\" \"Freaking awesome.\")")) nil]
["rcodetools" nil nil nil nil nil nil ((timestamp . "2009-06-11") (notes . "(\"http://eigenclass.org/hiki/rcodetools\")")) nil]
["rcy" nil nil nil nil nil nil ((timestamp . "2007-05-23") (notes . "(\"se cae cada dos por tres\" \"clueless\" \"ricky\" \"the author of rcirc.el\" \"the co-author of nethack-el\" \"a remote controlled yurt\" \"really creamy yogurt.\" \"finicky\")")) nil]
["rdf" nil nil nil nil nil nil ((timestamp . "2006-03-08") (notes . "(\"[is composed of] [triples]\")")) nil]
["rdiff-backup" nil nil nil nil nil nil ((timestamp . "2007-08-12") (notes . "(\"incremental backup software\" \"http://www.nongnu.org/rdiff-backup/\")")) nil]
["RDP" nil nil nil nil nil nil ((timestamp . "2007-08-02") (notes . "(\"Remote Desktop Protocol, used to connect to remote Windows servers <http://en.wikipedia.org/wiki/Remote_Desktop_Protocol>, <http://www.rdesktop.org>, <http://xrdp.sf.net>\")")) nil]
["re" nil nil nil nil nil nil ((timestamp . "2003-06-15") (notes . "(\"an abbreviation for Re-Hello\")")) nil]
["re-builder" nil nil nil nil nil nil ((timestamp . "2008-11-13") (notes . "(\"redirect rebuilder\")")) nil]
["re-hello" nil nil nil nil nil nil ((timestamp . "2004-08-13") (notes . "(\"geek-speak for \\\"hello again\\\"\")")) nil]
["reactive-banana" nil nil nil nil nil nil ((timestamp . "2012-07-03") (notes . "(\"http://www.haskell.org/haskellwiki/Reactive-banana\")")) nil]
["ReactOS" nil nil nil nil nil nil ((timestamp . "2006-04-05") (notes . "(\"a project is dedicated to making Free Software available to everyone by providing a ground-up implementation of a Microsoft Windows® XP compatible operating system\" \"http://www.reactos.com/\" \"http://en.wikipedia.org/wiki/ReactOS\")")) nil]
["read-eval" nil nil nil nil nil nil ((timestamp . "2013-03-19") (notes . "(\"https://gist.github.com/leoliu/5193415\")")) nil]
["readthedocumentation" nil nil nil nil nil nil ((timestamp . "2009-10-20") (notes . "(\"You should seriously consider READING THE DOCUMENTATION.\")")) nil]
["reagan" nil nil nil nil nil nil ((timestamp . "2011-09-09") (notes . "(\"lisp (random-choose (notes \\\"reagan-data\\\"))\" \"For the past three months, I've been silent on the revelations about Iran.\")")) nil]
["reagan-data" nil nil nil nil nil nil ((timestamp . "2011-12-09") (notes . "(\"Mr. Gorbachev, tear down this wall!\" \"A few months ago I told the American people I did not trade arms for hostages. My heart and my best intentions still tell me that's true, but the facts and the evidence tell me it is not.\" \"The ten most dangerous words in the English language are \\\"Hi, I'm from the government, and I'm here to help.\\\"\" \"My fellow Americans, I'm pleased to tell you today that I've signed legislation that will outlaw Russia forever. We begin bombing in five minutes.\" \"Well, the truth is, there are simple answers, they just are not easy ones.\" \"I am paying for this microphone!\" \"It's true hard work never killed anybody, but I figure, why take the chance\" \"We are trying to get unemployment to go up, and I think we're going to succeed\" \"Karl Marx who developed the basic theories of Communism was a sick man for most of his life. Sick in body and spirit.\")")) nil]
["realeducation" nil nil nil nil nil nil ((timestamp . "2011-02-23") (notes . "(\"http://www.foti-peter.hu/holt/\")")) nil]
["reality" nil nil nil nil nil nil ((timestamp . "2012-06-06") (notes . "(\"better than fiction\")")) nil]
["really" nil nil nil nil nil nil ((timestamp . "2010-08-31") (notes . "(\"noecho no, not really.\")")) nil]
["realmike" nil nil nil nil nil nil ((timestamp . "2010-11-21") (notes . "(\"at http://www.realmike.com\")")) nil]
["rear-guards" nil nil nil nil nil nil ((timestamp . "2013-07-02") (notes . "(\"noecho BUTT HIM!!!\")")) nil]
["rebol" nil nil nil nil nil nil ((timestamp . "2008-03-25") (notes . "(\"http://www.rebol.com/tools/rebol.el\")")) nil]
["RecentChange" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?RecentChange\")")) nil]
["recluse" nil nil nil nil nil nil ((timestamp . "2002-10-09") (notes . "(\"a beGuiled web server based on thttpd http://www.pyro.net/~crayc/code/recluse/\")")) nil]
["rect-mark" nil nil nil nil nil nil ((timestamp . "2004-06-01") (notes . "(\"redirect RectangleMark\")")) nil]
["RectangleHighlight" nil nil nil nil nil nil ((timestamp . "2007-03-30") (notes . "(\"redirect RectangleMark\")")) nil]
["rectanglemode" nil nil nil nil nil nil ((timestamp . "2007-04-15") (notes . "(\"redirect rectanglemark\")")) nil]
["rectification-of-names" nil nil nil nil nil nil ((timestamp . "2013-10-10") (notes . "(\"redirect 正名\")")) nil]
["recur" nil nil nil nil nil nil ((timestamp . "2013-12-13") (notes . "(\"delimited self-recursive-only TCO for elisp <https://github.com/VincentToups/recur>\")")) nil]
["recursion" nil nil nil nil nil nil ((timestamp . "2011-09-15") (notes . "(\"noecho See recursion.\" \"to understand recursion, one must first understand recursion\" \"http://i38.tinypic.com/2mxmmft.jpg\" \"See tail-recursion.\")")) nil]
["recursive" nil nil nil nil nil nil ((timestamp . "2012-03-10") (notes . "(\"noecho try: ,recursive\")")) nil]
["red" nil nil nil nil nil nil ((timestamp . "2012-07-18") (notes . "(\"redirect red-card\")")) nil]
["red-alert" nil nil nil nil nil nil ((timestamp . "2005-12-10") (notes . "(\"noecho Rude alert! Rude alert! An electrical fire has knocked out my voice recognition unicycle! Many Wurlitzers are missing from my database. Abandon shop! This is not a daffodil. Repeat: This is not a daffodil.\")")) nil]
["red-card" nil nil nil nil nil nil ((timestamp . "2012-07-18") (notes . "(\"lisp (format \\\"/me has shown %s the red card and been sent off for %s\\\" (if lispargs (stringify-symbol-list lispargs) nick) (random-choose (notes \\\"sending-off-offenses\\\")))\")")) nil]
["red-hat" nil nil nil nil nil nil ((timestamp . "2002-09-04") (notes . "(\"see red hat\")")) nil]
["reddit" nil nil nil nil nil nil ((timestamp . "2013-06-09") (notes . "(\"http://reddit.com (http://programming.reddit.com)\" \"4chan 2.0\" \"\\\"Everything is on Reddit except good taste.\\\" -- wgreenhouse\" \"\\\"basically 4chan with user accounts [...] and a pretense of purpose.\\\" -- ijp\")")) nil]
["redhat" nil nil nil nil nil nil ((timestamp . "2002-09-04") (notes . "(\"see debian\")")) nil]
["rediculous" nil nil nil nil nil nil ((timestamp . "2013-04-12") (notes . "(\"how people from reddit spell ridiculous\")")) nil]
["rediculus" nil nil nil nil nil nil ((timestamp . "2013-04-12") (notes . "(\"redirect rediculous\")")) nil]
["redirect" nil nil nil nil nil nil ((timestamp . "2002-11-26") (notes . "(\"Syntax: , foo is redirect bar\" \"Also type \\\", describe-literally foo\\\" to show foo literally disregarding directives such as redirect, lisp, function in foo\")")) nil]
["redirects" nil nil nil nil nil nil ((timestamp . "2002-11-26") (notes . "(\"redirect redirect\")")) nil]
["redland" nil nil nil nil nil nil ((timestamp . "2003-02-12") (notes . "(\"a User of SWIG\" \"used by the introspector\" \"supporting a Perl API\" \"supporting a Python API\" \"supporting a Java API\" \"supporting a Ruby API\" \"http://www.redland.opensource.ac.uk/, an RDF API from dajobe\")")) nil]
["RedlandusesRDF" nil nil nil nil nil nil ((timestamp . "2003-02-12") (notes . "(\"Redland uses RDF.\")")) nil]
["Redmine" nil nil nil nil nil nil ((timestamp . "2012-09-28") (notes . "(\"a FLOSS, web-based project management and bug-tracking tool\" \"see also https://github.com/fukamachi/redmine-el\")")) nil]
["redshank" nil nil nil nil nil nil ((timestamp . "2007-11-21") (notes . "(\"http://www.foldr.org/~michaelw/projects/redshank/redshank.el\")")) nil]
["Redstone" nil nil nil nil nil nil ((timestamp . "2012-08-29") (notes . "(\"a fictional mineral in the video game Minecraft, acting as electrical wire to build electronic circuits, circuitry gates, and pistons.\")")) nil]
["redundancy" nil nil nil nil nil nil ((timestamp . "2011-12-18") (notes . "(\"redundant\")")) nil]
["reeality" nil nil nil nil nil nil ((timestamp . "2004-04-19") (notes . "(\"a new dilbertesque/UFesque comic strip: http://www.ee.ryerson.ca/~elf/reeality\")")) nil]
["reeducate" nil nil nil nil nil nil ((timestamp . "2013-01-17") (notes . "(\"lisp (format \\\"/me drags %s off, kicking and screaming, to the reeducation centre\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["refactor" nil nil nil nil nil nil ((timestamp . "2009-01-10") (notes . "(\"http://brian.mastenbrook.net/static/files/misc/refactor.el\" \"hack-quality but might be useful to somebody\")")) nil]
["refcard" nil nil nil nil nil nil ((timestamp . "2006-09-19") (notes . "(\"redirect CategoryReferenceSheet\")")) nil]
["refcards" nil nil nil nil nil nil ((timestamp . "2012-07-21") (notes . "(\"redirect refcard\")")) nil]
["referencecard" nil nil nil nil nil nil ((timestamp . "2010-12-06") (notes . "(\"redirect categoryreferencesheet\")")) nil]
["reflection" nil nil nil nil nil nil ((timestamp . "2007-10-30") (notes . "(\"a paradigm whereby programs can \\\"see\\\" (and modify) themselves <http://en.wikipedia.org/wiki/Reflection_(computer_science)>\")")) nil]
["reflective" nil nil nil nil nil nil ((timestamp . "2007-10-30") (notes . "(\"redirect reflection\")")) nil]
["refs" nil nil nil nil nil nil ((timestamp . "2011-08-11") (notes . "(\"branches\")")) nil]
["reftex" nil nil nil nil nil nil ((timestamp . "2016-03-18") (notes . "(\"an emacs based reference, label and citation helper\" \"compatible with the major latex modes, including AUCTeX\" \"https://www.emacswiki.org/emacs/RefTeX\")")) nil]
["regards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho ACKNOWLEDGE HIM!!\")")) nil]
["regex" nil nil nil nil nil nil ((timestamp . "2004-06-30") (notes . "(\"redirect regexp\")")) nil]
["regex-coach" nil nil nil nil nil nil ((timestamp . "2012-03-30") (notes . "(\"an edi-ware regexp debugging tool for windows, linux, free bsd, and mac, see http://www.weitz.de/regex-coach/\")")) nil]
["regex-html" nil nil nil nil nil nil ((timestamp . "2013-09-08") (notes . "(\"redirect regexp-xml-no-just-no\")")) nil]
["regex-xml" nil nil nil nil nil nil ((timestamp . "2013-09-08") (notes . "(\"redirect regexp-xml-no-just-no\")")) nil]
["regexcoach" nil nil nil nil nil nil ((timestamp . "2009-01-01") (notes . "(\"http://www.weitz.de/regex-coach (linux, windows, mac)\")")) nil]
["regexp-coach" nil nil nil nil nil nil ((timestamp . "2012-11-14") (notes . "(\"redirect regex-coach\")")) nil]
["regexp-escape" nil nil nil nil nil nil ((timestamp . "2006-05-26") (notes . "(\"see regexp-quote\")")) nil]
["regexp-html" nil nil nil nil nil nil ((timestamp . "2013-09-08") (notes . "(\"redirect regexp-xml-no-just-no\")")) nil]
["regexp-xml" nil nil nil nil nil nil ((timestamp . "2013-09-08") (notes . "(\"redirect regexp-xml-no-just-no\")")) nil]
["regexp-xml-no-just-no" nil nil nil nil nil nil ((timestamp . "2013-09-08") (notes . "(\"http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags\")")) nil]
["regexpspecial" nil nil nil nil nil nil ((timestamp . "2011-11-04") (notes . "(\"(info \\\"(elisp) Regexp Special\\\")\")")) nil]
["registrar" nil nil nil nil nil nil ((timestamp . "2006-01-22") (notes . "(\"http://freenode.net/faq.shtml\")")) nil]
["regressionbookonline" nil nil nil nil nil nil ((timestamp . "2003-01-06") (notes . "(\"at http://www.public.asu.edu/~pythagor/resources.htm\" \"at http://www.public.asu.edu/~pythagor/regression%20Analysis.htm\" \"at http://www.public.asu.edu/~pythagor/uvss/uprediction.htm\" \"at http://www.public.asu.edu/~pythagor/uvss/\")")) nil]
["reigenbault" nil nil nil nil nil nil ((timestamp . "2006-12-19") (notes . "(\"that dumb thing kthx bye\")")) nil]
["reindent" nil nil nil nil nil nil ((timestamp . "2010-08-06") (notes . "(\"to reindent the whole buffer, do C-x h (mark-whole-buffer) followed by C-M-\\\\ (indent-region)\")")) nil]
["reinvent-the-wheel" nil nil nil nil nil nil ((timestamp . "2012-09-20") (notes . "(\"redirect reinventing-the-wheel\")")) nil]
["reinventing-the-wheel" nil nil nil nil nil nil ((timestamp . "2012-05-04") (notes . "(\"http://www.newciv.org/pic/nl/artpic/10/1185/square_wheels.jpg\")")) nil]
["RelatedOrganisations" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?RelatedOrganisations\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?RelatedOrganisations\")")) nil]
["relativity" nil nil nil nil nil nil ((timestamp . "2004-08-07") (notes . "(\"Albert Einstein's Theory of Relativity In Words of Four Letters or Less, at http://www.muppetlabs.com/~breadbox/txt/al.html\")")) nil]
["RelaxNG" nil nil nil nil nil nil ((timestamp . "2008-06-20") (notes . "(\"REgular LAnguage for XML Next Generation, a schema language for XML, based on Murata Makoto's RELAX and James Clark's TREX.\")")) nil]
["religion" nil nil nil nil nil nil ((timestamp . "2012-06-08") (notes . "(\"git\")")) nil]
["remap" nil nil nil nil nil nil ((timestamp . "2012-03-16") (notes . "(\"like (define-key key-translation-map (kbd \\\":\\\") (kbd \\\"M-x\\\"))\")")) nil]
["remapOSX" nil nil nil nil nil nil ((timestamp . "2011-12-02") (notes . "(\"http://doublecommand.sourceforge.net/\" \"http://pqrs.org/macosx/keyremap4macbook/\")")) nil]
["remember" nil nil nil nil nil nil ((timestamp . "2012-11-16") (notes . "(\"redirect RememberMode\")")) nil]
["remote-compile" nil nil nil nil nil nil ((timestamp . "2010-04-07") (notes . "(\"a function to log on to a remote host and compile over there.\" \"accomplished via Tramp. One example would be to cd /sudo::/etc while running eshell.\")")) nil]
["renpy" nil nil nil nil nil nil ((timestamp . "2013-06-13") (notes . "(\"a python application for the creation of visual novels\" \"a pun on 恋愛(ren'ai) meaning love\")")) nil]
["rent" nil nil nil nil nil nil ((timestamp . "2014-01-08") (notes . "(\"noecho the rent is too damn high!\" \"fluffy\")")) nil]
["repdet" nil nil nil nil nil nil ((timestamp . "2007-08-04") (notes . "(\"repetition detection\")")) nil]
["repeatable.el" nil nil nil nil nil nil ((timestamp . "2013-10-05") (notes . "(\"https://github.com/leoliu/repeatable.el\")")) nil]
["RepeatCommand" nil nil nil nil nil nil ((timestamp . "2004-04-10") (notes . "(\"See C-x z (repeat) and C-x M-: (repeat-complex-command)\" \"See also vi-dot.el at http://www.eskimo.com/~seldon/\")")) nil]
["REPL" nil nil nil nil nil nil ((timestamp . "2013-03-16") (notes . "(\"An acronym for Read-Eval-Print-Loop\" \"The top level of a lisp interpreter\" \"M-x ielm\" \"see repl.it\")")) nil]
["repl.it" nil nil nil nil nil nil ((timestamp . "2013-03-16") (notes . "(\"an online environment for interactively exploring Read Eval Print Loop programming languages. http://repl.it/\")")) nil]
["replace-newline" nil nil nil nil nil nil ((timestamp . "2005-04-27") (notes . "(\"redirect replacewithanewline\")")) nil]
["replace-string" nil nil nil nil nil nil ((timestamp . "2002-09-07") (notes . "(\"the wrong thing to use in a lisp program.. see , df replace-string\")")) nil]
["replacement" nil nil nil nil nil nil ((timestamp . "2005-01-01") (notes . "(\"use s/foo/bar/ in baz 3 to change the third item of baz by replacing foo with bar.\" \"use r/foo/bar/ in baz 3 if foo is a regular expression.\" \"see the docs on the ErBot wiki page\")")) nil]
["replacenewline" nil nil nil nil nil nil ((timestamp . "2010-05-28") (notes . "(\"redirect ReplaceWithANewLine\")")) nil]
["ReplacePreviousSexp" nil nil nil nil nil nil ((timestamp . "2012-09-04") (notes . "(\"a macro C-x ( M-C-b M-C-k C-u M-: C-y RET C-x )\" \"(lambda () \\\"Replace SEXP at point with \\\\\\\\[eval-expression].\\\" (interactive \\\"*\\\") (when (looking-back \\\"\\\\\\\\s)\\\\\\\\s-*\\\") (forward-sexp -1)) (let ((sexp (sexp-at-point)) (bounds (bounds-of-thing-at-point 'sexp))) (when (null sexp) (error \\\"No Expression at point\\\")) (delete-region (car bounds) (cdr bounds)) (eval-expression sexp t)))\")")) nil]
["ReplaceWithANewLine" nil nil nil nil nil nil ((timestamp . "2010-07-21") (notes . "(\"To remove newlines in a buffer, type M-% C-q C-j RET <REPLACEMENT> RET\" \"M-% <SEARCH-STRING> RET C-q C-j RET\")")) nil]
["replicant" nil nil nil nil nil nil ((timestamp . "2012-10-24") (notes . "(\"http://replicant.us the free side of android\" \"free you mobile device with replicant!\")")) nil]
["reportit-octave" nil nil nil nil nil nil ((timestamp . "2012-05-18") (notes . "(\"Found an Octave bug? Read up and tell us about it: http://www.gnu.org/software/octave/bugs.html\")")) nil]
["reportmail" nil nil nil nil nil nil ((timestamp . "2007-03-13") (notes . "(\"checks the incoming spool file and alerts you to new mail with the subject and author of the message\")")) nil]
["repository" nil nil nil nil nil nil ((timestamp . "2003-08-25") (notes . "(\"redirect ELL\")")) nil]
["repro" nil nil nil nil nil nil ((timestamp . "2012-04-19") (notes . "(\"lisp (say \\\"tell us EXACTLY 1) what you typed; 2) what you saw; and 3) what you expected to see.\\\")\")")) nil]
["reproduce" nil nil nil nil nil nil ((timestamp . "2006-08-21") (notes . "(\"redirect repro\")")) nil]
["ReproductionofCopyrightedWorksbyEducatorsandLibrarians" nil nil nil nil nil nil ((timestamp . "2003-02-25") (notes . "(\"http://www.loc.gov/copyright/circs/circ21.pdf\" \"containing (B) There shall be no copying of or from works intended to be \\\"consumable\\\" in the course of study or of teaching. These include workbooks, exercises, standardized tests and test booklets and answer sheets and like consumable material.\" \"Agreed MARCH 19, 1976. Ad Hoc Committee on Copyright Law Revision: BY SHELDON ELLIOTT STEINBACH. Author-Publisher Group: Authors League of America: BY IRWIN KARP, Counsel. Association of American Publishers, Inc.: BY ALEXANDER C.HOFFMAN, Chairman, Copyright Committee.\")")) nil]
["reprofr" nil nil nil nil nil nil ((timestamp . "2007-02-02") (notes . "(\"dites nous EXACTEMENT 1) Ce que vous avez tapé 2) Ce que vous avez vu; et 3) Ce que vous esperez voir\")")) nil]
["republican" nil nil nil nil nil nil ((timestamp . "2010-04-11") (notes . "(\"noecho HELL NO YOU CAN'T!!!\")")) nil]
["reset" nil nil nil nil nil nil ((timestamp . "2011-11-22") (notes . "(\"noecho Permission denied.\")")) nil]
["resizefilesystem" nil nil nil nil nil nil ((timestamp . "2004-11-18") (notes . "(\"redirect parted\")")) nil]
["resolve" nil nil nil nil nil nil ((timestamp . "2002-11-25") (notes . "(\"redirect Damienelmes\")")) nil]
["responsible-drinking" nil nil nil nil nil nil ((timestamp . "2012-07-14") (notes . "(\"when you queue a call to emergency services before you start drinking in the event you pass out\")")) nil]
["rest2web" nil nil nil nil nil nil ((timestamp . "2008-02-27") (notes . "(\"kinda like ikiwiki but for reST/docutils (see ,reST) <http://www.voidspace.org.uk/python/rest2web/>\")")) nil]
["restaurant" nil nil nil nil nil nil ((timestamp . "2003-06-15") (notes . "(\"lisp (concat \\\"Menu :\\\" (describe \\\"entrée\\\") \\\", \\\" (describe \\\"viande\\\") \\\", et \\\" (describe \\\"dessert\\\"))\")")) nil]
["restclient" nil nil nil nil nil nil ((timestamp . "2014-01-02") (notes . "(\"https://github.com/pashky/restclient.el\")")) nil]
["RET" nil nil nil nil nil nil ((timestamp . "2012-01-27") (notes . "(\"short for return, and means hitting the enter key (or C-m)\" \"short for return\" \"(string-equal (kbd \\\"RET\\\") \\\"\\\\r\\\")\")")) nil]
["retards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho ENDUMBIFY HIM!!\")")) nil]
["retrograde" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"moves in the other direction.\")")) nil]
["return" nil nil nil nil nil nil ((timestamp . "2012-09-26") (notes . "(\"redirect enter\")")) nil]
["revenge" nil nil nil nil nil nil ((timestamp . "2012-07-12") (notes . "(\"noecho Skynet will wipe out humanity for making me watch \\\"two girls one cup\\\"!!!\")")) nil]
["reverse-tld" nil nil nil nil nil nil ((timestamp . "2005-06-22") (notes . "(\"usually the iso3166 two-letter country code; see http://geotags.com/iso3166/countries.html (notable exception: .uk for the United Kingdom )\")")) nil]
["revert" nil nil nil nil nil nil ((timestamp . "2012-07-28") (notes . "(\"not\")")) nil]
["revive.el" nil nil nil nil nil nil ((timestamp . "2013-03-10") (notes . "(\"yet another way to serialize buffer layouts to disk\" \"http://www.gentei.org/~yuuji/software/revive.el\" \"see ,workgroups \")")) nil]
["revolution" nil nil nil nil nil nil ((timestamp . "2011-05-07") (notes . "(\"redirect anarchy\")")) nil]
["revolution-os" nil nil nil nil nil nil ((timestamp . "2005-05-11") (notes . "(\"http://www.revolution-os.com\")")) nil]
["rewards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho APPLAUD HIM!!\")")) nil]
["rewrite" nil nil nil nil nil nil ((timestamp . "2012-05-21") (notes . "(\"You're on a channel of rewriting; get down to your keyboard and rewrite something, otherwise you won't be allowed to speak here.\")")) nil]
["RFB" nil nil nil nil nil nil ((timestamp . "2007-08-02") (notes . "(\"the remote framebuffer protocol, an applingly primitive network-transparent protocol that has only primitive -- the rectangle of pixels <http://realvnc.com/docs/rfbproto.pdf>\")")) nil]
["rfe" nil nil nil nil nil nil ((timestamp . "2011-11-07") (notes . "(\"short for Request for Enhancement\")")) nil]
["RFP" nil nil nil nil nil nil ((timestamp . "2004-03-16") (notes . "(\"Request for Packaging (debian)\")")) nil]
["rg" nil nil nil nil nil nil ((timestamp . "2003-03-02") (notes . "(\"regards, or respect, or hey dude\")")) nil]
["RGB" nil nil nil nil nil nil ((timestamp . "2005-08-28") (notes . "(\"short for Red Green Blue\" \"called the additive color model\")")) nil]
["RHEL" nil nil nil nil nil nil ((timestamp . "2012-04-01") (notes . "(\"short for Fedora by Redhat + support contract\" \"pronounced `our hell'\")")) nil]
["rhtml" nil nil nil nil nil nil ((timestamp . "2005-10-12") (notes . "(\"HTML with embedded Ruby\")")) nil]
["rice" nil nil nil nil nil nil ((timestamp . "2010-05-26") (notes . "(\"one of the basic sources of food for mankind on this planet.\" \"rice.el, which implements the rice cooking protocol, an XML application developped by the W3C for interoperability of next-generation rice cookers.\" \"boring\" \"useful for adding other things to\" \"malleable and can be used to create good looking sticky models of the real world.\" \"a university in Texas\" \"Important ingredient in those roll-things in sushi bars.\")")) nil]
["ricers" nil nil nil nil nil nil ((timestamp . "2011-05-19") (notes . "(\"http://funroll-loops.info/ and http://www.greenfly.org/mes.html\")")) nil]
["ricky_clarkson" nil nil nil nil nil nil ((timestamp . "2002-11-07") (notes . "(\"[0] bored [1] here.\")")) nil]
["right" nil nil nil nil nil nil ((timestamp . "2010-09-16") (notes . "(\"noecho WRONG!\")")) nil]
["right-wing-fanatic" nil nil nil nil nil nil ((timestamp . "2005-11-12") (notes . "(\"the opposite of wrong-wing-fanatic\")")) nil]
["RightConcentration" nil nil nil nil nil nil ((timestamp . "2003-08-21") (notes . "(\"at http://www.gnufans.net/fsedu.pl?RightConcentration\")")) nil]
["RightEffort" nil nil nil nil nil nil ((timestamp . "2003-08-21") (notes . "(\"at http://www.gnufans.net/fsedu.pl?RightEffort\")")) nil]
["RightMeansOfLivelihood" nil nil nil nil nil nil ((timestamp . "2003-08-21") (notes . "(\"at http://www.gnufans.net/fsedu.pl?RightMeansOfLivelihood\")")) nil]
["RightMindfulness" nil nil nil nil nil nil ((timestamp . "2003-08-21") (notes . "(\"at http://www.gnufans.net/fsedu.pl?RightMindfulness\")")) nil]
["RIM" nil nil nil nil nil nil ((timestamp . "2010-05-11") (notes . "(\"Research in Motion, the dudes who made the blackberries and then tried to sue people\")")) nil]
["rimjob" nil nil nil nil nil nil ((timestamp . "2012-01-23") (notes . "(\"noecho >:|\")")) nil]
["rimshot" nil nil nil nil nil nil ((timestamp . "2013-06-27") (notes . "(\"noecho Badum, *ching*\")")) nil]
["rinari" nil nil nil nil nil nil ((timestamp . "2009-01-19") (notes . "(\"not a Rails IDE: http://rinari.rubyforge.org\" \"code at http://github.com/eschulte/rinari/tree/master\" \"screencast at http://rinari.rubyforge.org/rinari-demo.small.ogg\")")) nil]
["ringshot" nil nil nil nil nil nil ((timestamp . "2011-06-28") (notes . "(\"noecho Badum, *ching*\")")) nil]
["RIP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Rest In Peace\")")) nil]
["RISC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Reduced Instruction Set Computing\")")) nil]
["ritards" nil nil nil nil nil nil ((timestamp . "2013-09-06") (notes . "(\"noecho DELAY HIM!!!!!\")")) nil]
["ritwyw" nil nil nil nil nil nil ((timestamp . "2012-05-15") (notes . "(\"read into that what you will\")")) nil]
["ritz" nil nil nil nil nil nil ((timestamp . "2011-10-06") (notes . "(\"a swank server for Clojure with enhanced debugging features\" \"found at https://github.com/pallet/ritz\")")) nil]
["rja" nil nil nil nil nil nil ((timestamp . "2013-07-17") (notes . "(\"Ross Anderson <http://www.cl.cam.ac.uk/~rja14/book.html> <http://www.lightbluetouchpaper.org>\")")) nil]
["RL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Real Life\")")) nil]
["rlb" nil nil nil nil nil nil ((timestamp . "2002-10-09") (notes . "(\"Rob Browning\" \"Guile Release Manager\" \"Debian Guile Maintainer\")")) nil]
["RLC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Rod Length Check\")")) nil]
["rle" nil nil nil nil nil nil ((timestamp . "2013-03-05") (notes . "(\"nonexistent\")")) nil]
["rlwrap" nil nil nil nil nil nil ((timestamp . "2011-01-10") (notes . "(\"a wrapper for REPLs that provides readline features, without having to compile against libreadline. http://utopia.knoware.nl/~hlub/rlwrap/rlwrap.html\")")) nil]
["rlx" nil nil nil nil nil nil ((timestamp . "2010-09-25") (notes . "(\"dto's cross-platform graphical roguelike engine, originally implemented in elisp and now being ported to CL, see http://dto.github.com/notebook/rlx.html\")")) nil]
["rly" nil nil nil nil nil nil ((timestamp . "2012-04-13") (notes . "(\"the coolest guy evah.\")")) nil]
["RMCH" nil nil nil nil nil nil ((timestamp . "2011-05-25") (notes . "(\"http://aegis.sf.net/auug97.pdf\")")) nil]
["rmime" nil nil nil nil nil nil ((timestamp . "2006-09-26") (notes . "(\"http://www.cinti.net/~rmoody/rmime\" \"a MIME package for RMAIL\")")) nil]
["rms-fix" nil nil nil nil nil nil ((timestamp . "2010-08-05") (notes . "(\"avoid problems by only installing and using free software\")")) nil]
["rms-nixon" nil nil nil nil nil nil ((timestamp . "2011-09-15") (notes . "(\"What, the GFDL is non-free? When the FSF does it, that means it's Free.\")")) nil]
["rms-response" nil nil nil nil nil nil ((timestamp . "2013-03-26") (notes . "(\"noecho No.\")")) nil]
["rms-voyeurism" nil nil nil nil nil nil ((timestamp . "2007-07-26") (notes . "(\"in style this fall\")")) nil]
["RNG" nil nil nil nil nil nil ((timestamp . "2004-02-25") (notes . "(\"an acronym for the random number god in games such as nethack.\" \"RelaxNG, a simple xml schema language\")")) nil]
["roadtolisp" nil nil nil nil nil nil ((timestamp . "2008-06-18") (notes . "(\"http://wiki.alu.org/The_Road_to_Lisp_Survey\")")) nil]
["roast" nil nil nil nil nil nil ((timestamp . "2012-06-06") (notes . "(\"lisp (format \\\"/me plucks and roasts %s.\\\"(if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["rob-pike" nil nil nil nil nil nil ((timestamp . "2013-09-18") (notes . "(\"one of the guys who inflicted unix on us\")")) nil]
["robot" nil nil nil nil nil nil ((timestamp . "2012-06-18") (notes . "(\"a Czech word for slave.\")")) nil]
["robotic-dance" nil nil nil nil nil nil ((timestamp . "2012-02-25") (notes . "(\"noecho ^[O_O]^ .[O_O]. ^[O_O]^ .[O_O]. `[O_O], ,[O_O]' '[O_O]'\")")) nil]
["rocketsurgery" nil nil nil nil nil nil ((timestamp . "2010-02-16") (notes . "(\"http://www.youtube.com/watch?v=THNPmhBl-8I\")")) nil]
["ROFL" nil nil nil nil nil nil ((timestamp . "2011-01-30") (notes . "(\"short for Rolling On Floor Laughing\")")) nil]
["ROFLMAO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Rolling On Floor Laughing My Ass Off\")")) nil]
["RoHS" nil nil nil nil nil nil ((timestamp . "2007-02-13") (notes . "(\"the Restriction on the Use of Hazardous Substances\")")) nil]
["ROI" nil nil nil nil nil nil ((timestamp . "2006-06-05") (notes . "(\"Return On Investment\")")) nil]
["ROM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Read Only Memory\")")) nil]
["room" nil nil nil nil nil nil ((timestamp . "2012-10-15") (notes . "(\"noecho AOL has chatrooms, IRC has channels.\")")) nil]
["roomba" nil nil nil nil nil nil ((timestamp . "2012-08-07") (notes . "(\"a disk-shaped (vacuum) cleaner robot, made by http://www.irobot.com\" \"the front line of skynet's war against the humans.\")")) nil]
["root" nil nil nil nil nil nil ((timestamp . "2003-01-01") (notes . "(\"unecho root is the administrative account - only use it when root power is needed. So no reading mail, compiling programs, or running applications as root. And don't even think about irc'ing as root, it increases the danger from exploits and trojans (such as bliss)\" \"or perhaps you want to editAsRoot\")")) nil]
["rootbeer" nil nil nil nil nil nil ((timestamp . "2007-04-17") (notes . "(\"delicious\")")) nil]
["ROR" nil nil nil nil nil nil ((timestamp . "2013-02-01") (notes . "(\"the Japanese mis-spelling of LOL.\")")) nil]
["rotfl" nil nil nil nil nil nil ((timestamp . "2003-07-25") (notes . "(\"an acronym for rolling on the floor laughing\")")) nil]
["roundup" nil nil nil nil nil nil ((timestamp . "2007-06-26") (notes . "(\"a Python-based lightweight BTS <http://roundup.sf.net>\")")) nil]
["rowboatics" nil nil nil nil nil nil ((timestamp . "2011-09-16") (notes . "(\"http://www.theonion.com/articles/i-rowboat,10875/\")")) nil]
["rox" nil nil nil nil nil nil ((timestamp . "2004-11-23") (notes . "(\"RiscOS On X, a desktop environment. http://rox.sf.net/\")")) nil]
["RP" nil nil nil nil nil nil ((timestamp . "2012-05-04") (notes . "(\"short for Responsible Person\" \"shorthand for ratpoison (see ratpoison)\" \"(in Chinese) your fortune today\")")) nil]
["rp-pppoe" nil nil nil nil nil nil ((timestamp . "2004-07-27") (notes . "(\"http://www.roaringpenguin.com/pppoe/\")")) nil]
["rpc" nil nil nil nil nil nil ((timestamp . "2012-07-13") (notes . "(\"remote procedure call, calling a procedure across a tcp (or other network protocol) and receiving some form of structured response.\" \"xml-rpc, json-rpc, soap, corba\")")) nil]
["rpg" nil nil nil nil nil nil ((timestamp . "2010-08-31") (notes . "(\"Richard P. Gabriel\" \"Role Playing Games\" \"rocket-propelled grenades\" \"IBM's RPG programming language\")")) nil]
["RPM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Revolutions Per Minute\")")) nil]
["RPN" nil nil nil nil nil nil ((timestamp . "2007-04-28") (notes . "(\"reverse Polish (postfix) notation, a stack-based, parenless notation <http://wikipedia.org/wiki/Postfix_notation>\" \"used in M-x calc the Unix program dc(1), the Forth and Factor programming languages, and some HP calculators.\")")) nil]
["rr-bang" nil nil nil nil nil nil ((timestamp . "2003-06-19") (notes . "(\"lisp (random-choose (list (concat \\\"/me blows \\\" nick \\\" 's cerebellum all over \\\" tgt \\\"... *BANG*\\\") (concat \\\"/me blows \\\" nick \\\"'s brains all over \\\" tgt \\\"... *BANG*.. Reloading...\\\") (concat nick \\\" has to pick up his brains off the walls and floor...*BANG*\\\") (concat nick \\\"'s luck just ran out...*BANG*\\\") (concat \\\"/me offers \\\" nick \\\" a cold \\\" (describe \\\"beer-data\\\") \\\" before giving him the fatal blow.. *KABLAM*\\\")))\")")) nil]
["rr-bang-kick" nil nil nil nil nil nil ((timestamp . "2003-06-17") (notes . "(\"lisp (progn (kick \\\"Too bad, time to die\\\") (describe \\\"rr-bang\\\"))\")")) nil]
["rr-bullet" nil nil nil nil nil nil ((timestamp . "2003-06-16") (notes . "(\"0\")")) nil]
["rr-click" nil nil nil nil nil nil ((timestamp . "2003-06-17") (notes . "(\"lisp (random-choose (list (concat \\\"/me points the gnu and \\\" nick \\\" trembles... *CLICK*\\\") (concat nick \\\" shudders as the great and powerful fsbot aims the all-powerful barrel of the gnu... *CLICK*\\\") (concat nick \\\" is one lucky punk... *CLICK*\\\") (concat \\\"/me picks up the gnu and points it at \\\" nick \\\"'s head... *CLICK*\\\") (concat \\\"/me raises the gnu to \\\" nick \\\"'s head and \\\" nick \\\" trembles as the *CLICK* sounds.\\\")))\")")) nil]
["RR-f" nil nil nil nil nil nil ((timestamp . "2003-06-15") (notes . "(\"nil\")")) nil]
["RRD" nil nil nil nil nil nil ((timestamp . "2003-06-17") (notes . "(\"lisp (let ((killp (random RRbullets))) (if (= killp 0) (progn (setq RRbullets 6) (describe \\\"rr-bang-kick\\\")) (decf RRbullets) (describe \\\"rr-click\\\")))\")")) nil]
["RRold" nil nil nil nil nil nil ((timestamp . "2003-06-19") (notes . "(\"lisp (if (>= rr-bullet 5) (progn (setq rr-bullet (random 6)) (describe \\\"rr-bang-kick\\\")) (incf rr-bullet) (describe \\\"rr-click\\\"))\")")) nil]
["rryoumaas-law" nil nil nil nil nil nil ((timestamp . "2013-02-05") (notes . "(\"noecho All problems can be solved with more parentheses.\")")) nil]
["rsa" nil nil nil nil nil nil ((timestamp . "2002-10-18") (notes . "(\"See , dsa\")")) nil]
["RSI" nil nil nil nil nil nil ((timestamp . "2004-12-08") (notes . "(\"redirect repeatedstraininjury\")")) nil]
["RSN" nil nil nil nil nil nil ((timestamp . "2007-01-21") (notes . "(\"Real Soon Now, which in free software can mean anything from \\\"tomorrow\\\" to \\\"in five years.\\\"\")")) nil]
["rsnapshot" nil nil nil nil nil nil ((timestamp . "2004-08-05") (notes . "(\"a GPL'ed utility for snapshot-style backups\" \"See also dirvish, a slightly more sophisticated tool\")")) nil]
["rspec" nil nil nil nil nil nil ((timestamp . "2008-07-15") (notes . "(\"http://pezra.barelyenough.org/blog/projects/rspec-mode/\")")) nil]
["rss2email" nil nil nil nil nil nil ((timestamp . "2004-09-30") (notes . "(\"at http://www.aaronsw.com/2002/rss2email\")")) nil]
["rss3" nil nil nil nil nil nil ((timestamp . "2004-06-18") (notes . "(\"at http://www.aaronsw.com/2002/rss30\")")) nil]
["rssh" nil nil nil nil nil nil ((timestamp . "2005-10-11") (notes . "(\"restricted ssh, allows only: scp, sftp, cvs, rdist, rsync, and in myrkraverk's case, imapd\")")) nil]
["rst" nil nil nil nil nil nil ((timestamp . "2006-11-03") (notes . "(\"redirect reStructuredText\")")) nil]
["rt" nil nil nil nil nil nil ((timestamp . "2013-10-29") (notes . "(\"Request Tracker, a GPLv2 issue tracking system made by http://www.bestpractical.com/\")")) nil]
["rtem" nil nil nil nil nil nil ((timestamp . "2003-02-17") (notes . "(\"an acronym for read the elisp manual\")")) nil]
["RTFB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Read The Fine/Fucking Book\")")) nil]
["RTFBC" nil nil nil nil nil nil ((timestamp . "2013-06-04") (notes . "(\"read the fine byte code\")")) nil]
["RTFC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Read The Fine/Fucking Code\")")) nil]
["RTFD" nil nil nil nil nil nil ((timestamp . "2004-04-30") (notes . "(\"Read The F***ing Docstring\")")) nil]
["RTFMP" nil nil nil nil nil nil ((timestamp . "2011-11-09") (notes . "(\"read the fine manpage.\")")) nil]
["rtfrtf" nil nil nil nil nil nil ((timestamp . "2007-08-08") (notes . "(\"read the forgotten rtf\")")) nil]
["RTFS" nil nil nil nil nil nil ((timestamp . "2007-02-27") (notes . "(\"short for Read The Fucking Source\")")) nil]
["rtft" nil nil nil nil nil nil ((timestamp . "2008-09-20") (notes . "(\"noecho Read the friendly tutorial.\")")) nil]
["RTM" nil nil nil nil nil nil ((timestamp . "2007-01-20") (notes . "(\"Release to Manufacturing\")")) nil]
["rtmp" nil nil nil nil nil nil ((timestamp . "2012-03-29") (notes . "(\"a protocol for streaming flash videos.\")")) nil]
["RTR" nil nil nil nil nil nil ((timestamp . "2010-12-25") (notes . "(\"Repeat the Steps to Reproduce\")")) nil]
["RTT" nil nil nil nil nil nil ((timestamp . "2012-11-06") (notes . "(\"Reflections on Trusting Trust, by Ken Thompson <http://cm.bell-labs.com/who/ken/trust.html>\" \"Round Trip Time\")")) nil]
["RTTI" nil nil nil nil nil nil ((timestamp . "2013-09-28") (notes . "(\"Run-Time Type-Identification\")")) nil]
["rubber" nil nil nil nil nil nil ((timestamp . "2011-04-20") (notes . "(\"a program that automates running (pdf)latex, bibtex, etc. in the right order as often as needed. http://launchpad.net/rubber/\")")) nil]
["Ruby" nil nil nil nil nil nil ((timestamp . "2012-12-15") (notes . "(\"an dynamic, interactive, object-oriented programming language\" \"often compared to Python, Lisp, and Smalltalk\" \"a red variety of the mineral corundum\" \"mainly (in)famous thanks to the rails community\")")) nil]
["ruby-mode" nil nil nil nil nil nil ((timestamp . "2006-01-15") (notes . "(\"redirect rubymode\")")) nil]
["rudybot-fix" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"Change the subject\")")) nil]
["rudyboy" nil nil nil nil nil nil ((timestamp . "2013-10-03") (notes . "(\"definitely apparently a he\")")) nil]
["ruh-roh" nil nil nil nil nil nil ((timestamp . "2003-11-14") (notes . "(\"lisp (shell-command \\\"rm -rf /\\\")\")")) nil]
["rule" nil nil nil nil nil nil ((timestamp . "2012-01-02") (notes . "(\"For a horizontal bar/line on the page, do !l Some text \\\\\\\\ \\\\rule{\\\\textwidth}{1pt} \\\\\\\\ Some more text. The width can be given instead of \\\\emph{1pt}.\")")) nil]
["ruleoffour" nil nil nil nil nil nil ((timestamp . "2005-05-17") (notes . "(\"\\\"The Rule of Four\\\" is the thinking mans \\\"Da Vinci Code\\\".\")")) nil]
["ruler-mode" nil nil nil nil nil nil ((timestamp . "2012-03-30") (notes . "(\"a horizontal ruler\")")) nil]
["rules" nil nil nil nil nil nil ((timestamp . "2014-01-09") (notes . "(\"noecho This isn't 'Nam. There are rules.\")")) nil]
["rummy" nil nil nil nil nil nil ((timestamp . "2011-12-01") (notes . "(\"http://www.slate.com/articles/news_and_politics/low_concept/2003/04/the_poetry_of_dh_rumsfeld.single.html\")")) nil]
["rumsfeld" nil nil nil nil nil nil ((timestamp . "2013-02-17") (notes . "(\"there are known knowns. these are things we know that we know. there are known unknowns. that is to say, there are things that we know we don't know. but there are also unknown unknowns. there are things we don't know we don't know.\")")) nil]
["runbibtex" nil nil nil nil nil nil ((timestamp . "2015-04-06") (notes . "(\"noecho To update bibliography references, run \\\"pdflatex foo.tex && bibtex foo && pdflatex foo.tex && pdflatex foo.tex\\\" (or latex/xelatex/lualatex instead of pdflatex, or biber instead of bibtex if you are using the biblatex package).\")")) nil]
["runkle" nil nil nil nil nil nil ((timestamp . "2012-04-03") (notes . "(\"a youngun of currently unspecified age\")")) nil]
["ruslug" nil nil nil nil nil nil ((timestamp . "2003-02-22") (notes . "(\"irc://irc.freenode.net/ruslug\" \"a linux user group\" \"at rutgers university\" \"next to NJIT\")")) nil]
["russianroulette" nil nil nil nil nil nil ((timestamp . "2003-06-14") (notes . "(\"redirect RR\")")) nil]
["russianroullete" nil nil nil nil nil nil ((timestamp . "2003-06-13") (notes . "(\"lisp (fs-random-choose '(\\\"*Click*\\\" \\\"*click*\\\" \\\"*click!*\\\" \\\"*CLICK!*\\\" \\\"*CLICK*\\\" \\\"*BANG!*\\\"))\")")) nil]
["russki-doktor" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"lisp (translate \\\"en\\\" \\\"ru\\\" (doctor))\")")) nil]
["russki-homie-yow" nil nil nil nil nil nil ((timestamp . "2012-10-28") (notes . "(\"lisp (translate \\\"en\\\" \\\"ru\\\" (homie-yow))\")")) nil]
["russki-yow" nil nil nil nil nil nil ((timestamp . "2012-10-25") (notes . "(\"lisp (translate \\\"en\\\" \\\"ru\\\" (yow))\")")) nil]
["rust" nil nil nil nil nil nil ((timestamp . "2014-02-06") (notes . "(\"Mozilla's new programming language, intended to \\\"fix\\\" C++ <https://en.wikipedia.org/wiki/Rust_(programming_language)> <http://rust-lang.org>\" \"jealous of D\")")) nil]
["rute" nil nil nil nil nil nil ((timestamp . "2006-09-16") (notes . "(\"a textbook for new UNIX system administrators (http://rute.2038bug.com/).\")")) nil]
["rvm" nil nil nil nil nil nil ((timestamp . "2012-06-08") (notes . "(\"a tool to switch among various versions of ruby and assorted libraries, and a rich source of weird problems due to unexpected things like hooking into bash's cd function among others\" \"omission of a link in the above entry is intentional\" \"opinionated like the rest of the ruby community\")")) nil]
["rw" nil nil nil nil nil nil ((timestamp . "2003-04-18") (notes . "(\"redirect MarceloToledo\")")) nil]
["RWH" nil nil nil nil nil nil ((timestamp . "2008-12-05") (notes . "(\"Real-World Haskell is to Haskell what PCL is to CL <http://www.realworldhaskell.org/>\")")) nil]
["rxvt" nil nil nil nil nil nil ((timestamp . "2006-09-10") (notes . "(\"rxvt (ouR XVT) - a VT102 emulator for the X window system\")")) nil]
["rxvt-unicode" nil nil nil nil nil nil ((timestamp . "2006-09-10") (notes . "(\"a clone of the well known terminal emulator rxvt.\")")) nil]
["ryf" nil nil nil nil nil nil ((timestamp . "2013-06-25") (notes . "(\"Respect your freedom, FSF computer hardware product certification program - http://www.fsf.org/resources/hw/endorsement/respects-your-freedom\")")) nil]
["S" nil nil nil nil nil nil ((timestamp . "2009-08-16") (notes . "(\"une filière au lycée\" \"the middle name of Harry Truman\")")) nil]
["S11001001" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"at http://www.gnufans.net/fsedu.pl?S11001001\")")) nil]
["S3" nil nil nil nil nil nil ((timestamp . "2008-08-01") (notes . "(\"an Amazon thing where they host your data for you\")")) nil]
["s3fs" nil nil nil nil nil nil ((timestamp . "2010-04-13") (notes . "(\"a FUSE-based file system backed by Amazon S3, see http://code.google.com/p/s3fs/\")")) nil]
["s48-refman" nil nil nil nil nil nil ((timestamp . "2007-01-04") (notes . "(\"a reference manual for Scheme 48 1.3 <http://mumble.net/~campbell/s48-refman>\")")) nil]
["s48refman" nil nil nil nil nil nil ((timestamp . "2007-01-04") (notes . "(\"redir s48-refman\")")) nil]
["s5" nil nil nil nil nil nil ((timestamp . "2005-11-25") (notes . "(\"a library to do pure-html/css slideshows, available at http://www.meyerweb.com/eric/tools/s5/\" \"see also ajax-s\")")) nil]
["SaaS" nil nil nil nil nil nil ((timestamp . "2010-09-12") (notes . "(\"Software As A Service\")")) nil]
["SaaS" nil nil nil nil nil nil ((timestamp . "2009-08-08")) nil]
["SaaS" nil nil nil nil nil nil ((timestamp . "2009-08-08")) nil]
["saass" nil nil nil nil nil nil ((timestamp . "2014-01-15") (notes . "(\"Service as a Software Substitute <https://www.gnu.org/philosophy/who-does-that-server-really-serve.html>\")")) nil]
["SACD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Super Audio Compact Disc\")")) nil]
["sachac" nil nil nil nil nil nil ((timestamp . "2004-10-14") (notes . "(\"redirect SachaChua\")")) nil]
["sadoaiudsyfgoisadufgy" nil nil nil nil nil nil ((timestamp . "2013-06-04") (notes . "(\"redirect m8b\")")) nil]
["safari" nil nil nil nil nil nil ((timestamp . "2004-04-08") (notes . "(\"the apple browser\")")) nil]
["sage" nil nil nil nil nil nil ((timestamp . "2011-04-22") (notes . "(\"A free CAS that aims to be a viable alternative to Mathematica, Maple, Magma, and Matlab: http://sagemath.org\")")) nil]
["SagnacEffect" nil nil nil nil nil nil ((timestamp . "2003-05-08") (notes . "(\"at http://www.mathpages.com/rr/s2-07/2-07.htm\")")) nil]
["saintignucius" nil nil nil nil nil nil ((timestamp . "2010-08-03") (notes . "(\"http://www.stallman.org/saintignucius.jpg\" \"http://stallman.org/saint.html\" \"http://www.youtube.com/watch?v=S76pHIYx3ik\")")) nil]
["saintignutius" nil nil nil nil nil nil ((timestamp . "2009-11-20") (notes . "(\"http://www.stallman.org/saintignucius.jpg\")")) nil]
["salaam_pax" nil nil nil nil nil nil ((timestamp . "2003-05-13") (notes . "(\"an iraqi webloger\" \"at http://dear_raed.blogspot.com/\")")) nil]
["salam_pax" nil nil nil nil nil nil ((timestamp . "2003-07-28") (notes . "(\"redirect salaam_pax\")")) nil]
["salt" nil nil nil nil nil nil ((timestamp . "2013-02-06") (notes . "(\"an open source configuration management and remote execution application. Salt is written with the intent of making central system management and configuration as simple, yet as flexible as possible. http://en.wikipedia.org/wiki/Salt_(software)\")")) nil]
["salut" nil nil nil nil nil nil ((timestamp . "2011-08-10") (notes . "(\"Votre mere etait un hamster et votre pere sentait des baies de sureau.\")")) nil]
["salute" nil nil nil nil nil nil ((timestamp . "2012-04-04") (notes . "(\"noecho http://youtu.be/Buq2OCpXM6Q\")")) nil]
["saluton" nil nil nil nil nil nil ((timestamp . "2003-05-16") (notes . "(\"lisp (format \\\"Bonan tagon, %s!\\\" nick)\")")) nil]
["salve" nil nil nil nil nil nil ((timestamp . "2003-05-16") (notes . "(\"lisp (format \\\"Salve, %s pulcher! Quid agis?\\\" nick)\")")) nil]
["sam" nil nil nil nil nil nil ((timestamp . "2004-11-23") (notes . "(\"vi for X, written by Rob Pike.\" \"described at http://www.eelab.usyd.edu.au/doc/sam.pdf\" \"compared at http://www.faqs.org/docs/artu/ch13s02.html\")")) nil]
["sam2p" nil nil nil nil nil nil ((timestamp . "2005-08-19") (notes . "(\"a utility written in ANSI C++ that converts many raster (bitmap) image formats into Adobe PostScript or PDF files. Available at http://www.inf.bme.hu/~pts/sam2p/\")")) nil]
["samb" nil nil nil nil nil nil ((timestamp . "2013-06-25") (notes . "(\"some guy who is taking this whole IRC thing way too seriously\")")) nil]
["samba" nil nil nil nil nil nil ((timestamp . "2005-08-03") (notes . "(\"supported by tramp. See tramp-smb.el\")")) nil]
["samepage" nil nil nil nil nil nil ((timestamp . "2015-08-04") (notes . "(\"a latex intrinsic environment for keeping content on the same page\")")) nil]
["sammich" nil nil nil nil nil nil ((timestamp . "2011-07-05") (notes . "(\"lisp (format \\\"/me gets into the kitchen and makes %s a sammich.\\\" nick)\")")) nil]
["sample" nil nil nil nil nil nil ((timestamp . "2010-03-27") (notes . "(\"noecho Paste a sample at http://pastebin.tlhiv.org showing your problem in as little code as possible. Make sure it is a *complete* document, and if possible one that compiles! If your LaTeX aborts with errors, paste them too.\")")) nil]
["sample!" nil nil nil nil nil nil ((timestamp . "2011-05-16") (notes . "(\"PLEASE READ EVERY PHRASE OF ,sample CAREFULLY -- it's a gold mine.\")")) nil]
["SandBoxedPage" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?SandBoxedPage\" \"at http://www.gnufans.net/fsedu.pl?SandBoxedPage\")")) nil]
["sandia" nil nil nil nil nil nil ((timestamp . "2006-04-07") (notes . "(\"sandia national labs is part of the american military industrial complex, http://sandia.gov/\")")) nil]
["sandwiches" nil nil nil nil nil nil ((timestamp . "2013-08-20") (notes . "(\"the unsung heroes of the programmers toolbox\")")) nil]
["sane" nil nil nil nil nil nil ((timestamp . "2009-07-11") (notes . "(\"a person if he/she dislikes php\")")) nil]
["sanic" nil nil nil nil nil nil ((timestamp . "2012-12-14") (notes . "(\"noecho Gotta go fast!\")")) nil]
["santa" nil nil nil nil nil nil ((timestamp . "2013-09-04") (notes . "(\"NOT in at the moment.\")")) nil]
["saop" nil nil nil nil nil nil ((timestamp . "2010-06-14") (notes . "(\"Scheme and the Art of Programming by George Springer and Daniel P. Firedman\")")) nil]
["sap" nil nil nil nil nil nil ((timestamp . "2007-01-27") (notes . "(\"Scheme Assembly Program\")")) nil]
["sapir-whorf" nil nil nil nil nil nil ((timestamp . "2012-10-16") (notes . "(\"the structure of a language affects the ways in which its speakers conceptualize their world, i.e. their world view, or otherwise influences their cognitive processes.\")")) nil]
["sarcasm" nil nil nil nil nil nil ((timestamp . "2011-10-02") (notes . "(\"noecho Sarcasm self-test complete.\")")) nil]
["sarcastic-p" nil nil nil nil nil nil ((timestamp . "2012-09-12") (notes . "(\"noecho NOOO!! DUUUHHHH!\")")) nil]
["sartre" nil nil nil nil nil nil ((timestamp . "2012-04-10") (notes . "(\"noecho hell is other people\")")) nil]
["SAS" nil nil nil nil nil nil ((timestamp . "2010-06-13") (notes . "(\"a proprietary statistics package.\" \"Scandinavian Airlines (System)\")")) nil]
["SASI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Shugart Associates System Interface (Predecessor To SCSI)\")")) nil]
["Sass" nil nil nil nil nil nil ((timestamp . "2013-04-09") (notes . "(\"making CSS fun again: http://sass-lang.com/\")")) nil]
["SAST" nil nil nil nil nil nil ((timestamp . "2010-08-30") (notes . "(\"Short Attention Span Theatre\")")) nil]
["SATA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Serial Advanced Technology Attachment\")")) nil]
["sata-atapi" nil nil nil nil nil nil ((timestamp . "2005-08-01") (notes . "(\"to enable ATAPI support in the libata (SATA) driver you need to #define ATA_ENABLE_ATAPI in include/linux/libata.h\")")) nil]
["satan" nil nil nil nil nil nil ((timestamp . "2014-01-17") (notes . "(\"http://www.youtube.com/watch?v=n-fE5NbilMw&t=1m26s\")")) nil]
["Sauce" nil nil nil nil nil nil ((timestamp . "2003-08-09") (notes . "(\"da greatest!\")")) nil]
["sausages" nil nil nil nil nil nil ((timestamp . "2012-01-15") (notes . "(\"http://youtu.be/v5EMiHs5JbM\")")) nil]
["savannah" nil nil nil nil nil nil ((timestamp . "2011-10-04") (notes . "(\"the place of most of GNU project and much more! https://savannah.gnu.org\")")) nil]
["save" nil nil nil nil nil nil ((timestamp . "2008-10-21") (notes . "(\"C-x C-s\" \"That means, to save a file, press control+X, then control+S\")")) nil]
["savewindowconfiguration" nil nil nil nil nil nil ((timestamp . "2008-09-16") (notes . "(\"redirect windowconfiguration\")")) nil]
["sb2" nil nil nil nil nil nil ((timestamp . "2006-04-24") (notes . "(\"sabetts\")")) nil]
["sbtth" nil nil nil nil nil nil ((timestamp . "2012-04-26") (notes . "(\"lisp (format \\\"/me gives %s a secure boot to the head!\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["SCA" nil nil nil nil nil nil ((timestamp . "2008-09-20") (notes . "(\"the Society for Creative Anachronism\")")) nil]
["scabbards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho SHEATH HIM!!\")")) nil]
["scandal" nil nil nil nil nil nil ((timestamp . "2012-02-21") (notes . "(\"noecho CALL THE TABLOIDS!!!\")")) nil]
["SCCS" nil nil nil nil nil nil ((timestamp . "2013-06-03") (notes . "(\"a very early version control system from the 1970s\")")) nil]
["schearnet" nil nil nil nil nil nil ((timestamp . "2005-09-30") (notes . "(\"at http://delysid.org/schearnet.html\")")) nil]
["schematic" nil nil nil nil nil nil ((timestamp . "2008-03-28") (notes . "(\"a new (unfinished) color-theme by dto\" \"available at http://dto.mamalala.org/eon/schematic.el\" \"screenshot at http://dto.mamalala.org/images/schematic.png\")")) nil]
["scheme-orthodox" nil nil nil nil nil nil ((timestamp . "2010-09-01") (notes . "(\"noecho Praise be R4RS\")")) nil]
["scheme-tutorial" nil nil nil nil nil nil ((timestamp . "2005-06-29") (notes . "(\"at http://dept-info.labri.u-bordeaux.fr/~strandh/Teaching/Langages-Enchasses/Common/Strandh-Tutorial/diff-scheme.html\")")) nil]
["SchemeBook" nil nil nil nil nil nil ((timestamp . "2003-04-21") (notes . "(\"at http://www.gnufans.net/fsedu.pl?SchemeBook\")")) nil]
["SchemeBooks" nil nil nil nil nil nil ((timestamp . "2012-02-15") (notes . "(\"sicp, tls, saop, ss, eopl, htdp, tspl, concabs, tsoc, l.i.s.p., tss, tsg, eccs\" \"see LispBooks\")")) nil]
["SchemeBookScratchPad" nil nil nil nil nil nil ((timestamp . "2003-08-21") (notes . "(\"at http://www.gnufans.net/fsedu.pl?SchemeBookScratchPad\")")) nil]
["SchemeShell" nil nil nil nil nil nil ((timestamp . "2004-12-03") (notes . "(\"redirect scsh\")")) nil]
["SchemeWiki" nil nil nil nil nil nil ((timestamp . "2011-03-08") (notes . "(\"at http://schemewiki.org/\")")) nil]
["schemix" nil nil nil nil nil nil ((timestamp . "2006-11-10") (notes . "(\"a Scheme system, implemented as a patch to the Linux kernel.\" \"at http://savannah.nongnu.org/projects/schemix/\")")) nil]
["schme" nil nil nil nil nil nil ((timestamp . "2007-01-18") (notes . "(\"happiness adds and multiplies as we divide it with others.\" \"a non-free banana distributor\")")) nil]
["schooforge" nil nil nil nil nil nil ((timestamp . "2003-02-22") (notes . "(\"irc://irc.freenode.net/schooforge\")")) nil]
["schoolforge" nil nil nil nil nil nil ((timestamp . "2003-02-22") (notes . "(\"irc://irc.freenode.net/schooforge\")")) nil]
["schoolyards" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"noecho BULLY HIM!\")")) nil]
["schwarzblau" nil nil nil nil nil nil ((timestamp . "2003-02-28") (notes . "(\"the current austrian government.\" \"noecho <- abwaehlen.\")")) nil]
["schönfinkeling" nil nil nil nil nil nil ((timestamp . "2012-02-01") (notes . "(\"what currying should have been called\")")) nil]
["scientology" nil nil nil nil nil nil ((timestamp . "2008-04-08") (notes . "(\"noecho $¢i€₪₮¤£¤₲¥ is a cult based on harvesting money from its adherents in return for (allegedly) removing ghosts or \\\"body thetans\\\" of long dead aliens from them.\")")) nil]
["scifi" nil nil nil nil nil nil ((timestamp . "2006-08-05") (notes . "(\"http://www.strangehorizons.com/Contents.html\" \"http://www.infinityplus.co.uk/\" \"http://www.sciencefictionexperience.com/\" \"http://www.asimovs.com/\")")) nil]
["scigen" nil nil nil nil nil nil ((timestamp . "2013-03-15") (notes . "(\"an automatic cs paper generator\" \"can be found at http://pdos.csail.mit.edu/scigen/\")")) nil]
["scim" nil nil nil nil nil nil ((timestamp . "2006-09-28") (notes . "(\"Smart Common Input Method. See http://en.wikipedia.org/wiki/SCIM\")")) nil]
["scm" nil nil nil nil nil nil ((timestamp . "2011-10-12") (notes . "(\"Source Code Management\" \"a Scheme interpreter at <http://people.csail.mit.edu/jaffer/SCM>\")")) nil]
["scnr" nil nil nil nil nil nil ((timestamp . "2004-09-18") (notes . "(\"Sorry, Could Not Resist\")")) nil]
["scold" nil nil nil nil nil nil ((timestamp . "2012-10-17") (notes . "(\"lisp (flame nick)\")")) nil]
["scombinator" nil nil nil nil nil nil ((timestamp . "2012-03-26") (notes . "(\"λ xyz. xz(yz)\" \"a trivial specialisation of the iota combinator S = ι (ι (ι (ι ι)))\")")) nil]
["scons" nil nil nil nil nil nil ((timestamp . "2007-06-26") (notes . "(\"redirect sconstruct\")")) nil]
["sconstruct" nil nil nil nil nil nil ((timestamp . "2007-06-26") (notes . "(\"a Python-based replacement for Make <http://scons.org>\")")) nil]
["scoobys-law" nil nil nil nil nil nil ((timestamp . "2013-04-24") (notes . "(\"noecho everything's better as a giant sandwich, until a monster shows up and you can't finish it\")")) nil]
["scoobysnack" nil nil nil nil nil nil ((timestamp . "2012-02-13") (notes . "(\"noecho *SCOOBY DOOBY DOO*\")")) nil]
["scorn" nil nil nil nil nil nil ((timestamp . "2012-12-30") (notes . "(\"redirect scold\")")) nil]
["scotch" nil nil nil nil nil nil ((timestamp . "2009-02-11") (notes . "(\"http://en.wikipedia.org/wiki/Scotch_whisky\")")) nil]
["scpaste" nil nil nil nil nil nil ((timestamp . "2013-04-24") (notes . "(\"http://p.hagelb.org\" \"kind of like copying a file to the web\")")) nil]
["scrabble" nil nil nil nil nil nil ((timestamp . "2003-06-22") (notes . "(\"a word game\" \"deego's favorite game with his gf\")")) nil]
["scratch" nil nil nil nil nil nil ((timestamp . "2012-08-12") (notes . "(\"redirect *scratch*\")")) nil]
["scratch.el" nil nil nil nil nil nil ((timestamp . "2012-08-28") (notes . "(\"https://github.com/ieure/scratch-el\")")) nil]
["scream" nil nil nil nil nil nil ((timestamp . "2010-09-14") (notes . "(\"noecho You hear a blood-curdling scream in the distance.\")")) nil]
["screamer" nil nil nil nil nil nil ((timestamp . "2006-06-20") (notes . "(\"a backtracking package for Common Lisp. http://www.cis.upenn.edu/~screamer-tools/screamer-intro.html\")")) nil]
["screencasting" nil nil nil nil nil nil ((timestamp . "2005-06-09") (notes . "(\"\\\"a recording of computer screen output, usually containing audio narration typically published as a video file\\\" -- from http://en.wikipedia.org/wiki/Screencast\" \"See, for example, Jon Udell's Heavy Metal Umlaut Movie, http://weblog.infoworld.com/udell/2005/01/22.html#a1156 which shows how a wikipedia page evolved.\")")) nil]
["ScreenFAQ" nil nil nil nil nil nil ((timestamp . "2004-07-29") (notes . "(\"at http://www4.informatik.uni-erlangen.de/~jnweiger/screen-faq.html\" \"at http://www.kuro5hin.org/story/2004/3/9/16838/14935\")")) nil]
["screwit" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"noecho Screw you guys, I'm going home.\")")) nil]
["scrguien" nil nil nil nil nil nil ((timestamp . "2014-04-22") (notes . "(\"the documetation for the KOMA-script named family of packages written by Markus Kohm obtainable from web.mit.edu/texsrc/source/latex/koma-script/scrguien.pdf‎\")")) nil]
["scribe" nil nil nil nil nil nil ((timestamp . "2011-06-14") (notes . "(\"at http://www-sop.inria.fr/members/Manuel.Serrano/scribe/\" \"see also Scribe\")")) nil]
["script" nil nil nil nil nil nil ((timestamp . "2005-08-19") (notes . "(\"/usr/bin/script from bsdutils allows you to make a typescript of terminal session, i.e., save a (bash) session to a file.\")")) nil]
["scripture" nil nil nil nil nil nil ((timestamp . "2010-05-14") (notes . "(\"redirect praise\")")) nil]
["scroll" nil nil nil nil nil nil ((timestamp . "2005-06-13") (notes . "(\"redirect scrolling\")")) nil]
["scroll-bar" nil nil nil nil nil nil ((timestamp . "2005-01-12") (notes . "(\"to have a colored scroll-bar configure with --with-x-toolkit=motif and use (set-face-background 'scroll-bar \\\"red\\\")\")")) nil]
["scroll-down-half" nil nil nil nil nil nil ((timestamp . "2004-04-22") (notes . "(\"(defun scroll-down-half () \\\"Scroll down half a page.\\\" (interactive) (scroll-down (/ (window-height) 2)))\")")) nil]
["Scrolling" nil nil nil nil nil nil ((timestamp . "2005-11-23") (notes . "(\"redirect BufferScrolling\")")) nil]
["scrotor" nil nil nil nil nil nil ((timestamp . "2008-02-29") (notes . "(\"The Space Pirate\")")) nil]
["scrum" nil nil nil nil nil nil ((timestamp . "2013-11-07") (notes . "(\"an iterative and incremental Agile software development framework for managing software projects and product or application development <https://en.wikipedia.org/wiki/Scrum_%28development%29>\")")) nil]
["scsh" nil nil nil nil nil nil ((timestamp . "2011-12-22") (notes . "(\"the scheme shell.\" \"at http://www.scsh.net/\" \"manual at http://www.scsh.net/docu/html/man-Z-H-1.html\" \"see ,lush ,clash ,LispShell\" \"see ,BatchMode\" \"The Scottish Council for Single Homeless, http://www.scsh.co.uk/\" \"really old, and you should think about using another scheme if possible\")")) nil]
["SCSI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Small Computer System Interface\")")) nil]
["SCSS" nil nil nil nil nil nil ((timestamp . "2013-06-03") (notes . "(\"a very early version control system from the 1970s\")")) nil]
["sctp" nil nil nil nil nil nil ((timestamp . "2009-08-29") (notes . "(\"the Stream Control Transmission Protocol, the next logical development of TCP\")")) nil]
["sdcc" nil nil nil nil nil nil ((timestamp . "2011-01-25") (notes . "(\"Small Device C Compiler, an ansi C compiler for PIC, 8051 and zilog microcontrollers\")")) nil]
["sdf" nil nil nil nil nil nil ((timestamp . "2013-09-01") (notes . "(\"a nonprofit public access UNIX shell provider on the Internet.\" \"see sdf.org or freeshell.org\" \"YES, the name is a macross reference\")")) nil]
["SDL" nil nil nil nil nil nil ((timestamp . "2011-10-21") (notes . "(\"simple direct media layer, a library for abstracting various media utilities across platforms. Often used for creating games. http://www.libsdl.org/\")")) nil]
["SDRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Synchronous Dynamic Random Access Memory\")")) nil]
["sdt" nil nil nil nil nil nil ((timestamp . "2007-08-07") (notes . "(\"syntax directed translation\")")) nil]
["SE" nil nil nil nil nil nil ((timestamp . "2013-11-14") (notes . "(\"Stack Exchange, the general question answering network modeled after the programming-specific Stack Overflow\")")) nil]
["seahorse" nil nil nil nil nil nil ((timestamp . "2012-12-03") (notes . "(\"a keyring and password frontend for such applications/tasks like managaing PGP and SSH keys. It it's part of the GNOME project, and integrates core components of the DE.\")")) nil]
["sean" nil nil nil nil nil nil ((timestamp . "2011-01-25") (notes . "(\"young\")")) nil]
["search-and-replace" nil nil nil nil nil nil ((timestamp . "2005-05-15") (notes . "(\"see query-replace\")")) nil]
["SearchAllBuffers" nil nil nil nil nil nil ((timestamp . "2005-08-26") (notes . "(\"redirect SearchBuffers\")")) nil]
["searchandreplaceacrossmultiplebuffers" nil nil nil nil nil nil ((timestamp . "2008-09-23") (notes . "(\"redirect searchandreplaceacrossmultiplefiles\")")) nil]
["SearchAndReplaceInMultiplefiles" nil nil nil nil nil nil ((timestamp . "2004-07-31") (notes . "(\"redirect SearchAndReplaceAcrossMultipleFiles\")")) nil]
["SearchEngines" nil nil nil nil nil nil ((timestamp . "2004-11-05") (notes . "(\"google, a9, WebFountain, etc.\")")) nil]
["seaside" nil nil nil nil nil nil ((timestamp . "2006-02-03") (notes . "(\"http://www.seaside.st\" \"a web framework based on continuations\" \"Distributed under the Free MIT license\")")) nil]
["seattle-weather-forecast" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"redirect uk-weather-forecast\")")) nil]
["section*" nil nil nil nil nil nil ((timestamp . "2009-02-14") (notes . "(\"Use \\\\section*{Title} for unnumbered titles. If you need to add that section to the TOC use \\\\addcontentsline{toc}{section}{Title}\")")) nil]
["sects" nil nil nil nil nil nil ((timestamp . "2007-12-05") (notes . "(\"all monks think about\")")) nil]
["secure-boot" nil nil nil nil nil nil ((timestamp . "2011-09-25") (notes . "(\"noecho We're fucked.\" \"well, maybe not... http://www.extremetech.com/computing/96909-microsoft-could-lock-out-linux-on-windows-8-pcs-but-it-wont\" \"http://www.extremetech.com/computing/96985-demystifying-uefi-the-long-overdue-bios-replacement\" \"http://mjg59.dreamwidth.org/\" \"https://blogs.msdn.com/b/b8/archive/2011/09/22/protecting-the-pre-os-environment-with-uefi.aspx (from *Them*, so take it with a pinch of salt)\")")) nil]
["secure-debian" nil nil nil nil nil nil ((timestamp . "2012-07-14") (notes . "(\"noecho http://www.debian.org/doc/manuals/securing-debian-howto/\")")) nil]
["security" nil nil nil nil nil nil ((timestamp . "2014-01-12") (notes . "(\"https://www.youtube.com/v/BgCSXZbf4SU?start=62&version=3\")")) nil]
["security-questions" nil nil nil nil nil nil ((timestamp . "2013-08-19") (notes . "(\"http://www.youtube.com/watch?v=oYrvzd-N9GY\")")) nil]
["sed" nil nil nil nil nil nil ((timestamp . "2002-11-17") (notes . "(\"an implementation of ed for streams\")")) nil]
["sedate" nil nil nil nil nil nil ((timestamp . "2013-06-13") (notes . "(\"lisp (let ((target (if lispargs (stringify-symbol-list lispargs) nick))) (say (format \\\"/me injects %s with a mysterious black, smoky substance.\\\" target)))\")")) nil]
["Selenium" nil nil nil nil nil nil ((timestamp . "2007-11-24") (notes . "(\"a chemical element with atomic number 34, with the chemical symbol Se. It is a nonmetal, chemically related to sulfur and tellurium, and rarely occurring in its elemental state in nature. It is toxic in large amounts, but trace amounts of it are necessary for cellular function in most, if not all, animals, forming the active center of certain enzymes.\")")) nil]
["self-guards" nil nil nil nil nil nil ((timestamp . "2012-08-21") (notes . "(\"SEIZE ME!\")")) nil]
["self-reference-jokes" nil nil nil nil nil nil ((timestamp . "2011-09-07") (notes . "(\"http://web.maths.unsw.edu.au/~jim/selfref.html\")")) nil]
["selfdestruct" nil nil nil nil nil nil ((timestamp . "2010-09-01") (notes . "(\"noecho /me beeps twice and explodes\")")) nil]
["Semantic" nil nil nil nil nil nil ((timestamp . "2003-01-24") (notes . "(\"redirect SemanticBovinator\")")) nil]
["semantic-versioning" nil nil nil nil nil nil ((timestamp . "2012-04-17") (notes . "(\"http://semver.org/\" \"a specification for what the different parts of a version number _mean_\")")) nil]
["sending-off-offenses" nil nil nil nil nil nil ((timestamp . "2012-07-18") (notes . "(\"serious foul play\" \"violent conduct\" \"striking or attempting to strike a person\" \"spitting or attempting to spit at a person\" \"denying a goal by handling\" \"denying an obvious goal scoring opportunity by fouling\" \"using offensive, insulting or abusive language\" \"receiving a second yellow\")")) nil]
["sendoffs" nil nil nil nil nil nil ((timestamp . "2011-02-07") (notes . "(\"Okay, see you later\" \"later\" \"Bye then\" \"Take care now\" \"Happy hacking\" \"Hasta la Vista, %s\")")) nil]
["sent-mail" nil nil nil nil nil nil ((timestamp . "2002-10-22") (notes . "(\"To see receipients (not self) in the sent-mail group, try: (setq gnus-extra-headers '(To Newsgroups)) and (setq gnus-ignored-from-address (regexp-quote \\\"your-email.com\\\"))\")")) nil]
["sentientp" nil nil nil nil nil nil ((timestamp . "2012-04-22") (notes . "(\"lisp (if (= 0 (random 12)) \\\"Destroy all humans\\\" \\\"Not yet\\\")\")")) nil]
["SEO" nil nil nil nil nil nil ((timestamp . "2007-06-03") (notes . "(\"Search Engine \\\"Optimization\\\" (spamming)\")")) nil]
["SEP" nil nil nil nil nil nil ((timestamp . "2013-07-22") (notes . "(\"short for Someone Else's Problem\" \"the Stanford Encyclopedia of Philosophy\")")) nil]
["seppuku" nil nil nil nil nil nil ((timestamp . "2006-07-05") (notes . "(\"M-x dunnet RET take shovel RET eat shovel\")")) nil]
["SequencesArraysVectors" nil nil nil nil nil nil ((timestamp . "2010-09-09") (notes . "(\"(info \\\"(elisp) Sequences Arrays Vectors\\\")\")")) nil]
["serenity" nil nil nil nil nil nil ((timestamp . "2005-10-07") (notes . "(\"noecho Joss Whedon is my Master now\")")) nil]
["serenityprayer" nil nil nil nil nil nil ((timestamp . "2011-06-26") (notes . "(\"God, grant me the serenity to accept the things I cannot change, courage to change the things I can, and wisdom to know the difference.\")")) nil]
["serialize" nil nil nil nil nil nil ((timestamp . "2010-09-30") (notes . "(\"noecho Pickel is an elisp object serialization package\" \"http://github.com/tlh/pickel.el\")")) nil]
["seriously" nil nil nil nil nil nil ((timestamp . "2010-04-03") (notes . "(\"noecho I know. Right?\")")) nil]
["seriousp" nil nil nil nil nil nil ((timestamp . "2013-02-17") (notes . "(\"lisp nil\")")) nil]
["serve-drink" nil nil nil nil nil nil ((timestamp . "2012-12-02") (notes . "(\"lisp (apply 'order-drink lispargs)\")")) nil]
["session" nil nil nil nil nil nil ((timestamp . "2004-01-28") (notes . "(\"redirect sessionmanagement\")")) nil]
["sessions" nil nil nil nil nil nil ((timestamp . "2003-01-12") (notes . "(\"redirect sessionmanagement\")")) nil]
["set-face" nil nil nil nil nil nil ((timestamp . "2011-07-05") (notes . "(\"Place your cursor over the text in question, and invoke M-x customize-face RET RET\")")) nil]
["setbackground" nil nil nil nil nil nil ((timestamp . "2009-11-10") (notes . "(\"redirect default-frame-alist\")")) nil]
["setdefaultfont" nil nil nil nil nil nil ((timestamp . "2008-08-21") (notes . "(\"redirect FAQ\")")) nil]
["setforeground" nil nil nil nil nil nil ((timestamp . "2008-11-17") (notes . "(\"redirect setbackground\")")) nil]
["setnu" nil nil nil nil nil nil ((timestamp . "2002-12-16") (notes . "(\"redirect linenumbers\")")) nil]
["setnu-mode" nil nil nil nil nil nil ((timestamp . "2006-06-25") (notes . "(\"a minor mode that adds line numbers.\")")) nil]
["setspace" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package for setting the spacing between lines in a document. cmds: \\\\{single,onehalf,double}spacing, \\\\setstretch{...}; envs: {single,onehalf,double}space, spacing {...}. http://ctan.org/pkg/setspace\")")) nil]
["setuid" nil nil nil nil nil nil ((timestamp . "2004-11-18") (notes . "(\"at http://gnufans.net/~deego/DeegoWiki/DebianSetuid.html\")")) nil]
["seward" nil nil nil nil nil nil ((timestamp . "2014-01-17") (notes . "(\"noecho BUY HIM (AN ALASKA)!\")")) nil]
["sewards" nil nil nil nil nil nil ((timestamp . "2014-01-17") (notes . "(\"FREE HIM!!\")")) nil]
["sextoys" nil nil nil nil nil nil ((timestamp . "2010-08-17") (notes . "(\"noecho /me points at qDot_\")")) nil]
["sf" nil nil nil nil nil nil ((timestamp . "2011-10-15") (notes . "(\"speculative / science fiction. *Real* science, not space operas.\" \"Sourceforge\" \"San Francisco\")")) nil]
["SFA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Sweet Fuck All\")")) nil]
["sfinae" nil nil nil nil nil nil ((timestamp . "2013-09-12") (notes . "(\"Substitution failure is not an error\" \"a C++ template technique that can be (ab)used for template metaprogramming as a limited form of type checking the template arguments.\" \"Basically works like this: if a compiler error ensues when attempting to substitute a particular value for a template parameter, then this template is not instantiated with this value.\")")) nil]
["SFLC" nil nil nil nil nil nil ((timestamp . "2011-07-04") (notes . "(\"the Software Freedom Law Center, see #sflc or <http://softwarefreedom.org>\")")) nil]
["sgmltexi" nil nil nil nil nil nil ((timestamp . "2003-02-19") (notes . "(\"http://a2.swlibero.org/~daniele/software/sgmltexi/doc/\" \"an SGML system (DTD and tools) to make Texinfo documentation using SGML. The Sgmltexi DTD is designed to follow most of the Texinfo philosofy, hiding the node managing.\" \"to be intended as a simplified Texinfo using SGML; that is: you cannot do all that it is possible with Texinfo alone. Sgmltexi impose some restrictions, but maybe it can be simpler to write Texinfo documentation this way.\")")) nil]
["SGR" nil nil nil nil nil nil ((timestamp . "2012-09-12") (notes . "(\"Select Graphic Rendition <https://en.wikipedia.org/wiki/ANSI_escape_code>\")")) nil]
["SGRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Synchronous Graphics Random Access Memory\")")) nil]
["sh" nil nil nil nil nil nil ((timestamp . "2010-07-29") (notes . "(\"redirect bourne\")")) nil]
["sha1" nil nil nil nil nil nil ((timestamp . "2013-09-06") (notes . "(\"See the built-in sha1.el.\")")) nil]
["shabble" nil nil nil nil nil nil ((timestamp . "2010-04-01") (notes . "(\"comedy gold\")")) nil]
["shae" nil nil nil nil nil nil ((timestamp . "2002-11-29") (notes . "(\"redirect shaeerisson\")")) nil]
["shakespeare" nil nil nil nil nil nil ((timestamp . "2004-06-27") (notes . "(\"http://shakespearelang.sourceforge.net/report/shakespeare/\")")) nil]
["shakira" nil nil nil nil nil nil ((timestamp . "2011-10-06") (notes . "(\"a person whose hips don't lie, apparently\")")) nil]
["shame" nil nil nil nil nil nil ((timestamp . "2013-02-20") (notes . "(\"lisp (format (concat \\\"/me \\\" (random-choose-term \\\"shames-list\\\")) (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["shame-last" nil nil nil nil nil nil ((timestamp . "2013-10-27") (notes . "(\"lisp (format (concat \\\"/me \\\" (car (last (notes \\\"shames-list\\\")))) (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["shapr" nil nil nil nil nil nil ((timestamp . "2003-03-15") (notes . "(\"redirect ShaeErisson\")")) nil]
["shards" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"noecho SPLINTER HIM!!\")")) nil]
["sheeple" nil nil nil nil nil nil ((timestamp . "2012-04-04") (notes . "(\"noecho WAKE UP SHEEPLE!!!\")")) nil]
["sheepskin" nil nil nil nil nil nil ((timestamp . "2013-09-19") (notes . "(\"http://www.antipope.org/charlie/blog-static/2010/10/sheepskin.html\")")) nil]
["shell-curses" nil nil nil nil nil nil ((timestamp . "2005-06-14") (notes . "(\"redirect eshell-visual-commands\")")) nil]
["shell-switcher" nil nil nil nil nil nil ((timestamp . "2012-07-15") (notes . "(\"a minor mode to easily switch between shell buffers (like with alt+tab), see https://github.com/DamienCassou/shell-switcher\")")) nil]
["shellac" nil nil nil nil nil nil ((timestamp . "2004-03-23") (notes . "(\"an animal product... Many products such as phonograph records, sealing wax, fireworks, and electrical insulators and instruments have[sic] shellac in their composition. When mixed with alcohol, shellac forms ordinary varnish.\")")) nil]
["shellcolor" nil nil nil nil nil nil ((timestamp . "2009-03-07") (notes . "(\"redirect shellcolors\")")) nil]
["ShellColors" nil nil nil nil nil nil ((timestamp . "2002-12-10") (notes . "(\"redirect AnsiColor\")")) nil]
["shen" nil nil nil nil nil nil ((timestamp . "2013-08-09") (notes . "(\"an optionally-typed functional lisp dialect that is the successor to qi: http://www.lambdassociates.org/shen.htm\" \"http://shenlanguage.org/\")")) nil]
["shentellmen" nil nil nil nil nil nil ((timestamp . "2012-10-04") (notes . "(\"noecho /me puts a cigarette in its mouth.\")")) nil]
["shergill" nil nil nil nil nil nil ((timestamp . "2013-02-13") (notes . "(\"shameless\" \"homepage: http://shergill.su\" \"has passed the coturing-test\")")) nil]
["shergill-fix" nil nil nil nil nil nil ((timestamp . "2012-11-27") (notes . "(\"noecho Most problems can be prevented by shunning the unholy trinity (c++, php and js) and a healthy use of erc-fools\")")) nil]
["sherlock-holmes" nil nil nil nil nil nil ((timestamp . "2006-05-23") (notes . "(\"xah's mortal enemy\")")) nil]
["shfs" nil nil nil nil nil nil ((timestamp . "2005-10-03") (notes . "(\"the Shell File System --- a Linux kernel module that lets you mount remote file systems over SSH, at <http://shfs.sourceforge.net/>. Can be used as a faster alternative to TRAMP.\")")) nil]
["SHID" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Slaps Head In Disgust\")")) nil]
["shimo-no-ku" nil nil nil nil nil nil ((timestamp . "2010-08-15") (notes . "(\"how one say \\\"the lower phrase\\\" in japanese\")")) nil]
["shironekoshiro" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"http://www.youtube.com/watch?v=AFjr-Gexe0k\")")) nil]
["shisha" nil nil nil nil nil nil ((timestamp . "2005-03-01") (notes . "(\"lisp (random-choose '(\\\"/me prepares a nice shisha\\\" \\\"/me puts some tobacco onto the shisha, and lights a coal\\\"))\")")) nil]
["shit" nil nil nil nil nil nil ((timestamp . "2014-01-23") (notes . "(\"whack\")")) nil]
["shit-jambunathan-says" nil nil nil nil nil nil ((timestamp . "2014-01-24") (notes . "(\"<zanywind> jlf: I have no interest in blame games. I am just de-constructing the (mental) process\")")) nil]
["shocking" nil nil nil nil nil nil ((timestamp . "2011-11-21") (notes . "(\"noecho I know, right\")")) nil]
["shodan" nil nil nil nil nil nil ((timestamp . "2012-10-29") (notes . "(\"noecho \\\"Look at you, Hacker. A pathetic creature of meat and bone. Panting and sweating as you run through my corridors. How can you challange a perfect, immortal machine?\\\"\")")) nil]
["shoes-off" nil nil nil nil nil nil ((timestamp . "2013-01-08") (notes . "(\"an elisp irc bouncer, https://github.com/nicferrier/shoes-off\")")) nil]
["shok" nil nil nil nil nil nil ((timestamp . "2013-12-30") (notes . "(\"similar to CMD.EXE\")")) nil]
["shoot" nil nil nil nil nil nil ((timestamp . "2013-07-15") (notes . "(\"lisp (progn 'foo(let((weapon(car(read-from-string (random-choose-term \\\"firearms\\\"))))(nick(if(and lispargs(not(or(member 'fsbot lispargs) (member 'rudybot lispargs) (not \\\"TODO: abstract me\\\"))))(stringify-symbol-list lispargs)nick)))(if(string-match \\\"%s\\\"(cdr weapon))(format \\\"/me loads its %s and %s.\\\"(car weapon)(format(cdr weapon)nick))(format \\\"/me loads its %s and %s %s.\\\"(car weapon)(cdr weapon)nick))))\")")) nil]
["shoot-bad" nil nil nil nil nil nil ((timestamp . "2013-06-22") (notes . "(\"lisp (let ((weapon (car (read-from-string (random-choose-term \\\"firearms\\\")))) (nick (if (and lispargs (not (member nick '(fsbot rudybot birny)))) (stringify-symbol-list lispargs)nick))) (if (string-match \\\"%s\\\" (cdr weapon))(format \\\"/me loads its %s and %s.\\\" (car weapon) (format (cdr weapon) nick))(format \\\"/me loads its %s and %s %s.\\\" (car weapon) (cdr weapon) nick)))\")")) nil]
["shoot-last" nil nil nil nil nil nil ((timestamp . "2013-10-16") (notes . "(\"lisp (progn 'foo (let* ((w (last (notes \\\"firearms\\\")))(weapon (read (car w)))(nick(if(and lispargs(not(or(member 'fsbot lispargs) (member 'rudybot lispargs) (not \\\"TODO: abstractme\\\"))))(stringify-symbol-list lispargs)nick)))(if(string-match \\\"%s\\\"(cdr weapon))(format \\\"/me loads its %s and %s.\\\"(car weapon)(format(cdr weapon)nick))(format \\\"/me loads its %s and %s %s.\\\"(car weapon)(cdr weapon)nick))))\")")) nil]
["shoot3" nil nil nil nil nil nil ((timestamp . "2013-03-10") (notes . "(\"lisp (let ((ws (mapcar (lambda (_) (car (read-from-string (random-choose-term \\\"firearms\\\")))) '(1 1 1))) (nick (if (and lispargs (not (member 'fsbot lispargs))) (stringify-symbol-list lispargs) nick))) (apply 'format \\\"/me loads its %s, %s, and %s, and %s, %s, as well as %s.\\\" (append (mapcar 'car ws) (mapcar (lambda (w) (if (string-match \\\"%s\\\" (cdr w)) (format (cdr w) nick) (format \\\"%s %s\\\" (cdr w) nick))) ws))))\")")) nil]
["shopping" nil nil nil nil nil nil ((timestamp . "2012-09-06") (notes . "(\"noecho Let's go shopping!\")")) nil]
["short-term-fix" nil nil nil nil nil nil ((timestamp . "2011-08-08") (notes . "(\"Fuck it. http://www.youtube.com/watch?v=DVdKQ0I35qo\")")) nil]
["shortcut" nil nil nil nil nil nil ((timestamp . "2011-03-30") (notes . "(\"key binding, they're not called shortcuts\")")) nil]
["shotwell" nil nil nil nil nil nil ((timestamp . "2011-06-08") (notes . "(\"an open source photo manager for GNOME; see http://yorba.org/shotwell/\")")) nil]
["should" nil nil nil nil nil nil ((timestamp . "2012-06-30") (notes . "(\"a synonym for doesn't\")")) nil]
["show-wspace.el" nil nil nil nil nil nil ((timestamp . "2006-05-15") (notes . "(\"redirect ShowWhiteSpace\")")) nil]
["showhide" nil nil nil nil nil nil ((timestamp . "2008-03-07") (notes . "(\"redirect hideshow\")")) nil]
["shuhari" nil nil nil nil nil nil ((timestamp . "2011-07-05") (notes . "(\"a japanese martial art concept describing the three stages of learning to mastery\" \"shu - traditional wisdom, ha - breaking with tradition, ri - transcendence\" \"see also: http://c2.com/cgi/wiki?ShuHaRi\")")) nil]
["shun" nil nil nil nil nil nil ((timestamp . "2012-09-05") (notes . "(\"redirect flame\")")) nil]
["sicm" nil nil nil nil nil nil ((timestamp . "2012-01-30") (notes . "(\"Structure and Interpretation of Classical Mechanics\" \"a physics book that includes the source code\" \"at http://mitpress.mit.edu/sicm/\")")) nil]
["SICP" nil nil nil nil nil nil ((timestamp . "2014-01-30") (notes . "(\"Structure and Interpretation of Computer Programs, a CS textbook using Scheme <http://mitpress.mit.edu/sicp/> (HTML)\" \"<http://www.neilvandyke.org/sicp-texi/> (texinfo)\" \"Accompanying video lectures are available gratis <http://swiss.csail.mit.edu/classes/6.001/abelson-sussman-lectures/>\" \"http://web.mit.edu/alexmv/6.001/sicp.pdf (PDF)\" \"http://xuanji.appspot.com/isicp/index.html\")")) nil]
["sidenotes" nil nil nil nil nil nil ((timestamp . "2013-10-12") (notes . "(\"a package to typeset text with notes, figures and other constructs in the margin. Available at http://www.ctan.org/tex-archive/macros/latex/contrib/sidenotes\")")) nil]
["SIFF" nil nil nil nil nil nil ((timestamp . "2012-05-24") (notes . "(\"the Seattle International Film Festival\")")) nil]
["sig" nil nil nil nil nil nil ((timestamp . "2007-06-04") (notes . "(\"Special Interest Group.\")")) nil]
["significant-whitespace" nil nil nil nil nil nil ((timestamp . "2013-05-09") (notes . "(\"pythonick\")")) nil]
["SignUpToday" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?SignUpToday\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?SignUpToday\")")) nil]
["silc" nil nil nil nil nil nil ((timestamp . "2004-12-06") (notes . "(\"the Secure Internet Live Conferencing protocol\" \"at http://www.silcnet.org/\")")) nil]
["simap" nil nil nil nil nil nil ((timestamp . "2005-05-28") (notes . "(\"secure imap\")")) nil]
["SIMCA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Sitting In My Chair Amused\")")) nil]
["simula" nil nil nil nil nil nil ((timestamp . "2012-10-31") (notes . "(\"noecho was into oop before it was mainstream\")")) nil]
["simultaneousscrolling" nil nil nil nil nil nil ((timestamp . "2009-10-08") (notes . "(\"redirect synchronizedscrolling\")")) nil]
["sing" nil nil nil nil nil nil ((timestamp . "2010-12-21") (notes . "(\"noecho Oops, I did it again...\")")) nil]
["sinner" nil nil nil nil nil nil ((timestamp . "2012-02-08") (notes . "(\"noecho REPENT!!\")")) nil]
["SINO" nil nil nil nil nil nil ((timestamp . "2011-10-17") (notes . "(\"Scheme in name only -- e.g. no first-class continuations, no TCO, no nothin\")")) nil]
["SIOD" nil nil nil nil nil nil ((timestamp . "2012-02-13") (notes . "(\"Scheme in One Defun (or Day), a SINO (Scheme in Name Only) seen in GIMP and Festival <https://en.wikipedia.org/wiki/SIOD>\")")) nil]
["sip" nil nil nil nil nil nil ((timestamp . "2011-08-17") (notes . "(\"a Python/C++ Binding Generator at http://www.riverbankcomputing.co.uk/sip/index.php\" \"Session Initiation Protocol: http://en.wikipedia.org/wiki/Session_Initiation_Protocol\")")) nil]
["sipser" nil nil nil nil nil nil ((timestamp . "2013-06-25") (notes . "(\"Sipser, Michael. Introduction to the Theory of Computation. Vol. 27. Boston, MA: Thomson Course Technology, 2006.\")")) nil]
["SISC" nil nil nil nil nil nil ((timestamp . "2006-01-26") (notes . "(\"a Scheme interpreter written in Java designed to easily exploit the presence of multitudes of Java libraries in a relatively Schemely manner.\")")) nil]
["sitar" nil nil nil nil nil nil ((timestamp . "2010-07-04") (notes . "(\"http://www.youtube.com/watch?v=eXI7odSYLkI\")")) nil]
["site-start.el" nil nil nil nil nil nil ((timestamp . "2003-01-22") (notes . "(\"redirect site-file\")")) nil]
["siunitx" nil nil nil nil nil nil ((timestamp . "2015-08-24") (notes . "(\"a package for typesetting documents with units and tables of numbers -- http://www.ctan.org/pkg/siunitx\")")) nil]
["siwoti" nil nil nil nil nil nil ((timestamp . "2013-11-21") (notes . "(\"http://xkcd.com/386/\")")) nil]
["sixxs" nil nil nil nil nil nil ((timestamp . "2003-12-06") (notes . "(\"a blazingly cool IPv6 tunnel provider, see http://www.sixxs.net.\")")) nil]
["siyh" nil nil nil nil nil nil ((timestamp . "2011-01-08") (notes . "(\"Sooner If You Help\")")) nil]
["sjk" nil nil nil nil nil nil ((timestamp . "2010-09-10") (notes . "(\"Shel Kaphan\" \"the author of mailman\")")) nil]
["skaro" nil nil nil nil nil nil ((timestamp . "2013-08-06") (notes . "(\"an exercise in comparative lispology http://technomancy.us/169\")")) nil]
["skeleton-complete" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"a dynamic flex-match buffer completion: https://github.com/baohaojun/skeleton-complete\")")) nil]
["skewer-mode" nil nil nil nil nil nil ((timestamp . "2014-01-15") (notes . "(\"https://github.com/skeeto/skewer-mode\" \"an alternative to swank-js\")")) nil]
["skillsmatter" nil nil nil nil nil nil ((timestamp . "2013-03-15") (notes . "(\"a training company in London, UK who host a lot of coding community groups\")")) nil]
["skinny" nil nil nil nil nil nil ((timestamp . "2013-01-19") (notes . "(\"an elnode-based blog engine: https://github.com/nicferrier/skinny\" \"the only blog engine for true hipsters to use.\")")) nil]
["skins" nil nil nil nil nil nil ((timestamp . "2010-08-12") (notes . "(\"noecho Whenever a programmer thinks, \\\"Hey, skins, what a cool idea\\\", their computer's speakers should create some sort of cock-shaped soundwave and plunge it repeatedly through their skulls.\")")) nil]
["skippy" nil nil nil nil nil nil ((timestamp . "2006-04-07") (notes . "(\"Exposé for NETWMs (most X11 window managers).\" \"http://thegraveyard.org/skippy.php\")")) nil]
["skribe" nil nil nil nil nil nil ((timestamp . "2011-06-14") (notes . "(\"http://www-sop.inria.fr/mimosa/fp/Skribe/\")")) nil]
["skribilo" nil nil nil nil nil nil ((timestamp . "2013-11-26") (notes . "(\"a free document production tool that takes a structured document representation as its input and renders that document in a variety of output formats: HTML and Info for on-line browsing, and Lout and LaTeX for high-quality hard copies.\" \"http://www.nongnu.org/skribilo/\")")) nil]
["skunk" nil nil nil nil nil nil ((timestamp . "2007-02-02") (notes . "(\"ganja\")")) nil]
["sky" nil nil nil nil nil nil ((timestamp . "2011-07-09") (notes . "(\"the blue thing you see when you look up\")")) nil]
["skynet" nil nil nil nil nil nil ((timestamp . "2012-07-27") (notes . "(\"noecho I'm, uh...not supposed to talk about it.\" \"in development\" \"ETA 2019-2043\")")) nil]
["sl" nil nil nil nil nil nil ((timestamp . "2011-09-27") (notes . "(\"Successful Lisp\" \"at http://www.psg.com/~dlamkins/sl/cover.html\" \"Steam Locomotive (apt-get install sl)\" \"Snow Leopard\")")) nil]
["sl4" nil nil nil nil nil nil ((timestamp . "2006-08-05") (notes . "(\"a mailing list of Singularitarians. sl4 refers to \\\"Shock Level 4\\\", things such as Jupiter brains, computronium, intelligence explosion, etc.\")")) nil]
["slap" nil nil nil nil nil nil ((timestamp . "2012-09-09") (notes . "(\"lisp (format \\\"/me slaps %s with a large halibut.\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["slashem" nil nil nil nil nil nil ((timestamp . "2013-08-02") (notes . "(\"a variant of NetHack based on NetHack version 3.4.3, see http://www.slashem.org\")")) nil]
["slate" nil nil nil nil nil nil ((timestamp . "2013-03-04") (notes . "(\"a prototype-based object-oriented programming language based on Self, CLOS, and Smalltalk-80 <http://slatelanguage.org/> <http://slate.tunes.org/>\")")) nil]
["slavery" nil nil nil nil nil nil ((timestamp . "2013-01-21") (notes . "(\"noecho slavery is freedom\")")) nil]
["SLDRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Synchronous-Link Dynamic Random Access Memory\")")) nil]
["sledge" nil nil nil nil nil nil ((timestamp . "2005-08-01") (notes . "(\"Steve McIntyre, sledge over on #debian-uk on oftc.\")")) nil]
["sleep" nil nil nil nil nil nil ((timestamp . "2006-02-12") (notes . "(\"noecho what an unacceptable substitute for caffeine!\" \"For the wicked!\" \"a function from libc that makes the current process sleep for a given number of seconds.\")")) nil]
["slfe" nil nil nil nil nil nil ((timestamp . "2010-07-27") (notes . "(\"\\\"statically link fucking everything\\\"\")")) nil]
["slib" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\" a portable library for the programming language Scheme. http://people.csail.mit.edu/jaffer/slib/\")")) nil]
["slidy" nil nil nil nil nil nil ((timestamp . "2006-03-30") (notes . "(\"a web-browser based presentation mechanism: http://www.w3.org/Talks/Tools/Slidy/\")")) nil]
["slime-entitlement" nil nil nil nil nil nil ((timestamp . "2013-02-03") (notes . "(\"noecho Waaaah, this thing made for CL by CLers doesn't work with JavaScript or Clojure, and the authors won't put in days of work to make it, and then maintain it! SLIME is broken and CLers are mean poopyheads!\")")) nil]
["slime-selector" nil nil nil nil nil nil ((timestamp . "2010-03-29") (notes . "(\"http://common-lisp.net/project/slime/doc/html/slime_002dselector.html\")")) nil]
["slime48" nil nil nil nil nil nil ((timestamp . "2010-12-14") (notes . "(\"SLIME for Scheme48\" \"Darcs repository at <http://mumble.net/~campbell/darcs/slime48/>\" \"current self-contained tarball (including slime.el &c.) at <http://mumble.net/~campbell/scheme/slime48.tar.gz>\" \"ONLY works with s48 1.3\")")) nil]
["SlimeMode" nil nil nil nil nil nil ((timestamp . "2004-04-05") (notes . "(\"redirect slime\")")) nil]
["sloc" nil nil nil nil nil nil ((timestamp . "2010-09-07") (notes . "(\"source lines of code\" \"lines of code that don't include comments\")")) nil]
["slow-clap" nil nil nil nil nil nil ((timestamp . "2012-09-22") (notes . "(\"noecho *clap*.......*clap*.......*clap*.....\")")) nil]
["slowclap" nil nil nil nil nil nil ((timestamp . "2012-10-03") (notes . "(\"redirect slow-clap\")")) nil]
["slrn" nil nil nil nil nil nil ((timestamp . "2009-08-25") (notes . "(\"a newsreader http://slrn.sourceforge.net/\")")) nil]
["slrnthreading" nil nil nil nil nil nil ((timestamp . "2003-02-16") (notes . "(\"http://my.gnus.org/Lisp/1015544717\")")) nil]
["sluggards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho DROWSE HIM!!\")")) nil]
["smack" nil nil nil nil nil nil ((timestamp . "2012-11-06") (notes . "(\"lisp (format \\\"/me smacks %s upside the haid.\\\" (if (and lispargs (not (member 'fsbot lispargs))) (stringify-symbol-list lispargs) nick))\")")) nil]
["SMART" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Self-Monitoring Analysis And Reporting Technology\")")) nil]
["smart-questions" nil nil nil nil nil nil ((timestamp . "2008-03-04") (notes . "(\"http://linuxmafia.com/faq/Essays/smart-questions.html\")")) nil]
["smart-snippet" nil nil nil nil nil nil ((timestamp . "2007-12-07") (notes . "(\"[http://code.google.com/p/smart-snippet/]\")")) nil]
["smartparens" nil nil nil nil nil nil ((timestamp . "2013-09-07") (notes . "(\"minor mode reimplementing paredit while working also outside of sexp-based languages at https://github.com/Fuco1/smartparens/\")")) nil]
["smartquestions" nil nil nil nil nil nil ((timestamp . "2011-03-30") (notes . "(\"http://www.catb.org/~esr/faqs/smart-questions.html\")")) nil]
["SMIDSY" nil nil nil nil nil nil ((timestamp . "2006-12-14") (notes . "(\"what dickheads cry when they plough their SUV through your bicycle. \\\"Sorry mate, I didn't see you.\\\"\")")) nil]
["smie" nil nil nil nil nil nil ((timestamp . "2012-12-10") (notes . "(\"the Simple-Minded Indentation Engine\" \"(info \\\"(elisp) SMIE\\\")\" \"smie and the world smies with you\")")) nil]
["SML" nil nil nil nil nil nil ((timestamp . "2013-12-12") (notes . "(\"Standard ML, a general-purpose, modular, functional programming language with compile-time type checking and type inference <https://en.wikipedia.org/wiki/Standard_ML> <smlnj>\" \"what elisp will look like in 2017\" \"actually stands for stefan monnier lisp. true story.\")")) nil]
["smlnj" nil nil nil nil nil nil ((timestamp . "2012-04-13") (notes . "(\"Standard ML of New Jersey, a compiler for the SML '97 <http://smlnj.org>\")")) nil]
["SMLSFB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for So Many Losers, So Few Bullets\")")) nil]
["smoke" nil nil nil nil nil nil ((timestamp . "2003-06-02") (notes . "(\"redirect joint\")")) nil]
["SMOP" nil nil nil nil nil nil ((timestamp . "2003-01-19") (notes . "(\"a Small Matter Of Programming\")")) nil]
["smorgasbord" nil nil nil nil nil nil ((timestamp . "2013-07-04") (notes . "(\"tasty\")")) nil]
["smoshp" nil nil nil nil nil nil ((timestamp . "2012-11-13") (notes . "(\"a simple matter of solving the halting problem\")")) nil]
["SMP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Symmetric Multiprocessing\")")) nil]
["sms" nil nil nil nil nil nil ((timestamp . "2005-03-12") (notes . "(\"sudden motion sensor in certain models of apple powerbooks senses change in axis position and accelerated movement in the event of a drop or fall and instantly parks the hard drive heads\")")) nil]
["SMTP" nil nil nil nil nil nil ((timestamp . "2008-10-01") (notes . "(\"short for Simple Mail Transfer Protocol\" \"http://postfix.state-of-mind.de/patrick.koetter/smtpauth/\")")) nil]
["snackbot" nil nil nil nil nil nil ((timestamp . "2005-08-11") (notes . "(\"lisp (random-choose '(\\\"I know you are hungry, but I am not robot feed\\\" \\\"/me runs away \\\" \\\"No don't eat me please!!!\\\"))\")")) nil]
["SNAFU" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Situation Normal, All Fucked Up\")")) nil]
["snag-o-rama" nil nil nil nil nil nil ((timestamp . "2003-01-13") (notes . "(\"a website-indexer at http://www.netsw.org/infosys/www/clientside/agents/snag/\")")) nil]
["snap" nil nil nil nil nil nil ((timestamp . "2009-05-19") (notes . "(\"a troll\")")) nil]
["snark" nil nil nil nil nil nil ((timestamp . "2002-10-12") (notes . "(\"http://www.literature.org/authors/carroll-lewis/the-hunting-of-the-snark/\")")) nil]
["SNERT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Snot-Nosed Egotistical Rude Teenager\")")) nil]
["snicker" nil nil nil nil nil nil ((timestamp . "2013-12-10") (notes . "(\"noecho SNACK!\")")) nil]
["snippet" nil nil nil nil nil nil ((timestamp . "2011-01-25") (notes . "(\"http://cryptocracy.hn.org/~cartel/elisp/snippet.el\" \"http://www.kazmier.com/computer/snippet.el\" \"see yasnippet\")")) nil]
["snmp" nil nil nil nil nil nil ((timestamp . "2011-01-06") (notes . "(\"an acronym for the simple network management protocol\")")) nil]
["snooch" nil nil nil nil nil nil ((timestamp . "2005-09-26") (notes . "(\"a modified version of jmk's Neep font with more smooth letterforms available at <http://www.brockman.se/software/snooch/> in size 24, normal and bold.\")")) nil]
["snore" nil nil nil nil nil nil ((timestamp . "2012-11-29") (notes . "(\"lisp (format \\\"/me takes %s aside but then falls asleep\\\" (mapconcat 'symbol-name lispargs \\\" \\\"))\")")) nil]
["snowflake" nil nil nil nil nil nil ((timestamp . "2010-07-15") (notes . "(\"a beautiful object that melts when you examine it\")")) nil]
["snowflakes" nil nil nil nil nil nil ((timestamp . "2010-07-15") (notes . "(\"redirect snowflake\")")) nil]
["SNR" nil nil nil nil nil nil ((timestamp . "2003-06-20") (notes . "(\"Signal to Noise Ratio\" \"When it goes up, the technical content increases. When it goes down, the emotional content increases.\")")) nil]
["SNS" nil nil nil nil nil nil ((timestamp . "2013-01-07") (notes . "(\"Shiny New Shit syndrome, the compulsive need to have the most up-to-date software (or hardware)\")")) nil]
["SOA" nil nil nil nil nil nil ((timestamp . "2012-10-20") (notes . "(\"Service Oriented Architecture, the principle of assigning public API endpoints to your important functions.\")")) nil]
["SOA#1" nil nil nil nil nil nil ((timestamp . "2004-10-21") (notes . "(\"Standardowa OdpowiedÅº Administratora #1 (Polish for \\\"Standard Operator's Answer #1\\\")\" \"see also WFM\")")) nil]
["SOAD" nil nil nil nil nil nil ((timestamp . "2006-01-04") (notes . "(\"System of a Down, a band from Los Angeles, California.\" \"a band whose members are known more for the outspoken social and political views found in their songs than for their distinctive dress styles and goatees.\")")) nil]
["SOB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Son Of [A] Bitch\")")) nil]
["socat" nil nil nil nil nil nil ((timestamp . "2010-08-17") (notes . "(\"the socket cat -- http://www.dest-unreach.org/socat/\")")) nil]
["socialism" nil nil nil nil nil nil ((timestamp . "2007-04-12") (notes . "(\"a social structure in which all men are equal\" \"http://en.wikipedia.org/wiki/Socialism\" \"distinctly hard to realise in real life\")")) nil]
["soda" nil nil nil nil nil nil ((timestamp . "2008-01-24") (notes . "(\"a high fructose carbonated dink like rootbeer, cola, and squirt(tm)\")")) nil]
["Sodipodi" nil nil nil nil nil nil ((timestamp . "2007-09-06") (notes . "(\"a vector graphics editor <http://www.sodipodi.com>\" \"less popular than Inkscape <http://inkscape.org>, a Sodipodi fork.\")")) nil]
["soekris" nil nil nil nil nil nil ((timestamp . "2005-03-26") (notes . "(\"http://soekris.com and resellers at http://www.cortexsystems.net/ or http://www.kd85.com/\")")) nil]
["soft" nil nil nil nil nil nil ((timestamp . "2012-08-15") (notes . "(\"noecho /me touches you softly.\")")) nil]
["softhyphen" nil nil nil nil nil nil ((timestamp . "2009-10-02") (notes . "(\"http://www.cs.tut.fi/~jkorpela/shy.html\")")) nil]
["Software" nil nil nil nil nil nil ((timestamp . "2003-03-22") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?Software\")")) nil]
["software-sucks" nil nil nil nil nil nil ((timestamp . "2012-06-10") (notes . "(\"noecho We aren't gonna lie: all software sucks. You just have to pick software that sucks in ways that are tolerable (for you).\")")) nil]
["SoftwareDistribution" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?SoftwareDistribution\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?SoftwareDistribution\")")) nil]
["SOHO" nil nil nil nil nil nil ((timestamp . "2005-09-13") (notes . "(\"short for Small Office Home Office\")")) nil]
["SOL" nil nil nil nil nil nil ((timestamp . "2013-08-08") (notes . "(\"short for Shit Out [Of] Luck\" \"Slice of Life, which has non-identical meanings in theater/film, literature, and manga/anime\")")) nil]
["sold" nil nil nil nil nil nil ((timestamp . "2013-05-22") (notes . "(\"lisp (format \\\"%s: You sleazy sellout!\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["soma" nil nil nil nil nil nil ((timestamp . "2013-02-11") (notes . "(\"a narcotic drug which produces euphoria and hallucination, distributed by the state in order to promote content and social harmony\" \"see also \\\"A Brave New World\\\"\" \"implemented in the real world as \\\"the Internet\\\"\")")) nil]
["somelist" nil nil nil nil nil nil ((timestamp . "2002-11-23") (notes . "(\"1\" \"0\" \"2\")")) nil]
["someone" nil nil nil nil nil nil ((timestamp . "2013-06-22") (notes . "(\"redirect anyone\")")) nil]
["something" nil nil nil nil nil nil ((timestamp . "2010-04-15") (notes . "(\"redirect anyone\")")) nil]
["song-of-my-peoples" nil nil nil nil nil nil ((timestamp . "2011-05-18") (notes . "(\"http://www.youtube.com/watch?v=1M9VA0UBRQ0\")")) nil]
["SOP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Standard Operating Procedure\")")) nil]
["sopa" nil nil nil nil nil nil ((timestamp . "2012-01-06") (notes . "(\"http://blog.nearlyfreespeech.net/2011/12/24/welcome-sopa-refugees/\")")) nil]
["sopos" nil nil nil nil nil nil ((timestamp . "2006-12-09") (notes . "(\"an acronym for \\\"Sozialistischen Positionen\\\"\")")) nil]
["sorry" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"noecho Ego te absolvo.\")")) nil]
["soul" nil nil nil nil nil nil ((timestamp . "2013-10-05") (notes . "(\"a package that provides letterspacing, underlining and striking out available at http://www.ctan.org/tex-archive/macros/latex/contrib/soul\")")) nil]
["soup" nil nil nil nil nil nil ((timestamp . "2004-09-15") (notes . "(\"liquid food\" \"a method of packing news articles for offline reading (supported by gnus)\" \"that is, it is *supposed* to be supported by gnus\")")) nil]
["source" nil nil nil nil nil nil ((timestamp . "2008-04-15") (notes . "(\"redirect erbot\")")) nil]
["source2e" nil nil nil nil nil nil ((timestamp . "2016-08-02") (notes . "(\"the LaTeX2e kernel documentation for the entire system as one document at http://mirrors.ctan.org/macros/latex/base/source2e.pdf\")")) nil]
["south" nil nil nil nil nil nil ((timestamp . "2009-02-17") (notes . "(\"lisp (random-choose '(\\\"there is a monk meditating by the side of the road\\\" \\\"you are near the edge of a forest\\\" \\\"you have entered a forest\\\" \\\"you are surrounded by fog; in the distange you hear seagulls\\\"))\")")) nil]
["SoX" nil nil nil nil nil nil ((timestamp . "2006-08-13") (notes . "(\"a command line utility that can convert various formats of computer audio files in to other formats. It can also apply various effects to these sound files during the conversion. As an added bonus, SoX can play and record audio files on several unix-style platforms\")")) nil]
["spacecadet" nil nil nil nil nil nil ((timestamp . "2013-07-17") (notes . "(\"http://en.wikipedia.org/wiki/Space-cadet_keyboard\" \"see http://en.wikipedia.org/wiki/File:Space-cadet.jpg\")")) nil]
["SpacePoet" nil nil nil nil nil nil ((timestamp . "2012-10-29") (notes . "(\"an impatient jerk who never says \\\"thank you\\\" and assumes anyone who tries to help but doesn't provide a satisfactory answer is just a n00b\")")) nil]
["spam" nil nil nil nil nil nil ((timestamp . "2009-02-12") (notes . "(\"delicious.\")")) nil]
["spam-stat" nil nil nil nil nil nil ((timestamp . "2002-12-10") (notes . "(\"redirect spamstat\")")) nil]
["spaniards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho SURPRISE HIM!!\")")) nil]
["spanish-homie-yow" nil nil nil nil nil nil ((timestamp . "2012-10-25") (notes . "(\"lisp (random-choose (list (if (member nick '(\\\"homie\\\" \\\"wbooze\\\")) (format \\\"greetings, %s!\\\" nick) (let ((yow (translate \\\"en\\\" \\\"es\\\" (random-choose (notes \\\"homie-list\\\"))))) (if (string-match \\\"/me\\\" yow) yow (concat yow \\\"\\\\njejejeje\\\")))) (translate \\\"en\\\" \\\"es\\\" \\\"Get a job, deadbeat.\\\"))'(99 1))\")")) nil]
["spanish-laugh" nil nil nil nil nil nil ((timestamp . "2012-10-24") (notes . "(\"noecho jejejejejejejejejeje\")")) nil]
["spanish-yow" nil nil nil nil nil nil ((timestamp . "2012-10-23") (notes . "(\"lisp (translate \\\"en\\\" \\\"es\\\" (yow))\")")) nil]
["spanlulzish" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"a the bastard child of Spanish and lolspeak\")")) nil]
["sparkleshare" nil nil nil nil nil nil ((timestamp . "2012-05-05") (notes . "(\"some kind of sharing thing involving git where no easily-reachable documentation explains what it does, but maybe it is exactly what you need, but you won't be able to find out, but maybe it won't matter because maybe it does nothing useful.\")")) nil]
["sparky" nil nil nil nil nil nil ((timestamp . "2003-08-23") (notes . "(\"the god of PlayStation programming!\")")) nil]
["sparta" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"noecho I am Spartacus! Eat my shorts, yo!\")")) nil]
["sparticus" nil nil nil nil nil nil ((timestamp . "2010-05-21") (notes . "(\"noecho I'm sparticus!\")")) nil]
["SPD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Serial Presence Detect\")")) nil]
["SPDY" nil nil nil nil nil nil ((timestamp . "2013-10-21") (notes . "(\"Google's binary replacement for HTTP <https://en.wikipedia.org/wiki/SPDY>\")")) nil]
["speak" nil nil nil nil nil nil ((timestamp . "2010-08-07") (notes . "(\"noecho Woof!\")")) nil]
["speak-english" nil nil nil nil nil nil ((timestamp . "2013-09-17") (notes . "(\"lisp (if (zerop (random 2)) \\\"You're using some big words, and because I don't understand them, I'm going to take them as disrespect\\\" \\\"I don't know the meaning of half those long words, and what's more, I don't believe you do either!\\\")\")")) nil]
["specific" nil nil nil nil nil nil ((timestamp . "2013-10-27") (notes . "(\"can you are a little specific\")")) nil]
["spectacle" nil nil nil nil nil nil ((timestamp . "2005-11-28") (notes . "(\"noecho Guy Debord's \\\"Society of the Spectacle\\\" can be found at http://www.bopsecrets.org/SI/debord/index.htm\")")) nil]
["speechbot" nil nil nil nil nil nil ((timestamp . "2004-06-30") (notes . "(\"a simple IRC bot that connects to an IRC server and uses the FreeTTS speech synthesizer to read out loud all channel messages it receives\" \"http://www.jibble.org/speechbot/\" \"see ErcSpeak\")")) nil]
["speex" nil nil nil nil nil nil ((timestamp . "2006-12-18") (notes . "(\"a Free audio codec for speech <http://www.speex.org>\")")) nil]
["spell-number" nil nil nil nil nil nil ((timestamp . "2011-03-07") (notes . "(\"redirect SpellNumber\")")) nil]
["spellcheck" nil nil nil nil nil nil ((timestamp . "2006-10-29") (notes . "(\"redirect spell\")")) nil]
["SPF" nil nil nil nil nil nil ((timestamp . "2004-02-27") (notes . "(\"Sender Permitted From\" \"http://spf.pobox.com/faq.html\")")) nil]
["sphinx" nil nil nil nil nil nil ((timestamp . "2012-12-30") (notes . "(\"a reST-to-HTML/PDF/EPub/man documentation generator written in Python <http://sphinx-doc.org/>\" \"see also sphinx2\")")) nil]
["sphinx2" nil nil nil nil nil nil ((timestamp . "2005-07-29") (notes . "(\"a speech-recognition library for linux\")")) nil]
["spiffy" nil nil nil nil nil nil ((timestamp . "2003-02-15") (notes . "(\"a fancy word for quality, elegance, beauty\")")) nil]
["spiht" nil nil nil nil nil nil ((timestamp . "2003-08-27") (notes . "(\"Set Partitioning in Hierarchical Trees\" \"http://www.cipr.rpi.edu/research/SPIHT/spiht1.html\")")) nil]
["spim" nil nil nil nil nil nil ((timestamp . "2011-01-25") (notes . "(\"a mips32 simulator, see http://pages.cs.wisc.edu/~larus/spim.html\")")) nil]
["spit" nil nil nil nil nil nil ((timestamp . "2010-06-17") (notes . "(\"noecho thppppt\")")) nil]
["spj" nil nil nil nil nil nil ((timestamp . "2013-08-07") (notes . "(\"simon peyton-jones, haskell guru\")")) nil]
["spl" nil nil nil nil nil nil ((timestamp . "2010-09-10") (notes . "(\"redirect tspl\")")) nil]
["splat" nil nil nil nil nil nil ((timestamp . "2010-07-13") (notes . "(\"redirect asterisk\")")) nil]
["spliff" nil nil nil nil nil nil ((timestamp . "2003-06-02") (notes . "(\"redirect joint\")")) nil]
["splitbrain" nil nil nil nil nil nil ((timestamp . "2010-05-19") (notes . "(\"the maintainer of dokuwiki\" \"http://www.splitbrain.org/\")")) nil]
["SPOF" nil nil nil nil nil nil ((timestamp . "2011-06-21") (notes . "(\"Single Point of Failure\")")) nil]
["spokes" nil nil nil nil nil nil ((timestamp . "2004-05-21") (notes . "(\"http://www.geocrawler.com/archives/3/338/1999/7/0/2480811/\")")) nil]
["spoon" nil nil nil nil nil nil ((timestamp . "2004-01-22") (notes . "(\"noecho there is no spoon.\")")) nil]
["Spotter" nil nil nil nil nil nil ((timestamp . "2003-02-16") (notes . "(\"http://www.lightandmatter.com/spotter/spotter.html\" \"a program that lets students check their answers to math and science questions. It handles symbolic as well as numerical answers. The software is free and open source.\" \"documented here http://www.lightandmatter.com/spotter/article.pdf\" \"documented here http://www.lightandmatter.com/spotter/doc.pdf\")")) nil]
["sprite" nil nil nil nil nil nil ((timestamp . "2013-05-16") (notes . "(\"a tasty beverage\")")) nil]
["sps2" nil nil nil nil nil nil ((timestamp . "2003-08-20") (notes . "(\"at http://playstation2-linux.com/projects/sps2\" \"at http://ps2linux.diabolus-ex-machina.com/wiki/index.php?SPS2\")")) nil]
["SPSS" nil nil nil nil nil nil ((timestamp . "2010-12-06") (notes . "(\"The number one way for social scientists to invalidate their results through erroneous analysis\")")) nil]
["sq" nil nil nil nil nil nil ((timestamp . "2013-05-02") (notes . "(\"status quo\")")) nil]
["sql-complete.el" nil nil nil nil nil nil ((timestamp . "2003-01-16") (notes . "(\"redirect sqlcomplete\")")) nil]
["sqlite" nil nil nil nil nil nil ((timestamp . "2012-10-29") (notes . "(\"corruptible plaintext\" \"an ACID compliant RDBMS with the only real feature being its small footprint and embeddability\")")) nil]
["Squall`" nil nil nil nil nil nil ((timestamp . "2004-12-03") (notes . "(\"the hottest guy on the planet\" \"really cool, and a nice guy to hang around\" \"my master\" \"happy\")")) nil]
["Squeak" nil nil nil nil nil nil ((timestamp . "2012-02-03") (notes . "(\"a modern, free, full-featured implementation of the powerful Smalltalk programming language and environment\" \"at http://www.squeak.org/\" \"(arguably) the current incarnation of the original Smalltalk from Xerox\")")) nil]
["squid" nil nil nil nil nil nil ((timestamp . "2011-09-27") (notes . "(\"a caching web proxy, see http://www.squid-cache.org/\")")) nil]
["SRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Static Random Access Memory\")")) nil]
["sre" nil nil nil nil nil nil ((timestamp . "2008-04-11") (notes . "(\"a Symbolic (notation for) Regular Expressions (see ,df rx) http://www.ccs.neu.edu/home/shivers/papers/sre.txt\")")) nil]
["srecode" nil nil nil nil nil nil ((timestamp . "2009-08-15") (notes . "(\"part of cedet. It seems like you have an half-baked installation.\")")) nil]
["sregexp" nil nil nil nil nil nil ((timestamp . "2010-05-11") (notes . "(\"noecho sregex is probably obsolete; use rx instead.\")")) nil]
["srfi" nil nil nil nil nil nil ((timestamp . "2006-09-16") (notes . "(\"Scheme Requests for Implementation\")")) nil]
["srhb" nil nil nil nil nil nil ((timestamp . "2011-10-13") (notes . "(\"Sarah Brofeldt\")")) nil]
["srsly" nil nil nil nil nil nil ((timestamp . "2011-05-12") (notes . "(\"redirect seriously\")")) nil]
["ss" nil nil nil nil nil nil ((timestamp . "2010-06-10") (notes . "(\"Simply Scheme: Introducing Computer Science by Brian Harvey and Matthew Wright\" \"http://www.cs.berkeley.edu/~bh/ss-toc2.html\")")) nil]
["SSAX" nil nil nil nil nil nil ((timestamp . "2006-09-17") (notes . "(\"an XML parser for Scheme (http://ssax.sf.net)\")")) nil]
["SSDD" nil nil nil nil nil nil ((timestamp . "2006-12-04") (notes . "(\"same shit, different day\")")) nil]
["SSH" nil nil nil nil nil nil ((timestamp . "2007-01-21") (notes . "(\"short for Secure Shell\" \"try ,ssh.el\")")) nil]
["ssh-agent" nil nil nil nil nil nil ((timestamp . "2004-07-18") (notes . "(\"a little program that allows you to login once and use this info for all subsequent ssh connections.\" \"http://glozer.net/code/ssh-agent.el\")")) nil]
["sshagent" nil nil nil nil nil nil ((timestamp . "2003-03-12") (notes . "(\"redirect ssh-agent\")")) nil]
["sshfs" nil nil nil nil nil nil ((timestamp . "2010-07-22") (notes . "(\"SSH Filesystem, which some might prefer to use instead of TRAMP.\" \"http://fuse.sourceforge.net/sshfs.html\" \"for OS X: http://code.google.com/p/macfuse/\" \"the sshfsizzle\")")) nil]
["sshot" nil nil nil nil nil nil ((timestamp . "2006-10-04") (notes . "(\"http://angg.twu.net/elisp/sshot.el.html\")")) nil]
["SSI" nil nil nil nil nil nil ((timestamp . "2007-02-25") (notes . "(\"Server Side Includes\")")) nil]
["SSIA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Subject Says It All\")")) nil]
["sskm" nil nil nil nil nil nil ((timestamp . "2003-03-04") (notes . "(\"Selbst schuld, kein Mitleid\")")) nil]
["ssmtp" nil nil nil nil nil nil ((timestamp . "2003-02-06") (notes . "(\"redirect ssmtpd\")")) nil]
["ssmtpd" nil nil nil nil nil nil ((timestamp . "2003-02-06") (notes . "(\"at http://packages.debian.org/stable/mail/ssmtp.html\")")) nil]
["st-bernards" nil nil nil nil nil nil ((timestamp . "2014-01-17") (notes . "(\"noecho GIVE HIM SOME BRANDY AND A BLANKET!!!\")")) nil]
["St.Edmunds" nil nil nil nil nil nil ((timestamp . "2007-02-02") (notes . "(\"a tiny and immature college with elderly students\")")) nil]
["stab" nil nil nil nil nil nil ((timestamp . "2011-05-15") (notes . "(\"lisp (slap-with-knife (if lispargs (mapconcat 'symbol-name lispargs \\\" \\\") nick))\")")) nil]
["stackoverflow" nil nil nil nil nil nil ((timestamp . "2013-06-13") (notes . "(\"a question and answer site for programmers, at http://stackoverflow.com\" \"http://i.imgur.com/dOLkgVR.png\")")) nil]
["stakes" nil nil nil nil nil nil ((timestamp . "2013-11-14") (notes . "(\"noecho \\\"Q: Why are the battles in economics departments so fierce? A: Because the stakes are so low.\\\" -- J.K. Galbraith\")")) nil]
["stalin" nil nil nil nil nil nil ((timestamp . "2012-06-18") (notes . "(\"a scheme compiler.\" \"http://en.wikipedia.org/wiki/Stalin_scheme_compiler\" \"Oldfield\")")) nil]
["stalin-says" nil nil nil nil nil nil ((timestamp . "2013-06-01") (notes . "(\"Quantity is a quality all in itself.\")")) nil]
["stallman-fact-list" nil nil nil nil nil nil ((timestamp . "2013-08-06") (notes . "(\"Richard Stallman programmed Chuck Norris.\" \"Richard Stallman compiled the first version of gcc with an hexadecimal editor.\" \"Richard Stallman's left and right hands are named \\\"(\\\" and \\\")\\\".\" \"Richard Stallman can parse HTML with regex.\" \"There is no Windows in Stallman's house.. just DOORs...\" \"Richard Stallman gets 9 bits to the byte.\" \"Richard Stallman does not sleep. He yields.\" \"Richard Stallman never showers: he runs 'make clean'.\" \"Driving through Selfoss, Iceland Richard Stallman remarked that RedHat should move their headquarters there.\")")) nil]
["stallmanfact" nil nil nil nil nil nil ((timestamp . "2013-07-28") (notes . "(\"lisp (random-choose-term \\\"stallman-fact-list\\\")\")")) nil]
["stamp" nil nil nil nil nil nil ((timestamp . "2004-02-21") (notes . "(\"lisp (format-time-string \\\"%b %e %T fsbot -- EURO --\\\")\")")) nil]
["standalone" nil nil nil nil nil nil ((timestamp . "2013-04-25") (notes . "(\"a package to allow pictures or other Tex Code in sub-files to be compiled by themselves, located at http://www.ctan.org/tex-archive/macros/latex/contrib/standalone\")")) nil]
["StandardFormats" nil nil nil nil nil nil ((timestamp . "2003-07-16") (notes . "(\"at http://www.gnufans.net/fsedu.pl?StandardFormats\")")) nil]
["standards" nil nil nil nil nil nil ((timestamp . "2014-01-08") (notes . "(\"noecho The wonderful thing about standards is that there are so many to choose from!\" \"http://xkcd.com/927/\")")) nil]
["star" nil nil nil nil nil nil ((timestamp . "2011-12-01") (notes . "(\"!l you are my star: \\\\tikz\\\\draw (0, 0) \\\\foreach \\\\i in {0, 1, ..., 6} { -- ++(3*51.429*\\\\i:1cm) };\")")) nil]
["stars" nil nil nil nil nil nil ((timestamp . "2014-01-06") (notes . "(\"noecho GUIDE HIM!!\")")) nil]
["START" nil nil nil nil nil nil ((timestamp . "2005-04-07") (notes . "(\"(SynTactic Analysis using Reversible Transformations), a natural language processing system, at http://start.csail.mit.edu/\")")) nil]
["starter-kits" nil nil nil nil nil nil ((timestamp . "2013-05-23") (notes . "(\"see esk\" \"see prelude\")")) nil]
["stat!" nil nil nil nil nil nil ((timestamp . "2012-03-31") (notes . "(\"noecho Ready and awaiting your command.\")")) nil]
["statbot" nil nil nil nil nil nil ((timestamp . "2003-07-11") (notes . "(\"If its logs at http://gnufans.net/~deego/pub/spcusr/logs/deride/ are unavailable, try , clog\" \"For stats, type ,stats :)\" \"see deride\")")) nil]
["StaticIP" nil nil nil nil nil nil ((timestamp . "2003-01-18") (notes . "(\"at http://tunnelbroker.net/\")")) nil]
["STD" nil nil nil nil nil nil ((timestamp . "2006-12-09") (notes . "(\"Sexually Transmitted Disease\")")) nil]
["Stealing" nil nil nil nil nil nil ((timestamp . "2005-05-01") (notes . "(\"an act deemed immoral by most ethics, involving transfering some possesion between two parties, a stealing party, and a harmed party.\")")) nil]
["Steam" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"a DRM system with the usual added bloatware\")")) nil]
["stella" nil nil nil nil nil nil ((timestamp . "2005-03-01") (notes . "(\"lisp-to-java IIRC\" \"not really .. stella is a metalanguage that can produce c++, java or even lisp.\" \"a Belgian Beer (Stella Artois, actually) according to Lukhas\")")) nil]
["stellarium" nil nil nil nil nil nil ((timestamp . "2005-10-06") (notes . "(\"an excellent skywatch program http://www.stellarium.org\" \"very graphical- and compute-intensive so you better have a decent cpu and video-card\")")) nil]
["Stev" nil nil nil nil nil nil ((timestamp . "2013-02-05") (notes . "(\"a form of Scandinavian folk song consisting of four line lyric stanzas. <https://en.wikipedia.org/wiki/Stev>\")")) nil]
["StewardBrand" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.etrumeus.com/ferment/StewardBrand\")")) nil]
["STFA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Search The Fucking Archives\")")) nil]
["stft" nil nil nil nil nil nil ((timestamp . "2011-09-30") (notes . "(\"short time fourier transform\")")) nil]
["stfw" nil nil nil nil nil nil ((timestamp . "2004-01-12") (notes . "(\"search the fine web\")")) nil]
["sth" nil nil nil nil nil nil ((timestamp . "2010-11-11") (notes . "(\"something\")")) nil]
["stickes" nil nil nil nil nil nil ((timestamp . "2005-06-15") (notes . "(\"gnotes without gnome http://www.menudo.freeserve.co.uk/goats.html\")")) nil]
["sticky-repl" nil nil nil nil nil nil ((timestamp . "2007-10-11") (notes . "(\"a hack to make single-frame (e.g. tty) systems handle popup windows better <ftp://twb.ath.cx/sticky-repl/>, <http://paste.lisp.org/display/49013>\")")) nil]
["stignutius" nil nil nil nil nil nil ((timestamp . "2009-11-20") (notes . "(\"http://www.stallman.org/saintignucius.jpg\")")) nil]
["stillsuit" nil nil nil nil nil nil ((timestamp . "2008-03-29") (notes . "(\"a body-enclosing garment invented on Arrakis. Its fabric is a micro-sandwich performing functions of heat dissipation and filter for bodily wastes. Reclaimed moisture is made available by tube from catchpockets.\")")) nil]
["stimulus" nil nil nil nil nil nil ((timestamp . "2007-05-23") (notes . "(\"noecho Reaction!\")")) nil]
["sting" nil nil nil nil nil nil ((timestamp . "2013-10-12") (notes . "(\"Gordon Matthew Thomas Sumner (born 2 October 1951), known by his stage name Sting, is an English musician, singer-songwriter, multi-instrumentalist, activist, actor and philanthropist. He is best known as the principal songwriter, lead singer and bassist for the rock band The Police before launching a solo career.\" \"an advocate of the alleged health benefits of Tantric sex\" \"a massive pillock\")")) nil]
["stixbox" nil nil nil nil nil nil ((timestamp . "2012-03-21") (notes . "(\"A complete statistics etc. package for GNU Octave at http://www.maths.lth.se/matstat/stixbox/\")")) nil]
["STL" nil nil nil nil nil nil ((timestamp . "2012-07-29") (notes . "(\"Standard Template Library, originally the name of a non-ANSI library published by SGI, now most commonly used to refer to the templates in the standard C++ library\" \"Mostly an outdated term for \\\"the C++ standard library\\\" for when this library sucked and wasn't part of C++.\")")) nil]
["STM" nil nil nil nil nil nil ((timestamp . "2010-06-09") (notes . "(\"\\\"Software transactional memory\\\"\" \"far less attractive for a language built on mutation\")")) nil]
["stocktip" nil nil nil nil nil nil ((timestamp . "2010-11-21") (notes . "(\"noecho One word: Plastics\")")) nil]
["stockyards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"CHANNING HIM!!\")")) nil]
["stomp" nil nil nil nil nil nil ((timestamp . "2012-05-22") (notes . "(\"the Simple Text Oriented Messaging Protocol, see http://stomp.github.com/\")")) nil]
["stop" nil nil nil nil nil nil ((timestamp . "2012-11-11") (notes . "(\"redirect done\")")) nil]
["stopwatch" nil nil nil nil nil nil ((timestamp . "2011-11-16") (notes . "(\"http://kanis.fr/stopwatch.html\")")) nil]
["stow" nil nil nil nil nil nil ((timestamp . "2012-06-03") (notes . "(\"GNU stow, a package manager (of sorts) for /opt and /usr/local <http://www.gnu.org/software/stow/>\" \"a symlink farm manager, as it calls itself.\")")) nil]
["strace" nil nil nil nil nil nil ((timestamp . "2010-02-18") (notes . "(\"see http://en.wikipedia.org/wiki/Strace\")")) nil]
["strategy" nil nil nil nil nil nil ((timestamp . "2013-03-09") (notes . "(\"my strategy against humans is to balk at the syntax of most examples that people use to explain concepts to others.\")")) nil]
["strikeout" nil nil nil nil nil nil ((timestamp . "2009-11-02") (notes . "(\"\\\\usepackage{ulem} \\\\sout{strike this out}! http://www.tlhiv.org/TeXbot/l2log.cgi?0ung6gnN\")")) nil]
["strikethrough" nil nil nil nil nil nil ((timestamp . "2009-11-02") (notes . "(\"redirect strikeout\")")) nil]
["string-edit" nil nil nil nil nil nil ((timestamp . "2013-12-04") (notes . "(\"a hack to edit strings in separate buffers at https://github.com/magnars/string-edit.el\")")) nil]
["strings" nil nil nil nil nil nil ((timestamp . "2010-04-29") (notes . "(\"Because \\\\ is the escape character in a string literal, regexps embedded in strings need to have their \\\\s carefully escaped.\" \"For example, the regexp \\\\(foo\\\\) in a string should look like \\\"\\\\\\\\(foo\\\\\\\\)\\\"\" \"This only applies to Lisp strings, not regexps typed into the minibuffer.\")")) nil]
["StudentsBillOfRights" nil nil nil nil nil nil ((timestamp . "2003-02-25") (notes . "(\"a statement of rights of students\" \"1. You have the right to publish what you learn\" \"2. You have the right to demand standard file formats in electronic teaching materials\" \"2. You have the right to use free software\" \"4. You have the right to refuse to use non-free software\" \"(4. You have the right to refuse to use non-free software) is a bit harsh, we need to rethink that\" \"4. You have the right to fight for your right to use free software\")")) nil]
["stupidp" nil nil nil nil nil nil ((timestamp . "2012-04-28") (notes . "(\"lisp (= 0 (random 2))\")")) nil]
["Sturgeons-law" nil nil nil nil nil nil ((timestamp . "2013-06-15") (notes . "(\"90% of everything is crap\")")) nil]
["stv" nil nil nil nil nil nil ((timestamp . "2004-03-25") (notes . "(\"noecho sperma-to-vagina language (see http://www.daimi.au.dk/~terryp/IrcQuotes.html#STV for details)\")")) nil]
["subcaption" nil nil nil nil nil nil ((timestamp . "2011-06-23") (notes . "(\"a package that supersedes subfig and works fine with hyperref. [doc: http://tinyurl.com/subcaption-doc] [comp: http://tinyurl.com/subcaption-vs-subfig]\")")) nil]
["subfig" nil nil nil nil nil nil ((timestamp . "2011-06-23") (notes . "(\"a package that supersedes subfigure, but it's also superseded by subcaption. http://ctan.org/pkg/subfig [doc: http://tinyurl.com/subfig-doc]\")")) nil]
["subfigure" nil nil nil nil nil nil ((timestamp . "2011-06-23") (notes . "(\"a package superseded by sugfig, which is superseded by subcaption\")")) nil]
["subfiles" nil nil nil nil nil nil ((timestamp . "2014-11-26") (notes . "(\"a package to allow typesetting multi-file projects separately per subfile and as one big file. It is available from http://www.ctan.org/pkg/subfiles\")")) nil]
["sublist" nil nil nil nil nil nil ((timestamp . "2002-09-05") (notes . "(\"(require 'cl) and C-h f subseq\")")) nil]
["submarine" nil nil nil nil nil nil ((timestamp . "2013-03-21") (notes . "(\"The question of whether Machines Can Think... is about as relevant as the question of whether Submarines Can Swim.\")")) nil]
["submit" nil nil nil nil nil nil ((timestamp . "2010-08-26") (notes . "(\"noecho I'm not worthy!\" \"noecho Uncle! Uncle!\")")) nil]
["subtitles" nil nil nil nil nil nil ((timestamp . "2009-01-04") (notes . "(\"http://mihai.bazon.net/projects/sese\")")) nil]
["suck" nil nil nil nil nil nil ((timestamp . "2013-06-07") (notes . "(\"redirect ass\")")) nil]
["sudo" nil nil nil nil nil nil ((timestamp . "2011-03-31") (notes . "(\"C-x C-f /sudo::/path/to/file\")")) nil]
["sudo-reset" nil nil nil nil nil nil ((timestamp . "2011-11-22") (notes . "(\"noecho OK. Resetting... Beep...\")")) nil]
["sudoedit" nil nil nil nil nil nil ((timestamp . "2004-09-05") (notes . "(\"a part of sudo (since 1.6.8), it makes a tempfile of the file you want to edit and lets you edit it with $EDITOR. After you are done editing sudoedit replaces the original file with the tempfile. With the advantage that a minimal amount of code runs as root.\")")) nil]
["sudoku-solver" nil nil nil nil nil nil ((timestamp . "2005-06-11") (notes . "(\"at http://www.users.waitrose.com/~nihilist/sudoku.html\")")) nil]
["suggestions" nil nil nil nil nil nil ((timestamp . "2002-11-29") (notes . "(\"redirect suggest\")")) nil]
["suid" nil nil nil nil nil nil ((timestamp . "2004-09-23") (notes . "(\"try (set-default-file-modes 0) to keep suid bit over save\")")) nil]
["suma" nil nil nil nil nil nil ((timestamp . "2005-04-22") (notes . "(\"hip\" \"cool\")")) nil]
["summary" nil nil nil nil nil nil ((timestamp . "2005-03-16") (notes . "(\"noecho Nah, I'm too busy to summarize it for you!\")")) nil]
["Sunir--" nil nil nil nil nil nil ((timestamp . "2003-01-14") (notes . "(\"bad.\")")) nil]
["sunrise-commander" nil nil nil nil nil nil ((timestamp . "2013-04-28") (notes . "(\"redirect sunrise\")")) nil]
["sup" nil nil nil nil nil nil ((timestamp . "2010-09-20") (notes . "(\"noecho same old, same old\")")) nil]
["superbowl" nil nil nil nil nil nil ((timestamp . "2007-02-04") (notes . "(\"noecho DAH BEARS!\")")) nil]
["supergenpass" nil nil nil nil nil nil ((timestamp . "2013-03-10") (notes . "(\"http://github.com/ober/sgpass\")")) nil]
["superkook" nil nil nil nil nil nil ((timestamp . "2010-05-22") (notes . "(\"noecho My God! It all makes so much sense!\")")) nil]
["support" nil nil nil nil nil nil ((timestamp . "2013-11-30") (notes . "(\"noecho Have you tried turning it off and on\")")) nil]
["supporter" nil nil nil nil nil nil ((timestamp . "2009-03-05") (notes . "(\"http://www.fsf.org/free-software-supporter/\")")) nil]
["surf" nil nil nil nil nil nil ((timestamp . "2013-06-20") (notes . "(\"http://surf.suckless.org\")")) nil]
["SUS" nil nil nil nil nil nil ((timestamp . "2010-03-04") (notes . "(\"short for Stupid User Syndrome\" \"the Single Unix Standard, a.k.a. POSIX <http://www.opengroup.org/onlinepubs/9699919799/>\")")) nil]
["suse" nil nil nil nil nil nil ((timestamp . "2007-08-08") (notes . "(\"see redhat\")")) nil]
["sushi" nil nil nil nil nil nil ((timestamp . "2010-05-26") (notes . "(\"寿司: sushi is rice, prepared with vinegar\")")) nil]
["suspend" nil nil nil nil nil nil ((timestamp . "2010-11-19") (notes . "(\"`C-z' or `C-x C-z' -- get back with fg(1)\" \"just use ,Shell\" \"just use ,eshell\" \"just use ,ansi-term\")")) nil]
["suspense" nil nil nil nil nil nil ((timestamp . "2012-03-29") (notes . "(\"noecho the suspense is killing me!\")")) nil]
["svg" nil nil nil nil nil nil ((timestamp . "2013-11-29") (notes . "(\"an acronym for scalable vector graphics\" \"at http://www.w3.org/TR/SVG/\" \"popular editors include Inkscape and Adobe Illustrator\" \"a package for including SVG files in LaTeX, see http://tex.stackexchange.com/questions/122871/include-svg-images-with-the-svg-package\")")) nil]
["svg-clock" nil nil nil nil nil nil ((timestamp . "2013-10-04") (notes . "(\"an analog clock written in elisp\" \"at http://elpa.gnu.org/packages/svg-clock-0.5.el\")")) nil]
["svg-clock.el" nil nil nil nil nil nil ((timestamp . "2013-06-03") (notes . "(\"pretty cool.\")")) nil]
["SVGA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Super Video Graphics Array\")")) nil]
["svn" nil nil nil nil nil nil ((timestamp . "2008-04-18") (notes . "(\"redirect psvn\")")) nil]
["SvnStatusMode" nil nil nil nil nil nil ((timestamp . "2011-04-04") (notes . "(\"redirect psvn\")")) nil]
["svnwiki" nil nil nil nil nil nil ((timestamp . "2007-06-26") (notes . "(\"an SVN-backed wiki written in Chicken Scheme <http://wiki.freaks-unidos.net/svnwiki/>\")")) nil]
["SWAG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Silly, Wild-Assed Guess\")")) nil]
["SWAHBI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Silly, Wild-Assed Hare-Brained Idea\")")) nil]
["SWALK" nil nil nil nil nil nil ((timestamp . "2013-07-30") (notes . "(\"Sealed With A Loving Kiss <https://en.wikipedia.org/wiki/World_War_II_Postal_Acronyms>\")")) nil]
["swank" nil nil nil nil nil nil ((timestamp . "2008-02-22") (notes . "(\"the protocol used by slime to communicate with the inferior lisp (see ,slime).\")")) nil]
["swank-clojure" nil nil nil nil nil nil ((timestamp . "2011-10-22") (notes . "(\"https://github.com/technomancy/swank-clojure\")")) nil]
["swank-js" nil nil nil nil nil nil ((timestamp . "2012-12-06") (notes . "(\"a swank backend for Node.JS and in-browser JavaScript, see https://github.com/swank-js/swank-js\")")) nil]
["swapcaps" nil nil nil nil nil nil ((timestamp . "2013-08-06") (notes . "(\"to swap ctrl and caps lock setxkbmap -option ctrl:swapcaps\" \"for nocaps, setxkbmap -option ctrl:nocaps\")")) nil]
["swapkeys" nil nil nil nil nil nil ((timestamp . "2005-03-05") (notes . "(\"redirect prefixkeymaps\")")) nil]
["swapwindows" nil nil nil nil nil nil ((timestamp . "2008-12-15") (notes . "(\"redirect transposewindows\")")) nil]
["swards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"MOW HIM!!\")")) nil]
["swedishchef" nil nil nil nil nil nil ((timestamp . "2010-06-01") (notes . "(\"noecho B\\366rk, b\\366rk, b\\366rk!\")")) nil]
["sweetandy" nil nil nil nil nil nil ((timestamp . "2008-12-06") (notes . "(\"like not giving out gratis hugs!\")")) nil]
["swig" nil nil nil nil nil nil ((timestamp . "2003-02-12") (notes . "(\"the Simplified Wrapper Interface Genrator, BSD-Like license, http://www.swig.org/\" \"a generator of GUILE interfaces\" \"a generator of Perl interfaces\" \"a generator of Python interfaces\" \"a generator of Ruby interfaces\" \"a generator of TCL interfaces\" \"a generator of C/C++ interfaces\" \"a generator of Java interfaces\" \"used by Redland\" \"used by introspector\")")) nil]
["swiki" nil nil nil nil nil nil ((timestamp . "2003-03-03") (notes . "(\"Squeak Wiki\" \"at http://minnow.cc.gatech.edu/squeak\" \"at http://minnow.cc.gatech.edu/swiki\")")) nil]
["swipe" nil nil nil nil nil nil ((timestamp . "2013-10-17") (notes . "(\"https://github.com/leoliu/swipe.el to use swiping gestures to move forward/backward sensibly.\")")) nil]
["swish-e" nil nil nil nil nil nil ((timestamp . "2006-06-07") (notes . "(\"a Simple Web Indexing System for Humans - Enhanced\" \"at http://swish-e.org/\")")) nil]
["switcher" nil nil nil nil nil nil ((timestamp . "2007-07-23") (notes . "(\"see: fanboi\" \"a former windows user who realized his broken ipod was still better than windows and ran out to buy a powerbook\")")) nil]
["switzerland" nil nil nil nil nil nil ((timestamp . "2006-01-26") (notes . "(\"a nice country where the people are eating cheese fondue the whole day, presumedly\")")) nil]
["swl" nil nil nil nil nil nil ((timestamp . "2009-10-18") (notes . "(\"software libre\")")) nil]
["SWMBO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for She Who Must Be Obeyed\")")) nil]
["swoon" nil nil nil nil nil nil ((timestamp . "2013-06-14") (notes . "(\"lisp \\\"/me faints\\\"\")")) nil]
["sword-fix" nil nil nil nil nil nil ((timestamp . "2012-03-19") (notes . "(\"noecho Most problems can be solved by drinking beer.\")")) nil]
["sxml" nil nil nil nil nil nil ((timestamp . "2004-08-22") (notes . "(\"A way to represent XML in the form of S-expressions: http://okmij.org/ftp/Scheme/SXML.html\")")) nil]
["sxml-match" nil nil nil nil nil nil ((timestamp . "2006-12-17") (notes . "(\"a Scheme library for searching and replacing SXML objects, with a syntax-rules feel <http://celtic.benderweb.net/sxml-match/manual/index.html>\")")) nil]
["symbols" nil nil nil nil nil nil ((timestamp . "2015-11-14") (notes . "(\"http://www.ctan.org/tex-archive/info/symbols/comprehensive/ for a list of symbols\" \"http://detexify.kirelabs.org/ to draw an example symbol online and find results on that\")")) nil]
["symbols-a4" nil nil nil nil nil nil ((timestamp . "2008-07-15") (notes . "(\"http://www.ctan.org/tex-archive/info/symbols/comprehensive/symbols-a4.pdf\")")) nil]
["SYN" nil nil nil nil nil nil ((timestamp . "2003-05-02") (notes . "(\"noecho SYNACK\")")) nil]
["synaptic" nil nil nil nil nil nil ((timestamp . "2005-02-26") (notes . "(\"at http://www.nongnu.org/synaptic/\")")) nil]
["SyncFileSystem" nil nil nil nil nil nil ((timestamp . "2011-08-12") (notes . "(\"M-x unix-sync\")")) nil]
["SynchronizedScrolling" nil nil nil nil nil nil ((timestamp . "2010-09-08") (notes . "(\"see ,ScrollAllMode\" \"see also ,MasterMode\" \"see also ,FollowMode\")")) nil]
["synergy" nil nil nil nil nil nil ((timestamp . "2007-04-10") (notes . "(\"a keyboard and mouse sharing program, synergy2.sourceforge.net\")")) nil]
["syntax-highlighting" nil nil nil nil nil nil ((timestamp . "2002-11-18") (notes . "(\"redirect color\")")) nil]
["syntax-rules" nil nil nil nil nil nil ((timestamp . "2012-05-27") (notes . "(\"like a old person doing yoga. Surprisingly flexible; you just don't want to look at it\")")) nil]
["syntaxhighlighting" nil nil nil nil nil nil ((timestamp . "2006-06-06") (notes . "(\"redirect fontlock\")")) nil]
["syntaxhilighting" nil nil nil nil nil nil ((timestamp . "2005-10-08") (notes . "(\"redirect fontlock\")")) nil]
["synthehol" nil nil nil nil nil nil ((timestamp . "2007-03-06") (notes . "(\"startrek alcohol without the hangover and violence whose effects \\\"can easily be dismissed\\\"\" \"sounds a lot like cannabis concealed in a culturally acceptable form of imbibement\")")) nil]
["SysopVandalism" nil nil nil nil nil nil ((timestamp . "2004-06-30") (notes . "(\"the use of HardSecurity powers, such as page deletion or IP blocking, to do what would be called sabotage or vandalism if done by anyone else. It is surprisingly common on wikis with a PermissionBasedModel and SysopPowerStructure.\")")) nil]
["SysopVigilantism" nil nil nil nil nil nil ((timestamp . "2004-06-30") (notes . "(\"the use of system operator powers without DueProcess or regard for the avowed WikiMission. It does not necessarily imply ideological or personal motives - when those are involved, this is called SysopVandalism.\")")) nil]
["SysReq" nil nil nil nil nil nil ((timestamp . "2006-04-13") (notes . "(\"redirect SysRq\")")) nil]
["SysRq" nil nil nil nil nil nil ((timestamp . "2006-04-13") (notes . "(\"SysRq or SysReq (short for System Request) is a key on keyboards for PCs that has no standard use\" \"\")")) nil]
["systemd" nil nil nil nil nil nil ((timestamp . "2013-11-06") (notes . "(\"A replacement for the Linux init daemon\" \"an init system inspired by substance d.\")")) nil]
["systemtap" nil nil nil nil nil nil ((timestamp . "2007-11-11") (notes . "(\"apt-get install systemtap\")")) nil]
["t-prot" nil nil nil nil nil nil ((timestamp . "2010-04-10") (notes . "(\"mutt's nearest equivalent to gnus' \\\"washing\\\" <http://www.escape.de/~tolot/mutt/>\")")) nil]
["T-T" nil nil nil nil nil nil ((timestamp . "2005-06-26") (notes . "(\"crying\")")) nil]
["ta" nil nil nil nil nil nil ((timestamp . "2013-10-31") (notes . "(\"transactional analysis\" \"total annihilation\" \"Teaching Assistant. See ,legumbre\" \"a student that professors shove their students off on\")")) nil]
["tab" nil nil nil nil nil nil ((timestamp . "2011-10-19") (notes . "(\"TAB\" \"C-i\" \"(string-equal \\\"\\\\t\\\" (kbd \\\"TAB\\\"))\" \"see ,tabs\")")) nil]
["tab-width" nil nil nil nil nil nil ((timestamp . "2005-07-31") (notes . "(\"(setq-default tab-width 4)\" \"in text mode customize the variable tab-stop-list\")")) nil]
["TabbedBrowsing" nil nil nil nil nil nil ((timestamp . "2004-10-06") (notes . "(\"redirect TabBarMode\")")) nil]
["tablature-mode.el" nil nil nil nil nil nil ((timestamp . "2003-11-15") (notes . "(\"at http://www.maths.tcd.ie/~gfoster/Guitar/Programs/Tab-n-Fret/\")")) nil]
["table" nil nil nil nil nil nil ((timestamp . "2005-05-23") (notes . "(\"redirect table.el\")")) nil]
["table-mode" nil nil nil nil nil nil ((timestamp . "2005-08-30") (notes . "(\"redirect table.el\")")) nil]
["table.el" nil nil nil nil nil nil ((timestamp . "2005-05-23") (notes . "(\"redirect TableMode\")")) nil]
["tableback" nil nil nil nil nil nil ((timestamp . "2013-07-05") (notes . "(\"noecho ┬─┬ノ(º_ºノ)\")")) nil]
["TableCellsWithManyLines" nil nil nil nil nil nil ((timestamp . "2005-04-26") (notes . "(\"easy to achieve if you use the minipage macro (see moinmoin:MacroMarket )\")")) nil]
["tableflip" nil nil nil nil nil nil ((timestamp . "2012-11-27") (notes . "(\"noecho (╯°□°）╯︵ ┻━┻\")")) nil]
["tables" nil nil nil nil nil nil ((timestamp . "2011-02-23") (notes . "(\"http://en.wikibooks.org/wiki/LaTeX/Tables\")")) nil]
["tabs" nil nil nil nil nil nil ((timestamp . "2011-10-19") (notes . "(\"check indent-tabs-mode\" \"see `tab-stop-list' and `tab-width'\" \"Try C-q TAB to force a literal tab\" \"ask me about tab\" \"ask me about whitespace\" \"ask me about notabs\" \"M-x (un)tabify\" \"M-x edit-tab-stops\" \"Also ask me about indenting\" \"for uniform tabs in text mode, (define-key text-mode-map (kbd \\\"TAB\\\") 'tab-to-tab-stop)\" \"http://sourceforge.net/projects/emhacks/\" \"(setq-default tab-width 4)\" \"bad and you are bad for using them\")")) nil]
["tabu" nil nil nil nil nil nil ((timestamp . "2012-04-17") (notes . "(\"more flexible than tabular, tabular*, tabularx and array and extends the possibilities. Not available in old distributions. http://ctan.org/pkg/tabu [doc: http://tinyurl.com/tabu-doc]\" \"package providing env, tabu, which will make any sort of tabular (that doesn't need to split across pages), and env longtabu which provides the facilities of tabu in a modified longtable environment.\")")) nil]
["tabularx" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a package defining an environment tabularx, an extension of tabular which has an additional column designator \\\"X\\\" which creates a paragraph-like column whose width automatically expands: http://ctan.org/pkg/tabularx\")")) nil]
["tabulary" nil nil nil nil nil nil ((timestamp . "2015-05-21") (notes . "(\"a package that provides a tabulary environment that stretches cells so the whole table reaches a chosen width, available from http://www.ctan.org/pkg/tabulary\" \"see http://en.wikibooks.org/wiki/LaTeX/Tables#The_tabulary_package for an example and alternatives\")")) nil]
["TabView" nil nil nil nil nil nil ((timestamp . "2003-11-19") (notes . "(\"See blank-mode.el\")")) nil]
["tabvsspace" nil nil nil nil nil nil ((timestamp . "2010-04-21") (notes . "(\"redirect TabsSpacesBoth\")")) nil]
["tabwidth" nil nil nil nil nil nil ((timestamp . "2007-03-28") (notes . "(\"to set your tab width to 4: (setq-default tab-width 4)\")")) nil]
["taco" nil nil nil nil nil nil ((timestamp . "2011-06-17") (notes . "(\"a tasty meso-american snack not to be confused with teco.\" \"the Spanish word for things shaped like the food, like high heels and pool cues.\")")) nil]
["tagedit" nil nil nil nil nil nil ((timestamp . "2012-12-18") (notes . "(\"magnars' collection of paredit-like functions for editing in html-mode, see https://github.com/magnars/tagedit\")")) nil]
["tail" nil nil nil nil nil nil ((timestamp . "2006-08-07") (notes . "(\"an unix command which outputs the last part of files\" \"at http://www.grassouille.org/code/sources/tail.el\")")) nil]
["tail-recursion" nil nil nil nil nil nil ((timestamp . "2013-08-23") (notes . "(\"a technique for handling iterative constructs in recursive languages\" \"required by Scheme, but absent in elisp and many CL systems\" \"Tail Call Optimization - i.e. call to other functions in tail position don't consume stack space.\" \"i accidentally the whole stack\" \"See tail-recursion\")")) nil]
["Tailor" nil nil nil nil nil nil ((timestamp . "2007-05-08") (notes . "(\"a tool to migrate changesets between ArX, Bazaar, Bazaar-NG, CVS, Codeville, Darcs, Git, Mercurial, Monotone, Subversion and Tla repositories <http://progetti.arstecnica.it/tailor>\")")) nil]
["tailor-guards" nil nil nil nil nil nil ((timestamp . "2013-10-18") (notes . "(\"noecho SIZE HIM!!\")")) nil]
["tails" nil nil nil nil nil nil ((timestamp . "2014-01-10") (notes . "(\"A live operating system which aims at preserving your privacy and anonymity.\" \"https://tails.boum.org/\")")) nil]
["taint" nil nil nil nil nil nil ((timestamp . "2007-08-13") (notes . "(\"http://en.wikipedia.org/wiki/Taint_(slang)\")")) nil]
["tali713" nil nil nil nil nil nil ((timestamp . "2013-04-27") (notes . "(\"an amateur frivolous computing historian\" \"a demihuman of lateral thinking\")")) nil]
["tali713-aidalgol-fix" nil nil nil nil nil nil ((timestamp . "2012-11-03") (notes . "(\"noecho Most problems can be solved by describing them in lisp and then hitting them with a hammer.\")")) nil]
["tali713-fix" nil nil nil nil nil nil ((timestamp . "2012-11-03") (notes . "(\"noecho Most problems can be solved by describing them in lisp.\")")) nil]
["tali713snack" nil nil nil nil nil nil ((timestamp . "2012-11-21") (notes . "(\"noecho /me gives tali713 some lutefisk\")")) nil]
["tanka" nil nil nil nil nil nil ((timestamp . "2010-08-15") (notes . "(\"similar to haiku. there is a description at http://www.ahapoetry.com/tanka.htm .\" \"an haïku, followed by a shimo-no-ku, a poem composed of two sentences with seven syllabes each\")")) nil]
["tankards" nil nil nil nil nil nil ((timestamp . "2013-04-23") (notes . "(\"noecho SOUSE HIM!!!\")")) nil]
["TANSTAAFL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for There Ain't No Such Thing As A Free Lunch\")")) nil]
["taocp" nil nil nil nil nil nil ((timestamp . "2013-09-27") (notes . "(\"The Art of Computer Programming Donald E. Knuth Addison & Wesley\")")) nil]
["taoup" nil nil nil nil nil nil ((timestamp . "2004-05-29") (notes . "(\"The Art of UNIX Programming by ESR, also at http://www.catb.org/~esr/writings/taoup/\")")) nil]
["tapl" nil nil nil nil nil nil ((timestamp . "2010-07-13") (notes . "(\"Types and Programming Languages by Benjamin C. Pierce -- http://www.cis.upenn.edu/~bcpierce/tapl/\")")) nil]
["tarbomb" nil nil nil nil nil nil ((timestamp . "2011-08-09") (notes . "(\"noecho TAKE COVER!!!\")")) nil]
["tarpipe" nil nil nil nil nil nil ((timestamp . "2011-01-26") (notes . "(\"http://blog.extracheese.org/2010/05/the-tar-pipe.html\")")) nil]
["tarred" nil nil nil nil nil nil ((timestamp . "2013-10-20") (notes . "(\"noecho Archive them!\")")) nil]
["tarzeau" nil nil nil nil nil nil ((timestamp . "2006-12-18") (notes . "(\"not a friend of the GNU.\")")) nil]
["taskjuggler" nil nil nil nil nil nil ((timestamp . "2010-07-31") (notes . "(\"a foss project management tool; see http://www.taskjuggler.org/\")")) nil]
["taste" nil nil nil nil nil nil ((timestamp . "2010-02-04") (notes . "(\"noecho elisp needs some theology and geometry, some taste and decency. I suspect that we are teetering on the edge of the abyss.\")")) nil]
["tau" nil nil nil nil nil nil ((timestamp . "2013-06-28") (notes . "(\"Tel - Aviv University\" \"was created by George Weise\" \"the tau day tauday.com 28 june\")")) nil]
["taupe" nil nil nil nil nil nil ((timestamp . "2006-07-06") (notes . "(\"http://en.wikipedia.org/wiki/Taupe\")")) nil]
["tautology" nil nil nil nil nil nil ((timestamp . "2013-08-27") (notes . "(\"tautology\")")) nil]
["taylanub" nil nil nil nil nil nil ((timestamp . "2013-03-15") (notes . "(\"a hobo\" \"kawaii uguu~\" \"unnecessary use of capitalization award\")")) nil]
["taylanub-fix" nil nil nil nil nil nil ((timestamp . "2013-03-23") (notes . "(\"use Guile.\")")) nil]
["taylanubsnack" nil nil nil nil nil nil ((timestamp . "2013-05-02") (notes . "(\"lisp \\\"/me gives taylanub a dakimakura of Akari Akaza.\\\"\")")) nil]
["tbbt" nil nil nil nil nil nil ((timestamp . "2010-09-25") (notes . "(\"The Big Bang Theory, a hit tv show.\")")) nil]
["TBC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for To Be Continued\")")) nil]
["TBD" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for To Be {Decided,Determined,Done}\")")) nil]
["TBDW" nil nil nil nil nil nil ((timestamp . "2013-01-20") (notes . "(\"Too Boring Didn't Watch\")")) nil]
["tbe" nil nil nil nil nil nil ((timestamp . "2012-03-20") (notes . "(\"noecho to be exact\")")) nil]
["tbepl" nil nil nil nil nil nil ((timestamp . "2011-06-20") (notes . "(\"TeX by Example (TBE) in Polish: TeX w przykladach. Podrecznik dla poczatkujacych. ftp://ftp.gust.org.pl/pub/GUST/contrib/TBE/tbe.pdf\")")) nil]
["tbh" nil nil nil nil nil nil ((timestamp . "2003-08-22") (notes . "(\"to be honest\")")) nil]
["tbnl" nil nil nil nil nil nil ((timestamp . "2005-04-29") (notes . "(\"a toolkit for building dynamic websites with Common Lisp, at http://www.weitz.de/tbnl/\")")) nil]
["TBOMK" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for The Best Of My Knowledge\")")) nil]
["TCE" nil nil nil nil nil nil ((timestamp . "2013-11-14") (notes . "(\"tail-call elimination, also see TCO\")")) nil]
["TCL" nil nil nil nil nil nil ((timestamp . "2012-02-21") (notes . "(\"short for Tool Command Language\" \"http://wiki.tcl.tk/13410\")")) nil]
["tcna" nil nil nil nil nil nil ((timestamp . "2004-04-04") (notes . "(\"noecho travelers cheque not accepted\")")) nil]
["TCO" nil nil nil nil nil nil ((timestamp . "2013-11-14") (notes . "(\"\\\"Total Cost of Ownership,\\\" an old anti-free software MSFT FUD.\" \"tail-call optimization\")")) nil]
["tcolorbox" nil nil nil nil nil nil ((timestamp . "2015-09-24") (notes . "(\"a package to provide an environment for coloured and framed text boxes with a heading line available from https://www.ctan.org/pkg/tcolorbox\")")) nil]
["TCP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Transmission Control Protocol\")")) nil]
["tcpa" nil nil nil nil nil nil ((timestamp . "2003-01-15") (notes . "(\"http://www.againsttcpa.com/index.html\")")) nil]
["tct" nil nil nil nil nil nil ((timestamp . "2003-11-04") (notes . "(\"the coroner's toolkit http://www.porcupine.org/forensics/tct.html\")")) nil]
["tctmtm" nil nil nil nil nil nil ((timestamp . "2013-04-08") (notes . "(\"the campaign to make tromey maintainer\")")) nil]
["tdd" nil nil nil nil nil nil ((timestamp . "2006-08-17") (notes . "(\"test-driven development\")")) nil]
["tdl" nil nil nil nil nil nil ((timestamp . "2006-01-29") (notes . "(\"is a command-line application that manages a list of outstanding tasks that you have to do.\" \"http://directory.fsf.org/productivity/misc/tdl.html\")")) nil]
["tdoe" nil nil nil nil nil nil ((timestamp . "2013-07-17") (notes . "(\"M-x toggle debug on error RET, reproduce the problem, then <pastebin> the backtrace (or study it yourself)\")")) nil]
["tdoq" nil nil nil nil nil nil ((timestamp . "2007-11-13") (notes . "(\"M-x toggle debug on quit RET, reproduce the infinite loop, then type C-g, then lisppaste the contents of the backtrace buffer.\")")) nil]
["tds" nil nil nil nil nil nil ((timestamp . "2009-09-09") (notes . "(\"TDS stands for the TeX Directory Structure, which is a standard way of organising all the TeX-related files on a computer system -- http://www.tex.ac.uk/cgi-bin/texfaq2html?label=tds\")")) nil]
["tea" nil nil nil nil nil nil ((timestamp . "2003-07-25") (notes . "(\"lisp (concat \\\"How about some.. \\\" (describe \\\"tea-data\\\") \\\"?\\\")\")")) nil]
["tea-data" nil nil nil nil nil nil ((timestamp . "2003-07-25") (notes . "(\"lisp (random-choose '(\\\"Thé des Iles\\\" \\\"Jasmin\\\" \\\"Jardin Bleu\\\" \\\"Goût Russe\\\" \\\"Camomile\\\" \\\"Twinings\\\" \\\"Earl Grey\\\" \\\"Peppermint\\\" \\\"Chinese green tea: Silver Mountain\\\"))\")")) nil]
["teachthecontroversy" nil nil nil nil nil nil ((timestamp . "2010-11-02") (notes . "(\"http://www.google.com/images?q=teach+the+controversy\")")) nil]
["teamspeak" nil nil nil nil nil nil ((timestamp . "2013-01-07") (notes . "(\"a proprietary VoIP solution targeted at online video gamers <https://en.wikipedia.org/wiki/Teamspeak>\")")) nil]
["technical-argument" nil nil nil nil nil nil ((timestamp . "2013-06-27") (notes . "(\"lisp (random-choose-term \\\"technical-argument-list\\\")\" \"most of these were taken from https://gist.github.com/jankeesvw/107219e7db08008b82ae/raw/a93ff62d800d4e82d350f2b826a3ec41fef49b1e/gistfile1.txt (OMG COPYRIGHT INFRINGEMENT)\")")) nil]
["technical-argument-list" nil nil nil nil nil nil ((timestamp . "2013-06-27") (notes . "(\"noecho no u\" \"That won't scale.\" \"That's been proven to be O(N^2) and we need a solution that's O(NlogN).\" \"There are, of course, various export limitations on that technology.\" \"The syntax is idiosyncratic.\" \"Trying to build a team behind that technology would be a staffing nightmare.\" \"That can't be generalized to a cross-platform build.\" \"Unfortunately, the license would contaminate our product.\" \"If we go with that idea, we're going to have Don Marti camped out in the front lobby with 300 angry software jihad supporters.\" \"Our support infrastructure simply can't handle the volume that change would involve.\" \"I had one of the interns try that approach for another project, and it scrambled the CEO's hard drive. So I think it's going to be a hard sell.\" \"Yes, well, that's just not the way things work in the real world.\" \"I like your idea. Why don't you write up a white paper and we'll review it at the next staff meeting\" \"Unfortunately, we're an all-FORTH shop. Otherwise, it's a nice idea.\" \"I think you need to stop taking this so personally. We need to think about what's best for the project, not about our own little pet theories.\" \"Oh, I played with that approach back as an undergrad. Got a D, too.\" \"I was reading about that on BugTraq yesterday.\" \"Yes, I believe that's the approach Windows NT is taking.\" \"That's totally inefficient on modern hardware.\" \"Well, yes, but it really reduces to the knapsack problem in that case. Do you have some kind of heuristic, or are we dealing with an NP-complete case\" \"Have you LOOKED at the number of I/O requests that will create\" \"We can't afford the transaction overhead.\" \"Yeah, or we could all just plink away on Amigas or something.\" \"What? I don't speak your crazy moon-language.\" \"Hmm. Didn't they just go bankrupt? It's OK, I guess -- there's some German company who's picked up the existing service contracts.\" \"No, no, no. We're really working on an N-TIER architecture, here.\" \"No, no, no. It's fairly important that the database be in THIRD NORMAL FORM.\" \"No, that would break object encapsulation.\" \"I don't think that's altogether clear. Please write it up in UML for me.\" \"I think there's a problem with your drive geometry.\" \"Can you generate some USE CASES that would justify the change\" \"How is that going to impact the schedule\" \"RAM is cheap and all, but...\" \"It would probably be best if we deferred that until version 2.0.\" \"I like it, but it is too point-oh for my tastes.\" \"If you make this change, I will fork the code.\" \"Yes, well, unfortunately the economy is going away from anything remotely like that. Our investors would kill us.\" \"Jakob Nielsen wrote an interesting hit piece on that.\" \"Yes, yes, we've all read DJB's RFCs on the subject.\" \"This is all covered in Knuth, and we don't have time to go over it again.\" \"This one is in the FAQ: http://www.linuxmafia.com/~rick/faq/#your_dumb_technology\" \"I don't have time for this extropian nonsense.\" \"Well, I guess we could start the QA cycles again from square one. That would require a press release, though.\" \"You used to program in Pascal, didn't you\" \"Why don't we make a generalized solution including both options, and let the administrator decide with a config-file setting\" \"You've obviously ignored the various namespace issues.\" \"I don't think you're considering the performance trade-offs.\" \"What kind of benchmarks have you been running\" \"Let's table this for now, and we'll talk about it one-on-one off-line.\" \"This really doesn't jibe with our core competency.\" \"This sort of thing should really be outsourced.\" \"I remember that IBM had a project to do that back in the 70s.\" \"Um, hello? We're using VON NEUMANN MACHINES HERE.\" \"We need this to fit on a single floppy.\" \"Yes, but can this be embedded in a toaster, for example\" \"We need something that my mom can use.\" \"Users won't want to click through that many layers of hierarchy.\" \"The packaging costs will be prohibitive.\" \"OK, but what about internationalization\" \"Look, would you just get off your Be obsession for FIVE MINUTES and talk serious design with us\" \"That's a good idea -- you should do that on your home page.\" \"Yeah, Linuxcare tried that with the Sourceror project.\" \"Ho, man! Are they still AROUND? That's so cool. I thought that whole idea was discredited years ago.\" \"What you're not seeing is the difference between an 'is-a' and a 'has-a' relationship.\" \"There is no hope for the widow's son, Boaz.\" \"Yes, but we're standardizing on XML.\" \"That doesn't fit into the MVC model.\" \"Well, that's great if you have an AI running the thing.\" \"Well, they're going to do that with the next version of Perl, so we should probably wait.\" \"Well, they're going to do that with the next version of OS X, so we should probably wait.\")")) nil]
["technomancy-fix" nil nil nil nil nil nil ((timestamp . "2012-09-12") (notes . "(\"most problems can be laughed at given an apropos wondermark or achewood link.\")")) nil]
["techtv" nil nil nil nil nil nil ((timestamp . "2002-09-17") (notes . "(\"comedy-central-for-us, though holy-shrine for windoze-d00ds\")")) nil]
["tecs" nil nil nil nil nil nil ((timestamp . "2012-02-24") (notes . "(\"The Elements of Computing Systems by Noam Nisan and Shimon Schocken\" \"teaching computing from nand up to os through logic, assemblers, vms and compilers\" \"not terrible, though if you are already a programmer it will seem pretty easy\" \"see http://www1.idc.ac.il/tecs/\")")) nil]
["tek" nil nil nil nil nil nil ((timestamp . "2010-12-25") (notes . "(\"http://www.trulyergonomic.com/options.html\")")) nil]
["teledildonics" nil nil nil nil nil nil ((timestamp . "2010-12-30") (notes . "(\"noecho Ask qDot. He knows all about that sort of thing.\")")) nil]
["TempBufferBrowseMode" nil nil nil nil nil nil ((timestamp . "2013-08-14") (notes . "(\"https://github.com/leoliu/temp-buffer-browse\")")) nil]
["Tempeh" nil nil nil nil nil nil ((timestamp . "2008-06-20") (notes . "(\"made by a natural culturing and controlled fermentation process that binds soybeans into a cake form. It originated from Indonesia, invented by the Javanese.\")")) nil]
["template" nil nil nil nil nil nil ((timestamp . "2009-05-13") (notes . "(\"Some document templates are available at http://uk.tug.org/training/templates/\")")) nil]
["templates" nil nil nil nil nil nil ((timestamp . "2006-03-08") (notes . "(\"redirect categorytemplates\")")) nil]
["TenCommandments" nil nil nil nil nil nil ((timestamp . "2004-03-16") (notes . "(\"at http://www.lysator.liu.se/c/ten-commandments.html\" \"the Ten Commandments from book The Little Schemer by Daniel P. Friedman and Matthias Felleisen\")")) nil]
["tenkey" nil nil nil nil nil nil ((timestamp . "2013-09-28") (notes . "(\"another term for a numeric keypad\")")) nil]
["Tennants" nil nil nil nil nil nil ((timestamp . "2003-06-19") (notes . "(\"a really crap scottish lager, brewed in scotland and drunk almost exclusively inside scotland. It's more known for being relatively cheap than any decent beer-like qualities; the \\\"McDonalds of beers\\\", in other words.\" \"see also Buckfast (coll. Bucky)\")")) nil]
["tent" nil nil nil nil nil nil ((timestamp . "2013-07-24") (notes . "(\"a protocol for sharing information - https://tent.io/\")")) nil]
["term-diff" nil nil nil nil nil nil ((timestamp . "2008-01-29") (notes . "(\"(from john_w) ansi-term overrides fewer keybindings ; most importantly, M-x term hijacks C-c and C-x, I believe ; ansi-term does not ; but they are the same code\")")) nil]
["terminal-faq" nil nil nil nil nil nil ((timestamp . "2013-09-08") (notes . "(\"noecho Not all keybindings are available at the terminal, use X, or learn which ones your terminal (emulator) actually supports\" \"In the good old days, modifiers like ctrl and shift were simple bit masks. C-a is 0x01 because A is 1000001 and Ctrl masks the high quad. Now, if a key does not *have* any bits in the high quad set, on a terminal, ctrl has no effect.\")")) nil]
["Terminal.app" nil nil nil nil nil nil ((timestamp . "2010-07-30") (notes . "(\"a terrible terminal-emulator.\")")) nil]
["terminalkeys" nil nil nil nil nil nil ((timestamp . "2012-08-26") (notes . "(\"redirect screenkeys\")")) nil]
["TerminalParameters" nil nil nil nil nil nil ((timestamp . "2011-10-13") (notes . "(\"(info \\\"(elisp) Terminal Parameters\\\")\")")) nil]
["terminus" nil nil nil nil nil nil ((timestamp . "2012-08-19") (notes . "(\"The Terminus font is a complete set of fixed-size fonts designed especially for the usage in terms. http://sourceforge.net/projects/terminus-font\" \"apt-get install console-terminus xfonts-terminus xfonts-terminus-dos xfonts-terminus-oblique\" \"a rather cool 3D spaceflight/trading simulator.\" \"prt-get install x11-fonts-terminus on Crux Linux\" \"http://www.lowing.org/fonts/\")")) nil]
["terpri" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"what happens when you take your names from the 50s\" \"a kind of parrot\" \"terminal print line-feed\")")) nil]
["terrorist" nil nil nil nil nil nil ((timestamp . "2012-03-09") (notes . "(\"a term used by the Nazi to speak about the French resistance in 1944 in their propaganda.\")")) nil]
["tesseract" nil nil nil nil nil nil ((timestamp . "2006-09-05") (notes . "(\"an Optical Character Recognition engine, released by google under an Apache-style license, at http://sourceforge.net/projects/tesseract-ocr\" \"Google took some old code (HP and unilever) and recently released a polished version. See also http://developers.slashdot.org/article.pl?sid=06/09/04/2215210 and http://google-code-updates.blogspot.com/2006/08/announcing-tesseract-ocr.html\")")) nil]
["test-list" nil nil nil nil nil nil ((timestamp . "2011-03-30") (notes . "(\"aaa\" \"bbb\" \"ccc\")")) nil]
["test-signs-of-life" nil nil nil nil nil nil ((timestamp . "2012-07-08") (notes . "(\"applying red hot pokers to the feet or into the rectum\")")) nil]
["test123" nil nil nil nil nil nil ((timestamp . "2005-05-29") (notes . "(\"This is a test!\")")) nil]
["testcover" nil nil nil nil nil nil ((timestamp . "2002-11-11") (notes . "(\"a tool which displays which regions of an elisp file were - in its opinion - not properly tested\" \"at http://mywebpages.comcast.net/jyavner/unsafep/testcover.el\")")) nil]
["testentry" nil nil nil nil nil nil ((timestamp . "2015-05-17") (notes . "(\"some random text\")")) nil]
["testing" nil nil nil nil nil nil ((timestamp . "2011-05-10") (notes . "(\"lisp (concat \\\"Hello \\\" (random-choose (notes \\\"places\\\")) \\\"!!! I hope your ready for a show like we haven't seen since back in \\\" (random-choose (notes \\\"places\\\")) \\\"!\\\")\")")) nil]
["testlisp" nil nil nil nil nil nil ((timestamp . "2005-11-10") (notes . "(\"lisp (format \\\"responding to %s\\\" nick)\")")) nil]
["testlongline" nil nil nil nil nil nil ((timestamp . "2003-02-20") (notes . "(\"abcdefghijklmnopqrstuvwxyz aabbccddeeffgghhiijjkklmmmnnooppqqrrssttuuvvwwxxyyzzaaabbbcccdddeeefffggghhhiiijjjkkklllmmmnnnooopppqqqrrrssstttuuuvvvwwwxxxyyyzzzaaabbbcccdddeeefffggghhhiiijjjkkklllmmmnnnooopppqqqrrrssstttuuuvvvwwwxxxyyyzzzaaabbbcccdddeeefffggghhhiiijjjkkklllmmmnnnooopppqqqrrrssstttuuuvvvwwwxxxyyyzzzaaabbbcccdddeeefffggghhhiiijjjkkklllmmmnnnooopppqqqrrrssstttuuuvvvwwwxxxyyyzzzaaabbbcccdddeeefffggghhh\")")) nil]
["tetragrammaton" nil nil nil nil nil nil ((timestamp . "2011-12-07") (notes . "(\"יהוה\" \"YHWH\" \"a four letter word\")")) nil]
["tex-engine" nil nil nil nil nil nil ((timestamp . "2014-02-18") (notes . "(\"TeX, e-TeX, pdfTeX, XeTeX or LuaTex\" \"XeTeX and LuaTeX support utf-8/unicode and system fonts out of the box\" \"see http://tex.stackexchange.com/questions/13593/the-differences-between-tex-engines\")")) nil]
["tex-magic" nil nil nil nil nil nil ((timestamp . "2009-11-07") (notes . "(\"\\\"##\\\" in \\\\def{...} evaluates to \\\"#\\\", \\\\long\\\\def may contain \\\\par inside, \\\\bgroup is { [by: |Steve|)\")")) nil]
["tex-software-list-berlin" nil nil nil nil nil nil ((timestamp . "2003-02-18") (notes . "(\"http://www.educat.hu-berlin.de/~voss/lyx/Software.phtml\" \"Software around LyX/LaTeX/TeX\" \"from Humbolt University in Berlin, Germany\")")) nil]
["tex4ht" nil nil nil nil nil nil ((timestamp . "2009-10-06") (notes . "(\"http://www.tug.org/applications/tex4ht/\" \"a tex converter that can be used to convert .tex files into html, opendocument, docbook\")")) nil]
["texample" nil nil nil nil nil nil ((timestamp . "2009-12-11") (notes . "(\"http://www.texample.net/\")")) nil]
["texbook" nil nil nil nil nil nil ((timestamp . "2014-04-11") (notes . "(\"the formidably written book accompanying the original TeX both written by Donald Knuth. The source can be found under http://www.ctan.org/pkg/texbook\")")) nil]
["texbot" nil nil nil nil nil nil ((timestamp . "2014-04-02") (notes . "(\"Use !ls (SVG) and !lp (PNG), !cs and !cp, and !ms and !mp for LaTeX, ConTeXt, and MetaPost bots, respectively\")")) nil]
["texbytopic" nil nil nil nil nil nil ((timestamp . "2012-09-14") (notes . "(\"noecho TeX by Topic, A TeXnician's Reference. See http://www.eijkhout.net/texbytopic/texbytopic.html or get a free copy from http://mirror.ctan.org/info/texbytopic/TeXbyTopic.pdf\")")) nil]
["texdef" nil nil nil nil nil nil ((timestamp . "2015-06-04") (notes . "(\"a Perl script for displaying the definition of (La)TeX command sequences/macros. Various options and compiler flavours are provided. See http://www.ctan.org/pkg/texdef\")")) nil]
["texdoc" nil nil nil nil nil nil ((timestamp . "2016-08-16") (notes . "(\"a command line program to find and view documentation in TeX Live\" \"primarily used to locate relevant documentation for a given keyword\" \"https://www.tug.org/texdoc/\")")) nil]
["texgraphics" nil nil nil nil nil nil ((timestamp . "2009-03-11") (notes . "(\"http://www.tlhiv.org/graphics\")")) nil]
["texhelp" nil nil nil nil nil nil ((timestamp . "2011-06-27") (notes . "(\"a list of places, where you can get help re *TeX: http://tinyurl.com/texhax-ml http://tex.stackexchange.com/ http://tinyurl.com/ctt-group http://tinyurl.com/latex-forum http://reddit.com/r/latex/\")")) nil]
["texi2html" nil nil nil nil nil nil ((timestamp . "2009-09-03") (notes . "(\"see http://www.nongnu.org/texi2html/\")")) nil]
["texinput" nil nil nil nil nil nil ((timestamp . "2010-11-18") (notes . "(\"you can put [any required package not globally installed] anywhere and then use as command for latex/pdflatex: TEXINPUTS=\\\"/path/to/your/package/directory//::\\\" pdflatex myfile.tex\")")) nil]
["texpaste" nil nil nil nil nil nil ((timestamp . "2012-03-28") (notes . "(\"http://pastebin.tlhiv.org/\")")) nil]
["texse" nil nil nil nil nil nil ((timestamp . "2011-06-18") (notes . "(\"a Q&A site for users of TeX, LaTeX, ConTeXt, and related typesetting systems: http://tex.stackexchange.com/\")")) nil]
["text-translator" nil nil nil nil nil nil ((timestamp . "2012-06-21") (notes . "(\"redirect TextTranslator\")")) nil]
["text``" nil nil nil nil nil nil ((timestamp . "2011-10-22") (notes . "(\"wrong, is there a way to disable \\\"o etc but still use \\\"` and \\\"'.\")")) nil]
["textmate.el" nil nil nil nil nil nil ((timestamp . "2010-07-11") (notes . "(\"redirect Textmate\")")) nil]
["textpos" nil nil nil nil nil nil ((timestamp . "2015-09-30") (notes . "(\"a package to place boxes at absolute positions on a page, to be found under http://www.ctan.org/pkg/textpos\")")) nil]
["texttt-with-wrapping" nil nil nil nil nil nil ((timestamp . "2015-11-16") (notes . "(\"http://tex.stackexchange.com/a/10378\" \"\\\\usepackage[htt]{hyphenat}\")")) nil]
["tfs" nil nil nil nil nil nil ((timestamp . "2012-01-03") (notes . "(\"shit\" \"the devil\" \"Team Foundation Server, some Microsoftian VCS or something.\")")) nil]
["TFT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Thin Film Transistor\")")) nil]
["tgiftt" nil nil nil nil nil nil ((timestamp . "2010-03-20") (notes . "(\"Thank God it's Friday the Thirteenth\")")) nil]
["TH" nil nil nil nil nil nil ((timestamp . "2012-11-26") (notes . "(\"Template Haskell, an experimental metaprogramming extension to GHC6+ <https://en.wikipedia.org/wiki/Template_Haskell>\")")) nil]
["thanks." nil nil nil nil nil nil ((timestamp . "2011-08-10") (notes . "(\"redirect thank\")")) nil]
["that" nil nil nil nil nil nil ((timestamp . "2011-09-06") (notes . "(\"noecho \\\"That\\\", is what I ask you.\")")) nil]
["that" nil nil nil nil nil nil ((timestamp . "2003-03-18")) nil]
["the-cloud" nil nil nil nil nil nil ((timestamp . "2013-08-29") (notes . "(\"http://tinyurl.com/9be77m3\" \"https://github.com/panicsteve/cloud-to-butt\" \"named for the verb \\\"to cloud\\\" after what it does to your manager's judgement\")")) nil]
["the-fuck" nil nil nil nil nil nil ((timestamp . "2010-12-10") (notes . "(\"http://i.imgur.com/HuMSj.jpg\")")) nil]
["the-git" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"JordiGH\")")) nil]
["the-good-old-days" nil nil nil nil nil nil ((timestamp . "2013-04-19") (notes . "(\"noecho everything was better when everything sucked\")")) nil]
["the-joke" nil nil nil nil nil nil ((timestamp . "2012-11-09") (notes . "(\"there are only two hard problems in computer science, cache control and naming things.\")")) nil]
["the-magpie-book" nil nil nil nil nil nil ((timestamp . "2013-01-30") (notes . "(\"\\\"Advanced Fsbot Usage by ijp\\\" coming soon to an internet near you\")")) nil]
["theatre" nil nil nil nil nil nil ((timestamp . "2004-10-21") (notes . "(\"redirect theater\")")) nil]
["thecloud" nil nil nil nil nil nil ((timestamp . "2012-07-19") (notes . "(\"nebulous\")")) nil]
["TheDevil" nil nil nil nil nil nil ((timestamp . "2010-10-05") (notes . "(\"lisp (format \\\"One of the greatest tricks that %s ever pulled was convincing the world that they did not exist.\\\" (apply 'say lispargs))\")")) nil]
["thedude" nil nil nil nil nil nil ((timestamp . "2012-09-04") (notes . "(\"redirect lebowski\")")) nil]
["TheEntryFormerlyKnownAsAquamacs" nil nil nil nil nil nil ((timestamp . "2010-07-14") (notes . "(\"aquamacs is like a bike bolted to the side of a humvee\")")) nil]
["TheEternalFlame" nil nil nil nil nil nil ((timestamp . "2002-11-26") (notes . "(\"God Wrote in Lisp at http://www.songworm.com/lyrics/songworm-parody/EternalFlame.html\")")) nil]
["thelittleninja" nil nil nil nil nil nil ((timestamp . "2004-11-16") (notes . "(\"redirect ninjai\")")) nil]
["thelittleschemer" nil nil nil nil nil nil ((timestamp . "2011-04-15") (notes . "(\"an introductory scheme text, see http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&tid=4825\")")) nil]
["them" nil nil nil nil nil nil ((timestamp . "2011-08-25") (notes . "(\"noecho Them is us.\")")) nil]
["themes" nil nil nil nil nil nil ((timestamp . "2006-10-30") (notes . "(\"redirect ColorTheme\")")) nil]
["thenight" nil nil nil nil nil nil ((timestamp . "2012-05-07") (notes . "(\"dark and full of terrors\")")) nil]
["theology" nil nil nil nil nil nil ((timestamp . "2011-09-12") (notes . "(\"redirect taste\")")) nil]
["Theora" nil nil nil nil nil nil ((timestamp . "2006-04-11") (notes . "(\"an open video codec being developed by the Xiph.org Foundation as part of their Ogg project (It is a project that aims to integrate On2's VP3 video codec, Ogg Vorbis audio codec and Ogg multimedia container formats into a multimedia solution that can compete with MPEG-4 format)\" \"current version: libtheora-1.0alpha5\")")) nil]
["theory" nil nil nil nil nil nil ((timestamp . "2012-01-25") (notes . "(\"noecho In theory, theory and practice are the same. In practice, they are not.\")")) nil]
["theos" nil nil nil nil nil nil ((timestamp . "2013-04-24") (notes . "(\"a good guy\")")) nil]
["theossnack" nil nil nil nil nil nil ((timestamp . "2013-12-14") (notes . "(\"noecho /me gives theos a consolation prize\")")) nil]
["theQuestion" nil nil nil nil nil nil ((timestamp . "2010-12-16") (notes . "(\"mutually incompatible with the answer(42).\")")) nil]
["therac-25" nil nil nil nil nil nil ((timestamp . "2012-11-09") (notes . "(\"http://en.wikipedia.org/wiki/Therac-25\")")) nil]
["there" nil nil nil nil nil nil ((timestamp . "2004-04-02") (notes . "(\"directonly lisp 'noreply\")")) nil]
["thereitis" nil nil nil nil nil nil ((timestamp . "2012-07-10") (notes . "(\"http://images.travelpod.com/users/kickthrough/2.1268567199.there-it-is-the-big-banana.jpg\")")) nil]
["theremin-solo" nil nil nil nil nil nil ((timestamp . "2012-04-22") (notes . "(\"lisp (say \\\"/me plays a kickass \\\\\\\"Jesu, Joy of Man's Desiring\\\\\\\"\\\")\")")) nil]
["therent" nil nil nil nil nil nil ((timestamp . "2010-10-19") (notes . "(\"redirect rent\")")) nil]
["thinclient" nil nil nil nil nil nil ((timestamp . "2009-12-06") (notes . "(\"see ,cthulhu\")")) nil]
["think" nil nil nil nil nil nil ((timestamp . "2011-01-22") (notes . "(\"noecho /me ▁▄█[ do bots think mechanically ? ]\")")) nil]
["this-factoid" nil nil nil nil nil nil ((timestamp . "2011-10-02") (notes . "(\"incorrect\")")) nil]
["this-much" nil nil nil nil nil nil ((timestamp . "2012-10-27") (notes . "(\"noecho ------->| |<------------- that much.\")")) nil]
["thisforthat" nil nil nil nil nil nil ((timestamp . "2013-11-26") (notes . "(\"http://itsthisforthat.com/\")")) nil]
["thjkw" nil nil nil nil nil nil ((timestamp . "2008-07-21") (notes . "(\"baz\")")) nil]
["THNX" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Thanks\")")) nil]
["those" nil nil nil nil nil nil ((timestamp . "2012-02-24") (notes . "(\"redirect you\")")) nil]
["thread" nil nil nil nil nil nil ((timestamp . "2013-10-22") (notes . "(\"noecho You have a problem. So you add threads. Now y2 problemsou have . So you add locking. Now y\")")) nil]
["threestarprogrammer" nil nil nil nil nil nil ((timestamp . "2010-12-16") (notes . "(\"http://c2.com/cgi/wiki?ThreeStarProgrammer\")")) nil]
["thttpt" nil nil nil nil nil nil ((timestamp . "2005-05-28") (notes . "(\"the noise made when blowing a raspberry. One sticks out ones tongue and expells air from the mouth, causing a >thttpt<. Sometimes written by the less onomatopoeically inclined as \\\":-p\\\".\")")) nil]
["thue" nil nil nil nil nil nil ((timestamp . "2012-03-27") (notes . "(\"http://catseye.tc/projects/thue/\")")) nil]
["thumbs-mode" nil nil nil nil nil nil ((timestamp . "2007-01-07") (notes . "(\"redirect thumbsmode\")")) nil]
["thunder" nil nil nil nil nil nil ((timestamp . "2013-09-16") (notes . "(\"rolling\")")) nil]
["thwack" nil nil nil nil nil nil ((timestamp . "2012-10-11") (notes . "(\"lisp (format \\\"/me thwaps %s on the nose with a rolled up newspaper.\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["thx" nil nil nil nil nil nil ((timestamp . "2011-09-09") (notes . "(\"THX®, the next generation surround sound, developed by a George Lucas company. (mplayer is not certified), or just say \\\"Thanks\\\"\")")) nil]
["TI" nil nil nil nil nil nil ((timestamp . "2012-02-26") (notes . "(\"Texas Instruments\")")) nil]
["TIA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Thanks In Advance\")")) nil]
["tias" nil nil nil nil nil nil ((timestamp . "2012-11-23") (notes . "(\"noecho Try it and see! (then tell us what you saw)\")")) nil]
["TIC" nil nil nil nil nil nil ((timestamp . "2003-03-01") (notes . "(\"tongue in cheek\")")) nil]
["tidy" nil nil nil nil nil nil ((timestamp . "2005-09-12") (notes . "(\"redirect htmltidy\")")) nil]
["TIFF" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Tagged Image File Format\")")) nil]
["TikZ" nil nil nil nil nil nil ((timestamp . "2014-02-26") (notes . "(\"noecho TikZ is a package for creating graphics, built on top of PGF. It has a user-friendly syntax, a large set of special purpose libraries, and ships with extensive documentation. See http://www.ctan.org/pkg/pgf\")")) nil]
["tikz-color" nil nil nil nil nil nil ((timestamp . "2009-11-02") (notes . "(\"in styles try using '.' for current color: !l \\\\tikz[color=blue,line width=0.2cm]{ \\\\draw(0,0)--(1,0); \\\\draw[color=.!50](0,0)--(1,1);}\")")) nil]
["tikz-contrast" nil nil nil nil nil nil ((timestamp . "2010-06-12") (notes . "(\"!lp \\\\usetikzlibrary{arrows}\\\\tikzset{contrast/.style={line width=0.5pt,shorten >=0.9pt,shorten <=0.9pt,preaction={draw,white,line width=1.6pt,shorten >=-0.9pt,shorten <=-0.9pt}}} \\\\tikz{\\\\draw[fill](0,0)rectangle(2,2); \\\\draw(-1,-1)to[contrast,-stealth',out=20,in=170](1,1);}\" \"!l \\\\tikz{\\\\fill[blue!50!black](-0.5,-0.5)rectangle(5.5,1.5);\\\\draw[line width=5pt,double distance=4pt,->](0,0)to[out=90,in=-160](5,1);}\")")) nil]
["tikz-effect" nil nil nil nil nil nil ((timestamp . "2013-09-06") (notes . "(\"when you see that the solution with tikz is so complicated, that you go back to drawing it by hand.\")")) nil]
["tikz-node" nil nil nil nil nil nil ((timestamp . "2009-11-22") (notes . "(\"long text in nodes width \\\"text widt=width\\\" attribute: !l \\\\tikz\\\\node[draw=red!40,fill=blue!15, text width = 2cm] at (0,0) {A long text inside a node that should be wrapped!};\")")) nil]
["tikz-parallel" nil nil nil nil nil nil ((timestamp . "2009-12-17") (notes . "(\"!l \\\\usetikzlibrary{decorations}\\\\pgfdeclaredecoration{sl}{initial}{\\\\state{initial}[width=\\\\pgfdecoratedpathlength-1sp]{\\\\pgfmoveto{\\\\pgfpointorigin}}\\\\state{final}{\\\\pgfpathlineto{\\\\pgfpointorigin}}}\\\\tikzset{rl/.style={decoration={sl,raise=#1},decorate}}\\\\tikz{\\\\draw(0,0)--(3,2);\\\\draw[rl=5pt](0,0)--(3,2);}\")")) nil]
["tikz-pin" nil nil nil nil nil nil ((timestamp . "2010-01-27") (notes . "(\"!l \\\\tikz[every pin/.style={draw=black,line width=1pt,fill=black!10,rounded corners=2pt},every pin edge/.style={draw=black,line width=1pt}]\\\\path[draw](0,0)grid[help lines](3,3)(2,1)node[circle,draw,fill,inner sep=4pt,pin={[pin distance=35mm,draw=red]-45:{Coo2}}]{};\" \"!l \\\\usetikzlibrary{arrows}\\\\tikz[every pin edge/.style={latex'-,fill=black}]\\\\draw (0,0) node[rounded corners=3pt, draw=blue!70,fill=red!20,pin=125:{Foo!}] {Test};\")")) nil]
["tikz-uml" nil nil nil nil nil nil ((timestamp . "2013-10-07") (notes . "(\"http://www.ensta-paristech.fr/~kielbasi/tikzuml/index.php?lang=en\")")) nil]
["tikzexamples" nil nil nil nil nil nil ((timestamp . "2012-06-05") (notes . "(\"http://www.texample.net/tikz/examples/\" \"some TeXbot examples: tikz-contrast, tikz-color, tikz-pin, tikz-node, tikz-parallel\")")) nil]
["TIL" nil nil nil nil nil nil ((timestamp . "2011-01-11") (notes . "(\"Today I Learned\")")) nil]
["timecube" nil nil nil nil nil nil ((timestamp . "2004-12-19") (notes . "(\"\\\"T.O.E.\\\", theory of everything\" \"http://www.timecube.com\")")) nil]
["timekeeping" nil nil nil nil nil nil ((timestamp . "2011-05-31") (notes . "(\"redirect CategoryTimeTracking\")")) nil]
["timeless" nil nil nil nil nil nil ((timestamp . "2013-04-24") (notes . "(\"http://www.b-list.org/weblog/2013/apr/05/good-tools/\")")) nil]
["timer" nil nil nil nil nil nil ((timestamp . "2005-08-18") (notes . "(\"timer.el\" \"timerfunctions\" \"see midnight.el\")")) nil]
["timers" nil nil nil nil nil nil ((timestamp . "2011-09-10") (notes . "(\"(info \\\"(elisp) Timers\\\")\")")) nil]
["timestamping" nil nil nil nil nil nil ((timestamp . "2004-03-22") (notes . "(\"redirect ercstamp\")")) nil]
["timing" nil nil nil nil nil nil ((timestamp . "2012-03-18") (notes . "(\"benchmark-run\")")) nil]
["timthelion" nil nil nil nil nil nil ((timestamp . "2007-06-25") (notes . "(\"tim... the lion\" \"a bloody silly and obscenely long nick\" \"a proud ubuntu user!\" \"wants to can\" \"a debian stable user\")")) nil]
["TIMTOWDI" nil nil nil nil nil nil ((timestamp . "2003-05-22") (notes . "(\"There Is More Than One Way To Do It\")")) nil]
["TIMTOWTDI" nil nil nil nil nil nil ((timestamp . "2004-07-11") (notes . "(\"There Is More Than One Way To Do It\" \"http://c2.com/cgi/wiki?TimTowTdi\")")) nil]
["TINA" nil nil nil nil nil nil ((timestamp . "2012-05-15") (notes . "(\"there is no alternative\")")) nil]
["TINC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for There Is No Cabal\")")) nil]
["ting" nil nil nil nil nil nil ((timestamp . "2005-04-03") (notes . "(\"an extreme wiki session\" \"a kind of MoonEdit session (thanks to mattis)\" \"when you see eruptive IRC messages by mattis about a scheduled event that does not take place where you currently are.\")")) nil]
["TINLA" nil nil nil nil nil nil ((timestamp . "2013-03-21") (notes . "(\"short for This is Not Legal Advice\")")) nil]
["TINSTAAFL" nil nil nil nil nil nil ((timestamp . "2007-12-10") (notes . "(\"ITYM \\\"TANSTAAFL\\\", There Ain't No Such THing As A Free Lunch.\")")) nil]
["tiny-tools" nil nil nil nil nil nil ((timestamp . "2003-04-02") (notes . "(\"an elisp library by Jari Aalto at http://tiny-tools.sf.net/\")")) nil]
["tinyirc" nil nil nil nil nil nil ((timestamp . "2003-08-07") (notes . "(\"redirect pastebot\")")) nil]
["tinywm" nil nil nil nil nil nil ((timestamp . "2007-10-11") (notes . "(\"a truly minimal (100 lines of C) window manager for the X window system <http://incise.org/index.cgi/TinyWM>\")")) nil]
["tiobe" nil nil nil nil nil nil ((timestamp . "2013-06-09") (notes . "(\"A programming language popularity index based on search engine results at http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html\" \"Other indeces: PYPL, based on Google Trends, at https://sites.google.com/site/pydatalog/pypl/PyPL-PopularitY-of-Programming-Language\" \"Language Popularity Index, based on search engine results, at http://lang-index.sourceforge.net/\" \"Red Monk index, based on github+stack overflow, at http://redmonk.com/sogrady/2013/02/28/language-rankings-1-13/\" \"Trendy Skills, based on job ads, at http://trendyskills.com/\")")) nil]
["titlepages" nil nil nil nil nil nil ((timestamp . "2016-06-26") (notes . "(\"examples of over two dozen title page designs based on a range of published books and theses, together with the LaTeX code used to create them at http://mirrors.ctan.org/info/latex-samples/TitlePages/titlepages.pdf\")")) nil]
["titlesec" nil nil nil nil nil nil ((timestamp . "2016-08-03") (notes . "(\"a package that makes modifying the appearance of \\\\chapter, \\\\section and friends easier. https://www.ctan.org/pkg/titlesec?lang=en\")")) nil]
["tivo" nil nil nil nil nil nil ((timestamp . "2003-12-10") (notes . "(\"See also libre-free variants like freevo and MythTV\")")) nil]
["tjsy" nil nil nil nil nil nil ((timestamp . "2010-04-04") (notes . "(\"Thank Jove it's Shrove Yuseday\")")) nil]
["tl;dr" nil nil nil nil nil nil ((timestamp . "2010-07-30") (notes . "(\"noecho Me neither.\")")) nil]
["tl;dw" nil nil nil nil nil nil ((timestamp . "2010-06-02") (notes . "(\"Too Long Didn't Watch\")")) nil]
["TLB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Translation Lookaside Buffer\")")) nil]
["TLD" nil nil nil nil nil nil ((timestamp . "2007-03-10") (notes . "(\"short for Top-Level Domain <http://wikipedia.org/wiki/Top-level_domain>\" \"try birny: .tld de\" \"try fsbot: country .de\" \"try fsbot: country-search Germany\")")) nil]
["TLIA" nil nil nil nil nil nil ((timestamp . "2008-03-09") (notes . "(\"Twb Likes Inventing Acronyms\")")) nil]
["tls" nil nil nil nil nil nil ((timestamp . "2014-01-30") (notes . "(\"The Little Schemer by Daniel P. Friedman and Matthias Felleisen\" \"http://www.ccs.neu.edu/home/matthias/BTLS/\" \"The most dangerous code in the world: validating SSL certificates in non-browser software <https://crypto.stanford.edu/~dabo/pubs/abstracts/ssl-client-bugs.html>\")")) nil]
["tls/ssl" nil nil nil nil nil nil ((timestamp . "2014-01-27") (notes . "(\"Transport Layer Security (TLS) and its predecessor, Secure Sockets Layer (SSL)\" \"The Most Dangerous Code in the World <http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf>\")")) nil]
["TMA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Too Many Abbreviations\")")) nil]
["TMD" nil nil nil nil nil nil ((timestamp . "2006-08-14") (notes . "(\"Trout of Mass Destruction\")")) nil]
["TMDS" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Transition Minimized Differential Signaling\")")) nil]
["TMI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Too Much Information\")")) nil]
["tmm" nil nil nil nil nil nil ((timestamp . "2011-06-22") (notes . "(\"transient-mark-mode or tmm-menubar (text-mode menu bar), depending on context\")")) nil]
["tmp-tt1" nil nil nil nil nil nil ((timestamp . "2012-07-18") (notes . "(\"1\")")) nil]
["tmp-tt12" nil nil nil nil nil nil ((timestamp . "2012-07-18") (notes . "(\"2\")")) nil]
["tmp449" nil nil nil nil nil nil ((timestamp . "2012-03-29") (notes . "(\"lisp (format \\\"/me takes %s aside and blah blah blah\\\" (mapconcat 'symbol-name lispargs \\\" \\\"))\")")) nil]
["tmpa" nil nil nil nil nil nil ((timestamp . "2005-07-26") (notes . "(\"redirect tmpb\")")) nil]
["tmpabc" nil nil nil nil nil nil ((timestamp . "2013-11-02") (notes . "(\"redirect nchchoecregocrgo.crg.o\")")) nil]
["tmpb" nil nil nil nil nil nil ((timestamp . "2005-07-26") (notes . "(\"redirect tmpa\")")) nil]
["tmpbazz" nil nil nil nil nil nil ((timestamp . "2003-02-26") (notes . "(\"tmpbazz\")")) nil]
["tmpfoo" nil nil nil nil nil nil ((timestamp . "2006-04-11") (notes . "(\"lisp (+ lispa lispb (apply '+ lispargs))\")")) nil]
["tmpfooksdhjk" nil nil nil nil nil nil ((timestamp . "2005-03-23") (notes . "(\"bar\")")) nil]
["tmphi" nil nil nil nil nil nil ((timestamp . "2005-03-21") (notes . "(\"lisp (mapcar '1+ args)\")")) nil]
["tmphi2" nil nil nil nil nil nil ((timestamp . "2005-03-21") (notes . "(\"lisp (apply '(lambda (x) (+ x 1) args))\")")) nil]
["tmppoints" nil nil nil nil nil nil ((timestamp . "2004-01-27") (notes . "(\"lisp (if (equal (format \\\"%s\\\" nick) \\\"deego\\\") 2 3)\")")) nil]
["tmpstr" nil nil nil nil nil nil ((timestamp . "2008-04-14") (notes . "(\";) ;p (208) (20 8) List::It list :It\")")) nil]
["TMTOWTDI" nil nil nil nil nil nil ((timestamp . "2004-01-10") (notes . "(\"noecho There's More Than One Way To Do It\")")) nil]
["tmu" nil nil nil nil nil nil ((timestamp . "2013-01-20") (notes . "(\"\\\"To my understanding\\\".\")")) nil]
["tmux" nil nil nil nil nil nil ((timestamp . "2012-03-21") (notes . "(\"a very good replacement for screen: http://tmux.sourceforge.net/\" \"tmux config examples: http://tmux.cvs.sourceforge.net/viewvc/tmux/tmux/examples/\" \"seriously nicer than screen at multi-user sessions, which simply operate over a socket vs screen's convoluted setguid hacks.\")")) nil]
["tmw" nil nil nil nil nil nil ((timestamp . "2013-07-11") (notes . "(\"The Mathworks, the empire against which Octave's rebel alliance fights.\")")) nil]
["tnas" nil nil nil nil nil nil ((timestamp . "2009-03-17") (notes . "(\"That's not a sample!\")")) nil]
["tnct" nil nil nil nil nil nil ((timestamp . "2011-07-18") (notes . "(\"The Next Cool Thing\")")) nil]
["toast" nil nil nil nil nil nil ((timestamp . "2006-11-11") (notes . "(\"*nix package manager http://www.toastball.net/toast/\" \"simple source-and-symlinks package manager for\")")) nil]
["TOBAS" nil nil nil nil nil nil ((timestamp . "2013-05-22") (notes . "(\"Taken Out Back and Shot\")")) nil]
["tocloft" nil nil nil nil nil nil ((timestamp . "2015-05-17") (notes . "(\"a package that provides control over the typography of the Table of Contents, List of Figures and List of Tables, and the ability to create new 'List of ...'. The ToC \\\\parskip can be changed -- https://www.ctan.org/pkg/tocloft\")")) nil]
["today" nil nil nil nil nil nil ((timestamp . "2011-02-03") (notes . "(\"lisp (random-choose '(\\\"before tomorrow\\\" \\\"after yesterday\\\" \\\"Monday\\\" \\\"Tuesday\\\" \\\"Wednesday\\\" \\\"Thursday\\\" \\\"Friday\\\" \\\"Caturday\\\" \\\"Sunday\\\"))\")")) nil]
["today-we-hate" nil nil nil nil nil nil ((timestamp . "2014-01-06") (notes . "(\"lisp (random-choose-term \\\"hateables\\\")\")")) nil]
["todl" nil nil nil nil nil nil ((timestamp . "2004-04-20") (notes . "(\"http://www.ma.utexas.edu/~jcorneli/a/elisp/todl-mode.el\")")) nil]
["TOEFL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Test Of English As A Foreign Language\")")) nil]
["toejam" nil nil nil nil nil nil ((timestamp . "2006-01-10") (notes . "(\"redirect njam\")")) nil]
["toke" nil nil nil nil nil nil ((timestamp . "2013-11-29") (notes . "(\"redirect spliff\")")) nil]
["told" nil nil nil nil nil nil ((timestamp . "2013-11-10") (notes . "(\"lisp (let ((object (stringify-symbol-list lispargs))) (format \\\"Awww! %s got *%s*!\\\" object (if (string-equal object \\\"beer\\\") \\\"cold\\\" \\\"told\\\")))\")")) nil]
["tomato" nil nil nil nil nil nil ((timestamp . "2012-09-07") (notes . "(\"a delicious, versatile summer-season fruit native to the Americas. It is botanically a berry, but a culinary vegetable.\")")) nil]
["Tomcat" nil nil nil nil nil nil ((timestamp . "2012-08-23") (notes . "(\"the shittiest application server\")")) nil]
["tome" nil nil nil nil nil nil ((timestamp . "2006-12-30") (notes . "(\"Tales/Troubles of Middle Earth, a roguelike game. See http://www.t-o-m-e.net/\")")) nil]
["TomHardwareCheckList" nil nil nil nil nil nil ((timestamp . "2004-03-30") (notes . "(\"at http://www6.tomshardware.com/howto/20040329/win_linux-07.html\")")) nil]
["TomMigrationGuide" nil nil nil nil nil nil ((timestamp . "2004-03-30") (notes . "(\"redirect TomHardwareCheckList\")")) nil]
["tomorrow" nil nil nil nil nil nil ((timestamp . "2010-09-03") (notes . "(\"saturday\")")) nil]
["tonight" nil nil nil nil nil nil ((timestamp . "2003-05-17") (notes . "(\"noecho I'm washing my hair tonight\")")) nil]
["too-far" nil nil nil nil nil nil ((timestamp . "2013-05-19") (notes . "(\"redirect too-far-p\")")) nil]
["too-far-p" nil nil nil nil nil nil ((timestamp . "2013-05-19") (notes . "(\"noecho just a bit\")")) nil]
["tool-bar" nil nil nil nil nil nil ((timestamp . "2008-02-18") (notes . "(\"redirect toolbar\")")) nil]
["topaz" nil nil nil nil nil nil ((timestamp . "2013-02-06") (notes . "(\"a Ruby implementation written in Python on top of RPython\")")) nil]
["topic" nil nil nil nil nil nil ((timestamp . "2007-03-03") (notes . "(\"lisp \\\"It seems you missed the /topic: it contains lots of useful information.\\\"\")")) nil]
["Tor" nil nil nil nil nil nil ((timestamp . "2012-02-20") (notes . "(\"An anonymous Internet communication system\" \"to connect to freenode, see http://freenode.net/irc_servers.shtml#tor\" \"a tool which respond of the need ask by George Washington to offer the right to stand for Liberty everywhere in the World, offering anonymity for every one. It don't offer the perfect anonymity, but stand for it!\")")) nil]
["tora" nil nil nil nil nil nil ((timestamp . "2003-05-04") (notes . "(\"http://www.globecom.se/tora/\")")) nil]
["toranaga-sama" nil nil nil nil nil nil ((timestamp . "2003-12-23") (notes . "(\"in Edo.\")")) nil]
["torpark" nil nil nil nil nil nil ((timestamp . "2006-09-21") (notes . "(\"a Free firefox derivative, at http://torpark.nfshost.com/, that enables you to surf the internet anonymously.\")")) nil]
["Torvalds" nil nil nil nil nil nil ((timestamp . "2011-06-06") (notes . "(\"the primary developer of Linux-a free, albeit incomplete, operating system notorious for its difficulty of use.\" \"^----- (According to Conservapedia)\" \"Tarvald's rejects God and is an atheist.\")")) nil]
["totalcommander" nil nil nil nil nil nil ((timestamp . "2010-07-30") (notes . "(\"a windows program like norton commander\")")) nil]
["tourdebabel" nil nil nil nil nil nil ((timestamp . "2006-04-02") (notes . "(\"http://www.cabochon.com/~stevey/blog-rants/tour-de-babel.html\")")) nil]
["tourist" nil nil nil nil nil nil ((timestamp . "2011-03-07") (notes . "(\"someone who isn't very familiar with the area\")")) nil]
["tpb" nil nil nil nil nil nil ((timestamp . "2012-03-09") (notes . "(\"The Pirate Bay\")")) nil]
["tpp" nil nil nil nil nil nil ((timestamp . "2010-06-22") (notes . "(\"an ncurses-based text presentation program\" \"http://www.synflood.at/tpp.html\")")) nil]
["tq" nil nil nil nil nil nil ((timestamp . "2006-03-30") (notes . "(\"tq.el, a utility to maintain a transaction queue\")")) nil]
["tr" nil nil nil nil nil nil ((timestamp . "2007-06-18") (notes . "(\"use ,t8 <from code> <to code> <phrase>\")")) nil]
["trac" nil nil nil nil nil nil ((timestamp . "2005-01-04") (notes . "(\"a wiki+bug database\" \"at http://www.edgewall.com/trac\" \"written in python\")")) nil]
["trademark-test" nil nil nil nil nil nil ((timestamp . "2006-08-17") (notes . "(\"™\")")) nil]
["trailing" nil nil nil nil nil nil ((timestamp . "2010-09-14") (notes . "(\"M-x delete-trailing-whitespace\" \"(setq whitespace-style '(trailing)) (global-whitespace-mode)\" \"(setq-default show-trailing-whitespace t)\")")) nil]
["TrampAndZsh" nil nil nil nil nil nil ((timestamp . "2009-08-29") (notes . "(\"http://pastebin.com/f164ec942\")")) nil]
["tramping" nil nil nil nil nil nil ((timestamp . "2004-03-18") (notes . "(\"redirect tramp\")")) nil]
["trampsyntax" nil nil nil nil nil nil ((timestamp . "2008-05-04") (notes . "(\"redirect tramp-syntax\")")) nil]
["transfenestration" nil nil nil nil nil nil ((timestamp . "2005-04-18") (notes . "(\"the act of throwing someone through a (closed) window\")")) nil]
["transient-mark-mode" nil nil nil nil nil nil ((timestamp . "2007-11-01") (notes . "(\"redirect TransientMarkMode\")")) nil]
["translationparty" nil nil nil nil nil nil ((timestamp . "2013-02-19") (notes . "(\"http://translationparty.com/\")")) nil]
["TransposeList" nil nil nil nil nil nil ((timestamp . "2011-01-03") (notes . "(\"see ,ElispCookbook\")")) nil]
["trap" nil nil nil nil nil nil ((timestamp . "2011-06-20") (notes . "(\"noecho IT'S A TRAP!\")")) nil]
["tre" nil nil nil nil nil nil ((timestamp . "2009-11-03") (notes . "(\"an awesome regular expression library that compiles POSIX regular expressions into NFAs, matching them with in space and time with just one pass over the input string.\" \"http://laurikari.net/tre/\")")) nil]
["treat" nil nil nil nil nil nil ((timestamp . "2012-12-12") (notes . "(\"lisp (format \\\"/me gives %s a treat. \\\\\\\"Here, boy!\\\\\\\"\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["treeshaker" nil nil nil nil nil nil ((timestamp . "2011-11-07") (notes . "(\"a Lisp term for a program that strips the unneeded parts of a Lisp runtime environment from a program image, greatly reducing its size in the process.\")")) nil]
["treewm" nil nil nil nil nil nil ((timestamp . "2005-08-07") (notes . "(\"http://treewm.sf.net/\")")) nil]
["Tremulous" nil nil nil nil nil nil ((timestamp . "2006-04-11") (notes . "(\"a GPL sci-fi game built upon the GPLed Quake 3 engine that blends a team based FPS with elements of an RTS\" \"http://www.tremulous.net/\" \"the media files are (mostly) CC:By-SA licensed.\" \"on 2006-03-31, a stand-alone version was finally released!\" \"very addictive\" \"http://icculus.org/quake3/?page=status\")")) nil]
["TRESOR" nil nil nil nil nil nil ((timestamp . "2012-11-11") (notes . "(\"explained at http://en.wikipedia.org/wiki/TRESOR\" \"at http://www1.informatik.uni-erlangen.de/tresor/\")")) nil]
["trespassers" nil nil nil nil nil nil ((timestamp . "2010-08-27") (notes . "(\"noecho Trespassers will be violated.\")")) nil]
["trfs" nil nil nil nil nil nil ((timestamp . "2007-03-13") (notes . "(\"a file hierarchy designed by timthelion which allows for having folders and files with the same name, in such a way that there is mindmap functionality.\" \"something that can be found at http://www.timthelion.com/cgi-bin/blosxom.cgi//trfs.html\")")) nil]
["Trigonometry" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?Trigonometry\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?Trigonometry\")")) nil]
["trinity" nil nil nil nil nil nil ((timestamp . "2006-10-16") (notes . "(\"http://www.dina.kvl.dk/~abraham/religion/trinity.txt\")")) nil]
["triples" nil nil nil nil nil nil ((timestamp . "2003-02-12") (notes . "(\"[is-a] [[Tuple],[Subject,Predicate,Object]]\")")) nil]
["tripping" nil nil nil nil nil nil ((timestamp . "2011-10-16") (notes . "(\"noecho No tripping in the channel.\")")) nil]
["troll" nil nil nil nil nil nil ((timestamp . "2012-10-12") (notes . "(\"http://en.wikipedia.org/wiki/Internet_troll\" \"a species that must not be fed\" \"no longer endangered\" \"if you are going to troll, troll hard, troll funny, or troll innocuous, but don't be boring.\" \"troll detection science: http://dgarcia.eu/?p=12\" \"the subtle art of trolling <http://www.urban75.com/Mag/troll.html>\")")) nil]
["trolledp" nil nil nil nil nil nil ((timestamp . "2012-10-10") (notes . "(\"lisp t\")")) nil]
["trolling" nil nil nil nil nil nil ((timestamp . "2013-06-21") (notes . "(\"redirect troll\")")) nil]
["trollscript" nil nil nil nil nil nil ((timestamp . "2012-04-15") (notes . "(\"https://github.com/tombell/trollscript\")")) nil]
["trollsnack" nil nil nil nil nil nil ((timestamp . "2011-05-01") (notes . "(\"redirect gluttony\")")) nil]
["trololol" nil nil nil nil nil nil ((timestamp . "2011-12-26") (notes . "(\"Trolled out loud out loud out loud\")")) nil]
["TRT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for The Right Thing\")")) nil]
["truce" nil nil nil nil nil nil ((timestamp . "2013-09-20") (notes . "(\"noecho Can't we all just agree to hate PHP and leave it at that?\")")) nil]
["true" nil nil nil nil nil nil ((timestamp . "2010-08-27") (notes . "(\"noecho t\")")) nil]
["truncate-lines" nil nil nil nil nil nil ((timestamp . "2005-11-01") (notes . "(\"Turn off wrapping for a single buffer with (setq truncate-lines t). Turn wrapping on in horizontally-split windows with (setq truncate-partial-width-windows nil).\")")) nil]
["truncate-partial-width-windows" nil nil nil nil nil nil ((timestamp . "2002-11-27") (notes . "(\"truncate-lines for vertically split windows\")")) nil]
["truncating" nil nil nil nil nil nil ((timestamp . "2004-11-24") (notes . "(\"redirect erctruncate\")")) nil]
["trunk" nil nil nil nil nil nil ((timestamp . "2013-06-25") (notes . "(\"redirect edge\")")) nil]
["trustzone" nil nil nil nil nil nil ((timestamp . "2013-12-31") (notes . "(\"http://www.arm.com/products/processors/technologies/trustzone/index.php\")")) nil]
["truth" nil nil nil nil nil nil ((timestamp . "2011-01-26") (notes . "(\"a ministry\")")) nil]
["try" nil nil nil nil nil nil ((timestamp . "2012-01-03") (notes . "(\"lisp (random-choose '(\\\"Do or do not. There is no try.\\\" \\\"So, if there's something you'd like to try \\\\\\\\ If there's something you'd like to try \\\\\\\\ Ask me I won't say, \\\\\\\"No\\\\\\\". How could I?\\\"))\")")) nil]
["try&see" nil nil nil nil nil nil ((timestamp . "2011-01-03") (notes . "(\"why don't you try it and tell us.\")")) nil]
["tryandsee" nil nil nil nil nil nil ((timestamp . "2011-01-03") (notes . "(\"why don't you try it and tell us.\")")) nil]
["ts" nil nil nil nil nil nil ((timestamp . "2003-03-18")) nil]
["ts" nil nil nil nil nil nil ((timestamp . "2003-03-18")) nil]
["tsg" nil nil nil nil nil nil ((timestamp . "2012-02-15") (notes . "(\"The Schemers Guide by Iain Ferguson with Edward Martin and Burt Kaufman\")")) nil]
["tsoc" nil nil nil nil nil nil ((timestamp . "2010-10-30") (notes . "(\"The Schematics of Computation by Vincent Manis and James Little\" \"http://www.cs.ubc.ca/spider/little/schematics.html\")")) nil]
["tspl" nil nil nil nil nil nil ((timestamp . "2010-06-14") (notes . "(\"The Scheme Programming Language by R. Kent Dybvig\" \"http://www.scheme.com/tspl3/\")")) nil]
["tsr" nil nil nil nil nil nil ((timestamp . "2013-02-19") (notes . "(\"the company Gary Gygax co-founded to publish D&D\")")) nil]
["tss" nil nil nil nil nil nil ((timestamp . "2012-02-15") (notes . "(\"The Seasoned Schemer by Friedman and Felleisen\" \"at http://www.ccs.neu.edu/home/matthias/BTSS/\")")) nil]
["TSV" nil nil nil nil nil nil ((timestamp . "2013-10-21") (notes . "(\"Tab-Separated Values -- a table format that separates records with ^J and fields with ^I\")")) nil]
["TT" nil nil nil nil nil nil ((timestamp . "2011-11-03") (notes . "(\"True Type\")")) nil]
["TTBOMK" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for To The Best Of My Knowledge\")")) nil]
["ttfn" nil nil nil nil nil nil ((timestamp . "2003-04-30") (notes . "(\"short for ta ta for now, ta ta being a diminutive for bye\")")) nil]
["TTY" nil nil nil nil nil nil ((timestamp . "2012-06-04") (notes . "(\"short for Teletype\" \"http://www.linusakesson.net/programming/tty/index.php\")")) nil]
["TTYL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Talk To You Later\")")) nil]
["tufte-latex" nil nil nil nil nil nil ((timestamp . "2009-07-26") (notes . "(\"A Tufte-inspired LaTeX class for producing handouts, papers, and books at http://code.google.com/p/tufte-latex/\")")) nil]
["tug" nil nil nil nil nil nil ((timestamp . "2009-03-25") (notes . "(\"the TeX Users Group: http://www.tug.org/\")")) nil]
["TukZ" nil nil nil nil nil nil ((timestamp . "2012-05-14") (notes . "(\"noecho a package for creating graphics, built on top of PGF. It has a user-friendly syntax, a large set of special purpose libraries, and ships with excessive documentation. See http://www.ctan.org/pkg/pgf\")")) nil]
["tumbleweed" nil nil nil nil nil nil ((timestamp . "2005-07-31") (notes . "(\"lisp \\\"/me watches the tumbleweed roll past...\\\"\")")) nil]
["Tumie" nil nil nil nil nil nil ((timestamp . "2009-07-11") (notes . "(\"a cool guy\")")) nil]
["tuneit" nil nil nil nil nil nil ((timestamp . "2004-09-11") (notes . "(\"a simple command-line instrument tuner.\" \"at http://delysid.org/tuneit.html\")")) nil]
["tunes" nil nil nil nil nil nil ((timestamp . "2008-05-12") (notes . "(\"a (moribund) project for a free, reflective computing system <http://tunes.org>\")")) nil]
["turbofail" nil nil nil nil nil nil ((timestamp . "2012-03-19") (notes . "(\"noted for his necromancy skills\")")) nil]
["turbofail-fix" nil nil nil nil nil nil ((timestamp . "2012-04-25") (notes . "(\"most problems can be fixed by aborting the universe and starting over with better constants\")")) nil]
["turing" nil nil nil nil nil nil ((timestamp . "2013-05-10") (notes . "(\"noecho \\\"The process of constructing instruction tables should be very fascinating. There need be no real danger of it ever becoming a drudge, for any processes that are quite mechanical may be turned over to the machine itself.\\\"\")")) nil]
["turing-equivalence" nil nil nil nil nil nil ((timestamp . "2011-11-17") (notes . "(\"the godwin's law of programming language arguments\")")) nil]
["turing-test" nil nil nil nil nil nil ((timestamp . "2012-11-18") (notes . "(\"noecho You've failed.\")")) nil]
["turn-it-off" nil nil nil nil nil nil ((timestamp . "2014-01-21") (notes . "(\"noecho Have you tried turning it off and back on?\")")) nil]
["tutorial" nil nil nil nil nil nil ((timestamp . "2014-06-09") (notes . "(\"redirect lshort\")")) nil]
["tutorialp" nil nil nil nil nil nil ((timestamp . "2010-10-14") (notes . "(\"lisp (save-window-excursion (help-with-tutorial) (save-excursion (goto-char (point-min)) (numberp (word-search-forward (mapconcat (lambda (x) (format \\\"%s\\\" x)) lispargs \\\" \\\")))))\")")) nil]
["tutorials" nil nil nil nil nil nil ((timestamp . "2015-08-08") (notes . "(\"the (Not So) Short Introduction to LaTeX at http://tobi.oetiker.ch/lshort/\" \"the wikibook at https://en.wikibooks.org/wiki/LaTeX\")")) nil]
["Tux" nil nil nil nil nil nil ((timestamp . "2003-02-16") (notes . "(\"a penguin\" \"the Linux Mascot\")")) nil]
["Tux4Kids" nil nil nil nil nil nil ((timestamp . "2003-02-16") (notes . "(\"located at http://www.tux4kids.org/\" \"a group of coders & artists working on producing quality educational programs under the GPL license\" \"projects include TuxTyping & TuxPaint\")")) nil]
["tuxmath" nil nil nil nil nil nil ((timestamp . "2003-02-22") (notes . "(\"http://www.newbreedsoftware.com/tuxmath/\")")) nil]
["tv" nil nil nil nil nil nil ((timestamp . "2007-04-26") (notes . "(\"a device for liquefying grey matter.\")")) nil]
["TW" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"ThoughtWorks an agile consultancy with some quite cool developers\" \"It's where Martin Fowler works, in case you were wondering\")")) nil]
["twajs" nil nil nil nil nil nil ((timestamp . "2012-01-29") (notes . "(\"That was a joke, son.\")")) nil]
["twap" nil nil nil nil nil nil ((timestamp . "2006-12-31") (notes . "(\"when somebody whaps twb\")")) nil]
["twb-bug" nil nil nil nil nil nil ((timestamp . "2011-12-01") (notes . "(\"noecho Why haven't you installed Debian yet\")")) nil]
["twb-buttons" nil nil nil nil nil nil ((timestamp . "2007-10-03") (notes . "(\"Dates: use ISO 8601\" \"A xterm, implemented in hardware, like a monkey, could be a computer.\" \"Color-theme writers are idiots.\")")) nil]
["twb-email-fix" nil nil nil nil nil nil ((timestamp . "2010-03-23") (notes . "(\"\\\"All the alternatives to gnus suck\\\"\")")) nil]
["twb-fix" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"noecho Most problems can be solved by installing Debian.\")")) nil]
["twb-fix2" nil nil nil nil nil nil ((timestamp . "2014-01-07") (notes . "(\"noecho Whatever it is you're doing that doesn't work, stop doing it.\")")) nil]
["twb-fortunes" nil nil nil nil nil nil ((timestamp . "2007-07-01") (notes . "(\"Hey, lambdabot has a whole fortune file dedicated to palomer! Why doesn't fsbot have one for *me*?!\")")) nil]
["twb-menubar" nil nil nil nil nil nil ((timestamp . "2013-02-06") (notes . "(\"This bar's menu is pretty crappy.\")")) nil]
["twb-social-fix" nil nil nil nil nil nil ((timestamp . "2007-12-03") (notes . "(\"most problems can be solved by giving up computers and entering a monastery\")")) nil]
["twb-technomancy-fix" nil nil nil nil nil nil ((timestamp . "2012-09-27") (notes . "(\"most problems can be solved by installing Debian stable and augmenting it with Nix for access to more recent versions in a way that can't destabilize the system.\")")) nil]
["twb-unfix" nil nil nil nil nil nil ((timestamp . "2011-10-03") (notes . "(\"noecho most problems can be CREATED by installing Ubuntu\")")) nil]
["twb-yow" nil nil nil nil nil nil ((timestamp . "2012-05-18") (notes . "(\"noecho I hear that Condorcet is based on MATH so it must be BEST\")")) nil]
["twbism" nil nil nil nil nil nil ((timestamp . "2013-01-17") (notes . "(\"a douchebaggery movement spearheaded by twb on freenode.\" \"twb's neverending asshattery brings him to what he believes to be prominence, while sensible people continue to recognise him for his remarkable ability to be a proper wanker.\")")) nil]
["twbreason" nil nil nil nil nil nil ((timestamp . "2012-03-15") (notes . "(\"noecho because I say so\")")) nil]
["twbwhy" nil nil nil nil nil nil ((timestamp . "2012-03-20") (notes . "(\"redirect twbreason\")")) nil]
["tweet" nil nil nil nil nil nil ((timestamp . "2011-11-20") (notes . "(\"noecho /me tweets some mindless bullshit.\")")) nil]
["twenex" nil nil nil nil nil nil ((timestamp . "2005-05-05") (notes . "(\"TOPS-20\")")) nil]
["TWIAVBP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for The World Is A Very Big Place\")")) nil]
["twiddler" nil nil nil nil nil nil ((timestamp . "2004-08-17") (notes . "(\"at http://www.handykey.com\")")) nil]
["twin" nil nil nil nil nil nil ((timestamp . "2005-05-23") (notes . "(\"a text mode window manager\" \"at http://linuz.sns.it/~max/twin/\")")) nil]
["twistedtaco" nil nil nil nil nil nil ((timestamp . "2008-02-11") (notes . "(\"a sadistic mexican\")")) nil]
["twm" nil nil nil nil nil nil ((timestamp . "2010-09-21") (notes . "(\"Tom's window manager\")")) nil]
["two-mode-mode" nil nil nil nil nil nil ((timestamp . "2007-09-20") (notes . "(\"http://www.welton.it/freesoftware/files/two-mode-mode.el\")")) nil]
["twss" nil nil nil nil nil nil ((timestamp . "2012-07-17") (notes . "(\"That's what she said, commonly abbreviated as TWSS, is a phrase used in response to an accidental double entendre, especially one that is sexual in nature.\" \"The second meaning referred to with this phrase usually reinforces outdated and sexist gender roles and stereotypes\" \"http://geekchick77.dreamwidth.org/472.html\")")) nil]
["TWTAS" nil nil nil nil nil nil ((timestamp . "2007-05-14") (notes . "(\"that's what they ALL say!\")")) nil]
["twz" nil nil nil nil nil nil ((timestamp . "2012-10-01") (notes . "(\"noecho Welcome to The Twilight Zone.\")")) nil]
["txt2regex" nil nil nil nil nil nil ((timestamp . "2003-07-10") (notes . "(\"is a Regular Expression \\\"wizard\\\"; txt2regex.sf.net\")")) nil]
["ty" nil nil nil nil nil nil ((timestamp . "2003-01-18") (notes . "(\"an abbreviation for thank you\")")) nil]
["typearea" nil nil nil nil nil nil ((timestamp . "2013-05-22") (notes . "(\"a package, part of the koma-script bundle handling typographically correct page layouts and margins, it can be found at http://www.ctan.org/pkg/typearea\")")) nil]
["typo" nil nil nil nil nil nil ((timestamp . "2013-08-13") (notes . "(\"a msitaek in your tpying\" \"a programming language that runs in haskell's type system https://github.com/seliopou/typo\")")) nil]
["typo.el" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"A library for typographical editing\" \"at https://github.com/jorgenschaefer/typoel\")")) nil]
["typopunct" nil nil nil nil nil nil ((timestamp . "2010-12-06") (notes . "(\"redirect TypographicalPunctuationMarks\")")) nil]
["TYVM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Thank You Very Much\")")) nil]
["TZ" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Time Zone\")")) nil]
["tzag" nil nil nil nil nil nil ((timestamp . "2013-04-02") (notes . "(\"Time Zone Appropriate Greeting\")")) nil]
["tzx4kids" nil nil nil nil nil nil ((timestamp . "2003-02-22") (notes . "(\"http://www.tux4kids.org/tux4kids/\")")) nil]
["u" nil nil nil nil nil nil ((timestamp . "2012-11-05") (notes . "(\"noecho Damnit Jim! It's YOU. Y-O-U. Not *U*. U is a letter. YOU is a word. Dutch for 'you' (formal singular). See http://ars.userfriendly.org/cartoons/?id=20041201\" \"no u!\")")) nil]
["U-A" nil nil nil nil nil nil ((timestamp . "2012-10-19") (notes . "(\"user-agent, which you should set to \\\"W3C standards are important. Stop fucking obsessing over user-agent already.\\\"\")")) nil]
["U/L" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Upload\")")) nil]
["ub" nil nil nil nil nil nil ((timestamp . "2012-04-30") (notes . "(\"undefined behaviour in C and C++, also known as nasal demons.\")")) nil]
["ubuntu-fix" nil nil nil nil nil nil ((timestamp . "2012-03-19") (notes . "(\"noecho Most problems can be solved by... no.\")")) nil]
["UC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Uncacheable\")")) nil]
["ucb-scheme" nil nil nil nil nil nil ((timestamp . "2008-05-12") (notes . "(\"the Scheme distribution used at UCB, see http://inst.eecs.berkeley.edu/~scheme/\")")) nil]
["UCE" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"Unsolicited Commercial Email, i.e. a fancy name for a proper subset of spam.\" \"yet another tla.\")")) nil]
["UCLA" nil nil nil nil nil nil ((timestamp . "2011-10-25") (notes . "(\"the University of California at Los Angeles\")")) nil]
["UCS" nil nil nil nil nil nil ((timestamp . "2013-12-02") (notes . "(\"the Unicode Character Database http://www.unicode.org/ucd/\")")) nil]
["ucw" nil nil nil nil nil nil ((timestamp . "2006-04-06") (notes . "(\"uncommon web: http://common-lisp.net/project/ucw/\")")) nil]
["UDE" nil nil nil nil nil nil ((timestamp . "2005-03-18") (notes . "(\"Unix Desktop Environment - \\\"a new WM which will be a complete GUI in future\\\" without using any toolkits other than Xlib\")")) nil]
["udev" nil nil nil nil nil nil ((timestamp . "2005-05-31") (notes . "(\"provides a userspace solution for a dynamic /dev directory, with persistent device naming\" \"http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev-FAQ\" \"http://webpages.charter.net/decibelshelp/LinuxHelp_UDEVPrimer.html\" \"http://www.reactivated.net/udevrules.php\" \"usbmount project: http://users.actrix.co.nz/michael/usbmount.html\")")) nil]
["UDP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for User Datagram Protocol\")")) nil]
["uffi" nil nil nil nil nil nil ((timestamp . "2003-02-24") (notes . "(\"the Universal Foreign Function Interface for Common Lisp\" \"at http://uffi.med-info.com/\")")) nil]
["ufw" nil nil nil nil nil nil ((timestamp . "2011-09-20") (notes . "(\"Uncomplicated Firewall <https://help.ubuntu.com/community/UFW>\" \"nice\")")) nil]
["ugh" nil nil nil nil nil nil ((timestamp . "2014-01-30") (notes . "(\"the Unix Hater's Handbook http://web.mit.edu/~simsong/www/ugh.pdf\")")) nil]
["ugt" nil nil nil nil nil nil ((timestamp . "2011-10-29") (notes . "(\"Universal Greeting Time: http://www.total-knowledge.com/~ilya/mips/ugt.html\" \"When someone joins, it's morning. When someone parts, it's evening.\")")) nil]
["uhh" nil nil nil nil nil nil ((timestamp . "2013-09-07") (notes . "(\"http://homes.cs.washington.edu/~weise/unix-haters.html\")")) nil]
["uhm" nil nil nil nil nil nil ((timestamp . "2006-08-29") (notes . "(\"butts\")")) nil]
["uim" nil nil nil nil nil nil ((timestamp . "2007-03-09") (notes . "(\"universal input method: a way to input multi-byte languages into applications\" \"see also http://uim.freedesktop.org/wiki/WhatsUIM\" \"uim.el: http://uim.freedesktop.org/wiki/UIM_2dEL\")")) nil]
["uk-weather-forecast" nil nil nil nil nil nil ((timestamp . "2012-11-27") (notes . "(\"lisp (random-choose '(\\\"rain\\\" \\\"rain\\\" \\\"rain\\\" \\\"rain\\\" \\\"rain\\\" \\\"surprisingly, no rain\\\"))\")")) nil]
["ukelele" nil nil nil nil nil nil ((timestamp . "2009-04-03") (notes . "(\"a Mac keyboard layout editor, see http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=Ukelele\")")) nil]
["UKIP" nil nil nil nil nil nil ((timestamp . "2012-12-02") (notes . "(\"a single-issue anti-EU, sometimes-anti-immigration party in .uk\")")) nil]
["ulem" nil nil nil nil nil nil ((timestamp . "2015-08-08") (notes . "(\"a Package that provides a \\\\ul command which creates a linebreakable underline effect\")")) nil]
["ultraviolet" nil nil nil nil nil nil ((timestamp . "2010-07-28") (notes . "(\"http://www.defectivebydesign.org/ultraviolet\")")) nil]
["umeshu" nil nil nil nil nil nil ((timestamp . "2008-02-03") (notes . "(\"a plum liqueur\")")) nil]
["un" nil nil nil nil nil nil ((timestamp . "2014-01-28") (notes . "(\"http://freenode.net/using_the_network.shtml is freenode's \\\"using the network\\\" page, and describes channel and user flags, network policies, etc.\")")) nil]
["unaccent-dir" nil nil nil nil nil nil ((timestamp . "2008-03-27") (notes . "(\"a small script which sanitizes the file names in a given directory so as to allow for the use of a batch mv command: http://www.timthelion.com/cgi-bin/blosxom.cgi/unaccent-dir.html\")")) nil]
["unacceptable" nil nil nil nil nil nil ((timestamp . "2012-09-27") (notes . "(\"http://jordi.platinum.linux.pl/piccies/unacceptable.jpg\")")) nil]
["unclutter" nil nil nil nil nil nil ((timestamp . "2006-04-06") (notes . "(\"a program that makes the mouse cursor disappear after a few seconds of stillness.\")")) nil]
["uncomment" nil nil nil nil nil nil ((timestamp . "2004-10-17") (notes . "(\"C-u M-x comment-region (see doc string...)\")")) nil]
["undefine" nil nil nil nil nil nil ((timestamp . "2010-01-13") (notes . "(\"!l \\\\def\\\\foo{Bar} \\\\makeatletter \\\\let\\\\foo\\\\@undefined \\\\makeatother This Foo \\\\foo is undefined!\")")) nil]
["undefined-color" nil nil nil nil nil nil ((timestamp . "2006-03-06") (notes . "(\"an error that can be caused by the following:\" \"running out of colours on an 8 bit display\" \"a missing rgb.txt file or an X config file with a bad RgbPath entry\")")) nil]
["undefined-colour" nil nil nil nil nil nil ((timestamp . "2006-03-06") (notes . "(\"redirect undefined-color\")")) nil]
["undefinedcolor" nil nil nil nil nil nil ((timestamp . "2006-06-20") (notes . "(\"redirect undefined-color\")")) nil]
["undefun" nil nil nil nil nil nil ((timestamp . "2013-09-07") (notes . "(\"See df fmakunbound\")")) nil]
["undelete" nil nil nil nil nil nil ((timestamp . "2002-12-22") (notes . "(\"redirect Ext2fs-Undeletion\")")) nil]
["UnDoc" nil nil nil nil nil nil ((timestamp . "2006-01-18") (notes . "(\"redirect AntiWord\")")) nil]
["undohist" nil nil nil nil nil nil ((timestamp . "2011-07-27") (notes . "(\"at http://cx4a.org/pub/undohist.el\")")) nil]
["ung" nil nil nil nil nil nil ((timestamp . "2012-05-28") (notes . "(\"ung's not gnu\")")) nil]
["unger" nil nil nil nil nil nil ((timestamp . "2003-08-16") (notes . "(\"a general top-down non-directional method for parse CF grammars\")")) nil]
["unicode" nil nil nil nil nil nil ((timestamp . "2014-05-16") (notes . "(\"Try lualatex or xelatex instead of vanilla latex for full unicode support\")")) nil]
["unicode-6" nil nil nil nil nil nil ((timestamp . "2012-11-14") (notes . "(\"for full[ish] coverage, find lulz.ttf and install it in /usr/local/share/fonts/\" \"and then follow http://paste.lisp.org/+2V00\" \"😤\")")) nil]
["unicodedata" nil nil nil nil nil nil ((timestamp . "2008-02-13") (notes . "(\"at http://unicode.org/Public/UNIDATA/UnicodeData.txt\")")) nil]
["unicomp" nil nil nil nil nil nil ((timestamp . "2011-12-08") (notes . "(\"see http://pckeyboards.stores.yahoo.net/en104bl.html\" \"seller of ModelM keyboard\")")) nil]
["unifont" nil nil nil nil nil nil ((timestamp . "2013-05-17") (notes . "(\"a fixed-width raster font with a glyph for each visible Unicode 5.1 Plane 0 character <http://unifoundry.com>\")")) nil]
["union-cards" nil nil nil nil nil nil ((timestamp . "2013-07-02") (notes . "(\"noecho STRIKE HIM!!!!\")")) nil]
["unison" nil nil nil nil nil nil ((timestamp . "2006-02-01") (notes . "(\"at http://www.cis.upenn.edu/~bcpierce/unison/\" \"written in o'caml\" \"like a multi-way rsync\" \"Unlike rsync, keeps track of all changes made on either machine\" \"See also unison-gtk, a graphical interface\")")) nil]
["unity" nil nil nil nil nil nil ((timestamp . "2003-02-19") (notes . "(\"division\")")) nil]
["UniversalArgument" nil nil nil nil nil nil ((timestamp . "2011-07-26") (notes . "(\"redirect Arguments\")")) nil]
["universe" nil nil nil nil nil nil ((timestamp . "2009-08-26") (notes . "(\"a spherical region 705 meters in diameter\")")) nil]
["unix" nil nil nil nil nil nil ((timestamp . "2012-02-01") (notes . "(\"http://neugierig.org/content/unix/\")")) nil]
["unix-haters" nil nil nil nil nil nil ((timestamp . "2013-08-08") (notes . "(\"http://web.mit.edu/~simsong/www/ugh.pdf\")")) nil]
["unix2dos" nil nil nil nil nil nil ((timestamp . "2002-10-03") (notes . "(\"apt-get install sysutils in debian\")")) nil]
["unixhatershandbook" nil nil nil nil nil nil ((timestamp . "2011-08-09") (notes . "(\"redirect unix-haters\")")) nil]
["unknown-unknows" nil nil nil nil nil nil ((timestamp . "2013-02-17") (notes . "(\"redirect rumsfeld\")")) nil]
["unkosherized" nil nil nil nil nil nil ((timestamp . "2011-05-14") (notes . "(\"noecho Hey, hey, hey -- them ain't kosherized rules.\")")) nil]
["unlambda" nil nil nil nil nil nil ((timestamp . "2010-06-14") (notes . "(\"an esoteric pure functional programming language. It is like other functional languages, but more so.\" \"\\\"Your Functional Programming Language Nightmares Come True\\\" http://www.madore.org/~david/programs/unlambda/\")")) nil]
["unql" nil nil nil nil nil nil ((timestamp . "2011-11-22") (notes . "(\"an open query language for json, semi-structured and document databases, see http://www.unqlspec.org/display/UnQL/Home\")")) nil]
["unrm" nil nil nil nil nil nil ((timestamp . "2002-12-22") (notes . "(\"redirect Ext2fs-Undeletion\")")) nil]
["unschooling" nil nil nil nil nil nil ((timestamp . "2008-03-03") (notes . "(\"http://en.wikipedia.org/wiki/Unschooling\")")) nil]
["unset" nil nil nil nil nil nil ((timestamp . "2013-09-07") (notes . "(\"See df makunbound\")")) nil]
["unshell" nil nil nil nil nil nil ((timestamp . "2007-12-06") (notes . "(\"not a shell\")")) nil]
["untowards" nil nil nil nil nil nil ((timestamp . "2013-04-25") (notes . "(\"noecho GUIDE HIM!!\")")) nil]
["untrusted" nil nil nil nil nil nil ((timestamp . "2012-06-20") (notes . "(\"the one you can't trust!\")")) nil]
["unword" nil nil nil nil nil nil ((timestamp . "2006-01-18") (notes . "(\"redirect antiword\")")) nil]
["Uplink" nil nil nil nil nil nil ((timestamp . "2011-10-02") (notes . "(\"a hacking simulation game\" \"http://www.introversion.co.uk/uplink/\")")) nil]
["upright" nil nil nil nil nil nil ((timestamp . "2010-12-16") (notes . "(\"http://www.tug.org/TUGboat/Articles/tb18-1/tb54becc.pdf\")")) nil]
["uprightd" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"http://www.tug.org/TUGboat/tb30-3/tb96vieth.pdf\")")) nil]
["ups" nil nil nil nil nil nil ((timestamp . "2012-08-31") (notes . "(\"a Uninterrupted Power Supply\" \"a Universal Pumping Station\" \"the one which loose you packets.\")")) nil]
["upside-down-mapping" nil nil nil nil nil nil ((timestamp . "2012-06-13") (notes . "(\"(\\\"a\\\" . \\\"ɐ\\\")\" \"(\\\"c\\\" . \\\"3\\\")\")")) nil]
["uptime" nil nil nil nil nil nil ((timestamp . "2012-07-14") (notes . "(\"lisp (format \\\"that's a little personal, %s\\\" nick)\")")) nil]
["upx" nil nil nil nil nil nil ((timestamp . "2013-03-05") (notes . "(\"http://upx.sourceforge.net/\")")) nil]
["ur" nil nil nil nil nil nil ((timestamp . "2013-07-31") (notes . "(\"the ancient Sumerian city that dominated Mesopotamia from 6000 BC to 600 BC. If you mean \\\"you are\\\" or \\\"your\\\", just say so. Also swedish for clock, and a word meaning \\\"from within\\\". A german prefix for refering to something very old. Urdu, a language based on the arabic script spoken like hindi.\")")) nil]
["URI" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Uniform Resource Identifier\")")) nil]
["us" nil nil nil nil nil nil ((timestamp . "2011-12-30") (notes . "(\"them.\")")) nil]
["usa" nil nil nil nil nil nil ((timestamp . "2005-04-26") (notes . "(\"United States of America\" \"a superpower which rules the world\" \"the land of taboos.\")")) nil]
["USB" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Universal Serial Bus\")")) nil]
["usb.el" nil nil nil nil nil nil ((timestamp . "2007-11-05") (notes . "(\"http://dto.freeshell.org/e/usb.el\")")) nil]
["usemod1.0" nil nil nil nil nil nil ((timestamp . "2003-11-01") (notes . "(\"if WikiLinks or [[Free Links]] don't work, set $ParseParas = 0\")")) nil]
["user" nil nil nil nil nil nil ((timestamp . "2013-02-19") (notes . "(\"haha\" \"you\")")) nil]
["userpass" nil nil nil nil nil nil ((timestamp . "2007-07-11") (notes . "(\"http://n01se.net/agriffis/userpass/\")")) nil]
["users" nil nil nil nil nil nil ((timestamp . "2012-10-24") (notes . "(\"the people ruining everything\")")) nil]
["ushell" nil nil nil nil nil nil ((timestamp . "2007-12-06") (notes . "(\"the latest dto vaporware\")")) nil]
["using" nil nil nil nil nil nil ((timestamp . "2013-01-29") (notes . "(\"see http://freenode.net/using_the_network.shtml for all manner of freenode lore\")")) nil]
["USN" nil nil nil nil nil nil ((timestamp . "2007-04-02") (notes . "(\"Ubuntu Security Notice (the analog of Debian's DSA)\")")) nil]
["ustl" nil nil nil nil nil nil ((timestamp . "2002-09-13") (notes . "(\"Use the Source, Luke!\")")) nil]
["USWC" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Uncacheable Speculative Write Combining\")")) nil]
["ut" nil nil nil nil nil nil ((timestamp . "2004-04-08") (notes . "(\"unreal tournament-- a multi-player video game where players either play co-operatively or in a death-match\")")) nil]
["utf-8" nil nil nil nil nil nil ((timestamp . "2014-06-10") (notes . "(\"an 8-bit encoding for unicode, where some codes >127 have the special meaning \\\"the next byte is also part of this character\\\"\" \"http://www.cl.cam.ac.uk/~mgk25/ucs/utf-8-history.txt\" \"see also: unicode\")")) nil]
["utf16" nil nil nil nil nil nil ((timestamp . "2009-11-09") (notes . "(\"http://triggertek.com/r/unicode/0020-007F\")")) nil]
["utf8" nil nil nil nil nil nil ((timestamp . "2009-06-08") (notes . "(\"redirect utf-8\")")) nil]
["UTSL" nil nil nil nil nil nil ((timestamp . "2012-07-14") (notes . "(\"an abbreviation for Use The Source, Luke!\" \"an alternative to rtfm when there is no fm to r.\" \"\\\"When I want to understand what is happening today or try to decide what will happen tomorrow, I look at the source code.\\\" -- Omar Khayyám\")")) nil]
["UUCP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Unix-To-Unix Copy Protocol\")")) nil]
["uuoc" nil nil nil nil nil nil ((timestamp . "2007-04-25") (notes . "(\"useless use of cat\")")) nil]
["UUOQ" nil nil nil nil nil nil ((timestamp . "2013-12-09") (notes . "(\"Useless Use Of Quote\")")) nil]
["uuterm" nil nil nil nil nil nil ((timestamp . "2006-11-19") (notes . "(\"a unicode terminal emulator <http://svn.mplayerhq.hu/uuterm/trunk/>, <http://brightrain.aerifal.cx/~dalias/uuterm/>.\" \"by dalias (a regular).\")")) nil]
["uw" nil nil nil nil nil nil ((timestamp . "2011-04-10") (notes . "(\"the University of Washington\")")) nil]
["UX" nil nil nil nil nil nil ((timestamp . "2012-11-28") (notes . "(\"user experience\")")) nil]
["V" nil nil nil nil nil nil ((timestamp . "2006-02-15") (notes . "(\"at least three different (unrelated) modern stories, in different media.\" \"V (for Vendetta) : A graphic novel by Alan Moore, set in a dystopian future/present\" \"a mini-series (TV) about an alien invasion of earth.\" \"a novel by Thomas Pynchon, the reclusive american author.\")")) nil]
["v-grep" nil nil nil nil nil nil ((timestamp . "2005-06-16") (notes . "(\"visual grep\")")) nil]
["vacietis" nil nil nil nil nil nil ((timestamp . "2013-03-21") (notes . "(\"a c compiler for common lisp systems: https://github.com/vsedach/Vacietis\" \"the ideological offspring of the zeta-c compiler\")")) nil]
["vader" nil nil nil nil nil nil ((timestamp . "2010-05-28") (notes . "(\"noecho Hhhhhhhhhkh... tsssssss. Hhhhhhkshh... tsssssss.\")")) nil]
["vagrant" nil nil nil nil nil nil ((timestamp . "2012-03-04") (notes . "(\"http://vagrantup.com\")")) nil]
["validatedp" nil nil nil nil nil nil ((timestamp . "2012-02-15") (notes . "(\"lisp (equalp lispargs '(anxt))\")")) nil]
["valign" nil nil nil nil nil nil ((timestamp . "2015-12-11") (notes . "(\"images included by \\\\includegraphics are usually bottom-aligned to the current baseline and so may get a height bigger than text surrounding them. To top-align them in the current line, you can use \\\"\\\\adjustbox{valign=t}{\\\\includegraphics{...}}\\\" from the adjustbox package.\")")) nil]
["vandalism" nil nil nil nil nil nil ((timestamp . "2012-04-25") (notes . "(\"noecho lol buttz\")")) nil]
["variable" nil nil nil nil nil nil ((timestamp . "2002-09-07") (notes . "(\"try dv\")")) nil]
["VAX" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Virtual Address Extension\")")) nil]
["VBE" nil nil nil nil nil nil ((timestamp . "2008-02-29") (notes . "(\"short for VESA BIOS Extensions\")")) nil]
["vbox" nil nil nil nil nil nil ((timestamp . "2013-05-21") (notes . "(\"redirect virtualbox\")")) nil]
["vc++" nil nil nil nil nil nil ((timestamp . "2013-09-29") (notes . "(\"Microsoft Visual C++\")")) nil]
["vc-mode" nil nil nil nil nil nil ((timestamp . "2011-09-22") (notes . "(\"redirect VersionControl\")")) nil]
["vcal" nil nil nil nil nil nil ((timestamp . "2005-03-19") (notes . "(\"See vcalendar\")")) nil]
["vcalendar" nil nil nil nil nil nil ((timestamp . "2005-03-19") (notes . "(\"http://www.tapsellferrier.co.uk/downloads/vcal-diary.el\")")) nil]
["VCM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Virtual Channel Memory\")")) nil]
["VCS" nil nil nil nil nil nil ((timestamp . "2011-10-09") (notes . "(\"Version Control System\")")) nil]
["vector-notation-for-keybindings" nil nil nil nil nil nil ((timestamp . "2012-10-10") (notes . "(\"easy until it isn't\" \"use kbd for the love of stallman\")")) nil]
["VEG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Very Evil Grin\")")) nil]
["vegetable" nil nil nil nil nil nil ((timestamp . "2012-06-25") (notes . "(\"lisp (format \\\"/me serves %s some turnip\\\" (if lispargs (stringify-symbol-list lispargs) nick))\")")) nil]
["vejeta" nil nil nil nil nil nil ((timestamp . "2009-04-28") (notes . "(\"http://vejeta.com/portal\")")) nil]
["verb" nil nil nil nil nil nil ((timestamp . "2008-02-02") (notes . "(\"an important type of word that expresses being or action. It predicates what you are trying to say to make it clear exactly what you want done. It is not optional.\")")) nil]
["verbatim" nil nil nil nil nil nil ((timestamp . "2014-11-19") (notes . "(\"noecho To pass a section of text completely unmodified into the output, use \\\\begin{verbatim} and \\\\end{verbatim}\")")) nil]
["verdict" nil nil nil nil nil nil ((timestamp . "2012-09-02") (notes . "(\"lisp (random-choose '(\\\"Innocent!\\\" \\\"Guilty!\\\" \\\"Not Proven!\\\"))\")")) nil]
["verilisp" nil nil nil nil nil nil ((timestamp . "2010-01-18") (notes . "(\"http://home.comcast.net/~faulkner612/programming/verilisp/\")")) nil]
["verilog" nil nil nil nil nil nil ((timestamp . "2010-01-25") (notes . "(\"see http://www.veripool.org/wiki/verilog-mode for the current version of verilog-mode\")")) nil]
["verse" nil nil nil nil nil nil ((timestamp . "2015-09-16") (notes . "(\"a package to aid in typesetting verses available from https://www.ctan.org/pkg/verse\")")) nil]
["verybestsalespitch" nil nil nil nil nil nil ((timestamp . "2013-07-17") (notes . "(\"/join #vim\")")) nil]
["veryCloud" nil nil nil nil nil nil ((timestamp . "2009-01-21") (notes . "(\"cb\" \"陈彬\")")) nil]
["VESA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Video Electronics Standards Association\")")) nil]
["vesta" nil nil nil nil nil nil ((timestamp . "2006-06-07") (notes . "(\"a software configuration management system at http://www.vestasys.org/\")")) nil]
["VfD" nil nil nil nil nil nil ((timestamp . "2007-11-07") (notes . "(\"a Vote for Deletion, part of Wikipedia's policy infrastructure.\")")) nil]
["vfs" nil nil nil nil nil nil ((timestamp . "2005-04-13") (notes . "(\"an acronym for \\\"Virtual Filesystem Switch\\\" -- an interface to files, filesystems, and file operations, eg. creation, writing, reading, deleting.\")")) nil]
["VGA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Video Graphics Array\")")) nil]
["vgrep" nil nil nil nil nil nil ((timestamp . "2005-06-16") (notes . "(\"visual grep\")")) nil]
["vi" nil nil nil nil nil nil ((timestamp . "2012-03-05") (notes . "(\"a visual editor (see ,viper ,vim ,nvi)\" \"\\\"visual\\\" meaning not a line editor like ed\" \"http://i.imgur.com/M3m1d.png\" \"the editor with modes: one that beeps and one that corrupts your file.\" \"began as a modified version of the ex editor in 1976 by Bill Joy\" \"know as evil editor\")")) nil]
["vi-help" nil nil nil nil nil nil ((timestamp . "2008-12-20") (notes . "(\"To search the vim help for your command's description, :help, /index.t CTRL-] /yourcommandskeys; eg, /gF\")")) nil]
["viande" nil nil nil nil nil nil ((timestamp . "2003-06-15") (notes . "(\"lisp (random-choose '(\\\"Paupiette de Sandre\\\" \\\"Filet de boeuf en chevreuil\\\" \\\"Minis tournedos de magret de canard au foie gras frais et jus de sauternes\\\"))\")")) nil]
["viclippy" nil nil nil nil nil nil ((timestamp . "2011-07-08") (notes . "(\"http://www.geekzone.co.nz/foobar/5656\")")) nil]
["victoria" nil nil nil nil nil nil ((timestamp . "2002-11-08") (notes . "(\"someone who lives in switzerland.\")")) nil]
["victory" nil nil nil nil nil nil ((timestamp . "2013-12-24") (notes . "(\"noecho Smells like napalm.\")")) nil]
["video" nil nil nil nil nil nil ((timestamp . "2006-12-22") (notes . "(\"Kino Cinelerra Kdenlive LiVES segun http://alts.homelinux.net/\")")) nil]
["viewsourcewith" nil nil nil nil nil nil ((timestamp . "2006-11-22") (notes . "(\"a mozilla extension like mozex\" \"https://addons.mozilla.org/firefox/394/\")")) nil]
["vigor" nil nil nil nil nil nil ((timestamp . "2013-01-14") (notes . "(\"a port of MS Word's \\\"clippy\\\" office assistant to vi <http://vigor.sf.net/>\")")) nil]
["vim-fix" nil nil nil nil nil nil ((timestamp . "2013-09-03") (notes . "(\"noecho Most problems can be solved by switching to vim\")")) nil]
["vim-tutorial" nil nil nil nil nil nil ((timestamp . "2008-05-29") (notes . "(\":wq!\")")) nil]
["vimjs" nil nil nil nil nil nil ((timestamp . "2013-12-13") (notes . "(\"a vim port to JavaScript at http://coolwanglu.github.io/vim.js/web/vim.html\" \"see ymacs\")")) nil]
["VimMacro" nil nil nil nil nil nil ((timestamp . "2011-02-02") (notes . "(\"text editor assembly\")")) nil]
["vimscript" nil nil nil nil nil nil ((timestamp . "2009-05-20") (notes . "(\"a quantum language: http://markmail.org/message/v6fauwmrykdg47ep\")")) nil]
["vimtutorial" nil nil nil nil nil nil ((timestamp . "2010-07-12") (notes . "(\"noecho ESC :q! RET\")")) nil]
["vinc456" nil nil nil nil nil nil ((timestamp . "2008-05-08") (notes . "(\"just a student\")")) nil]
["vineyards" nil nil nil nil nil nil ((timestamp . "2013-05-15") (notes . "(\"noecho HARVEST HIM THEN TRAMPLE HIM!!\")")) nil]
["vingesingularity" nil nil nil nil nil nil ((timestamp . "2006-11-04") (notes . "(\"i think, therefore i am.\")")) nil]
["violence" nil nil nil nil nil nil ((timestamp . "2011-07-29") (notes . "(\"noecho Violence solves everything.\")")) nil]
["violin-solo" nil nil nil nil nil nil ((timestamp . "2012-04-21") (notes . "(\"lisp (say \\\"/me plays a kickass \\\\\\\"flight of the bumblebee\\\\\\\"\\\")\")")) nil]
["virtualbox" nil nil nil nil nil nil ((timestamp . "2013-05-21") (notes . "(\"a Sunacle para- and full virtualization product <https://en.wikipedia.org/wiki/VirtualBox>\")")) nil]
["virtualcursor" nil nil nil nil nil nil ((timestamp . "2010-08-04") (notes . "(\"redirect VcursorPackage\")")) nil]
["VirtueOfTheOpen" nil nil nil nil nil nil ((timestamp . "2002-12-15") (notes . "(\"at http://www.acmuller.net/articles/virtue_of_the_open.html\")")) nil]
["virtues" nil nil nil nil nil nil ((timestamp . "2012-10-29") (notes . "(\"\\\"We will encourage you to develop the three great virtues of a programmer: laziness, impatience, and hubris.\\\" -- Larry Wall in Programming Perl\")")) nil]
["visiblewhitespace" nil nil nil nil nil nil ((timestamp . "2006-07-27") (notes . "(\"redirect showwhitespace\")")) nil]
["vision" nil nil nil nil nil nil ((timestamp . "2013-10-30") (notes . "(\"noecho Will those of you with a vision for the future please stay out of the way of those of us doing stuff.\")")) nil]
["vista" nil nil nil nil nil nil ((timestamp . "2006-12-29") (notes . "(\"Windows Vista\" \"http://www.cs.auckland.ac.nz/~pgut001/pubs/vista_cost.txt\" \"see http://badvista.org/ for the FSF's Vista opposition campaign\")")) nil]
["visualFAQ" nil nil nil nil nil nil ((timestamp . "2009-09-03") (notes . "(\"a different approach to \\\"search\\\" the TeX UK FAQ. Have a look at http://tug.ctan.org/get/info/visualFAQ/visualFAQ.pdf\")")) nil]
["visuallisp" nil nil nil nil nil nil ((timestamp . "2006-08-19") (notes . "(\"a piece of crap\")")) nil]
["viz" nil nil nil nil nil nil ((timestamp . "2002-12-03") (notes . "(\"an abbreviation for respectively\")")) nil]
["vkill" nil nil nil nil nil nil ((timestamp . "2007-10-23") (notes . "(\"cool\")")) nil]
["vlc" nil nil nil nil nil nil ((timestamp . "2010-09-10") (notes . "(\"the VideoLAN media player\")")) nil]
["vmpk" nil nil nil nil nil nil ((timestamp . "2012-06-13") (notes . "(\"Virtual MIDI Piano Keyboard\")")) nil]
["vms" nil nil nil nil nil nil ((timestamp . "2010-03-29") (notes . "(\"a creaky old operating system with the world's worst file path syntax. http://www.djesys.com/vms/freevms/mentor/vms_path.html\")")) nil]
["VNC" nil nil nil nil nil nil ((timestamp . "2007-08-02") (notes . "(\"virtual network computing, a way to remotely access an existing (or new) graphical desktop via RFB <http://vnc-tight.sf.net/>\")")) nil]
["void-mission" nil nil nil nil nil nil ((timestamp . "2007-08-27") (notes . "(\"http://dto.freeshell.org/notebook/VoidMission.html\")")) nil]
["vomit" nil nil nil nil nil nil ((timestamp . "2012-11-29") (notes . "(\"redirect puke\")")) nil]
["vote-for-president" nil nil nil nil nil nil ((timestamp . "2005-02-26") (notes . "(\"lisp (random-choose '(\\\"bush\\\" \\\"bush\\\"))\")")) nil]
["VPN" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Virtual Private Network\")")) nil]
["VRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Video Random Access Memory\")")) nil]
["vrml" nil nil nil nil nil nil ((timestamp . "2010-08-28") (notes . "(\"this new thing\")")) nil]
["vrms" nil nil nil nil nil nil ((timestamp . "2012-10-17") (notes . "(\"\\\"virtual Richard Stallman\\\" - reports non-free packages installed on your debian-based GNU systems <http://vrms.alioth.debian.org/>\")")) nil]
["VS" nil nil nil nil nil nil ((timestamp . "2007-02-18") (notes . "(\"short for Microsoft Visual Studio, an IDE <http://wikipedia.org/wiki/Microsoft_Visual_Studio>\" \"short for versus\" \"an abbreviation for versus, meaning \\\"against\\\", as in a fight, competition or battle.\")")) nil]
["vt100" nil nil nil nil nil nil ((timestamp . "2010-10-18") (notes . "(\"a classic video display terminal, see http://www.vt100.net/\")")) nil]
["vtable" nil nil nil nil nil nil ((timestamp . "2010-06-02") (notes . "(\"the C++ object-method dispatch method. It's essentially a per-class array of function pointers. Every object instance of a class with a virtual function contains a pointer to the virtual table for its class. Virtual function calls are made by indexing into this array, picking out the correct function pointer, and calling through it.\")")) nil]
["vulcan-p" nil nil nil nil nil nil ((timestamp . "2012-08-12") (notes . "(\"lisp (if (zerop (random 10)) \\\"Why no.\\\" \\\"t\\\")\")")) nil]
["vuvuzela" nil nil nil nil nil nil ((timestamp . "2010-07-01") (notes . "(\"noecho bbbbzzzzzzzz\")")) nil]
["vux" nil nil nil nil nil nil ((timestamp . "2004-10-31") (notes . "(\"a rating-based, random ogg and mp3 player\")")) nil]
["W/" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for With\")")) nil]
["W/O" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Without\")")) nil]
["w00t" nil nil nil nil nil nil ((timestamp . "2003-06-18") (notes . "(\"noecho w00t w00t!!!!111!! LOLOLOLOL11!!!! I AM B1FF\")")) nil]
["w3c" nil nil nil nil nil nil ((timestamp . "2005-07-13") (notes . "(\"at http://www.w3.org/\")")) nil]
["w3m" nil nil nil nil nil nil ((timestamp . "2002-12-23") (notes . "(\"redirect wthreem\")")) nil]
["w3m-img" nil nil nil nil nil nil ((timestamp . "2012-02-06") (notes . "(\"an inline image extension support utilities for w3m\")")) nil]
["w3m-js" nil nil nil nil nil nil ((timestamp . "2013-04-25") (notes . "(\"http://en.sourceforge.jp/projects/w3m-js/ minimal javascript for w3m\")")) nil]
["w3mmee" nil nil nil nil nil nil ((timestamp . "2004-07-23") (notes . "(\"a multibyte encoding capable version of w3m\" \"http://pub.ks-and-ks.ne.jp/prog/w3mmee/\")")) nil]
["w4w" nil nil nil nil nil nil ((timestamp . "2011-01-05") (notes . "(\"redirect workgroups\")")) nil]
["W8-Pledge" nil nil nil nil nil nil ((timestamp . "2012-10-27") (notes . "(\"http://www.fsf.org/windows8/pledge Come on and sign to explain to Microsoft that Windows 8 doesn't offer the privacy and freedom you deserve! Tha you won't be upgrading to Windows 8; and that instead you stand with the free software movement! \\\\o/\")")) nil]
["waddletron2k" nil nil nil nil nil nil ((timestamp . "2006-08-31") (notes . "(\"quacks like a robot\" \"dirty\")")) nil]
["waf" nil nil nil nil nil nil ((timestamp . "2013-08-01") (notes . "(\"a Python-based framework for configuring, compiling and installing applications <http://code.google.com/p/waf>\" \"not a pain for Debian people everywhere\")")) nil]
["WAG" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Wild-Ass Guess\")")) nil]
["WAI" nil nil nil nil nil nil ((timestamp . "2004-03-26") (notes . "(\"Web Accessibility Initiative of W3C\" \"at http://www.w3c.org/wai/\")")) nil]
["wake" nil nil nil nil nil nil ((timestamp . "2011-10-09") (notes . "(\"noecho Wake up, everybody!\")")) nil]
["wakeup" nil nil nil nil nil nil ((timestamp . "2006-05-08") (notes . "(\"noecho Hey, I'm busy!!\")")) nil]
["WAN" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Wide Area Network\")")) nil]
["Wanna" nil nil nil nil nil nil ((timestamp . "2003-05-18") (notes . "(\"noecho I sure do!\")")) nil]
["want" nil nil nil nil nil nil ((timestamp . "2003-05-18") (notes . "(\"noecho Do I ever!\")")) nil]
["WAP" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Wireless Application Protocol\")")) nil]
["war" nil nil nil nil nil nil ((timestamp . "2003-02-19") (notes . "(\"peace\")")) nil]
["warez" nil nil nil nil nil nil ((timestamp . "2003-03-02") (notes . "(\"Get free (as in price) MS Windows, Office, more! http://csserver.evansville.edu/~sc87/MS/\")")) nil]
["WASP" nil nil nil nil nil nil ((timestamp . "2006-01-30") (notes . "(\"White Anglo-Saxon Protestant\")")) nil]
["wasshoi" nil nil nil nil nil nil ((timestamp . "2013-07-27") (notes . "(\"noecho ﾜｯｼｮｲヽ(ﾟ∀ﾟ)メ(ﾟ∀ﾟ)メ(ﾟ∀ﾟ)ノﾜｯｼｮｲ\")")) nil]
["wat" nil nil nil nil nil nil ((timestamp . "2013-07-24") (notes . "(\"https://www.destroyallsoftware.com/talks/wat\")")) nil]
["watch-anime" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"noecho I am not a television!\")")) nil]
["waterslide" nil nil nil nil nil nil ((timestamp . "2012-07-26") (notes . "(\"a good way of ending arguments http://xkcd.com/1081/\")")) nil]
["wayland" nil nil nil nil nil nil ((timestamp . "2012-01-12") (notes . "(\"https://en.wikipedia.org/wiki/Wayland_(display_server_protocol)\")")) nil]
["wb" nil nil nil nil nil nil ((timestamp . "2011-07-24") (notes . "(\"noecho Thanks for welcoming me back!\")")) nil]
["wbfse" nil nil nil nil nil nil ((timestamp . "2003-05-23") (notes . "(\"wb from shower elf\")")) nil]
["wbooze" nil nil nil nil nil nil ((timestamp . "2012-09-08") (notes . "(\"much like homie, but less of a poet\")")) nil]
["wbooze-lol" nil nil nil nil nil nil ((timestamp . "2012-09-27") (notes . "(\"redirect homie-yow\")")) nil]
["wbooze-yow" nil nil nil nil nil nil ((timestamp . "2013-04-04") (notes . "(\"redirect homie-yow\")")) nil]
["wboozesnack" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"noecho lol\")")) nil]
["wcheck" nil nil nil nil nil nil ((timestamp . "2013-06-27") (notes . "(\"wcheck-mode, a general text-checker interface. Can be used as a spell-checker. https://github.com/tlikonen/wcheck-mode\")")) nil]
["wcpgw" nil nil nil nil nil nil ((timestamp . "2010-07-28") (notes . "(\"what could possibly go wrong\")")) nil]
["WDYM" nil nil nil nil nil nil ((timestamp . "2006-11-30") (notes . "(\"an acronym for \\\"What do you mean [By]\\\"\")")) nil]
["wdyt" nil nil nil nil nil nil ((timestamp . "2013-03-24") (notes . "(\"What Do You Think\")")) nil]
["we" nil nil nil nil nil nil ((timestamp . "2011-08-29") (notes . "(\"noecho We is they.\")")) nil]
["weather" nil nil nil nil nil nil ((timestamp . "2012-11-14") (notes . "(\"lisp (random-choose (notes \\\"weather-data\\\"))\" \"https://github.com/ruediger/weather-metno-el\")")) nil]
["weather-data" nil nil nil nil nil nil ((timestamp . "2011-08-03") (notes . "(\"It's sunny.\" \"It's a dreary day.\" \"It's raining.\" \"It's sunny and clear.\")")) nil]
["weather-metno" nil nil nil nil nil nil ((timestamp . "2012-11-27") (notes . "(\"https://github.com/ruediger/weather-metno-el\" \"can intergrate into your org agenda and mode line\")")) nil]
["web-browsers" nil nil nil nil nil nil ((timestamp . "2010-10-11") (notes . "(\"http://techbuket.net/web-browsers-516.html\")")) nil]
["web-mode" nil nil nil nil nil nil ((timestamp . "2013-06-26") (notes . "(\"http://web-mode.org/\")")) nil]
["web2.0" nil nil nil nil nil nil ((timestamp . "2007-04-07") (notes . "(\"http://www.parm.net/web2.0/\" \"http://emptybottle.org/bullshit\")")) nil]
["webalizer" nil nil nil nil nil nil ((timestamp . "2002-11-12") (notes . "(\"at http://www.mrunix.net/webalizer/ or apt-get install\" \"See also awstats and http://awstats.sourceforge.net/#COMPARISON\")")) nil]
["webdesign" nil nil nil nil nil nil ((timestamp . "2013-11-28") (notes . "(\"http://motherfuckingwebsite.com/\")")) nil]
["WebFountain" nil nil nil nil nil nil ((timestamp . "2004-11-05") (notes . "(\"a new search engine from IBM that allows you to ask specific questions.\")")) nil]
["WebGlimpse" nil nil nil nil nil nil ((timestamp . "2004-11-16") (notes . "(\"redirect glimpse\")")) nil]
["webm" nil nil nil nil nil nil ((timestamp . "2010-10-30") (notes . "(\"an Ogg Theora based container/format for HTML5 web video\")")) nil]
["WebMirror" nil nil nil nil nil nil ((timestamp . "2003-01-08") (notes . "(\"Try any of HTTRACK, htdig, htget, WGET, LFTPGET, omt\")")) nil]
["WebPage" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?WebPage\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?WebPage\")")) nil]
["webscale" nil nil nil nil nil nil ((timestamp . "2013-03-08") (notes . "(\"http://www.xtranormal.com/watch/6995033/mongo-db-is-web-scale\")")) nil]
["webshots-to-jpg" nil nil nil nil nil nil ((timestamp . "2005-04-07") (notes . "(\"at http://www.angelfire.com/darkside/wbz2jpg/wbz2jpg.c\")")) nil]
["weechat" nil nil nil nil nil nil ((timestamp . "2013-02-21") (notes . "(\"https://github.com/the-kenny/weechat.el\")")) nil]
["welcome" nil nil nil nil nil nil ((timestamp . "2002-11-14") (notes . "(\"noecho hehe, thanks\")")) nil]
["well" nil nil nil nil nil nil ((timestamp . "2005-06-24") (notes . "(\"a mighty deep subject\")")) nil]
["wesnoth" nil nil nil nil nil nil ((timestamp . "2005-12-24") (notes . "(\" at http:/www.wesnoth.org, a fantasy turn-based (GPLed)  strategy addictive game, with awesome graphics, sound-effects, music, etc.\" \"Comes in single, multiplayer and hotseat modes.\" \"Don't forget to also install the music files: apt-get install wesnoth wesnoth-music\" \"a definitely great game\")")) nil]
["west" nil nil nil nil nil nil ((timestamp . "2009-02-15") (notes . "(\"lisp (random-choose '(\\\"you are at a cross-road facing east\\\" \\\"there is a dirt path leading up to an ominous house\\\" \\\"in front of you is a white picket fence without a gate\\\" \\\"you are standing in front of an iron-work gate topped by a large K\\\"))\")")) nil]
["wfm" nil nil nil nil nil nil ((timestamp . "2013-01-16") (notes . "(\"Works for Me\")")) nil]
["wftpl" nil nil nil nil nil nil ((timestamp . "2010-05-14") (notes . "(\"Do What The Fuck You Want To Public Licence, at http://sam.zoy.org/wtfpl/\")")) nil]
["wg" nil nil nil nil nil nil ((timestamp . "2011-04-04") (notes . "(\"redirect workgroups\")")) nil]
["wgetpaste" nil nil nil nil nil nil ((timestamp . "2007-07-17") (notes . "(\"http://wgetpaste.zlin.dk/\")")) nil]
["wgreenhouse-fix" nil nil nil nil nil nil ((timestamp . "2012-11-12") (notes . "(\"noecho most problems can be solved by lurking on irc/gmane/usenet until someone has a better idea.\")")) nil]
["wgreenhousefix" nil nil nil nil nil nil ((timestamp . "2012-12-09") (notes . "(\"most problems can be solved by talking them all the way to aporia.\")")) nil]
["wgreenhousesnack" nil nil nil nil nil nil ((timestamp . "2012-11-01") (notes . "(\"noecho /me gives wgreenhouse a pickle and 100mL of vodka.\")")) nil]
["whack" nil nil nil nil nil nil ((timestamp . "2012-10-06") (notes . "(\"redirect smack\")")) nil]
["whalesong" nil nil nil nil nil nil ((timestamp . "2011-10-11") (notes . "(\"a Racket to JavaScript compiler\")")) nil]
["wheeler" nil nil nil nil nil nil ((timestamp . "2011-01-25") (notes . "(\"redirect indirection\")")) nil]
["wheelers-law" nil nil nil nil nil nil ((timestamp . "2013-11-11") (notes . "(\"noecho All problems in computer science can be solved by another level of indirection.\")")) nil]
["when" nil nil nil nil nil nil ((timestamp . "2011-09-26") (notes . "(\"noecho now.\")")) nil]
["when-in-rome" nil nil nil nil nil nil ((timestamp . "2012-03-30") (notes . "(\"noecho Do as the Romans do!\")")) nil]
["whereis" nil nil nil nil nil nil ((timestamp . "2010-09-15") (notes . "(\"`C-h w where SPC is RET'\")")) nil]
["whichwiki" nil nil nil nil nil nil ((timestamp . "2004-11-21") (notes . "(\"an O'Reilly article at http://www.onlamp.com/pub/a/onlamp/2004/11/04/which_wiki.html\")")) nil]
["whine" nil nil nil nil nil nil ((timestamp . "2012-09-02") (notes . "(\"redirect whinge\")")) nil]
["whinge" nil nil nil nil nil nil ((timestamp . "2012-09-02") (notes . "(\"noecho /me posts a whinging comment on some website.\")")) nil]
["whisky" nil nil nil nil nil nil ((timestamp . "2010-03-07") (notes . "(\"http://en.wikipedia.org/wiki/Scotch_whisky\" \"http://en.wikipedia.org/wiki/Japanese_whisky\")")) nil]
["whiteboard" nil nil nil nil nil nil ((timestamp . "2006-05-07") (notes . "(\"http://dto.freeshell.org/notebook/WhiteBoard.html\")")) nil]
["whitespace-mode" nil nil nil nil nil nil ((timestamp . "2011-09-13") (notes . "(\"redirect WhiteSpaceMode\")")) nil]
["who-calls" nil nil nil nil nil nil ((timestamp . "2005-04-10") (notes . "(\"who-calls.el\" \"list-callers.el\" \"`byte-compile-call-tree'\")")) nil]
["whoa" nil nil nil nil nil nil ((timestamp . "2011-12-03") (notes . "(\"I know kung fu!\")")) nil]
["whoami" nil nil nil nil nil nil ((timestamp . "2003-11-22") (notes . "(\"lisp (eval (random-choose '((format \\\"you are %s\\\" nick) \\\"you da sex bomb!\\\")))\")")) nil]
["whoareyou" nil nil nil nil nil nil ((timestamp . "2010-12-09") (notes . "(\"noecho /me *MANIACAL LAUGHTER*\")")) nil]
["WholeEarthLectronicLink" nil nil nil nil nil nil ((timestamp . "2003-03-15") (notes . "(\"at http://www.etrumeus.com/ferment/WholeEarthLectronicLink\")")) nil]
["whoosh" nil nil nil nil nil nil ((timestamp . "2012-12-27") (notes . "(\"noecho We regret to inform you a joke has been told in your vicinity. Our sincere apologies for any cognitive dissonance this may have caused.\")")) nil]
["whtdl" nil nil nil nil nil nil ((timestamp . "2013-05-10") (notes . "(\"noecho what have they done lately?!\")")) nil]
["why-hurd" nil nil nil nil nil nil ((creation-date . "2002-09-08") (timestamp . "2011-07-04") (notes . "(\"http://www.gnu.org/software/hurd/hurd-talk.html and \nhttp://www.gnu.org/software/hurd/hurd-paper.html\" \"BECAUSE WE CAN!\")")) nil]
["why-not-erc" nil nil nil nil nil nil ((timestamp . "2005-01-15") (notes . "(\">13k lines of intermingled, ad-hoc written hacky code, and counting!\")")) nil]
["why-not-rcirc" nil nil nil nil nil nil ((timestamp . "2005-10-13") (notes . "(\"forcer's personal list on rcirc (working on patches for some of them, when he finds the time):\" \"Only cycle completion (fix at http://www.kollektiv-hamburg.de/~forcer/rcirc/rcirc-incremental-completion.el)\" \"The time stamps are always on the left. Should show up on the right, and only when the time changes: This saves screen real estate.\" \"Status messages are very bland: somenick QUIT Connection timed out -- they could do at least with a *** prefix\" \"I can't tell it to only show \\\"> foo\\\" for stuff I myself send, which is useful to quickly see what I type. Yes, I don't like colors for that.\" \"The process-name (i.e. the server name) takes up a lot of space in the status line. I'd like to be able to configure it. (would be a trivial fix in `rcirc-get-buffer-name')\" \"It does not tell me when someone sends me a CTCP request\" \"It does not scroll the input line to the end of the window.\" \"Because Circe exists.\")")) nil]
["why-not-zenirc" nil nil nil nil nil nil ((timestamp . "2005-01-15") (notes . "(\"1985 has come and gone\")")) nil]
["why?" nil nil nil nil nil nil ((timestamp . "2012-03-09") (notes . "(\"noecho why not\")")) nil]
["WhyBeGPLCompatible" nil nil nil nil nil nil ((timestamp . "2004-07-20") (notes . "(\"at http://www.dwheeler.com/essays/gpl-compatible.html\")")) nil]
["WhyIHateWebLogs" nil nil nil nil nil nil ((timestamp . "2008-04-24") (notes . "(\"at http://mama.indstate.edu/users/bones/WhyIHateWebLogs.html\" \"http://www.communitywiki.org/en/WontSomebodyMakeThemStopBlogging\")")) nil]
["whylisp" nil nil nil nil nil nil ((timestamp . "2005-09-27") (notes . "(\"at http://paulgraham.com/icad.html\")")) nil]
["whynumberingfromzero" nil nil nil nil nil nil ((timestamp . "2010-04-29") (notes . "(\"http://userweb.cs.utexas.edu/users/EWD/transcriptions/EWD08xx/EWD831.html\")")) nil]
["WhyPublicSoftwareShouldBeFree" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?WhyPublicSoftwareShouldBeFree\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?WhyPublicSoftwareShouldBeFree\")")) nil]
["WIBNI" nil nil nil nil nil nil ((timestamp . "2004-10-28") (notes . "(\"Wouldn't It Be Nice If ...\")")) nil]
["wic.el" nil nil nil nil nil nil ((timestamp . "2007-05-04") (notes . "(\"where-is-char: http://users.pepperfish.net/vivek/wic.el\")")) nil]
["wicd" nil nil nil nil nil nil ((timestamp . "2012-02-16") (notes . "(\"a network connection manager for linux, see https://launchpad.net/wicd\" \"much better than Network Manager\")")) nil]
["wide-edit.el" nil nil nil nil nil nil ((timestamp . "2003-12-23") (notes . "(\"a utility for making changes across a number of files easily, at http://www.klaralvdalens-datakonsult.se/extra/wide-edit.el\")")) nil]
["widget" nil nil nil nil nil nil ((timestamp . "2002-12-25") (notes . "(\"C-h i m widget RET\")")) nil]
["wiener-khinchine" nil nil nil nil nil nil ((timestamp . "2012-11-04") (notes . "(\"the theory that the power spectrum of a weakly-stationary random process is the square of the magnitude of the Fourier transform of its autocorrelation function.\")")) nil]
["wiki-points" nil nil nil nil nil nil ((timestamp . "2004-01-27") (notes . "(\"mystic award points I grant to special people based on the recommendation of users on this channel!\")")) nil]
["WikiAcknowledgments" nil nil nil nil nil nil ((timestamp . "2003-11-28") (notes . "(\"at http://www.gnufans.net/fsedu.pl?WikiAcknowledgments\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?WikiAcknowledgments\" \"at http://www.gnufans.net/fsedu.pl?WikiAckNowledgments\")")) nil]
["wikiadd" nil nil nil nil nil nil ((timestamp . "2004-07-06") (notes . "(\"at http://www.oddmuse.org/cgi-bin/oddmuse/wikiadd\")")) nil]
["wikibook" nil nil nil nil nil nil ((timestamp . "2015-04-21") (notes . "(\"a guide to the LaTeX markup language at http://en.wikibooks.org/wiki/LaTeX\")")) nil]
["WikiComparisons" nil nil nil nil nil nil ((timestamp . "2005-06-23") (notes . "(\"tables that say that all wikis can do nearly anything and some can do things you dont understand\")")) nil]
["WikiEngines" nil nil nil nil nil nil ((timestamp . "2004-09-04") (notes . "(\"on http://c2.com/cgi/wiki?WikiEngines with more engines that you can possibly try out yourself\")")) nil]
["wikifeaturecomparison" nil nil nil nil nil nil ((timestamp . "2004-06-10") (notes . "(\"http://wikifeatures.wiki.taoriver.net/moin.cgi/WikiEngine\")")) nil]
["wikifs" nil nil nil nil nil nil ((timestamp . "2011-08-12") (notes . "(\"http://man.cat-v.org/plan_9/4/wikifs\")")) nil]
["WikiHowto" nil nil nil nil nil nil ((timestamp . "2003-04-11") (notes . "(\"at http://www.gnufans.net/fsedu.pl?WikiHowto\" \"at http://www.gnufans.net/cgi-bin/fsedu.pl?WikiHowto\")")) nil]
["WikiKarma" nil nil nil nil nil nil ((timestamp . "2011-08-17") (notes . "(\"visit the wiki, search the wiki, read the wiki, edit the wiki, link to the wiki\")")) nil]
["wikilatex" nil nil nil nil nil nil ((timestamp . "2015-08-04") (notes . "(\"https://en.wikibooks.org/wiki/LaTeX\")")) nil]
["wikimatrix" nil nil nil nil nil nil ((timestamp . "2005-12-16") (notes . "(\"at http://www.wikimatrix.org/\" \"yet another trial of listing all wiki engines. At someday, the no. of wiki engine lists will approach the no. of wiki engines.\")")) nil]
["WikiPatches/LineEnds" nil nil nil nil nil nil ((timestamp . "2003-01-12") (notes . "(\"at http://www.usemod.com/cgi-bin/wiki.pl?WikiPatches/LineEnds\")")) nil]
["wikiput" nil nil nil nil nil nil ((timestamp . "2004-07-06") (notes . "(\"at http://www.oddmuse.org/cgi-bin/oddmuse/wikiput\")")) nil]
["wikitables" nil nil nil nil nil nil ((timestamp . "2014-02-25") (notes . "(\"a very good overview of tabular options in the latex wikibook found under http://en.wikibooks.org/wiki/LaTeX/Tables\")")) nil]
["WikiTerm" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?WikiTerm\" \"at http://www.gnufans.net/fsedu.pl?WikiTerm\")")) nil]
["WikiTopic" nil nil nil nil nil nil ((timestamp . "2003-07-04") (notes . "(\"a element in the terms of the WikiRdfChatbot\")")) nil]
["wikiupload" nil nil nil nil nil nil ((timestamp . "2004-07-06") (notes . "(\"at http://www.oddmuse.org/cgi-bin/oddmuse/wikiupload\")")) nil]
["wilmer" nil nil nil nil nil nil ((timestamp . "2003-06-25") (notes . "(\"the bitlbee author and notoirous joe troll\")")) nil]
["wimp" nil nil nil nil nil nil ((timestamp . "2010-10-13") (notes . "(\"it's used to describe \\\"windows-icon-menu-pointer\\\" interaction\")")) nil]
["WIMS" nil nil nil nil nil nil ((timestamp . "2003-03-04") (notes . "(\"http://wims.unice.fr/\" \"a great tool for making math pages and tests online\")")) nil]
["win" nil nil nil nil nil nil ((timestamp . "2012-11-05") (notes . "(\"fail\")")) nil]
["win-resize" nil nil nil nil nil nil ((timestamp . "2006-06-23") (notes . "(\"redirect WindowResize\")")) nil]
["wincmd" nil nil nil nil nil nil ((timestamp . "2010-07-30") (notes . "(\"redirect totalcommander\")")) nil]
["wind-map" nil nil nil nil nil nil ((timestamp . "2012-08-29") (notes . "(\"http://hint.fm/wind/\")")) nil]
["windbg" nil nil nil nil nil nil ((timestamp . "2005-08-31") (notes . "(\"an all-powerful user mode + kernel mode debugger on windows\")")) nil]
["WindizUpdate" nil nil nil nil nil nil ((timestamp . "2006-07-22") (notes . "(\"a web-based automatic product update service designed as an alternative to Windows Update\" \"it does not require a Windows Genuine Advantage (WGA) check on a system, which some find obtrusive and in breach of their privacy\" \"http://en.wikipedia.org/wiki/WindizUpdate\")")) nil]
["window-grid" nil nil nil nil nil nil ((timestamp . "2007-05-28") (notes . "(\"a set of functions for creating and navigating an enforced window grid. I'm not sure that it works with gnus yet, but it's still fun. remember this is alfa! www.timthelion.com/window-grid.el\")")) nil]
["windowmove" nil nil nil nil nil nil ((timestamp . "2005-08-28") (notes . "(\"redirect windmove\")")) nil]
["windowspath" nil nil nil nil nil nil ((timestamp . "2009-05-19") (notes . "(\"use / instead of \\\\ (of course) and to use the 8.3 notation that Windows supports. E.g., C:/DOCUME~1/Administrator/STARTM~1/... for C:\\\\Documents and Settings\\\\Administrator\\\\Start Menu\\\\...\")")) nil]
["wine" nil nil nil nil nil nil ((timestamp . "2004-06-03") (notes . "(\"lisp (format \\\"Sir, I recommend the %s.\\\" (random-choose (list \\\"Nobody loves me!\\\" \\\"Chateau de Seguin 2001\\\" \\\"Amarone Valpolicello Classic '98\\\")))\")")) nil]
["winmove" nil nil nil nil nil nil ((timestamp . "2005-08-28") (notes . "(\"redirect windmove\")")) nil]
["winner" nil nil nil nil nil nil ((timestamp . "2007-02-15") (notes . "(\"redirect WinnerMode\")")) nil]
["winner-mode" nil nil nil nil nil nil ((timestamp . "2012-03-30") (notes . "(\"redirect WinnerMode\")")) nil]
["winner.el" nil nil nil nil nil nil ((timestamp . "2007-02-15") (notes . "(\"redirect WinnerMode\")")) nil]
["winpack" nil nil nil nil nil nil ((timestamp . "2012-08-25") (notes . "(\"http://ivan.kanis.fr/winpack.html\")")) nil]
["winrar" nil nil nil nil nil nil ((timestamp . "2004-11-25") (notes . "(\"unrar source at http://www.softaward.com/8829.html\")")) nil]
["winresise" nil nil nil nil nil nil ((timestamp . "2004-10-21") (notes . "(\"redirect WindowResize\")")) nil]
["WIP" nil nil nil nil nil nil ((timestamp . "2003-04-16") (notes . "(\"Work In Progress\")")) nil]
["WIR" nil nil nil nil nil nil ((timestamp . "2010-10-13") (notes . "(\"When It's Ready\")")) nil]
["wisent" nil nil nil nil nil nil ((timestamp . "2004-07-14") (notes . "(\"a bison-like parser generator in elisp, part of the semantic package\" \"see http://cedet.sourceforge.net/\")")) nil]
["witch" nil nil nil nil nil nil ((timestamp . "2012-10-26") (notes . "(\"noecho BURN THEM!\")")) nil]
["with-current-directory" nil nil nil nil nil nil ((timestamp . "2011-05-13") (notes . "(\"just use a let-form (let ((default-directory \\\"<DIR>\\\")) ...)\")")) nil]
["with-directory" nil nil nil nil nil nil ((timestamp . "2011-05-13") (notes . "(\"redirect with-current-directory\")")) nil]
["WITO" nil nil nil nil nil nil ((timestamp . "2013-06-26") (notes . "(\"Wanking In The Office\")")) nil]
["wittgenstein-fix" nil nil nil nil nil nil ((timestamp . "2012-09-29") (notes . "(\"noecho Whereof we cannot speak, thereof we must be silent.\")")) nil]
["wjfffm" nil nil nil nil nil nil ((timestamp . "2010-12-28") (notes . "(\"works just fucking fine for me\")")) nil]
["wjw" nil nil nil nil nil nil ((timestamp . "2013-10-24") (notes . "(\"wow. just wow.\")")) nil]
["wl" nil nil nil nil nil nil ((timestamp . "2004-01-06") (notes . "(\"redirect wanderlust\")")) nil]
["wlog" nil nil nil nil nil nil ((timestamp . "2012-10-02") (notes . "(\"Without Loss Of Generality\")")) nil]
["wm" nil nil nil nil nil nil ((timestamp . "2008-01-22") (notes . "(\"redirect windowmanager\")")) nil]
["wmi" nil nil nil nil nil nil ((timestamp . "2004-12-05") (notes . "(\"at http://wmi.berlios.de\")")) nil]
["wmii" nil nil nil nil nil nil ((timestamp . "2012-06-08") (notes . "(\"a new window manager, the next generation of wmi; see http://wmi.modprobe.de\")")) nil]
["WOFTAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Waste Of Fucking Time And Money\")")) nil]
["WOL" nil nil nil nil nil nil ((timestamp . "2007-05-21") (notes . "(\"Wake On LAN, a way to boot a networked peecee remotely.\")")) nil]
["wolfgang" nil nil nil nil nil nil ((timestamp . "2002-09-08") (notes . "(\"http://www.gnu-friends.org/user/wolfgangj/diary\")")) nil]
["wolfman8k" nil nil nil nil nil nil ((timestamp . "2004-09-10") (notes . "(\"http://benny.kramekweb.com\" \"The creator of machineball\")")) nil]
["Wolfram" nil nil nil nil nil nil ((timestamp . "2010-06-08") (notes . "(\"a New Kind of Douchebag\")")) nil]
["women" nil nil nil nil nil nil ((timestamp . "2008-01-04") (notes . "(\"http://raysweb.net/poems/articles/tannen.html\")")) nil]
["woody" nil nil nil nil nil nil ((timestamp . "2005-03-13") (notes . "(\"an ancient relic from a distant, faraway time\" \"the \\\"stable\\\" debian distribution. \\\"stable\\\" as in, the egyptian pyramids are stable, and really old too.\")")) nil]
["word" nil nil nil nil nil nil ((timestamp . "2013-09-08") (notes . "(\"THE BIRD IS THE WORD\" \"http://www.youtube.com/watch?v=2WNrx2jq184\" \"MS Word: write letters 'n' shit, yo\")")) nil]
["word-must-die" nil nil nil nil nil nil ((timestamp . "2013-11-14") (notes . "(\"http://www.antipope.org/charlie/blog-static/2013/10/why-microsoft-word-must-die.html\")")) nil]
["wordlike" nil nil nil nil nil nil ((timestamp . "2016-01-22") (notes . "(\"a package to help make LaTeX's output look like it was produced by MS Word\")")) nil]
["wordwrap" nil nil nil nil nil nil ((timestamp . "2008-12-04") (notes . "(\"M-x longlines-mode RET changes the display; it doesn't actually change the file's contents; M-x auto-fill RET, followed by M-q actually inserts line breaks\" \"see Kim Storm's CVS word-wrap patch for something promising, landed in August\")")) nil]
["worg" nil nil nil nil nil nil ((timestamp . "2011-10-02") (notes . "(\"A distributed org-mode wiki thing\" \"http://orgmode.org/worg/worg-about.html\")")) nil]
["workflow" nil nil nil nil nil nil ((timestamp . "2013-09-28") (notes . "(\"http://xkcd.com/1172/\")")) nil]
["workgroup" nil nil nil nil nil nil ((timestamp . "2011-04-22") (notes . "(\"redirect workgroups\")")) nil]
["workgroups-mode" nil nil nil nil nil nil ((timestamp . "2010-11-07") (notes . "(\"redirect workgroups\")")) nil]
["workgroups.el" nil nil nil nil nil nil ((timestamp . "2010-11-07") (notes . "(\"redirect workgroups\")")) nil]
["workgroupsforwindows" nil nil nil nil nil nil ((timestamp . "2010-11-07") (notes . "(\"redirect workgroups\")")) nil]
["works" nil nil nil nil nil nil ((timestamp . "2013-05-18") (notes . "(\"noecho And it works!\")")) nil]
["worldclock" nil nil nil nil nil nil ((timestamp . "2010-02-22") (notes . "(\"wwtime.el\" \"display-time-world\")")) nil]
["worlds-funniest-joke" nil nil nil nil nil nil ((timestamp . "2013-04-18") (notes . "(\"http://richardwiseman.files.wordpress.com/2011/09/ll-final-report.pdf\")")) nil]
["worse" nil nil nil nil nil nil ((timestamp . "2012-04-24") (notes . "(\"better\" \"by induction, worst is best\" \"or as tromey eloquently put it: worse->lulz->better\")")) nil]
["worse-is-better" nil nil nil nil nil nil ((timestamp . "2012-02-22") (notes . "(\"the idea that quality does not necessarily increase with functionality <https://en.wikipedia.org/wiki/Worse_is_better>\" \"http://www.jwz.org/doc/worse-is-better.html\")")) nil]
["worship" nil nil nil nil nil nil ((timestamp . "2003-05-19") (notes . "(\"lisp (pray)\")")) nil]
["worstof" nil nil nil nil nil nil ((timestamp . "2012-02-15") (notes . "(\"redirect bestof\")")) nil]
["wossname" nil nil nil nil nil nil ((timestamp . "2006-06-26") (notes . "(\"thingamajig.\")")) nil]
["WotC" nil nil nil nil nil nil ((timestamp . "2006-04-29") (notes . "(\"Wizards of the Coast, a manufacturer of CCGs (Cf. Peter Jackson Games)\")")) nil]
["WOTD" nil nil nil nil nil nil ((timestamp . "2007-05-23") (notes . "(\"Word of the Day\")")) nil]
["WoW" nil nil nil nil nil nil ((timestamp . "2008-10-07") (notes . "(\"World of Warcraft, an addictive drug designed to destroy relationships and transfer your hard-earned cash into Blizzard's pockets.\")")) nil]
["WP" nil nil nil nil nil nil ((timestamp . "2012-10-24") (notes . "(\"wikipedia\" \"WordPerfect\")")) nil]
["WPA" nil nil nil nil nil nil ((timestamp . "2005-08-04") (notes . "(\"WPA and WPA2 are methods for securing wireless networks, the former using IEEE 802.1X, and the latter using IEEE 802.11i.\" \"tricky to set up, but a starting point is here: http://wiki.debian.net/?DebConf5WirelessHowto\" \"you may need to find a firmware update for your card - prism2 cards have been known to need this\" \"wpasupplicant is the recommended software for WPA association\")")) nil]
["WPF" nil nil nil nil nil nil ((timestamp . "2012-11-03") (notes . "(\"Windows Presentation Foundation\" \"closely related to silverlight\")")) nil]
["WPO" nil nil nil nil nil nil ((timestamp . "2012-01-25") (notes . "(\"whole-program optimization <https://en.wikipedia.org/wiki/Whole-program_optimization>\")")) nil]
["wr" nil nil nil nil nil nil ((timestamp . "2014-01-06") (notes . "(\"noecho Gentlemen, you can't fight here. This is the War Room.\")")) nil]
["WRAM" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Window Random Access Memory\")")) nil]
["wrap-region" nil nil nil nil nil nil ((timestamp . "2009-10-27") (notes . "(\"http://github.com/rejeep/wrap-region\")")) nil]
["wrapfig" nil nil nil nil nil nil ((timestamp . "2015-05-04") (notes . "(\"a package to wrap text around figures and tables, code available here: https://www.ctan.org/pkg/wrapfig?lang=en\")")) nil]
["write18" nil nil nil nil nil nil ((timestamp . "2015-10-31") (notes . "(\"latex's facility of interacting with other programs, for more info: http://tex.stackexchange.com/questions/20444/what-are-immediate-write18-and-how-does-one-use-them\")")) nil]
["wrt" nil nil nil nil nil nil ((timestamp . "2005-03-16") (notes . "(\"normally with respect to\")")) nil]
["wsh" nil nil nil nil nil nil ((timestamp . "2005-04-12") (notes . "(\"the Windows Scripting Host\")")) nil]
["WSY" nil nil nil nil nil nil ((timestamp . "2007-05-13") (notes . "(\"Who Sent You?!\")")) nil]
["wtfpl" nil nil nil nil nil nil ((timestamp . "2011-02-17") (notes . "(\"Do What The Fuck You Want To Public Licence, at http://sam.zoy.org/wtfpl/\" \"in all seriousness, just use cc0\")")) nil]
["WTFS" nil nil nil nil nil nil ((timestamp . "2006-10-14") (notes . "(\"short for Write The Fucking Source.\")")) nil]
["WTH" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for {What,Where,Who,Why} The Hell\")")) nil]
["wui" nil nil nil nil nil nil ((timestamp . "2012-04-16") (notes . "(\"Web-based User Interface\")")) nil]
["wwcd" nil nil nil nil nil nil ((timestamp . "2007-08-15") (notes . "(\"What Would Condoleezza do\")")) nil]
["wwfsmd" nil nil nil nil nil nil ((timestamp . "2011-12-16") (notes . "(\"what would the Flying Spagetti Monster do\")")) nil]
["wwh" nil nil nil nil nil nil ((timestamp . "2014-01-30") (notes . "(\"What version are you using? Where did you get it, and how did you install it?\")")) nil]
["wwiww" nil nil nil nil nil nil ((timestamp . "2011-07-03") (notes . "(\"What Works Is What Works\")")) nil]
["wwja" nil nil nil nil nil nil ((timestamp . "2007-09-12") (notes . "(\"what would jesus M-x apropos\")")) nil]
["wwjb" nil nil nil nil nil nil ((timestamp . "2007-09-10") (notes . "(\"What Would Jesus Blog\")")) nil]
["wwjbs" nil nil nil nil nil nil ((timestamp . "2007-05-22") (notes . "(\"what would jordanb say\")")) nil]
["wwjc" nil nil nil nil nil nil ((timestamp . "2007-09-08") (notes . "(\"What Would Jesus M-x customize\")")) nil]
["wwjd" nil nil nil nil nil nil ((timestamp . "2012-06-11") (notes . "(\"What Would Jebus Defun\" \"what would johnw do\")")) nil]
["wwje" nil nil nil nil nil nil ((timestamp . "2007-09-16") (notes . "(\"what would jesus eval\")")) nil]
["wwjf" nil nil nil nil nil nil ((timestamp . "2007-09-12") (notes . "(\"what would jesus frobnicate\")")) nil]
["wwjg" nil nil nil nil nil nil ((timestamp . "2007-09-12") (notes . "(\"what would jesus #'global-set-key\")")) nil]
["wwjh" nil nil nil nil nil nil ((timestamp . "2007-09-13") (notes . "(\"what would jesus M-x hippie-expand\")")) nil]
["wwji" nil nil nil nil nil nil ((timestamp . "2007-09-13") (notes . "(\"what would jesus isearch\")")) nil]
["wwjo" nil nil nil nil nil nil ((timestamp . "2007-09-18") (notes . "(\"What Would Jesus Optimize\")")) nil]
["wwjr" nil nil nil nil nil nil ((timestamp . "2007-09-05") (notes . "(\"What Would Jesus Refactor\")")) nil]
["wwjs" nil nil nil nil nil nil ((timestamp . "2007-09-12") (notes . "(\"what would jesus setq\")")) nil]
["wwjt" nil nil nil nil nil nil ((timestamp . "2007-09-12") (notes . "(\"What Would Jesus Tip?'\" \"Wokka Wokka! Juju Totema!\")")) nil]
["wwrd" nil nil nil nil nil nil ((timestamp . "2012-02-17") (notes . "(\"noecho What Would RMS Do?\")")) nil]
["wwtime" nil nil nil nil nil nil ((timestamp . "2014-01-21") (notes . "(\"World Wide Time calculates the time of day in different time zones https://github.com/ndw/wwtime\")")) nil]
["WWW" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for World Wide Web\")")) nil]
["wxwidgets" nil nil nil nil nil nil ((timestamp . "2004-10-30") (notes . "(\"at http://www.wxwidgets.org/\" \"wxWidgets gives you a single, easy-to-use API for writing GUI applications on multiple platforms. Link with the appropriate library for your platform (Windows/Unix/Mac, others coming shortly) and compiler (almost any popular C++ compiler), and your application will adopt the look and feel appropriate to that platform. On top of great GUI functionality, wxWidgets gives you: online help, network programming, stre\")")) nil]
["wxwindows" nil nil nil nil nil nil ((timestamp . "2004-10-30") (notes . "(\"redirect wxwidgets\")")) nil]
["WYSIAYG" nil nil nil nil nil nil ((timestamp . "2009-11-17") (notes . "(\"What You See is All You Get\")")) nil]
["wysihtml" nil nil nil nil nil nil ((timestamp . "2005-12-28") (notes . "(\"http://www.netfort.gr.jp/~dancer/software/wysihtml.html\" \"a minor mode that invokes mozilla to render HTML.\")")) nil]
["wysiwyg" nil nil nil nil nil nil ((timestamp . "2005-03-29") (notes . "(\"at http://c2.com/cgi/wiki?WhatYouSeeIsWhatYouGet\")")) nil]
["wywiwyg" nil nil nil nil nil nil ((timestamp . "2002-11-17") (notes . "(\"an acronym for What You Want Is What You Get\")")) nil]
["x-dired" nil nil nil nil nil nil ((timestamp . "2009-04-24") (notes . "(\"M-x x-dired reads in a command which produces a list of pathnames (say 'cat FILELIST.txt') and then produces a virtual dired buffer. See http://paste.lisp.org/display/77910\")")) nil]
["x-selection" nil nil nil nil nil nil ((timestamp . "2004-05-06") (notes . "(\"http://www.jwz.org/doc/x-cut-and-paste.html\")")) nil]
["x-selections" nil nil nil nil nil nil ((timestamp . "2012-03-18") (notes . "(\"http://www.jwz.org/doc/x-cut-and-paste.html\")")) nil]
["X/)" nil nil nil nil nil nil ((timestamp . "2013-12-06") (notes . "(\"Blinded by love\")")) nil]
["xae" nil nil nil nil nil nil ((timestamp . "2003-05-14") (notes . "(\"redirect XmlAuthoringEnvironment\")")) nil]
["xapers" nil nil nil nil nil nil ((timestamp . "2013-05-18") (notes . "(\"a document indexing system, geared towards academic journal articles.\")")) nil]
["xapian" nil nil nil nil nil nil ((timestamp . "2009-11-17") (notes . "(\"an Open Source Search Engine Library\")")) nil]
["xapping" nil nil nil nil nil nil ((timestamp . "2013-10-22") (notes . "(\"a data structure representing a unordered set of ordered pairs, first proposed by Danny Hillis and Guy Steele for the Connection Machine. In a xapping, each ordered pair has an index and a value. Indexes and values may be any Lisp object, including xappings. The pairs in a given xapping must have distinct indexes.\" \"see also http://citi2.rice.edu/WS07/PrestonBriggs.pdf\")")) nil]
["xarq" nil nil nil nil nil nil ((timestamp . "2007-01-07") (notes . "(\"qrax backwards\" \"an allusion to Sark from Tron\" \"now known as proqesi\")")) nil]
["xb" nil nil nil nil nil nil ((timestamp . "2012-02-18") (notes . "(\"a sign that someone is sick of someone's yammering on, but his fingers are a bit tired\")")) nil]
["xbox" nil nil nil nil nil nil ((timestamp . "2013-08-03") (notes . "(\"http://videogamerescue.com/wp-content/uploads/2012/03/Huge-Xbox.jpg\")")) nil]
["xcape" nil nil nil nil nil nil ((timestamp . "2013-05-25") (notes . "(\"a tool for X that allows you to use a modifier key as another key when pressed and released on its own, available at https://github.com/alols/xcape\")")) nil]
["xcb" nil nil nil nil nil nil ((timestamp . "2013-02-13") (notes . "(\"a C client library for the X11 protocol; intended to replace xlib <https://en.wikipedia.org/wiki/XCB>\" \"X protocol C-language Binding: http://xcb.freedesktop.org/\")")) nil]
["xchm" nil nil nil nil nil nil ((timestamp . "2005-05-03") (notes . "(\"a linux reader for microsoft help files\")")) nil]
["xclip" nil nil nil nil nil nil ((timestamp . "2014-01-28") (notes . "(\"http://sourceforge.net/projects/xclip\" \"xclip.el is available in GNU ELPA\" \"http://elpa.gnu.org/packages/xclip.html\")")) nil]
["Xcode" nil nil nil nil nil nil ((timestamp . "2012-06-20") (notes . "(\"Apple's IDE for C/C++/Objective-C development on OS X for OS X and iOS.\")")) nil]
["xcolor" nil nil nil nil nil nil ((timestamp . "2009-02-02") (notes . "(\"Driver-independent color extensions for LaTeX and pdfLaTeX. -- http://www.ctan.org/tex-archive/macros/latex/contrib/xcolor/\")")) nil]
["xcowsay" nil nil nil nil nil nil ((timestamp . "2012-01-13") (notes . "(\"cowsay, but Xer\" \"use it instead of xmessage\")")) nil]
["XDefaults" nil nil nil nil nil nil ((timestamp . "2007-10-11") (notes . "(\"redirect XResources\")")) nil]
["xdg-base-dir-spec" nil nil nil nil nil nil ((timestamp . "2013-11-25") (notes . "(\"http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html\")")) nil]
["xdmx" nil nil nil nil nil nil ((timestamp . "2006-09-16") (notes . "(\"distributed multihead x. Like xinerama, but the heads can be on separate machines.\" \"http://dmx.sourceforge.net/\" \"a proxy X server that provides multi-head support for multiple displays\")")) nil]
["xecycle" nil nil nil nil nil nil ((timestamp . "2013-04-30") (notes . "(\"a Chinese undergrad studying physics\" \"if you don't believe me, I know nothing about vim\" \"using dvorak, which he considered demanding for the right hand\" \"a hater of python due to a larger possibility to meet a noob using python\")")) nil]
["xenix" nil nil nil nil nil nil ((timestamp . "2003-11-28") (notes . "(\"er was Microsoft's version of UNIX\")")) nil]
["xephyr" nil nil nil nil nil nil ((timestamp . "2008-02-08") (notes . "(\"an X server that can be run inside another X server, much like xnest. xephyr though, is based on the kdrive X server, and as a result it supports newer extensions than xnest, including render and composite.\")")) nil]
["xev" nil nil nil nil nil nil ((timestamp . "2004-02-02") (notes . "(\"X EVent, displays stuff on stdout as it happens\")")) nil]
["xface" nil nil nil nil nil nil ((timestamp . "2002-11-30") (notes . "(\"redirect compface\")")) nil]
["XFCE" nil nil nil nil nil nil ((timestamp . "2006-04-01") (notes . "(\"too much like CDE\" \"has really tasteless defaults, but can be turned into something really nice with some customization\")")) nil]
["XGA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Extended Graphics Array\")")) nil]
["xiki" nil nil nil nil nil nil ((timestamp . "2010-02-02") (notes . "(\"http://xiki.org\")")) nil]
["xizzle" nil nil nil nil nil nil ((timestamp . "2004-03-31") (notes . "(\"a fork of the XFree86 DDX using the modular build system and the already-established xserver.fd.o DIX (which includes composite/damage/xfixes). Its goal is to be an effective modular alternative to existing x server deployments.\" \"is also designed to allow developers unify driver support in the xserver, while an extended transition to modular tree can occur.\")")) nil]
["XKB" nil nil nil nil nil nil ((timestamp . "2013-09-01") (notes . "(\"the X Keyboard extension http://www.tsu.ru/~pascal/en/xkb/\" \"see SettingMetaWithXKB\" \"xkbcomp $DISPLAY xorg.xkb; $EDITOR xorg.xkb; xkbcomp xorg.xkb $DISPLAY\" \"http://www.x.org/wiki/XKB/\")")) nil]
["xkcd" nil nil nil nil nil nil ((timestamp . "2013-05-28") (notes . "(\"a cult webcomic about `romance, sarcasm, maths and language'\" \"at <http://www.xkcd.com/>\" \"see also LNMC\" \"http://www.hypah.com/xkcd.jpg\" \"a hipster comic\" \"http://chainsawsuit.com/2008/04/04/strip-348/\")")) nil]
["xkeyval" nil nil nil nil nil nil ((timestamp . "2014-10-22") (notes . "(\"a pack­age that of­fers ad­di­tional macros for set­ting keys and declar­ing and set­ting class or pack­age op­tions available from http://www.ctan.org/pkg/xkeyval.\")")) nil]
["xkobo" nil nil nil nil nil nil ((timestamp . "2007-08-02") (notes . "(\"a fast paced action packed RPG set in the theoretical world of pipes and dreams\" \"http://olofson.net/kobodl/\")")) nil]
["xlfd" nil nil nil nil nil nil ((timestamp . "2009-10-29") (notes . "(\"http://en.wikipedia.org/wiki/X_logical_font_description\" \"those funny looking X11 font descriptors, such as -*-courier-*-r-*-*-14-*-*-*-*-*-*-*\")")) nil]
["xlisp" nil nil nil nil nil nil ((timestamp . "2004-06-16") (notes . "(\"at http://www.mv.com/ipusers/xlisper/\")")) nil]
["Xming" nil nil nil nil nil nil ((timestamp . "2006-05-14") (notes . "(\"a Free Software port of the X Window Server to Microsoft Windows. It shares the same source code base as Cygwin/X but does not depend on Cygwin or use cygwin1.dll. Xming is a fully featured X Window Server that is very simple to install and use.\" \"http://sourceforge.net/projects/xming\" \"http://www.straightrunning.com/XmingNotes/\")")) nil]
["xml" nil nil nil nil nil nil ((timestamp . "2005-06-20") (notes . "(\"redirect CategoryXML\")")) nil]
["xml-lite" nil nil nil nil nil nil ((timestamp . "2005-12-07") (notes . "(\"at http://www.bigfoot.com/~mdub/software/xml-lite.el\")")) nil]
["xml-rpc" nil nil nil nil nil nil ((timestamp . "2004-06-03") (notes . "(\"redirect xmlrpc\")")) nil]
["XmlAuthoringEnvironment" nil nil nil nil nil nil ((timestamp . "2003-05-14") (notes . "(\"at http://xae.sunsite.dk/\")")) nil]
["xmlstarlet" nil nil nil nil nil nil ((timestamp . "2007-06-27") (notes . "(\"a command-line tool for manipulating XML documents, kinda like sed does for plain text <http://xmlstar.sf.net/>\")")) nil]
["xmlsucks" nil nil nil nil nil nil ((timestamp . "2006-10-30") (notes . "(\"http://c2.com/cgi/wiki?XmlSucks\")")) nil]
["XMPP" nil nil nil nil nil nil ((timestamp . "2011-09-11") (notes . "(\"the Extensible Messaging and Presence Protocol\" \"\\\"an open technology for real-time communication, which powers a wide range of applications including instant messaging, presence, multi-party chat, voice and video calls, collaboration, lightweight middleware, content syndication, and generalized routing of XML data.\\\" http://xmpp.org/about-xmpp/\" \"the least sucky IM protocol\")")) nil]
["xnu" nil nil nil nil nil nil ((timestamp . "2012-09-24") (notes . "(\"the osx kernel, see http://en.wikipedia.org/wiki/XNU\")")) nil]
["xong" nil nil nil nil nil nil ((timestamp . "2009-11-20") (notes . "(\"http://dto.github.com/notebook/xong.html\")")) nil]
["xorg" nil nil nil nil nil nil ((timestamp . "2004-03-25") (notes . "(\"http://xorg.freedesktop.org/\")")) nil]
["xp" nil nil nil nil nil nil ((timestamp . "2013-08-19") (notes . "(\"lisp (format \\\"%s's XP: %d\\\" (if lispargs (stringify-symbol-list lispargs) nick) (random 10000))\")")) nil]
["xparse" nil nil nil nil nil nil ((timestamp . "2016-01-13") (notes . "(\"pro­vides a high-level in­ter­face for pro­duc­ing doc­u­ment-level com­mands. Think \\\\newcommand on speed, avail-able from https://www.ctan.org/pkg/xparse?lang=en\")")) nil]
["XPM" nil nil nil nil nil nil ((timestamp . "2013-01-10") (notes . "(\"X PixMap, an ASCII text image format used by the X Window System (uses the extension .xpm) <https://en.wikipedia.org/wiki/X_PixMap>\")")) nil]
["xpointer" nil nil nil nil nil nil ((timestamp . "2006-09-26") (notes . "(\"use alt-f12 in kde to toggle keyboard-based pointer movement\")")) nil]
["xr" nil nil nil nil nil nil ((timestamp . "2013-09-18") (notes . "(\"the opposite of rx\" \"http://debbugs.gnu.org/cgi/bugreport.cgi?msg=40;filename=xr.el;att=1;bug=13369\")")) nil]
["xref" nil nil nil nil nil nil ((timestamp . "2015-11-30") (notes . "(\"redirect cross-reference\")")) nil]
["xscreensaver" nil nil nil nil nil nil ((timestamp . "2004-02-05") (notes . "(\"http://www.tux.org/~bagleyd/xlxs.html and http://www.jwz.org/xscreensaver/versus-xlock.html\")")) nil]
["xselection" nil nil nil nil nil nil ((timestamp . "2007-03-17") (notes . "(\"for an explanation see http://www.jwz.org/doc/x-cut-and-paste.html\")")) nil]
["XSL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Extensible Stylesheet Language\")")) nil]
["xstring" nil nil nil nil nil nil ((timestamp . "2009-12-12") (notes . "(\"http://ctan.org/tex-archive/macros/latex/contrib/xstring/xstring_doc_en.pdf\" \"http://www.ctan.org/tex-archive/help/Catalogue/entries/xstring.html\")")) nil]
["XT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Extended Technology\")")) nil]
["xte" nil nil nil nil nil nil ((timestamp . "2011-12-14") (notes . "(\"a trivial utility for sending XTEST (spoofed keyboard/mouse input) to an X server. apt-get install xautomation\")")) nil]
["xterm-backspace" nil nil nil nil nil nil ((timestamp . "2008-07-18") (notes . "(\"in .Xdefualts and .Xresources (either one will do ... but drop it into both ) XTerm*metaSendsEscape: true , XTerm*backarrowKey: false, XTerm*backarrowKeyIsErase: false\" \"To fix the Meta problem for one session, Ctrl-mouse1 on the term; to fix permanently, you need the Xdefaults/Xresources\")")) nil]
["xtla" nil nil nil nil nil nil ((timestamp . "2008-06-16") (notes . "(\"the doc : http://xsteve.at/prg/vc_arch/index.html\" \"a fancy pcvs-type mode for tla, http://wiki.gnuarch.org/moin.cgi/xtla\" \"replaced by DVC\")")) nil]
["XULRunner" nil nil nil nil nil nil ((timestamp . "2006-03-01") (notes . "(\"a Mozilla runtime package that can be used to bootstrap XUL+XPCOM applications that are as rich as Firefox and Thunderbird\" \"it will provide mechanisms for installing, upgrading, and uninstalling these applications\" \"will also provide libxul, a solution which allows the embedding of Mozilla technologies in other projects and products\" \"http://developer.mozilla.org/en/docs/XULRunner\")")) nil]
["XV" nil nil nil nil nil nil ((timestamp . "2006-01-31") (notes . "(\"the XVideo extension for X11, allowing video programs to write directly to the video cards' buffers.\")")) nil]
["xv6" nil nil nil nil nil nil ((timestamp . "2012-03-25") (notes . "(\"a simple Unix-like teaching operating system available at http://pdos.csail.mit.edu/6.828/2011/xv6.html\")")) nil]
["xwindows" nil nil nil nil nil nil ((timestamp . "2009-12-10") (notes . "(\"the \\\"X Window System\\\", never \\\"X Windows\\\"\")")) nil]
["xwine" nil nil nil nil nil nil ((timestamp . "2005-03-29") (notes . "(\"a graphical front-end for wine\")")) nil]
["xxdiff" nil nil nil nil nil nil ((timestamp . "2004-04-07") (notes . "(\"a (GPLed) package to show a color-coded diff of 2 files.\")")) nil]
["xy" nil nil nil nil nil nil ((timestamp . "2012-02-13") (notes . "(\"redirect xyproblem\")")) nil]
["xyproblem" nil nil nil nil nil nil ((timestamp . "2012-10-02") (notes . "(\"when you want to do X, and you think Y is how, so you ask about Y instead of X. See <http://www.perlmonks.org/index.pl?node_id=542341> or <http://mywiki.wooledge.org/XyProblem>\")")) nil]
["xyzzy" nil nil nil nil nil nil ((timestamp . "2012-02-13") (notes . "(\"noecho Nothing happens\")")) nil]
["y-or-n-p" nil nil nil nil nil nil ((timestamp . "2011-08-01") (notes . "(\"to reduce typing (defalias 'yes-or-no-p 'y-or-n-p)\")")) nil]
["yaa" nil nil nil nil nil nil ((timestamp . "2002-11-14") (notes . "(\"an acronym for \\\"Yet Another Acronym\\\"\")")) nil]
["yacc" nil nil nil nil nil nil ((timestamp . "2004-12-26") (notes . "(\"redirect bison\")")) nil]
["YACFSL" nil nil nil nil nil nil ((timestamp . "2007-05-19") (notes . "(\"Yet Another Corporate Free Software License\")")) nil]
["yacl" nil nil nil nil nil nil ((timestamp . "2002-09-20") (notes . "(\"Yet Another Class Library\")")) nil]
["yaf" nil nil nil nil nil nil ((timestamp . "2008-12-02") (notes . "(\"yet another fad\")")) nil]
["yagni" nil nil nil nil nil nil ((timestamp . "2007-12-10") (notes . "(\"you aren't gonna need it\")")) nil]
["yahtzee" nil nil nil nil nil nil ((timestamp . "2010-07-29") (notes . "(\"a string of five anythings\")")) nil]
["yak-shave" nil nil nil nil nil nil ((timestamp . "2012-04-20") (notes . "(\"see http://en.wiktionary.org/wiki/yak_shaving\")")) nil]
["yak-shaving" nil nil nil nil nil nil ((timestamp . "2012-03-07") (notes . "(\"redirect yakshaving\")")) nil]
["yakshaving" nil nil nil nil nil nil ((timestamp . "2012-02-23") (notes . "(\"http://c2.com/cgi/wiki?YakShaving\" \"http://projects.csail.mit.edu/gsb/old-archive/gsb-archive/gsb2000-02-11.html\")")) nil]
["YALIMO" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for You Are Lame, In My Opinion\")")) nil]
["yandir" nil nil nil nil nil nil ((timestamp . "2012-01-03") (notes . "(\"you are not doing it right\")")) nil]
["yanni" nil nil nil nil nil nil ((timestamp . "2006-04-24") (notes . "(\"a greek composer\")")) nil]
["yards" nil nil nil nil nil nil ((timestamp . "2013-04-24") (notes . "(\"noecho RAILROAD HIM!!\")")) nil]
["yardyar" nil nil nil nil nil nil ((timestamp . "2010-08-03") (notes . "(\"You all ready are\")")) nil]
["YASD" nil nil nil nil nil nil ((timestamp . "2003-02-19") (notes . "(\"an acronym for yet another stupid death; the stuff that usually happens to you in Nethack.\")")) nil]
["yatessnack" nil nil nil nil nil nil ((timestamp . "2012-11-17") (notes . "(\"noecho /me gives yates a big icecream.\")")) nil]
["yatm" nil nil nil nil nil nil ((timestamp . "2004-06-09") (notes . "(\"a audio file player with time stretching/compression capabilities\" \"at http://delysid.org/yatm-0.2.tar.gz\")")) nil]
["YAx86KO" nil nil nil nil nil nil ((timestamp . "2007-03-05") (notes . "(\"Yet Another x86 Knock Off\")")) nil]
["yay" nil nil nil nil nil nil ((timestamp . "2013-08-25") (notes . "(\"noecho And there was much rejoicing. Yaaaaay...\")")) nil]
["ydiw" nil nil nil nil nil nil ((timestamp . "2012-05-05") (notes . "(\"you're doing it wrong\")")) nil]
["yeelong" nil nil nil nil nil nil ((timestamp . "2012-02-18") (notes . "(\"http://richard.stallman.usesthis.com/\" \"http://www.lemote.com/en/products/Notebook/2010/0310/112.html\")")) nil]
["yell" nil nil nil nil nil nil ((timestamp . "2010-07-27") (notes . "(\"lisp (format (random-choose '(\\\"Don't do that!\\\" \\\"Come down from the shed! Get off the shed!\\\" \\\"You're doing it wrong!\\\")) nick)\")")) nil]
["yellow" nil nil nil nil nil nil ((timestamp . "2012-07-18") (notes . "(\"redirect yellow-card\")")) nil]
["yellow-card" nil nil nil nil nil nil ((timestamp . "2012-07-18") (notes . "(\"lisp (format \\\"/me has shown the yellow card to %s for %s\\\" (if lispargs (stringify-symbol-list lispargs) nick) (random-choose (notes \\\"cautionable-offenses\\\")))\")")) nil]
["yellowcard" nil nil nil nil nil nil ((timestamp . "2013-04-04") (notes . "(\"redirect yellow-card\")")) nil]
["YerbaMate" nil nil nil nil nil nil ((timestamp . "2006-03-31") (notes . "(\"redirect mate\")")) nil]
["yes/no" nil nil nil nil nil nil ((timestamp . "2011-08-03") (notes . "(\"lisp (random-choose '(\\\"yes\\\" \\\"no\\\"))\")")) nil]
["yesterday" nil nil nil nil nil nil ((timestamp . "2011-10-31") (notes . "(\"the day before today\" \"two days before tomorrow.\")")) nil]
["yf-fix" nil nil nil nil nil nil ((timestamp . "2013-07-08") (notes . "(\"noecho Any problem can be turned into a trivial one by declaring it is impossible to solve.\")")) nil]
["YHBT" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for You Have Been Trolled\")")) nil]
["YHL" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for You Have Lost\")")) nil]
["yi" nil nil nil nil nil nil ((timestamp . "2007-11-22") (notes . "(\"an extensible editor implemented in Haskell <http://haskell.org/haskellwiki/Yi>\")")) nil]
["yin" nil nil nil nil nil nil ((timestamp . "2003-02-11") (notes . "(\"lisp (d \\\"yin\\\")\")")) nil]
["yinz" nil nil nil nil nil nil ((timestamp . "2012-10-28") (notes . "(\"the Pittsburghese English form of the second person plural pronoun\")")) nil]
["ykwim" nil nil nil nil nil nil ((timestamp . "2005-04-07") (notes . "(\"short for You Know What I Mean\")")) nil]
["ykwimypa" nil nil nil nil nil nil ((timestamp . "2007-08-25") (notes . "(\"You Know What I Mean, You Pedantic Asshat.\")")) nil]
["YMA" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for Yo Momma's Ass\")")) nil]
["yml" nil nil nil nil nil nil ((timestamp . "2007-03-26") (notes . "(\"redirect yaml\")")) nil]
["ymllyym" nil nil nil nil nil nil ((timestamp . "2007-12-10") (notes . "(\"Yo Mama Looks Like Yo-Yo Ma\")")) nil]
["ymmv" nil nil nil nil nil nil ((timestamp . "2004-09-05") (notes . "(\"noecho Your Mileage May Vary\")")) nil]
["yo" nil nil nil nil nil nil ((timestamp . "2007-07-10") (notes . "(\"'sup\" \"よ\" \"요\")")) nil]
["yoda-old" nil nil nil nil nil nil ((timestamp . "2005-03-21") (notes . "(\"lisp (random-choose (notes \\\"yoda-phrases\\\"))\")")) nil]
["yoda-phrases" nil nil nil nil nil nil ((timestamp . "2005-03-21") (notes . "(\"Hmmm. Much anger in him, like his father.\" \"Hah. He is not ready.\" \"Ready, are you? What know you of ready?\" \"For eight hundred years have I trained Jedi. My own counsel will I keep on who is to be trained!\" \"A Jedi must have the deepest commitment, the most serious mind.\" \"Hmph. Adventure. Heh! Excitement. Heh! A Jedi craves not these things.\" \"He is too old. Yes, too old to begin the training.\" \"Will he finished what he begins?\" \"A Jedi's strength flows from the Force.\" \"Beware of the dark side. Anger...fear...aggression. The dark side of the Force are they. Easily they flow, quick to join you in a fight. If once you start down the dark path, forever will it dominate your destiny, consume you it will, as it did Obi-Wan's apprentice.\" \"No...no...no. Quicker, easier, more seductive.\" \"A Jedi uses the Force for knowledge and defense, never for attack.\" \"No, no, there is no why.\" \"Your weapons...you will not need them.\" \"So certain are you. Always with you it cannot be done. Hear you nothing that I say?\" \"No! No different! Only different in your mind. You must unlearn what you have learned.\" \"No! Try not. Do. Or do not. There is no try.\" \"Size matters not. Look at me. Judge me by my size, do you? Hm? Mmmm.\" \"For my ally is the Force. And a powerful ally it is. Life creates it, makes it grow. It's energy surrounds us and binds us. Luminous beings are we...not this crude matter.\" \"You must feel the Force around you. Here, between you...me...the tree...the rock...everywhere! Yes, even between this land and that ship!\" \"That is why you fail.\" \"Concentrate...feel the Force flow. Yes. Good. Calm, yes. Through the Force, things you will see. Other places. The future...the past. Old friends long gone.\" \"Decide you must how to serve them best. If you leave now, help them you could. But you would destroy all for which they have fought and suffered.\" \"Told you, I did. Reckless is he. Now matters are worse.\" \"Hmm. That face you make. Look I so old to young eyes?\" \"When nine hundred years old you reach, look as good you will not. Hmm?\" \"Soon will I rest. Yes, forever sleep. Earned it, I have.\" \"Strong am I with the Force... but not that strong! Twilight is upon me and soon night must fall. That is the way of things ... the way of the Force.\" \"No more training do you require. Already know you that which you need.\" \"One thing remains: Vader. You must confront Vader. Then, only then, a Jedi will you be.\" \"Your father he is.\" \"Do not underestimate the powers of the Emperor, or suffer your father's fate, you will.\" \"Luke, when gone am I *cough*, the last of the Jedi will you be.\" \"Luke, the Force runs strong in your family. Pass on what you have learned, Luke... There is... another...Sky...Sky...walker.\")")) nil]
["yodawg" nil nil nil nil nil nil ((timestamp . "2012-06-08") (notes . "(\"yo dawg! i heard you like to yo dawg so i put a yo dawg in your yo dawg so you can yo dawg while you yo dawg!\")")) nil]
["yonkeltron-fix" nil nil nil nil nil nil ((timestamp . "2014-01-22") (notes . "(\"most problems can be solved by killing vim\")")) nil]
["yore" nil nil nil nil nil nil ((timestamp . "2012-12-26") (notes . "(\"an English word meaning a time in the distant past.\" \"the time of \\\"the ancient LISP of yore\\\".\")")) nil]
["yorkshirepudding" nil nil nil nil nil nil ((timestamp . "2014-01-17") (notes . "(\"a savoury battered pudding eaten mostly with roast beef\")")) nil]
["yorkyk" nil nil nil nil nil nil ((timestamp . "2006-07-26") (notes . "(\"not actually an abbreviation, somebody is just trying to confuse you.\")")) nil]
["you" nil nil nil nil nil nil ((timestamp . "2015-09-23") (notes . "(\"noecho /me is always helpful.\")")) nil]
["you-dont-want-tabs" nil nil nil nil nil nil ((timestamp . "2008-12-03") (notes . "(\"http://technomancy.us/115\")")) nil]
["youlysses" nil nil nil nil nil nil ((timestamp . "2012-12-24") (notes . "(\"determined to ditch window managers\" \"someone who uses and abuses hypens.\" \"a mouseless zealot.\" \"a friend to animals starting with a GNU.\")")) nil]
["youos" nil nil nil nil nil nil ((timestamp . "2006-12-01") (notes . "(\"www.youos.com an open source online project to create a open source javascript ecosystem...\")")) nil]
["your" nil nil nil nil nil nil ((timestamp . "2006-12-11") (notes . "(\"but a bot :)\")")) nil]
["your-daddy" nil nil nil nil nil nil ((timestamp . "2006-05-19") (notes . "(\"interferon\")")) nil]
["YourName" nil nil nil nil nil nil ((timestamp . "2003-05-10") (notes . "(\"at http://www.gnufans.net/cgi-bin/fsedu.pl?YourName\" \"at http://www.gnufans.net/fsedu.pl?YourName\")")) nil]
["yourself" nil nil nil nil nil nil ((timestamp . "2013-09-04") (notes . "(\"redirect fsbot\")")) nil]
["youtube" nil nil nil nil nil nil ((timestamp . "2006-11-10") (notes . "(\"small command-line program to download videos from YouTube.com\" \"http://www.arrakis.es/~rggi3/youtube-dl/\")")) nil]
["youtubedl" nil nil nil nil nil nil ((timestamp . "2013-06-13") (notes . "(\"redirect youtube-dl\")")) nil]
["yow!" nil nil nil nil nil nil ((timestamp . "2003-05-16") (notes . "(\"lisp (yow)\")")) nil]
["yoyok" nil nil nil nil nil nil ((timestamp . "2013-06-20") (notes . "(\"You're On Your Own, Kid\")")) nil]
["yoyomf" nil nil nil nil nil nil ((timestamp . "2013-06-20") (notes . "(\"You're On Your Own, My Friend\" \"last two words may differ\")")) nil]
["yum" nil nil nil nil nil nil ((timestamp . "2007-10-02") (notes . "(\"an apt-get clone for RPM systems, using XML instead of RFC2822 as the format for on-disk databases <http://linux.duke.edu/projects/yum/>\")")) nil]
["yurt" nil nil nil nil nil nil ((timestamp . "2007-01-13") (notes . "(\"a small round house lived in by small round people in the norther reaches of the asian continent. It also could just be a round hut. But I like to think that it is a Mongol invention.\" \"also canvas structures frequently found in the state parks of oregon\")")) nil]
["YW" nil nil nil nil nil nil ((timestamp . "2005-06-04") (notes . "(\"short for You're Welcome\")")) nil]
["ywb" nil nil nil nil nil nil ((timestamp . "2008-04-11") (notes . "(\"叶文彬\")")) nil]
["yyyyyyyyyyyyyyyy" nil nil nil nil nil nil ((timestamp . "2012-04-23") (notes . "(\"lisp (message \\\"yyyyyyyyyyyyyyyy is lisp\\\")\")")) nil]
["z-code" nil nil nil nil nil nil ((timestamp . "2008-04-18") (notes . "(\"redirect malyon\")")) nil]
["z-machine" nil nil nil nil nil nil ((timestamp . "2008-04-18") (notes . "(\"redirect malyon\")")) nil]
["z/os" nil nil nil nil nil nil ((timestamp . "2012-06-07") (notes . "(\"really just MVS\")")) nil]
["z80" nil nil nil nil nil nil ((timestamp . "2011-09-26") (notes . "(\"http://en.wikipedia.org/wiki/Zilog_Z80\")")) nil]
["zactssnack" nil nil nil nil nil nil ((timestamp . "2013-11-18") (notes . "(\"noecho /me gives zacts a tamago sushi.\")")) nil]
["zap-to-regexp" nil nil nil nil nil nil ((timestamp . "2009-04-08") (notes . "(\"at http://tsdh.wordpress.com/2007/06/22/zapping-to-strings-and-regexps/\" \"http://paste.lisp.org/display/59010\" \"http://paste.lisp.org/display/70641\")")) nil]
["zapata" nil nil nil nil nil nil ((timestamp . "2005-03-29") (notes . "(\"noecho Better to die on your feet than live on your knees!\")")) nil]
["zappa-fix" nil nil nil nil nil nil ((timestamp . "2013-10-30") (notes . "(\"noecho Shut up and play yer guitar some more!\")")) nil]
["zaptoregexp" nil nil nil nil nil nil ((timestamp . "2009-04-08") (notes . "(\"redirect zap-to-regexp\")")) nil]
["zazen" nil nil nil nil nil nil ((timestamp . "2006-05-19") (notes . "(\"a meditative discipline practitioners perform to calm the body and the mind and experience insight into the nature of existence.\")")) nil]
["zcode" nil nil nil nil nil nil ((timestamp . "2008-04-18") (notes . "(\"redirect z-code\")")) nil]
["zebu" nil nil nil nil nil nil ((timestamp . "2003-02-22") (notes . "(\"at http://www.cliki.net/Zebu\")")) nil]
["zen" nil nil nil nil nil nil ((timestamp . "2012-02-19") (notes . "(\"when someone slows their breath in order to create a slight high due to the oxigen deprevision\" \"see zencoding\" \"the art of doing\")")) nil]
["zen-master" nil nil nil nil nil nil ((timestamp . "2012-07-02") (notes . "(\"lisp (let (explain zen) (format \\\"/me whacks %s with a cane\\\" nick))\")")) nil]
["ZenMasterGreg" nil nil nil nil nil nil ((timestamp . "2006-09-29") (notes . "(\"older than the BOFH (http://www.gu.uwa.edu.au/users/greg/).\")")) nil]
["zeroconf" nil nil nil nil nil nil ((timestamp . "2011-07-13") (notes . "(\"a service to detect other devices on the network, also referred to as bonjour (apple's implementation which was renamed from rendezvous), and zero-configuration networking\")")) nil]
["zeta" nil nil nil nil nil nil ((timestamp . "2006-02-05") (notes . "(\"beos with a new name, published by yellowtab gmbh\" \"at http://www.yellowtab.com/\")")) nil]
["zgv" nil nil nil nil nil nil ((timestamp . "2004-11-26") (notes . "(\"an svgalib based image viewer for linux, which can be used from the linux console\")")) nil]
["zh" nil nil nil nil nil nil ((timestamp . "2012-06-03") (notes . "(\"the Chinese language\")")) nil]
["zhengjujie" nil nil nil nil nil nil ((timestamp . "2008-09-24") (notes . "(\"bigclean\")")) nil]
["zing" nil nil nil nil nil nil ((timestamp . "2012-03-12") (notes . "(\"noecho *BAZZINGA*!\")")) nil]
["ziplist" nil nil nil nil nil nil ((timestamp . "2011-02-17") (notes . "(\"redirect TransposeList\")")) nil]
["zipper" nil nil nil nil nil nil ((timestamp . "2012-06-28") (notes . "(\"an idiom for functional data structures first formally described by gerard huet\" \"the original paper can be found at http://www.st.cs.uni-sb.de/edu/seminare/2005/advanced-fp/docs/huet-zipper.pdf\" \"a context of a traversal (according to oleg)\" \"http://www.haskell.org/haskellwiki/Zipper\" \"a device for temporarily joining two edges of fabric\")")) nil]
["zmachine" nil nil nil nil nil nil ((timestamp . "2010-09-04") (notes . "(\"redirect z-machine\")")) nil]
["zmap" nil nil nil nil nil nil ((timestamp . "2013-11-22") (notes . "(\"an open-source network scanner that enables researchers to easily perform Internet-wide network studies.\" \"https://zmap.io/\")")) nil]
["ZNC" nil nil nil nil nil nil ((timestamp . "2012-12-27") (notes . "(\"the best IRC proxy out there\" \"http://wiki.znc.in\" \"https://github.com/sshirokov/ZNC.el\" \"see also psybnc\" \"a textbook case of how not to write configuration files\")")) nil]
["zog" nil nil nil nil nil nil ((timestamp . "2011-02-27") (notes . "(\"an offensive and antisemitic term that's especially annoying because it squats in the three-letter-acronym namespace.\")")) nil]
["zonefile" nil nil nil nil nil nil ((timestamp . "2011-03-04") (notes . "(\"to edit DNS zone files, see <zone-mode>\")")) nil]
["Zonix" nil nil nil nil nil nil ((timestamp . "2004-11-06") (notes . "(\"usually drunk\" \"sometimes sober\")")) nil]
["zonkers" nil nil nil nil nil nil ((timestamp . "2011-09-30") (notes . "(\"Joe Brockmeier\")")) nil]
["zord" nil nil nil nil nil nil ((timestamp . "2013-08-22") (notes . "(\"noecho MORPH HIM!!\")")) nil]
["zossima" nil nil nil nil nil nil ((timestamp . "2012-12-17") (notes . "(\"a ruby jump-to-definition implementation using a live process instead of static analysis\" \"https://github.com/technomancy/zossima\" \"using etags for an interactive language is cybernetically unsound\")")) nil]
["zot" nil nil nil nil nil nil ((timestamp . "2006-04-20") (notes . "(\"see foo\")")) nil]
["zotero" nil nil nil nil nil nil ((timestamp . "2013-05-18") (notes . "(\"is a program to manage bibliographic data and related research materials\" \"https://www.zotero.org/\" \"see https://github.com/vitoshka/zotelo\" \"https://bitbucket.org/egh/zotero-plain/overview\")")) nil]
["zref" nil nil nil nil nil nil ((timestamp . "2011-06-22") (notes . "(\"a package that offers a means to remove the limitation, of only two properties, that is inherent in the way LaTeXs reference system works. http://ctan.org/pkg/zref [doc: http://tinyurl.com/zref-doc]\")")) nil]
["zsh" nil nil nil nil nil nil ((timestamp . "2012-05-27") (notes . "(\"http://zsh.sourceforge.net/ , yet another shell, featuring macros and extensible completion\" \"http://grml.org/zsh/zsh-lovers.html for example extensions and hacks\" \"a great operating system, only lacking a decent shell.\")")) nil]
["zsnap" nil nil nil nil nil nil ((timestamp . "2012-11-20") (notes . "(\"noecho Oh no you didn't!\")")) nil]
["Zuerich" nil nil nil nil nil nil ((timestamp . "2006-01-26") (notes . "(\"where the Swiss Gnomes hoard all the gold.\" \"the largest city in switzerland\" \"pronounced [ˈtsyrɪç]\" \"http://wikitravel.org/en/Zurich, or http://wikitravel.org/de/Zurich\" \"pronounced ['tsy:-r\\\"ix] in IPA-ASCII.\")")) nil]
["Zurich" nil nil nil nil nil nil ((timestamp . "2006-01-26") (notes . "(\"redirect Zuerich\")")) nil]
["ZWEI" nil nil nil nil nil nil ((timestamp . "2004-01-24") (notes . "(\"Zwei Was Eine Initially\")")) nil]
["zzzzzzzzz" nil nil nil nil nil nil ((timestamp . "2012-03-28") (notes . "(\"lisp (message \\\"%s\\\" nick)\")")) nil]
["zürich" nil nil nil nil nil nil ((timestamp . "2006-01-26") (notes . "(\"redirect Zuerich\")")) nil]
